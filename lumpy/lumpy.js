// Generated by Haxe 4.3.2
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = "DateTools";
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new haxe_exceptions_NotImplementedException("Date.format %" + e + "- not implemented yet.",null,{ fileName : "DateTools.hx", lineNumber : 101, className : "DateTools", methodName : "__format_get"});
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len = f.length - p;
	r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		do {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
		} while(this.r.global);
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
var h3d_IDrawable = function() { };
$hxClasses["h3d.IDrawable"] = h3d_IDrawable;
h3d_IDrawable.__name__ = "h3d.IDrawable";
h3d_IDrawable.__isInterface__ = true;
var hxd_App = function() {
	var _gthis = this;
	var engine = h3d_Engine.CURRENT;
	if(engine != null) {
		this.engine = engine;
		engine.onReady = $bind(this,this.setup);
		haxe_Timer.delay($bind(this,this.setup),0);
	} else {
		hxd_System.start(function() {
			engine = new h3d_Engine();
			_gthis.engine = engine;
			engine.onReady = $bind(_gthis,_gthis.setup);
			engine.init();
		});
	}
};
$hxClasses["hxd.App"] = hxd_App;
hxd_App.__name__ = "hxd.App";
hxd_App.__interfaces__ = [h3d_IDrawable];
hxd_App.staticHandler = function() {
};
hxd_App.prototype = {
	engine: null
	,s3d: null
	,s2d: null
	,sevents: null
	,isDisposed: null
	,onResize: function() {
	}
	,onContextLost: function() {
		if(this.s3d != null) {
			this.s3d.onContextLost();
		}
	}
	,render: function(e) {
		this.s3d.render(e);
		this.s2d.render(e);
	}
	,setup: function() {
		var _gthis = this;
		var initDone = false;
		this.engine.onReady = hxd_App.staticHandler;
		this.engine.onContextLost = $bind(this,this.onContextLost);
		this.engine.onResized = function() {
			if(_gthis.s2d == null) {
				return;
			}
			_gthis.s2d.checkResize();
			if(initDone) {
				_gthis.onResize();
			}
		};
		this.s3d = new h3d_scene_Scene();
		this.s2d = new h2d_Scene();
		this.sevents = new hxd_SceneEvents();
		this.sevents.addScene(this.s2d);
		this.sevents.addScene(this.s3d);
		this.loadAssets(function() {
			initDone = true;
			_gthis.init();
			hxd_Timer.skip();
			_gthis.mainLoop();
			hxd_System.setLoop($bind(_gthis,_gthis.mainLoop));
			hxd_Key.initialize();
		});
	}
	,loadAssets: function(onLoaded) {
		onLoaded();
	}
	,init: function() {
	}
	,mainLoop: function() {
		hxd_Timer.update();
		this.sevents.checkEvents();
		if(this.isDisposed) {
			return;
		}
		this.update(hxd_Timer.dt);
		if(this.isDisposed) {
			return;
		}
		var dt = hxd_Timer.dt;
		if(this.s2d != null) {
			this.s2d.setElapsedTime(dt);
		}
		if(this.s3d != null) {
			this.s3d.setElapsedTime(dt);
		}
		this.engine.render(this);
	}
	,update: function(dt) {
	}
	,__class__: hxd_App
};
var Main = function() {
	hxd_App.call(this);
	Main.project = new sdk_ZProject();
};
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	new Main();
	haxe_ui_Toolkit.set_theme("dark");
	haxe_ui_Toolkit.init();
	Main.ui = [];
};
Main.__super__ = hxd_App;
Main.prototype = $extend(hxd_App.prototype,{
	split: null
	,init: function() {
		var _gthis = this;
		hxd_App.prototype.init.call(this);
		haxe_ui_Toolkit.get_screen().set_root(this.s2d);
		this.split = new haxe_ui_containers_HorizontalSplitter();
		this.split.set_onClick(function(_event) {
			_gthis.onResize();
		});
		haxe_ui_Toolkit.get_screen().addComponent(this.split);
		Main.FileBarObj = new ui_FileBar();
		Main.FileTreeObj = new ui_FileTree();
		this.split.addComponent(Main.FileTreeObj.tree);
		Main.FileTreeObj.tree.set_percentWidth(10);
		Main.FileEditorObj = new ui_FileEditor();
		this.split.addComponent(Main.FileEditorObj.tabview);
		Main.FileEditorObj.tabview.set_percentWidth(80);
		this.onResize();
		Main.project.init();
	}
	,update: function(dt) {
		hxd_App.prototype.update.call(this,dt);
		Main.w_width = this.engine.width;
		Main.w_height = this.engine.height;
	}
	,onResize: function() {
		hxd_App.prototype.onResize.call(this);
		var _this = this.split;
		_this.posChanged = true;
		_this.x = 5;
		var _this = this.split;
		_this.posChanged = true;
		_this.y = 45;
		this.split.set_percentWidth(100);
		this.split.set_percentHeight(100 - 100 * (45 / this.engine.height));
	}
	,__class__: Main
});
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
Reflect.copy = function(o) {
	if(o == null) {
		return null;
	}
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	do {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
	} while(n > 0);
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = $hxEnums["ValueType"] = { __ename__:"ValueType",__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
ValueType.__empty_constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c;
	var _g = e.__constructs__[index];
	if(_g == null) {
		c = null;
	} else {
		var ctor = _g;
		c = ctor._hx_name;
	}
	if(c == null) {
		throw haxe_Exception.thrown(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var params = enm.__constructs__[a._hx_index].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( _g ) {
		return false;
	}
	return true;
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var params = enm.__constructs__[e._hx_index].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var XmlType = {};
XmlType.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return this.attributeMap.h[att];
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		this.attributeMap.h[att] = value;
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return Object.prototype.hasOwnProperty.call(this.attributeMap.h,att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.attributeMap.h);
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var format_gif_Block = $hxEnums["format.gif.Block"] = { __ename__:"format.gif.Block",__constructs__:null
	,BFrame: ($_=function(frame) { return {_hx_index:0,frame:frame,__enum__:"format.gif.Block",toString:$estr}; },$_._hx_name="BFrame",$_.__params__ = ["frame"],$_)
	,BExtension: ($_=function(extension) { return {_hx_index:1,extension:extension,__enum__:"format.gif.Block",toString:$estr}; },$_._hx_name="BExtension",$_.__params__ = ["extension"],$_)
	,BEOF: {_hx_name:"BEOF",_hx_index:2,__enum__:"format.gif.Block",toString:$estr}
};
format_gif_Block.__constructs__ = [format_gif_Block.BFrame,format_gif_Block.BExtension,format_gif_Block.BEOF];
format_gif_Block.__empty_constructs__ = [format_gif_Block.BEOF];
var format_gif_Extension = $hxEnums["format.gif.Extension"] = { __ename__:"format.gif.Extension",__constructs__:null
	,EGraphicControl: ($_=function(gce) { return {_hx_index:0,gce:gce,__enum__:"format.gif.Extension",toString:$estr}; },$_._hx_name="EGraphicControl",$_.__params__ = ["gce"],$_)
	,EComment: ($_=function(text) { return {_hx_index:1,text:text,__enum__:"format.gif.Extension",toString:$estr}; },$_._hx_name="EComment",$_.__params__ = ["text"],$_)
	,EText: ($_=function(pte) { return {_hx_index:2,pte:pte,__enum__:"format.gif.Extension",toString:$estr}; },$_._hx_name="EText",$_.__params__ = ["pte"],$_)
	,EApplicationExtension: ($_=function(ext) { return {_hx_index:3,ext:ext,__enum__:"format.gif.Extension",toString:$estr}; },$_._hx_name="EApplicationExtension",$_.__params__ = ["ext"],$_)
	,EUnknown: ($_=function(id,data) { return {_hx_index:4,id:id,data:data,__enum__:"format.gif.Extension",toString:$estr}; },$_._hx_name="EUnknown",$_.__params__ = ["id","data"],$_)
};
format_gif_Extension.__constructs__ = [format_gif_Extension.EGraphicControl,format_gif_Extension.EComment,format_gif_Extension.EText,format_gif_Extension.EApplicationExtension,format_gif_Extension.EUnknown];
format_gif_Extension.__empty_constructs__ = [];
var format_gif_ApplicationExtension = $hxEnums["format.gif.ApplicationExtension"] = { __ename__:"format.gif.ApplicationExtension",__constructs__:null
	,AENetscapeLooping: ($_=function(loops) { return {_hx_index:0,loops:loops,__enum__:"format.gif.ApplicationExtension",toString:$estr}; },$_._hx_name="AENetscapeLooping",$_.__params__ = ["loops"],$_)
	,AEUnknown: ($_=function(name,version,data) { return {_hx_index:1,name:name,version:version,data:data,__enum__:"format.gif.ApplicationExtension",toString:$estr}; },$_._hx_name="AEUnknown",$_.__params__ = ["name","version","data"],$_)
};
format_gif_ApplicationExtension.__constructs__ = [format_gif_ApplicationExtension.AENetscapeLooping,format_gif_ApplicationExtension.AEUnknown];
format_gif_ApplicationExtension.__empty_constructs__ = [];
var format_gif_Version = $hxEnums["format.gif.Version"] = { __ename__:"format.gif.Version",__constructs__:null
	,GIF87a: {_hx_name:"GIF87a",_hx_index:0,__enum__:"format.gif.Version",toString:$estr}
	,GIF89a: {_hx_name:"GIF89a",_hx_index:1,__enum__:"format.gif.Version",toString:$estr}
	,Unknown: ($_=function(version) { return {_hx_index:2,version:version,__enum__:"format.gif.Version",toString:$estr}; },$_._hx_name="Unknown",$_.__params__ = ["version"],$_)
};
format_gif_Version.__constructs__ = [format_gif_Version.GIF87a,format_gif_Version.GIF89a,format_gif_Version.Unknown];
format_gif_Version.__empty_constructs__ = [format_gif_Version.GIF87a,format_gif_Version.GIF89a];
var format_gif_DisposalMethod = $hxEnums["format.gif.DisposalMethod"] = { __ename__:"format.gif.DisposalMethod",__constructs__:null
	,UNSPECIFIED: {_hx_name:"UNSPECIFIED",_hx_index:0,__enum__:"format.gif.DisposalMethod",toString:$estr}
	,NO_ACTION: {_hx_name:"NO_ACTION",_hx_index:1,__enum__:"format.gif.DisposalMethod",toString:$estr}
	,FILL_BACKGROUND: {_hx_name:"FILL_BACKGROUND",_hx_index:2,__enum__:"format.gif.DisposalMethod",toString:$estr}
	,RENDER_PREVIOUS: {_hx_name:"RENDER_PREVIOUS",_hx_index:3,__enum__:"format.gif.DisposalMethod",toString:$estr}
	,UNDEFINED: ($_=function(index) { return {_hx_index:4,index:index,__enum__:"format.gif.DisposalMethod",toString:$estr}; },$_._hx_name="UNDEFINED",$_.__params__ = ["index"],$_)
};
format_gif_DisposalMethod.__constructs__ = [format_gif_DisposalMethod.UNSPECIFIED,format_gif_DisposalMethod.NO_ACTION,format_gif_DisposalMethod.FILL_BACKGROUND,format_gif_DisposalMethod.RENDER_PREVIOUS,format_gif_DisposalMethod.UNDEFINED];
format_gif_DisposalMethod.__empty_constructs__ = [format_gif_DisposalMethod.UNSPECIFIED,format_gif_DisposalMethod.NO_ACTION,format_gif_DisposalMethod.FILL_BACKGROUND,format_gif_DisposalMethod.RENDER_PREVIOUS];
var format_gif_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(false);
};
$hxClasses["format.gif.Reader"] = format_gif_Reader;
format_gif_Reader.__name__ = "format.gif.Reader";
format_gif_Reader.prototype = {
	i: null
	,read: function() {
		var b = 71;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 73;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 70;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var gifVer = this.i.readString(3);
		var version = format_gif_Version.GIF89a;
		switch(gifVer) {
		case "87a":
			version = format_gif_Version.GIF87a;
			break;
		case "89a":
			version = format_gif_Version.GIF89a;
			break;
		default:
			version = format_gif_Version.Unknown(gifVer);
		}
		var width = this.i.readUInt16();
		var height = this.i.readUInt16();
		var packedField = this.i.readByte();
		var bgIndex = this.i.readByte();
		var pixelAspectRatio = this.i.readByte();
		if(pixelAspectRatio != 0) {
			pixelAspectRatio = (pixelAspectRatio + 15) / 64;
		} else {
			pixelAspectRatio = 1;
		}
		var lsd = { width : width, height : height, hasGlobalColorTable : (packedField & 128) == 128, colorResolution : (packedField & 112) >>> 4, sorted : (packedField & 8) == 8, globalColorTableSize : 2 << (packedField & 7), backgroundColorIndex : bgIndex, pixelAspectRatio : pixelAspectRatio};
		var gct = null;
		if(lsd.hasGlobalColorTable) {
			gct = this.readColorTable(lsd.globalColorTableSize);
		}
		var blocks = new haxe_ds_List();
		while(true) {
			var b = this.readBlock();
			blocks.add(b);
			if(b == format_gif_Block.BEOF) {
				break;
			}
		}
		return { version : version, logicalScreenDescriptor : lsd, globalColorTable : gct, blocks : blocks};
	}
	,readBlock: function() {
		var blockID = this.i.readByte();
		switch(blockID) {
		case 33:
			return this.readExtension();
		case 44:
			return this.readImage();
		case 59:
			return format_gif_Block.BEOF;
		}
		return format_gif_Block.BEOF;
	}
	,readImage: function() {
		var x = this.i.readUInt16();
		var y = this.i.readUInt16();
		var width = this.i.readUInt16();
		var height = this.i.readUInt16();
		var packed = this.i.readByte();
		var localColorTable = (packed & 128) == 128;
		var interlaced = (packed & 64) == 64;
		var sorted = (packed & 32) == 32;
		var localColorTableSize = 2 << (packed & 7);
		var lct = null;
		if(localColorTable) {
			lct = this.readColorTable(localColorTableSize);
		}
		return format_gif_Block.BFrame({ x : x, y : y, width : width, height : height, localColorTable : localColorTable, interlaced : interlaced, sorted : sorted, localColorTableSize : localColorTableSize, pixels : this.readPixels(width,height,interlaced), colorTable : lct});
	}
	,readPixels: function(width,height,interlaced) {
		var input = this.i;
		var pixelsCount = width * height;
		var pixels = new haxe_io_Bytes(new ArrayBuffer(pixelsCount));
		var minCodeSize = input.readByte();
		var blockSize = input.readByte() - 1;
		var bits = input.readByte();
		var bitsCount = 8;
		var clearCode = 1 << minCodeSize;
		var eoiCode = clearCode + 1;
		var codeSize = minCodeSize + 1;
		var codeSizeLimit = 1 << codeSize;
		var codeMask = codeSizeLimit - 1;
		var baseDict = [];
		var _g = 0;
		var _g1 = clearCode;
		while(_g < _g1) {
			var i = _g++;
			baseDict[i] = [i];
		}
		var dict = [];
		var dictLen = clearCode + 2;
		var newRecord;
		var i = 0;
		var code = 0;
		var last;
		while(i < pixelsCount) {
			last = code;
			while(bitsCount < codeSize) {
				if(blockSize == 0) {
					break;
				}
				bits |= input.readByte() << bitsCount;
				bitsCount += 8;
				--blockSize;
				if(blockSize == 0) {
					blockSize = input.readByte();
				}
			}
			code = bits & codeMask;
			bits >>= codeSize;
			bitsCount -= codeSize;
			if(code == clearCode) {
				dict = baseDict.slice();
				dictLen = clearCode + 2;
				codeSize = minCodeSize + 1;
				codeSizeLimit = 1 << codeSize;
				codeMask = codeSizeLimit - 1;
				continue;
			}
			if(code == eoiCode) {
				break;
			}
			if(code < dictLen) {
				if(last != clearCode) {
					newRecord = dict[last].slice();
					newRecord.push(dict[code][0]);
					dict[dictLen++] = newRecord;
				}
			} else {
				if(code != dictLen) {
					throw haxe_Exception.thrown("Invalid LZW code. Excepted: " + dictLen + ", got: " + code);
				}
				newRecord = dict[last].slice();
				newRecord.push(newRecord[0]);
				dict[dictLen++] = newRecord;
			}
			newRecord = dict[code];
			var _g = 0;
			while(_g < newRecord.length) {
				var item = newRecord[_g];
				++_g;
				pixels.b[i++] = item;
			}
			if(dictLen == codeSizeLimit && codeSize < 12) {
				++codeSize;
				codeSizeLimit = 1 << codeSize;
				codeMask = codeSizeLimit - 1;
			}
		}
		while(blockSize > 0) {
			input.readByte();
			--blockSize;
			if(blockSize == 0) {
				blockSize = input.readByte();
			}
		}
		while(i < pixelsCount) pixels.b[i++] = 0;
		if(interlaced) {
			var buffer = new haxe_io_Bytes(new ArrayBuffer(pixelsCount));
			var offset = this.deinterlace(pixels,buffer,8,0,0,width,height);
			offset = this.deinterlace(pixels,buffer,8,4,offset,width,height);
			offset = this.deinterlace(pixels,buffer,4,2,offset,width,height);
			this.deinterlace(pixels,buffer,2,1,offset,width,height);
			pixels = buffer;
		}
		return pixels;
	}
	,deinterlace: function(input,output,step,y,offset,width,height) {
		while(y < height) {
			output.blit(y * width,input,offset,width);
			offset += width;
			y += step;
		}
		return offset;
	}
	,readExtension: function() {
		var subId = this.i.readByte();
		switch(subId) {
		case 1:
			if(this.i.readByte() != 12) {
				throw haxe_Exception.thrown("Incorrect size of Plain Text Extension introducer block.");
			}
			var tmp = this.i.readUInt16();
			var tmp1 = this.i.readUInt16();
			var tmp2 = this.i.readUInt16();
			var tmp3 = this.i.readUInt16();
			var tmp4 = this.i.readByte();
			var tmp5 = this.i.readByte();
			var tmp6 = this.i.readByte();
			var tmp7 = this.i.readByte();
			var buffer = new haxe_io_BytesOutput();
			var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
			var len = this.i.readByte();
			while(len != 0) {
				this.i.readBytes(bytes,0,len);
				buffer.writeBytes(bytes,0,len);
				len = this.i.readByte();
			}
			buffer.flush();
			bytes = buffer.getBytes();
			buffer.close();
			return format_gif_Block.BExtension(format_gif_Extension.EText({ textGridX : tmp, textGridY : tmp1, textGridWidth : tmp2, textGridHeight : tmp3, charCellWidth : tmp4, charCellHeight : tmp5, textForegroundColorIndex : tmp6, textBackgroundColorIndex : tmp7, text : bytes.toString()}));
		case 249:
			if(this.i.readByte() != 4) {
				throw haxe_Exception.thrown("Incorrect Graphic Control Extension block size!");
			}
			var packed = this.i.readByte();
			var disposalMethod;
			switch((packed & 28) >> 2) {
			case 0:
				disposalMethod = format_gif_DisposalMethod.UNSPECIFIED;
				break;
			case 1:
				disposalMethod = format_gif_DisposalMethod.NO_ACTION;
				break;
			case 2:
				disposalMethod = format_gif_DisposalMethod.FILL_BACKGROUND;
				break;
			case 3:
				disposalMethod = format_gif_DisposalMethod.RENDER_PREVIOUS;
				break;
			default:
				disposalMethod = format_gif_DisposalMethod.UNDEFINED((packed & 28) >> 2);
			}
			var b = format_gif_Block.BExtension(format_gif_Extension.EGraphicControl({ disposalMethod : disposalMethod, userInput : (packed & 2) == 2, hasTransparentColor : (packed & 1) == 1, delay : this.i.readUInt16(), transparentIndex : this.i.readByte()}));
			this.i.readByte();
			return b;
		case 254:
			var buffer = new haxe_io_BytesOutput();
			var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
			var len = this.i.readByte();
			while(len != 0) {
				this.i.readBytes(bytes,0,len);
				buffer.writeBytes(bytes,0,len);
				len = this.i.readByte();
			}
			buffer.flush();
			bytes = buffer.getBytes();
			buffer.close();
			return format_gif_Block.BExtension(format_gif_Extension.EComment(bytes.toString()));
		case 255:
			return this.readApplicationExtension();
		default:
			var buffer = new haxe_io_BytesOutput();
			var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
			var len = this.i.readByte();
			while(len != 0) {
				this.i.readBytes(bytes,0,len);
				buffer.writeBytes(bytes,0,len);
				len = this.i.readByte();
			}
			buffer.flush();
			bytes = buffer.getBytes();
			buffer.close();
			return format_gif_Block.BExtension(format_gif_Extension.EUnknown(subId,bytes));
		}
	}
	,readApplicationExtension: function() {
		if(this.i.readByte() != 11) {
			throw haxe_Exception.thrown("Incorrect size of Application Extension introducer block.");
		}
		var name = this.i.readString(8);
		var version = this.i.readString(3);
		var buffer = new haxe_io_BytesOutput();
		var bytes = new haxe_io_Bytes(new ArrayBuffer(255));
		var len = this.i.readByte();
		while(len != 0) {
			this.i.readBytes(bytes,0,len);
			buffer.writeBytes(bytes,0,len);
			len = this.i.readByte();
		}
		buffer.flush();
		bytes = buffer.getBytes();
		buffer.close();
		var data = bytes;
		if(name == "NETSCAPE" && version == "2.0" && data.b[0] == 1) {
			return format_gif_Block.BExtension(format_gif_Extension.EApplicationExtension(format_gif_ApplicationExtension.AENetscapeLooping(data.b[1] | data.b[2] << 8)));
		}
		return format_gif_Block.BExtension(format_gif_Extension.EApplicationExtension(format_gif_ApplicationExtension.AEUnknown(name,version,data)));
	}
	,readColorTable: function(size) {
		size *= 3;
		var output = new haxe_io_Bytes(new ArrayBuffer(size));
		var c = 0;
		while(c < size) {
			var v = this.i.readByte();
			output.b[c] = v;
			var v1 = this.i.readByte();
			output.b[c + 1] = v1;
			var v2 = this.i.readByte();
			output.b[c + 2] = v2;
			c += 3;
		}
		return output;
	}
	,__class__: format_gif_Reader
};
var format_gif_Tools = function() { };
$hxClasses["format.gif.Tools"] = format_gif_Tools;
format_gif_Tools.__name__ = "format.gif.Tools";
format_gif_Tools.extractFullBGRA = function(data,frameIndex) {
	var gce = null;
	var frameCaret = 0;
	var bytes = new haxe_io_Bytes(new ArrayBuffer(data.logicalScreenDescriptor.width * data.logicalScreenDescriptor.height * 4));
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var block = val;
		switch(block._hx_index) {
		case 0:
			var frame = block.frame;
			var ct = frame.localColorTable ? frame.colorTable : data.globalColorTable;
			if(ct == null) {
				throw haxe_Exception.thrown("Frame does not have a color table!");
			}
			var transparentIndex = gce != null && gce.hasTransparentColor ? gce.transparentIndex * 3 : -1;
			var pixels = frame.pixels;
			var x = 0;
			var writeCaret = (frame.y * data.logicalScreenDescriptor.width + frame.x) * 4;
			var lineSkip = (data.logicalScreenDescriptor.width - frame.width) * 4 + 4;
			var disposalMethod = frameCaret != frameIndex && gce != null ? gce.disposalMethod : format_gif_DisposalMethod.NO_ACTION;
			switch(disposalMethod._hx_index) {
			case 2:
				var _g = 0;
				var _g1 = pixels.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[writeCaret] = 0;
					bytes.b[writeCaret + 1] = 0;
					bytes.b[writeCaret + 2] = 0;
					bytes.b[writeCaret + 3] = 0;
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
				break;
			case 3:
				break;
			default:
				var _g2 = 0;
				var _g3 = pixels.length;
				while(_g2 < _g3) {
					var i1 = _g2++;
					var index = pixels.b[i1] * 3;
					if(transparentIndex != index) {
						bytes.b[writeCaret] = ct.b[index + 2];
						bytes.b[writeCaret + 1] = ct.b[index + 1];
						bytes.b[writeCaret + 2] = ct.b[index];
						bytes.b[writeCaret + 3] = 255;
					}
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
			}
			if(frameCaret == frameIndex) {
				return bytes;
			}
			++frameCaret;
			gce = null;
			break;
		case 1:
			var ext = block.extension;
			if(ext._hx_index == 0) {
				var g = ext.gce;
				gce = g;
			}
			break;
		default:
		}
	}
	return bytes;
};
format_gif_Tools.extractFullRGBA = function(data,frameIndex) {
	var gce = null;
	var frameCaret = 0;
	var bytes = new haxe_io_Bytes(new ArrayBuffer(data.logicalScreenDescriptor.width * data.logicalScreenDescriptor.height * 4));
	var _g_head = data.blocks.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var block = val;
		switch(block._hx_index) {
		case 0:
			var frame = block.frame;
			var ct = frame.localColorTable ? frame.colorTable : data.globalColorTable;
			if(ct == null) {
				throw haxe_Exception.thrown("Frame does not have a color table!");
			}
			var transparentIndex = gce != null && gce.hasTransparentColor ? gce.transparentIndex * 3 : -1;
			var pixels = frame.pixels;
			var x = 0;
			var writeCaret = (frame.y * data.logicalScreenDescriptor.width + frame.x) * 4;
			var lineSkip = (data.logicalScreenDescriptor.width - frame.width) * 4 + 4;
			var disposalMethod = frameCaret != frameIndex && gce != null ? gce.disposalMethod : format_gif_DisposalMethod.NO_ACTION;
			switch(disposalMethod._hx_index) {
			case 2:
				var _g = 0;
				var _g1 = pixels.length;
				while(_g < _g1) {
					var i = _g++;
					bytes.b[writeCaret] = 0;
					bytes.b[writeCaret + 1] = 0;
					bytes.b[writeCaret + 2] = 0;
					bytes.b[writeCaret + 3] = 0;
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
				break;
			case 3:
				break;
			default:
				var _g2 = 0;
				var _g3 = pixels.length;
				while(_g2 < _g3) {
					var i1 = _g2++;
					var index = pixels.b[i1] * 3;
					if(transparentIndex != index) {
						bytes.b[writeCaret] = ct.b[index];
						bytes.b[writeCaret + 1] = ct.b[index + 1];
						bytes.b[writeCaret + 2] = ct.b[index + 2];
						bytes.b[writeCaret + 3] = 255;
					}
					if(++x == frame.width) {
						x = 0;
						writeCaret += lineSkip;
					} else {
						writeCaret += 4;
					}
				}
			}
			if(frameCaret == frameIndex) {
				return bytes;
			}
			++frameCaret;
			gce = null;
			break;
		case 1:
			var ext = block.extension;
			if(ext._hx_index == 0) {
				var g = ext.gce;
				gce = g;
			}
			break;
		default:
		}
	}
	return bytes;
};
var format_png_Color = $hxEnums["format.png.Color"] = { __ename__:"format.png.Color",__constructs__:null
	,ColGrey: ($_=function(alpha) { return {_hx_index:0,alpha:alpha,__enum__:"format.png.Color",toString:$estr}; },$_._hx_name="ColGrey",$_.__params__ = ["alpha"],$_)
	,ColTrue: ($_=function(alpha) { return {_hx_index:1,alpha:alpha,__enum__:"format.png.Color",toString:$estr}; },$_._hx_name="ColTrue",$_.__params__ = ["alpha"],$_)
	,ColIndexed: {_hx_name:"ColIndexed",_hx_index:2,__enum__:"format.png.Color",toString:$estr}
};
format_png_Color.__constructs__ = [format_png_Color.ColGrey,format_png_Color.ColTrue,format_png_Color.ColIndexed];
format_png_Color.__empty_constructs__ = [format_png_Color.ColIndexed];
var format_png_Chunk = $hxEnums["format.png.Chunk"] = { __ename__:"format.png.Chunk",__constructs__:null
	,CEnd: {_hx_name:"CEnd",_hx_index:0,__enum__:"format.png.Chunk",toString:$estr}
	,CHeader: ($_=function(h) { return {_hx_index:1,h:h,__enum__:"format.png.Chunk",toString:$estr}; },$_._hx_name="CHeader",$_.__params__ = ["h"],$_)
	,CData: ($_=function(b) { return {_hx_index:2,b:b,__enum__:"format.png.Chunk",toString:$estr}; },$_._hx_name="CData",$_.__params__ = ["b"],$_)
	,CPalette: ($_=function(b) { return {_hx_index:3,b:b,__enum__:"format.png.Chunk",toString:$estr}; },$_._hx_name="CPalette",$_.__params__ = ["b"],$_)
	,CUnknown: ($_=function(id,data) { return {_hx_index:4,id:id,data:data,__enum__:"format.png.Chunk",toString:$estr}; },$_._hx_name="CUnknown",$_.__params__ = ["id","data"],$_)
};
format_png_Chunk.__constructs__ = [format_png_Chunk.CEnd,format_png_Chunk.CHeader,format_png_Chunk.CData,format_png_Chunk.CPalette,format_png_Chunk.CUnknown];
format_png_Chunk.__empty_constructs__ = [format_png_Chunk.CEnd];
var format_png_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(true);
	this.checkCRC = true;
};
$hxClasses["format.png.Reader"] = format_png_Reader;
format_png_Reader.__name__ = "format.png.Reader";
format_png_Reader.prototype = {
	i: null
	,checkCRC: null
	,read: function() {
		var b = 137;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 80;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 78;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 71;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 13;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 10;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 26;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var b = 10;
		if(this.i.readByte() != b) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var l = new haxe_ds_List();
		while(true) {
			var c = this.readChunk();
			l.add(c);
			if(c == format_png_Chunk.CEnd) {
				break;
			}
		}
		return l;
	}
	,readHeader: function(i) {
		i.set_bigEndian(true);
		var width = i.readInt32();
		var height = i.readInt32();
		var colbits = i.readByte();
		var color = i.readByte();
		var color1;
		switch(color) {
		case 0:
			color1 = format_png_Color.ColGrey(false);
			break;
		case 2:
			color1 = format_png_Color.ColTrue(false);
			break;
		case 3:
			color1 = format_png_Color.ColIndexed;
			break;
		case 4:
			color1 = format_png_Color.ColGrey(true);
			break;
		case 6:
			color1 = format_png_Color.ColTrue(true);
			break;
		default:
			throw haxe_Exception.thrown("Unknown color model " + color + ":" + colbits);
		}
		var compress = i.readByte();
		var filter = i.readByte();
		if(compress != 0 || filter != 0) {
			throw haxe_Exception.thrown("Invalid header");
		}
		var interlace = i.readByte();
		if(interlace != 0 && interlace != 1) {
			throw haxe_Exception.thrown("Invalid header");
		}
		return { width : width, height : height, colbits : colbits, color : color1, interlaced : interlace == 1};
	}
	,readChunk: function() {
		var dataLen = this.i.readInt32();
		var id = this.i.readString(4);
		var data = this.i.read(dataLen);
		var crc = this.i.readInt32();
		if(this.checkCRC) {
			var c_crc = -1;
			var tmp = (c_crc ^ HxOverrides.cca(id,0)) & 255;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			c_crc = c_crc >>> 8 ^ tmp;
			var tmp = (c_crc ^ HxOverrides.cca(id,1)) & 255;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			c_crc = c_crc >>> 8 ^ tmp;
			var tmp = (c_crc ^ HxOverrides.cca(id,2)) & 255;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			c_crc = c_crc >>> 8 ^ tmp;
			var tmp = (c_crc ^ HxOverrides.cca(id,3)) & 255;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
			c_crc = c_crc >>> 8 ^ tmp;
			var b = data.b.bufferValue;
			var _g = 0;
			var _g1 = data.length;
			while(_g < _g1) {
				var i = _g++;
				var tmp = (c_crc ^ b.bytes[i]) & 255;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
				c_crc = c_crc >>> 8 ^ tmp;
			}
			if((c_crc ^ -1) != crc) {
				throw haxe_Exception.thrown("CRC check failure");
			}
		}
		switch(id) {
		case "IDAT":
			return format_png_Chunk.CData(data);
		case "IEND":
			return format_png_Chunk.CEnd;
		case "IHDR":
			return format_png_Chunk.CHeader(this.readHeader(new haxe_io_BytesInput(data)));
		case "PLTE":
			return format_png_Chunk.CPalette(data);
		default:
			return format_png_Chunk.CUnknown(id,data);
		}
	}
	,__class__: format_png_Reader
};
var format_png_Tools = function() { };
$hxClasses["format.png.Tools"] = format_png_Tools;
format_png_Tools.__name__ = "format.png.Tools";
format_png_Tools.getHeader = function(d) {
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var c = val;
		if(c._hx_index == 1) {
			var h = c.h;
			return h;
		}
	}
	throw haxe_Exception.thrown("Header not found");
};
format_png_Tools.getPalette = function(d) {
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var c = val;
		if(c._hx_index == 3) {
			var b = c.b;
			return b;
		}
	}
	return null;
};
format_png_Tools.extract32 = function(d,bytes,flipY) {
	var h = format_png_Tools.getHeader(d);
	var bgra = bytes == null ? new haxe_io_Bytes(new ArrayBuffer(h.width * h.height * 4)) : bytes;
	var data = null;
	var fullData = null;
	var _g_head = d.h;
	while(_g_head != null) {
		var val = _g_head.item;
		_g_head = _g_head.next;
		var c = val;
		if(c._hx_index == 2) {
			var b = c.b;
			if(fullData != null) {
				fullData.add(b);
			} else if(data == null) {
				data = b;
			} else {
				fullData = new haxe_io_BytesBuffer();
				fullData.add(data);
				fullData.add(b);
				data = null;
			}
		}
	}
	if(fullData != null) {
		data = fullData.getBytes();
	}
	if(data == null) {
		throw haxe_Exception.thrown("Data not found");
	}
	data = format_tools_Inflate.run(data);
	var r = 0;
	var w = 0;
	var lineDelta = 0;
	if(flipY) {
		lineDelta = -h.width * 8;
		w = (h.height - 1) * (h.width * 4);
	}
	var flipY1 = flipY ? -1 : 1;
	var _g = h.color;
	switch(_g._hx_index) {
	case 0:
		var alpha = _g.alpha;
		if(h.colbits != 8) {
			throw haxe_Exception.thrown("Unsupported color mode");
		}
		var width = h.width;
		var stride = (alpha ? 2 : 1) * width + 1;
		if(data.length < h.height * stride) {
			throw haxe_Exception.thrown("Not enough data");
		}
		var alphvaIdx = -1;
		if(!alpha) {
			var _g_head = d.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var t = val;
				if(t._hx_index == 4) {
					if(t.id == "tRNS") {
						var data1 = t.data;
						if(data1.length >= 2) {
							alphvaIdx = data1.b[1];
						}
						break;
					}
				}
			}
		}
		var _g1 = 0;
		var _g2 = h.height;
		while(_g1 < _g2) {
			var y = _g1++;
			var f = data.b[r++];
			switch(f) {
			case 0:
				if(alpha) {
					var _g3 = 0;
					var _g4 = width;
					while(_g3 < _g4) {
						var x = _g3++;
						var v = data.b[r++];
						bgra.b[w++] = v;
						bgra.b[w++] = v;
						bgra.b[w++] = v;
						bgra.b[w++] = data.b[r++];
					}
				} else {
					var _g5 = 0;
					var _g6 = width;
					while(_g5 < _g6) {
						var x1 = _g5++;
						var v1 = data.b[r++];
						bgra.b[w++] = v1;
						bgra.b[w++] = v1;
						bgra.b[w++] = v1;
						bgra.b[w++] = v1 == alphvaIdx ? 0 : 255;
					}
				}
				break;
			case 1:
				var cv = 0;
				var ca = 0;
				if(alpha) {
					var _g7 = 0;
					var _g8 = width;
					while(_g7 < _g8) {
						var x2 = _g7++;
						cv += data.b[r++];
						bgra.b[w++] = cv;
						bgra.b[w++] = cv;
						bgra.b[w++] = cv;
						ca += data.b[r++];
						bgra.b[w++] = ca;
					}
				} else {
					var _g9 = 0;
					var _g10 = width;
					while(_g9 < _g10) {
						var x3 = _g9++;
						cv += data.b[r++];
						bgra.b[w++] = cv;
						bgra.b[w++] = cv;
						bgra.b[w++] = cv;
						bgra.b[w++] = cv == alphvaIdx ? 0 : 255;
					}
				}
				break;
			case 2:
				var stride = y == 0 ? 0 : width * 4 * flipY1;
				if(alpha) {
					var _g11 = 0;
					var _g12 = width;
					while(_g11 < _g12) {
						var x4 = _g11++;
						var v2 = data.b[r++] + bgra.b[w - stride];
						bgra.b[w++] = v2;
						bgra.b[w++] = v2;
						bgra.b[w++] = v2;
						var va = data.b[r++] + bgra.b[w - stride];
						bgra.b[w++] = va;
					}
				} else {
					var _g13 = 0;
					var _g14 = width;
					while(_g13 < _g14) {
						var x5 = _g13++;
						var v3 = data.b[r++] + bgra.b[w - stride];
						bgra.b[w++] = v3;
						bgra.b[w++] = v3;
						bgra.b[w++] = v3;
						bgra.b[w++] = v3 == alphvaIdx ? 0 : 255;
					}
				}
				break;
			case 3:
				var cv1 = 0;
				var ca1 = 0;
				var stride1 = y == 0 ? 0 : width * 4 * flipY1;
				if(alpha) {
					var _g15 = 0;
					var _g16 = width;
					while(_g15 < _g16) {
						var x6 = _g15++;
						cv1 = data.b[r++] + (cv1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1;
						ca1 = data.b[r++] + (ca1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = ca1;
					}
				} else {
					var _g17 = 0;
					var _g18 = width;
					while(_g17 < _g18) {
						var x7 = _g17++;
						cv1 = data.b[r++] + (cv1 + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1;
						bgra.b[w++] = cv1 == alphvaIdx ? 0 : 255;
					}
				}
				break;
			case 4:
				var stride2 = width * 4 * flipY1;
				var cv2 = 0;
				var ca2 = 0;
				if(alpha) {
					var _g19 = 0;
					var _g20 = width;
					while(_g19 < _g20) {
						var x8 = _g19++;
						var b = y == 0 ? 0 : bgra.b[w - stride2];
						var c = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k = cv2 + b - c;
						var pa = k - cv2;
						if(pa < 0) {
							pa = -pa;
						}
						var pb = k - b;
						if(pb < 0) {
							pb = -pb;
						}
						var pc = k - c;
						if(pc < 0) {
							pc = -pc;
						}
						var pos = r++;
						cv2 = (pa <= pb && pa <= pc ? cv2 : pb <= pc ? b : c) + data.b[pos] & 255;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2;
						var b1 = y == 0 ? 0 : bgra.b[w - stride2];
						var c1 = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k1 = ca2 + b1 - c1;
						var pa1 = k1 - ca2;
						if(pa1 < 0) {
							pa1 = -pa1;
						}
						var pb1 = k1 - b1;
						if(pb1 < 0) {
							pb1 = -pb1;
						}
						var pc1 = k1 - c1;
						if(pc1 < 0) {
							pc1 = -pc1;
						}
						var pos1 = r++;
						ca2 = (pa1 <= pb1 && pa1 <= pc1 ? ca2 : pb1 <= pc1 ? b1 : c1) + data.b[pos1] & 255;
						bgra.b[w++] = ca2;
					}
				} else {
					var _g21 = 0;
					var _g22 = width;
					while(_g21 < _g22) {
						var x9 = _g21++;
						var b2 = y == 0 ? 0 : bgra.b[w - stride2];
						var c2 = x9 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k2 = cv2 + b2 - c2;
						var pa2 = k2 - cv2;
						if(pa2 < 0) {
							pa2 = -pa2;
						}
						var pb2 = k2 - b2;
						if(pb2 < 0) {
							pb2 = -pb2;
						}
						var pc2 = k2 - c2;
						if(pc2 < 0) {
							pc2 = -pc2;
						}
						var pos2 = r++;
						cv2 = (pa2 <= pb2 && pa2 <= pc2 ? cv2 : pb2 <= pc2 ? b2 : c2) + data.b[pos2] & 255;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2;
						bgra.b[w++] = cv2 == alphvaIdx ? 0 : 255;
					}
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid filter " + f);
			}
			w += lineDelta;
		}
		break;
	case 1:
		var alpha = _g.alpha;
		if(h.colbits != 8) {
			throw haxe_Exception.thrown("Unsupported color mode");
		}
		var width = h.width;
		var stride = (alpha ? 4 : 3) * width + 1;
		if(data.length < h.height * stride) {
			throw haxe_Exception.thrown("Not enough data");
		}
		var alphaRed = -1;
		var alphaGreen = -1;
		var alphaBlue = -1;
		if(!alpha) {
			var _g_head = d.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var t = val;
				if(t._hx_index == 4) {
					if(t.id == "tRNS") {
						var data1 = t.data;
						if(data1.length >= 6) {
							alphaRed = data1.b[1];
							alphaGreen = data1.b[3];
							alphaBlue = data1.b[5];
						}
						break;
					}
				}
			}
		}
		var cr = 0;
		var cg = 0;
		var cb = 0;
		var ca = 0;
		var _g = 0;
		var _g1 = h.height;
		while(_g < _g1) {
			var y = _g++;
			var f = data.b[r++];
			switch(f) {
			case 0:
				if(alpha) {
					var _g2 = 0;
					var _g3 = width;
					while(_g2 < _g3) {
						var x = _g2++;
						bgra.b[w++] = data.b[r + 2];
						bgra.b[w++] = data.b[r + 1];
						bgra.b[w++] = data.b[r];
						bgra.b[w++] = data.b[r + 3];
						r += 4;
					}
				} else {
					var _g4 = 0;
					var _g5 = width;
					while(_g4 < _g5) {
						var x1 = _g4++;
						cb = data.b[r + 2];
						bgra.b[w++] = cb;
						cg = data.b[r + 1];
						bgra.b[w++] = cg;
						cr = data.b[r];
						bgra.b[w++] = cr;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			case 1:
				ca = 0;
				cb = ca;
				cg = cb;
				cr = cg;
				if(alpha) {
					var _g6 = 0;
					var _g7 = width;
					while(_g6 < _g7) {
						var x2 = _g6++;
						cb += data.b[r + 2];
						bgra.b[w++] = cb;
						cg += data.b[r + 1];
						bgra.b[w++] = cg;
						cr += data.b[r];
						bgra.b[w++] = cr;
						ca += data.b[r + 3];
						bgra.b[w++] = ca;
						r += 4;
					}
				} else {
					var _g8 = 0;
					var _g9 = width;
					while(_g8 < _g9) {
						var x3 = _g8++;
						cb += data.b[r + 2];
						bgra.b[w++] = cb;
						cg += data.b[r + 1];
						bgra.b[w++] = cg;
						cr += data.b[r];
						bgra.b[w++] = cr;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			case 2:
				var stride = y == 0 ? 0 : width * 4 * flipY1;
				if(alpha) {
					var _g10 = 0;
					var _g11 = width;
					while(_g10 < _g11) {
						var x4 = _g10++;
						bgra.b[w] = data.b[r + 2] + bgra.b[w - stride];
						++w;
						bgra.b[w] = data.b[r + 1] + bgra.b[w - stride];
						++w;
						bgra.b[w] = data.b[r] + bgra.b[w - stride];
						++w;
						bgra.b[w] = data.b[r + 3] + bgra.b[w - stride];
						++w;
						r += 4;
					}
				} else {
					var _g12 = 0;
					var _g13 = width;
					while(_g12 < _g13) {
						var x5 = _g12++;
						cb = data.b[r + 2] + bgra.b[w - stride];
						bgra.b[w] = cb;
						++w;
						cg = data.b[r + 1] + bgra.b[w - stride];
						bgra.b[w] = cg;
						++w;
						cr = data.b[r] + bgra.b[w - stride];
						bgra.b[w] = cr;
						++w;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			case 3:
				ca = 0;
				cb = ca;
				cg = cb;
				cr = cg;
				var stride1 = y == 0 ? 0 : width * 4 * flipY1;
				if(alpha) {
					var _g14 = 0;
					var _g15 = width;
					while(_g14 < _g15) {
						var x6 = _g14++;
						cb = data.b[r + 2] + (cb + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cb;
						cg = data.b[r + 1] + (cg + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cg;
						cr = data.b[r] + (cr + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cr;
						ca = data.b[r + 3] + (ca + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = ca;
						r += 4;
					}
				} else {
					var _g16 = 0;
					var _g17 = width;
					while(_g16 < _g17) {
						var x7 = _g16++;
						cb = data.b[r + 2] + (cb + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cb;
						cg = data.b[r + 1] + (cg + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cg;
						cr = data.b[r] + (cr + bgra.b[w - stride1] >> 1) & 255;
						bgra.b[w++] = cr;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			case 4:
				var stride2 = width * 4 * flipY1;
				ca = 0;
				cb = ca;
				cg = cb;
				cr = cg;
				if(alpha) {
					var _g18 = 0;
					var _g19 = width;
					while(_g18 < _g19) {
						var x8 = _g18++;
						var b = y == 0 ? 0 : bgra.b[w - stride2];
						var c = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k = cb + b - c;
						var pa = k - cb;
						if(pa < 0) {
							pa = -pa;
						}
						var pb = k - b;
						if(pb < 0) {
							pb = -pb;
						}
						var pc = k - c;
						if(pc < 0) {
							pc = -pc;
						}
						cb = (pa <= pb && pa <= pc ? cb : pb <= pc ? b : c) + data.b[r + 2] & 255;
						bgra.b[w++] = cb;
						var b1 = y == 0 ? 0 : bgra.b[w - stride2];
						var c1 = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k1 = cg + b1 - c1;
						var pa1 = k1 - cg;
						if(pa1 < 0) {
							pa1 = -pa1;
						}
						var pb1 = k1 - b1;
						if(pb1 < 0) {
							pb1 = -pb1;
						}
						var pc1 = k1 - c1;
						if(pc1 < 0) {
							pc1 = -pc1;
						}
						cg = (pa1 <= pb1 && pa1 <= pc1 ? cg : pb1 <= pc1 ? b1 : c1) + data.b[r + 1] & 255;
						bgra.b[w++] = cg;
						var b2 = y == 0 ? 0 : bgra.b[w - stride2];
						var c2 = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k2 = cr + b2 - c2;
						var pa2 = k2 - cr;
						if(pa2 < 0) {
							pa2 = -pa2;
						}
						var pb2 = k2 - b2;
						if(pb2 < 0) {
							pb2 = -pb2;
						}
						var pc2 = k2 - c2;
						if(pc2 < 0) {
							pc2 = -pc2;
						}
						cr = (pa2 <= pb2 && pa2 <= pc2 ? cr : pb2 <= pc2 ? b2 : c2) + data.b[r] & 255;
						bgra.b[w++] = cr;
						var b3 = y == 0 ? 0 : bgra.b[w - stride2];
						var c3 = x8 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k3 = ca + b3 - c3;
						var pa3 = k3 - ca;
						if(pa3 < 0) {
							pa3 = -pa3;
						}
						var pb3 = k3 - b3;
						if(pb3 < 0) {
							pb3 = -pb3;
						}
						var pc3 = k3 - c3;
						if(pc3 < 0) {
							pc3 = -pc3;
						}
						ca = (pa3 <= pb3 && pa3 <= pc3 ? ca : pb3 <= pc3 ? b3 : c3) + data.b[r + 3] & 255;
						bgra.b[w++] = ca;
						r += 4;
					}
				} else {
					var _g20 = 0;
					var _g21 = width;
					while(_g20 < _g21) {
						var x9 = _g20++;
						var b4 = y == 0 ? 0 : bgra.b[w - stride2];
						var c4 = x9 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k4 = cb + b4 - c4;
						var pa4 = k4 - cb;
						if(pa4 < 0) {
							pa4 = -pa4;
						}
						var pb4 = k4 - b4;
						if(pb4 < 0) {
							pb4 = -pb4;
						}
						var pc4 = k4 - c4;
						if(pc4 < 0) {
							pc4 = -pc4;
						}
						cb = (pa4 <= pb4 && pa4 <= pc4 ? cb : pb4 <= pc4 ? b4 : c4) + data.b[r + 2] & 255;
						bgra.b[w++] = cb;
						var b5 = y == 0 ? 0 : bgra.b[w - stride2];
						var c5 = x9 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k5 = cg + b5 - c5;
						var pa5 = k5 - cg;
						if(pa5 < 0) {
							pa5 = -pa5;
						}
						var pb5 = k5 - b5;
						if(pb5 < 0) {
							pb5 = -pb5;
						}
						var pc5 = k5 - c5;
						if(pc5 < 0) {
							pc5 = -pc5;
						}
						cg = (pa5 <= pb5 && pa5 <= pc5 ? cg : pb5 <= pc5 ? b5 : c5) + data.b[r + 1] & 255;
						bgra.b[w++] = cg;
						var b6 = y == 0 ? 0 : bgra.b[w - stride2];
						var c6 = x9 == 0 || y == 0 ? 0 : bgra.b[w - stride2 - 4];
						var k6 = cr + b6 - c6;
						var pa6 = k6 - cr;
						if(pa6 < 0) {
							pa6 = -pa6;
						}
						var pb6 = k6 - b6;
						if(pb6 < 0) {
							pb6 = -pb6;
						}
						var pc6 = k6 - c6;
						if(pc6 < 0) {
							pc6 = -pc6;
						}
						cr = (pa6 <= pb6 && pa6 <= pc6 ? cr : pb6 <= pc6 ? b6 : c6) + data.b[r] & 255;
						bgra.b[w++] = cr;
						bgra.b[w++] = cr == alphaRed && cg == alphaGreen && cb == alphaBlue ? 0 : 255;
						r += 3;
					}
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid filter " + f);
			}
			w += lineDelta;
		}
		break;
	case 2:
		var pal = format_png_Tools.getPalette(d);
		if(pal == null) {
			throw haxe_Exception.thrown("PNG Palette is missing");
		}
		var alpha = null;
		var _g_head = d.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var t = val;
			if(t._hx_index == 4) {
				if(t.id == "tRNS") {
					var data1 = t.data;
					alpha = data1;
					break;
				}
			}
		}
		if(alpha != null && alpha.length < 1 << h.colbits) {
			var alpha2 = new haxe_io_Bytes(new ArrayBuffer(1 << h.colbits));
			alpha2.blit(0,alpha,0,alpha.length);
			alpha2.fill(alpha.length,alpha2.length - alpha.length,255);
			alpha = alpha2;
		}
		var width = h.width;
		var stride = Math.ceil(width * h.colbits / 8) + 1;
		if(data.length < h.height * stride) {
			throw haxe_Exception.thrown("Not enough data");
		}
		var rline = stride - 1;
		var _g = 0;
		var _g1 = h.height;
		while(_g < _g1) {
			var y = _g++;
			var f = data.b[r++];
			if(f == 0) {
				r += rline;
				continue;
			}
			switch(f) {
			case 1:
				var c = 0;
				var _g2 = 0;
				var _g3 = width;
				while(_g2 < _g3) {
					var x = _g2++;
					var v = data.b[r];
					c += v;
					data.b[r++] = c & 255;
				}
				break;
			case 2:
				var stride = y == 0 ? 0 : rline + 1;
				var _g4 = 0;
				var _g5 = width;
				while(_g4 < _g5) {
					var x1 = _g4++;
					var v1 = data.b[r];
					data.b[r] = v1 + data.b[r - stride];
					++r;
				}
				break;
			case 3:
				var c1 = 0;
				var stride1 = y == 0 ? 0 : rline + 1;
				var _g6 = 0;
				var _g7 = width;
				while(_g6 < _g7) {
					var x2 = _g6++;
					var v2 = data.b[r];
					c1 = v2 + (c1 + data.b[r - stride1] >> 1) & 255;
					data.b[r++] = c1;
				}
				break;
			case 4:
				var stride2 = rline + 1;
				var c2 = 0;
				var _g8 = 0;
				var _g9 = width;
				while(_g8 < _g9) {
					var x3 = _g8++;
					var v3 = data.b[r];
					var numChannels = 1;
					if(numChannels == null) {
						numChannels = 4;
					}
					var b = y == 0 ? 0 : data.b[r - stride2];
					var c3 = x3 == 0 || y == 0 ? 0 : data.b[r - stride2 - numChannels];
					var k = c2 + b - c3;
					var pa = k - c2;
					if(pa < 0) {
						pa = -pa;
					}
					var pb = k - b;
					if(pb < 0) {
						pb = -pb;
					}
					var pc = k - c3;
					if(pc < 0) {
						pc = -pc;
					}
					c2 = (pa <= pb && pa <= pc ? c2 : pb <= pc ? b : c3) + v3 & 255;
					data.b[r++] = c2;
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid filter " + f);
			}
		}
		var r = 0;
		if(h.colbits == 8) {
			var _g = 0;
			var _g1 = h.height;
			while(_g < _g1) {
				var y = _g++;
				++r;
				var _g2 = 0;
				var _g3 = h.width;
				while(_g2 < _g3) {
					var x = _g2++;
					var c = data.b[r++];
					bgra.b[w++] = pal.b[c * 3 + 2];
					bgra.b[w++] = pal.b[c * 3 + 1];
					bgra.b[w++] = pal.b[c * 3];
					bgra.b[w++] = alpha != null ? alpha.b[c] : 255;
				}
				w += lineDelta;
			}
		} else if(h.colbits < 8) {
			var req = h.colbits;
			var mask = (1 << req) - 1;
			var _g = 0;
			var _g1 = h.height;
			while(_g < _g1) {
				var y = _g++;
				++r;
				var bits = 0;
				var nbits = 0;
				var _g2 = 0;
				var _g3 = h.width;
				while(_g2 < _g3) {
					var x = _g2++;
					if(nbits < req) {
						bits = bits << 8 | data.b[r++];
						nbits += 8;
					}
					var c = bits >>> nbits - req & mask;
					nbits -= req;
					bgra.b[w++] = pal.b[c * 3 + 2];
					bgra.b[w++] = pal.b[c * 3 + 1];
					bgra.b[w++] = pal.b[c * 3];
					bgra.b[w++] = alpha != null ? alpha.b[c] : 255;
				}
				w += lineDelta;
			}
		} else {
			throw haxe_Exception.thrown(h.colbits + " indexed bits per pixel not supported");
		}
		break;
	}
	return bgra;
};
var format_tga_ImageOrigin = $hxEnums["format.tga.ImageOrigin"] = { __ename__:"format.tga.ImageOrigin",__constructs__:null
	,BottomLeft: {_hx_name:"BottomLeft",_hx_index:0,__enum__:"format.tga.ImageOrigin",toString:$estr}
	,BottomRight: {_hx_name:"BottomRight",_hx_index:1,__enum__:"format.tga.ImageOrigin",toString:$estr}
	,TopLeft: {_hx_name:"TopLeft",_hx_index:2,__enum__:"format.tga.ImageOrigin",toString:$estr}
	,TopRight: {_hx_name:"TopRight",_hx_index:3,__enum__:"format.tga.ImageOrigin",toString:$estr}
};
format_tga_ImageOrigin.__constructs__ = [format_tga_ImageOrigin.BottomLeft,format_tga_ImageOrigin.BottomRight,format_tga_ImageOrigin.TopLeft,format_tga_ImageOrigin.TopRight];
format_tga_ImageOrigin.__empty_constructs__ = [format_tga_ImageOrigin.BottomLeft,format_tga_ImageOrigin.BottomRight,format_tga_ImageOrigin.TopLeft,format_tga_ImageOrigin.TopRight];
var format_tga_ImageType = $hxEnums["format.tga.ImageType"] = { __ename__:"format.tga.ImageType",__constructs__:null
	,NoImage: {_hx_name:"NoImage",_hx_index:0,__enum__:"format.tga.ImageType",toString:$estr}
	,UncompressedColorMapped: {_hx_name:"UncompressedColorMapped",_hx_index:1,__enum__:"format.tga.ImageType",toString:$estr}
	,UncompressedTrueColor: {_hx_name:"UncompressedTrueColor",_hx_index:2,__enum__:"format.tga.ImageType",toString:$estr}
	,UncompressedBlackAndWhite: {_hx_name:"UncompressedBlackAndWhite",_hx_index:3,__enum__:"format.tga.ImageType",toString:$estr}
	,RunLengthColorMapped: {_hx_name:"RunLengthColorMapped",_hx_index:4,__enum__:"format.tga.ImageType",toString:$estr}
	,RunLengthTrueColor: {_hx_name:"RunLengthTrueColor",_hx_index:5,__enum__:"format.tga.ImageType",toString:$estr}
	,RunLengthBlackAndWhite: {_hx_name:"RunLengthBlackAndWhite",_hx_index:6,__enum__:"format.tga.ImageType",toString:$estr}
	,Unknown: ($_=function(type) { return {_hx_index:7,type:type,__enum__:"format.tga.ImageType",toString:$estr}; },$_._hx_name="Unknown",$_.__params__ = ["type"],$_)
};
format_tga_ImageType.__constructs__ = [format_tga_ImageType.NoImage,format_tga_ImageType.UncompressedColorMapped,format_tga_ImageType.UncompressedTrueColor,format_tga_ImageType.UncompressedBlackAndWhite,format_tga_ImageType.RunLengthColorMapped,format_tga_ImageType.RunLengthTrueColor,format_tga_ImageType.RunLengthBlackAndWhite,format_tga_ImageType.Unknown];
format_tga_ImageType.__empty_constructs__ = [format_tga_ImageType.NoImage,format_tga_ImageType.UncompressedColorMapped,format_tga_ImageType.UncompressedTrueColor,format_tga_ImageType.UncompressedBlackAndWhite,format_tga_ImageType.RunLengthColorMapped,format_tga_ImageType.RunLengthTrueColor,format_tga_ImageType.RunLengthBlackAndWhite];
var format_tga_Reader = function(i) {
	this.i = i;
	i.set_bigEndian(false);
};
$hxClasses["format.tga.Reader"] = format_tga_Reader;
format_tga_Reader.__name__ = "format.tga.Reader";
format_tga_Reader.prototype = {
	i: null
	,read: function() {
		var idLength = this.i.readByte();
		var header = this.readHeader();
		var id = idLength == 0 ? "" : this.i.readString(idLength);
		var colorMap = this.readColorMapData(header);
		return { header : header, imageId : id, colorMapData : colorMap, imageData : this.readImageData(header,colorMap), developerData : null};
	}
	,readHeader: function() {
		var colorMapType = this.i.readByte();
		var dataType;
		var dataId = this.i.readByte();
		switch(dataId) {
		case 0:
			dataType = format_tga_ImageType.NoImage;
			break;
		case 1:
			dataType = format_tga_ImageType.UncompressedColorMapped;
			break;
		case 2:
			dataType = format_tga_ImageType.UncompressedTrueColor;
			break;
		case 3:
			dataType = format_tga_ImageType.UncompressedBlackAndWhite;
			break;
		case 9:
			dataType = format_tga_ImageType.RunLengthColorMapped;
			break;
		case 10:
			dataType = format_tga_ImageType.RunLengthTrueColor;
			break;
		case 11:
			dataType = format_tga_ImageType.RunLengthBlackAndWhite;
			break;
		default:
			dataType = format_tga_ImageType.Unknown(dataId);
		}
		var colorMapOrigin = this.i.readInt16();
		var colorMapLength = this.i.readInt16();
		var colorMapDepth = this.i.readByte();
		var xOrigin = this.i.readInt16();
		var yOrigin = this.i.readInt16();
		var width = this.i.readInt16();
		var height = this.i.readInt16();
		var depth = this.i.readByte();
		var descriptor = this.i.readByte();
		var origin;
		switch(descriptor & 48) {
		case 16:
			origin = format_tga_ImageOrigin.BottomRight;
			break;
		case 32:
			origin = format_tga_ImageOrigin.TopLeft;
			break;
		case 48:
			origin = format_tga_ImageOrigin.TopRight;
			break;
		default:
			origin = format_tga_ImageOrigin.BottomLeft;
		}
		return { colorMapType : colorMapType, imageType : dataType, colorMapFirstIndex : colorMapOrigin, colorMapLength : colorMapLength, colorMapEntrySize : colorMapDepth, xOrigin : xOrigin, yOrigin : yOrigin, width : width, height : height, bitsPerPixel : depth, alphaChannelBits : descriptor & 15, imageOrigin : origin};
	}
	,readColorMapData: function(header) {
		if(header.colorMapType == 0) {
			return null;
		}
		return this.readPixels(header.colorMapEntrySize,header.colorMapLength,header.alphaChannelBits,false);
	}
	,readImageData: function(header,colorMap) {
		switch(header.imageType._hx_index) {
		case 0:
			return null;
		case 1:
			return this.readIndexes(header.bitsPerPixel,header.width * header.height,colorMap,header.colorMapFirstIndex,false);
		case 2:
			return this.readPixels(header.bitsPerPixel,header.width * header.height,header.alphaChannelBits,false);
		case 3:
			return this.readMono(header.bitsPerPixel,header.width * header.height,header.alphaChannelBits,false);
		case 4:
			return this.readIndexes(header.bitsPerPixel,header.width * header.height,colorMap,header.colorMapFirstIndex,true);
		case 5:
			return this.readPixels(header.bitsPerPixel,header.width * header.height,header.alphaChannelBits,true);
		case 6:
			return this.readMono(header.bitsPerPixel,header.width * header.height,header.alphaChannelBits,true);
		default:
			throw haxe_Exception.thrown("Unsupported image data type!");
		}
	}
	,readPixels: function(bitsPerPixel,amount,alphaChannelBits,rle) {
		var list = new Array(amount);
		var alpha = alphaChannelBits != 0;
		var bitFieldSize = bitsPerPixel / 3 | 0;
		if(bitFieldSize > 8) {
			bitFieldSize = 8;
		}
		var parsePixel;
		var readEntry;
		switch(bitsPerPixel) {
		case 8:
			readEntry = ($_=this.i,$bind($_,$_.readByte));
			parsePixel = $bind(this,this.parsePixel1);
			break;
		case 16:
			readEntry = ($_=this.i,$bind($_,$_.readUInt16));
			parsePixel = $bind(this,this.parsePixel2);
			break;
		case 24:
			readEntry = ($_=this.i,$bind($_,$_.readUInt24));
			parsePixel = $bind(this,this.parsePixel3);
			break;
		case 32:
			readEntry = ($_=this.i,$bind($_,$_.readInt32));
			parsePixel = $bind(this,this.parsePixel4);
			break;
		default:
			throw haxe_Exception.thrown("Unsupported bits per pixels amount!");
		}
		if(rle) {
			var rleChunk;
			var i = 0;
			while(i < amount) {
				rleChunk = this.i.readByte();
				if((rleChunk & 128) != 0) {
					rleChunk &= 127;
					var pixel = parsePixel(readEntry(),alpha);
					while(rleChunk >= 0) {
						list[i++] = pixel;
						--rleChunk;
					}
				} else {
					rleChunk &= 127;
					while(rleChunk >= 0) {
						list[i++] = parsePixel(readEntry(),alpha);
						--rleChunk;
					}
				}
			}
		} else {
			var _g = 0;
			var _g1 = amount;
			while(_g < _g1) {
				var i = _g++;
				list[i] = parsePixel(readEntry(),alpha);
			}
		}
		return list;
	}
	,readMono: function(bitsPerPixel,amount,alphaChannelBits,rle) {
		var list = new Array(amount);
		var alpha = alphaChannelBits != 0;
		var parsePixel;
		var readEntry;
		switch(bitsPerPixel) {
		case 8:
			readEntry = ($_=this.i,$bind($_,$_.readByte));
			parsePixel = $bind(this,this.parsePixel1);
			break;
		case 16:
			readEntry = ($_=this.i,$bind($_,$_.readUInt16));
			parsePixel = $bind(this,this.parsePixelGreyAlpha);
			break;
		default:
			throw haxe_Exception.thrown("Unsupported bits per pixels amount!");
		}
		if(rle) {
			var rleChunk;
			var i = 0;
			while(i < amount) {
				rleChunk = this.i.readByte();
				if((rleChunk & 128) != 0) {
					rleChunk &= 127;
					var pixel = parsePixel(readEntry(),alpha);
					while(rleChunk >= 0) {
						list[i++] = pixel;
						--rleChunk;
					}
				} else {
					rleChunk &= 127;
					while(rleChunk >= 0) {
						list[i++] = parsePixel(readEntry(),alpha);
						--rleChunk;
					}
				}
			}
		} else {
			var _g = 0;
			var _g1 = amount;
			while(_g < _g1) {
				var i = _g++;
				list[i] = parsePixel(readEntry(),alpha);
			}
		}
		return list;
	}
	,readIndexes: function(bitsPerPixel,amount,colorMap,offset,rle) {
		var list = new Array(amount);
		var readEntry;
		switch(bitsPerPixel) {
		case 8:
			readEntry = ($_=this.i,$bind($_,$_.readByte));
			break;
		case 16:
			readEntry = ($_=this.i,$bind($_,$_.readUInt16));
			break;
		case 24:
			readEntry = ($_=this.i,$bind($_,$_.readUInt24));
			break;
		case 32:
			readEntry = ($_=this.i,$bind($_,$_.readInt32));
			break;
		default:
			throw haxe_Exception.thrown("Unsupported bits per pixels amount!");
		}
		if(rle) {
			var i = 0;
			var rleChunk;
			while(i < amount) {
				rleChunk = this.i.readByte();
				if((rleChunk & 128) != 0) {
					rleChunk &= 127;
					var pixel = colorMap[offset + readEntry()];
					while(rleChunk >= 0) {
						list[i++] = pixel;
						--rleChunk;
					}
				} else {
					rleChunk &= 127;
					while(rleChunk >= 0) {
						list[i++] = colorMap[offset + readEntry()];
						--rleChunk;
					}
				}
			}
		} else {
			var _g = 0;
			var _g1 = amount;
			while(_g < _g1) {
				var i = _g++;
				list[i] = colorMap[offset + readEntry()];
			}
		}
		return list;
	}
	,parsePixel1: function(value,alpha) {
		return value << 16 | value << 8 | value;
	}
	,parsePixelGreyAlpha: function(value,alpha) {
		return (alpha ? (value & 65280) << 16 : 0) | this.parsePixel1(value & 255,false);
	}
	,parsePixel2: function(value,alpha) {
		return (alpha ? (value & 32768) == 1 ? -16777216 : 0 : 0) | (((value & 31744) >> 10) / 31 * 255 | 0) << 16 | (((value & 992) >> 5) / 31 * 255 | 0) << 8 | ((value & 31) / 31 * 255 | 0);
	}
	,parsePixel3: function(value,alpha) {
		return value;
	}
	,parsePixel4: function(value,alpha) {
		return value;
	}
	,__class__: format_tga_Reader
};
var format_tools_Inflate = function() { };
$hxClasses["format.tools.Inflate"] = format_tools_Inflate;
format_tools_Inflate.__name__ = "format.tools.Inflate";
format_tools_Inflate.run = function(bytes) {
	return haxe_zip_Uncompress.run(bytes);
};
var h2d_col_Point = function(x,y) {
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["h2d.col.Point"] = h2d_col_Point;
h2d_col_Point.__name__ = "h2d.col.Point";
h2d_col_Point.prototype = {
	x: null
	,y: null
	,__class__: h2d_col_Point
};
var h2d_Object = function(parent) {
	this.blendMode = h2d_BlendMode.Alpha;
	this.alpha = 1.;
	this.visible = true;
	this.rotation = 0;
	this.scaleY = 1;
	this.scaleX = 1;
	this.y = 0;
	this.x = 0;
	this.matA = 1;
	this.matB = 0;
	this.matC = 0;
	this.matD = 1;
	this.absX = 0;
	this.absY = 0;
	this.posChanged = parent != null;
	this.children = [];
	if(parent != null) {
		parent.addChild(this);
	}
};
$hxClasses["h2d.Object"] = h2d_Object;
h2d_Object.__name__ = "h2d.Object";
h2d_Object.prototype = {
	children: null
	,parentContainer: null
	,parent: null
	,name: null
	,x: null
	,y: null
	,scaleX: null
	,scaleY: null
	,rotation: null
	,visible: null
	,alpha: null
	,filter: null
	,blendMode: null
	,matA: null
	,matB: null
	,matC: null
	,matD: null
	,absX: null
	,absY: null
	,posChanged: null
	,allocated: null
	,lastFrame: null
	,getBounds: function(relativeTo,out) {
		if(out == null) {
			out = new h2d_col_Bounds();
		} else {
			out.xMin = 1e20;
			out.yMin = 1e20;
			out.xMax = -1e20;
			out.yMax = -1e20;
		}
		if(relativeTo != null) {
			relativeTo.syncPos();
		}
		if(relativeTo != this) {
			this.syncPos();
		}
		this.getBoundsRec(relativeTo,out,false);
		if(out.xMax <= out.xMin || out.yMax <= out.yMin) {
			this.addBounds(relativeTo,out,-1,-1,2,2);
			out.xMax = out.xMin = (out.xMax + out.xMin) * 0.5;
			out.yMax = out.yMin = (out.yMax + out.yMin) * 0.5;
		}
		return out;
	}
	,set_filter: function(f) {
		if(this.filter != null && this.allocated) {
			this.filter.unbind(this);
		}
		this.filter = f;
		if(f != null && this.allocated) {
			f.bind(this);
		}
		return f;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
		var n = this.children.length;
		if(n == 0) {
			out.xMin = 1e20;
			out.yMin = 1e20;
			out.xMax = -1e20;
			out.yMax = -1e20;
			return;
		}
		if(n == 1) {
			var c = this.children[0];
			if(c.visible) {
				c.getBoundsRec(relativeTo,out,forSize);
			} else {
				out.xMin = 1e20;
				out.yMin = 1e20;
				out.xMax = -1e20;
				out.yMax = -1e20;
			}
			return;
		}
		var xmin = Infinity;
		var ymin = Infinity;
		var xmax = -Infinity;
		var ymax = -Infinity;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(!c.visible) {
				continue;
			}
			c.getBoundsRec(relativeTo,out,forSize);
			if(out.xMin < xmin) {
				xmin = out.xMin;
			}
			if(out.yMin < ymin) {
				ymin = out.yMin;
			}
			if(out.xMax > xmax) {
				xmax = out.xMax;
			}
			if(out.yMax > ymax) {
				ymax = out.yMax;
			}
		}
		out.xMin = xmin;
		out.yMin = ymin;
		out.xMax = xmax;
		out.yMax = ymax;
	}
	,addBounds: function(relativeTo,out,dx,dy,width,height) {
		if(width <= 0 || height <= 0) {
			return;
		}
		if(relativeTo == null) {
			var x = dx * this.matA + dy * this.matC + this.absX;
			var y = dx * this.matB + dy * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			var x = (dx + width) * this.matA + dy * this.matC + this.absX;
			var y = (dx + width) * this.matB + dy * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			var x = dx * this.matA + (dy + height) * this.matC + this.absX;
			var y = dx * this.matB + (dy + height) * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			var x = (dx + width) * this.matA + (dy + height) * this.matC + this.absX;
			var y = (dx + width) * this.matB + (dy + height) * this.matD + this.absY;
			if(x < out.xMin) {
				out.xMin = x;
			}
			if(x > out.xMax) {
				out.xMax = x;
			}
			if(y < out.yMin) {
				out.yMin = y;
			}
			if(y > out.yMax) {
				out.yMax = y;
			}
			return;
		}
		if(relativeTo == this) {
			if(out.xMin > dx) {
				out.xMin = dx;
			}
			if(out.yMin > dy) {
				out.yMin = dy;
			}
			if(out.xMax < dx + width) {
				out.xMax = dx + width;
			}
			if(out.yMax < dy + height) {
				out.yMax = dy + height;
			}
			return;
		}
		var r = relativeTo.matA * relativeTo.matD - relativeTo.matB * relativeTo.matC;
		if(r == 0) {
			return;
		}
		var det = 1 / r;
		var rA = relativeTo.matD * det;
		var rB = -relativeTo.matB * det;
		var rC = -relativeTo.matC * det;
		var rD = relativeTo.matA * det;
		var rX = this.absX - relativeTo.absX;
		var rY = this.absY - relativeTo.absY;
		var x = dx * this.matA + dy * this.matC + rX;
		var y = dx * this.matB + dy * this.matD + rY;
		var x1 = x * rA + y * rC;
		var y1 = x * rB + y * rD;
		if(x1 < out.xMin) {
			out.xMin = x1;
		}
		if(x1 > out.xMax) {
			out.xMax = x1;
		}
		if(y1 < out.yMin) {
			out.yMin = y1;
		}
		if(y1 > out.yMax) {
			out.yMax = y1;
		}
		x = (dx + width) * this.matA + dy * this.matC + rX;
		y = (dx + width) * this.matB + dy * this.matD + rY;
		var x1 = x * rA + y * rC;
		var y1 = x * rB + y * rD;
		if(x1 < out.xMin) {
			out.xMin = x1;
		}
		if(x1 > out.xMax) {
			out.xMax = x1;
		}
		if(y1 < out.yMin) {
			out.yMin = y1;
		}
		if(y1 > out.yMax) {
			out.yMax = y1;
		}
		x = dx * this.matA + (dy + height) * this.matC + rX;
		y = dx * this.matB + (dy + height) * this.matD + rY;
		var x1 = x * rA + y * rC;
		var y1 = x * rB + y * rD;
		if(x1 < out.xMin) {
			out.xMin = x1;
		}
		if(x1 > out.xMax) {
			out.xMax = x1;
		}
		if(y1 < out.yMin) {
			out.yMin = y1;
		}
		if(y1 > out.yMax) {
			out.yMax = y1;
		}
		x = (dx + width) * this.matA + (dy + height) * this.matC + rX;
		y = (dx + width) * this.matB + (dy + height) * this.matD + rY;
		var x1 = x * rA + y * rC;
		var y1 = x * rB + y * rD;
		if(x1 < out.xMin) {
			out.xMin = x1;
		}
		if(x1 > out.xMax) {
			out.xMax = x1;
		}
		if(y1 < out.yMin) {
			out.yMin = y1;
		}
		if(y1 > out.yMax) {
			out.yMax = y1;
		}
	}
	,localToGlobal: function(pt) {
		this.syncPos();
		if(pt == null) {
			pt = new h2d_col_Point();
		}
		var px = pt.x * this.matA + pt.y * this.matC + this.absX;
		var py = pt.x * this.matB + pt.y * this.matD + this.absY;
		pt.x = px;
		pt.y = py;
		return pt;
	}
	,globalToLocal: function(pt) {
		this.syncPos();
		pt.x -= this.absX;
		pt.y -= this.absY;
		var invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
		var px = (pt.x * this.matD - pt.y * this.matC) * invDet;
		var py = (-pt.x * this.matB + pt.y * this.matA) * invDet;
		pt.x = px;
		pt.y = py;
		return pt;
	}
	,getScene: function() {
		var p = this;
		while(p.parent != null) p = p.parent;
		if(((p) instanceof h2d_Scene)) {
			return p;
		} else {
			return null;
		}
	}
	,set_visible: function(b) {
		if(this.visible == b) {
			return b;
		}
		this.visible = b;
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
		return b;
	}
	,addChild: function(s) {
		this.addChildAt(s,this.children.length);
	}
	,addChildAt: function(s,pos) {
		if(pos < 0) {
			pos = 0;
		}
		if(pos > this.children.length) {
			pos = this.children.length;
		}
		var p = this;
		while(p != null) {
			if(p == s) {
				throw haxe_Exception.thrown("Recursive addChild");
			}
			p = p.parent;
		}
		if(s.parent != null) {
			var old = s.allocated;
			s.allocated = false;
			s.parent.removeChild(s);
			s.allocated = old;
		}
		this.children.splice(pos,0,s);
		if(!this.allocated && s.allocated) {
			s.onRemove();
		}
		s.parent = this;
		s.parentContainer = this.parentContainer;
		s.posChanged = true;
		if(this.allocated) {
			if(!s.allocated) {
				s.onAdd();
			} else {
				s.onHierarchyMoved(true);
			}
		}
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
	}
	,onHierarchyMoved: function(parentChanged) {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onHierarchyMoved(parentChanged);
		}
	}
	,onAdd: function() {
		this.allocated = true;
		if(this.filter != null) {
			this.filter.bind(this);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onAdd();
		}
	}
	,onRemove: function() {
		this.allocated = false;
		if(this.filter != null) {
			this.filter.unbind(this);
		}
		var i = this.children.length - 1;
		while(i >= 0) {
			var c = this.children[i--];
			if(c != null) {
				c.onRemove();
			}
		}
	}
	,removeChild: function(s) {
		if(HxOverrides.remove(this.children,s)) {
			if(s.allocated) {
				s.onRemove();
			}
			s.parent = null;
			if(s.parentContainer != null) {
				s.setParentContainer(null);
			}
			s.posChanged = true;
			if(this.parentContainer != null) {
				this.parentContainer.contentChanged(this);
			}
		}
	}
	,setParentContainer: function(c) {
		this.parentContainer = c;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			s.setParentContainer(c);
		}
	}
	,removeChildren: function() {
		while(this.children.length > 0) this.removeChild(this.getChildAt(0));
	}
	,draw: function(ctx) {
	}
	,sync: function(ctx) {
		var changed = this.posChanged;
		if(changed) {
			this.calcAbsPos();
			this.posChanged = false;
		}
		this.lastFrame = ctx.frame;
		var p = 0;
		var len = this.children.length;
		while(p < len) {
			var c = this.children[p];
			if(c == null) {
				break;
			}
			if(c.lastFrame != ctx.frame) {
				if(changed) {
					c.posChanged = true;
				}
				c.sync(ctx);
			}
			if(this.children[p] != c) {
				p = 0;
				len = this.children.length;
			} else {
				++p;
			}
		}
	}
	,syncPos: function() {
		if(this.parent != null) {
			this.parent.syncPos();
		}
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
	}
	,calcAbsPos: function() {
		if(this.parent == null) {
			var cr;
			var sr;
			if(this.rotation == 0) {
				cr = 1.;
				sr = 0.;
				this.matA = this.scaleX;
				this.matB = 0;
				this.matC = 0;
				this.matD = this.scaleY;
			} else {
				cr = Math.cos(this.rotation);
				sr = Math.sin(this.rotation);
				this.matA = this.scaleX * cr;
				this.matB = this.scaleX * sr;
				this.matC = this.scaleY * -sr;
				this.matD = this.scaleY * cr;
			}
			this.absX = this.x;
			this.absY = this.y;
		} else {
			if(this.rotation == 0) {
				this.matA = this.scaleX * this.parent.matA;
				this.matB = this.scaleX * this.parent.matB;
				this.matC = this.scaleY * this.parent.matC;
				this.matD = this.scaleY * this.parent.matD;
			} else {
				var cr = Math.cos(this.rotation);
				var sr = Math.sin(this.rotation);
				var tmpA = this.scaleX * cr;
				var tmpB = this.scaleX * sr;
				var tmpC = this.scaleY * -sr;
				var tmpD = this.scaleY * cr;
				this.matA = tmpA * this.parent.matA + tmpB * this.parent.matC;
				this.matB = tmpA * this.parent.matB + tmpB * this.parent.matD;
				this.matC = tmpC * this.parent.matA + tmpD * this.parent.matC;
				this.matD = tmpC * this.parent.matB + tmpD * this.parent.matD;
			}
			this.absX = this.x * this.parent.matA + this.y * this.parent.matC + this.parent.absX;
			this.absY = this.x * this.parent.matB + this.y * this.parent.matD + this.parent.absY;
		}
	}
	,emitTile: function(ctx,tile) {
		if(h2d_Object.nullDrawable == null) {
			h2d_Object.nullDrawable = new h2d_Drawable(null);
		}
		h2d_Object.nullDrawable.absX = this.absX;
		h2d_Object.nullDrawable.absY = this.absY;
		h2d_Object.nullDrawable.matA = this.matA;
		h2d_Object.nullDrawable.matB = this.matB;
		h2d_Object.nullDrawable.matC = this.matC;
		h2d_Object.nullDrawable.matD = this.matD;
		ctx.drawTile(h2d_Object.nullDrawable,tile);
	}
	,clipBounds: function(ctx,bounds,scaleX,scaleY) {
		if(scaleY == null) {
			scaleY = 1.;
		}
		if(scaleX == null) {
			scaleX = 1.;
		}
		var view = ctx.tmpBounds;
		var matA;
		var matB;
		var matC;
		var matD;
		var absX;
		var absY;
		if(ctx.inFilter != null) {
			var f1 = ctx.baseShader.filterMatrixA__;
			var f2 = ctx.baseShader.filterMatrixB__;
			var tmpA = this.matA * f1.x + this.matB * f1.y;
			var tmpB = this.matA * f2.x + this.matB * f2.y;
			var tmpC = this.matC * f1.x + this.matD * f1.y;
			var tmpD = this.matC * f2.x + this.matD * f2.y;
			var tmpX = this.absX * f1.x + this.absY * f1.y + f1.z;
			var tmpY = this.absX * f2.x + this.absY * f2.y + f2.z;
			matA = (tmpA * ctx.viewA + tmpB * ctx.viewC) / scaleX;
			matB = (tmpA * ctx.viewB + tmpB * ctx.viewD) / scaleY;
			matC = (tmpC * ctx.viewA + tmpD * ctx.viewC) / scaleX;
			matD = (tmpC * ctx.viewB + tmpD * ctx.viewD) / scaleY;
			absX = tmpX * ctx.viewA + tmpY * ctx.viewC + ctx.viewX;
			absY = tmpX * ctx.viewB + tmpY * ctx.viewD + ctx.viewY;
		} else {
			matA = (this.matA * ctx.viewA + this.matB * ctx.viewC) / scaleX;
			matB = (this.matA * ctx.viewB + this.matB * ctx.viewD) / scaleY;
			matC = (this.matC * ctx.viewA + this.matD * ctx.viewC) / scaleX;
			matD = (this.matC * ctx.viewB + this.matD * ctx.viewD) / scaleY;
			absX = this.absX * ctx.viewA + this.absY * ctx.viewC + ctx.viewX;
			absY = this.absX * ctx.viewB + this.absY * ctx.viewD + ctx.viewY;
		}
		view.xMin = 1e20;
		view.yMin = 1e20;
		view.xMax = -1e20;
		view.yMax = -1e20;
		var x = bounds.xMin;
		var y = bounds.yMin;
		var x1 = x * matA + y * matC + absX;
		var y1 = x * matB + y * matD + absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = bounds.xMax;
		var y = bounds.yMin;
		var x1 = x * matA + y * matC + absX;
		var y1 = x * matB + y * matD + absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = bounds.xMin;
		var y = bounds.yMax;
		var x1 = x * matA + y * matC + absX;
		var y1 = x * matB + y * matD + absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = bounds.xMax;
		var y = bounds.yMax;
		var x1 = x * matA + y * matC + absX;
		var y1 = x * matB + y * matD + absY;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		if(view.xMin < -1) {
			view.xMin = -1;
		}
		if(view.yMin < -1) {
			view.yMin = -1;
		}
		if(view.xMax > 1) {
			view.xMax = 1;
		}
		if(view.yMax > 1) {
			view.yMax = 1;
		}
		var invDet = 1 / (matA * matD - matB * matC);
		var sxMin = view.xMin;
		var syMin = view.yMin;
		var sxMax = view.xMax;
		var syMax = view.yMax;
		view.xMin = 1e20;
		view.yMin = 1e20;
		view.xMax = -1e20;
		view.yMax = -1e20;
		var x = sxMin;
		var y = syMin;
		x -= absX;
		y -= absY;
		var x1 = (x * matD - y * matC) * invDet;
		var y1 = (-x * matB + y * matA) * invDet;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = sxMax;
		var y = syMin;
		x -= absX;
		y -= absY;
		var x1 = (x * matD - y * matC) * invDet;
		var y1 = (-x * matB + y * matA) * invDet;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = sxMin;
		var y = syMax;
		x -= absX;
		y -= absY;
		var x1 = (x * matD - y * matC) * invDet;
		var y1 = (-x * matB + y * matA) * invDet;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var x = sxMax;
		var y = syMax;
		x -= absX;
		y -= absY;
		var x1 = (x * matD - y * matC) * invDet;
		var y1 = (-x * matB + y * matA) * invDet;
		if(x1 < view.xMin) {
			view.xMin = x1;
		}
		if(x1 > view.xMax) {
			view.xMax = x1;
		}
		if(y1 < view.yMin) {
			view.yMin = y1;
		}
		if(y1 > view.yMax) {
			view.yMax = y1;
		}
		var a = bounds.xMin;
		var b = view.xMin;
		bounds.xMin = a < b ? b : a;
		var a = bounds.yMin;
		var b = view.yMin;
		bounds.yMin = a < b ? b : a;
		var a = bounds.xMax;
		var b = view.xMax;
		bounds.xMax = a > b ? b : a;
		var a = bounds.yMax;
		var b = view.yMax;
		bounds.yMax = a > b ? b : a;
	}
	,drawFilters: function(ctx) {
		if(!ctx.pushFilter(this)) {
			return;
		}
		var bounds = ctx.tmpBounds;
		var total = new h2d_col_Bounds();
		this.filter.sync(ctx,this);
		var scaleX;
		var scaleY;
		if(this.filter.useScreenResolution) {
			var s = ctx.scene;
			scaleX = s.viewportScaleX * this.filter.resolutionScale;
			scaleY = s.viewportScaleY * this.filter.resolutionScale;
		} else {
			scaleX = this.filter.resolutionScale;
			scaleY = this.filter.resolutionScale;
		}
		if(this.filter.autoBounds) {
			var maxExtent = this.filter.boundsExtend;
			if(maxExtent >= 0) {
				this.getBounds(this,bounds);
				bounds.xMin = bounds.xMin * scaleX - maxExtent;
				bounds.yMin = bounds.yMin * scaleY - maxExtent;
				bounds.xMax = bounds.xMax * scaleX + maxExtent;
				bounds.yMax = bounds.yMax * scaleY + maxExtent;
				if(bounds.xMin < total.xMin) {
					total.xMin = bounds.xMin;
				}
				if(bounds.xMax > total.xMax) {
					total.xMax = bounds.xMax;
				}
				if(bounds.yMin < total.yMin) {
					total.yMin = bounds.yMin;
				}
				if(bounds.yMax > total.yMax) {
					total.yMax = bounds.yMax;
				}
			}
		} else {
			var scale = h2d_Object.tmpPoint;
			var x = scaleX;
			var y = scaleY;
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			scale.x = x;
			scale.y = y;
			this.filter.getBounds(this,bounds,scale);
			if(bounds.xMin < total.xMin) {
				total.xMin = bounds.xMin;
			}
			if(bounds.xMax > total.xMax) {
				total.xMax = bounds.xMax;
			}
			if(bounds.yMin < total.yMin) {
				total.yMin = bounds.yMin;
			}
			if(bounds.yMax > total.yMax) {
				total.yMax = bounds.yMax;
			}
			scaleX = scale.x;
			scaleY = scale.y;
		}
		ctx.setFilterScale(scaleX,scaleY);
		this.clipBounds(ctx,total,scaleX,scaleY);
		var xMin = Math.floor(total.xMin + 1e-10);
		var yMin = Math.floor(total.yMin + 1e-10);
		var width = Math.ceil(total.xMax - xMin - 1e-10);
		var height = Math.ceil(total.yMax - yMin - 1e-10);
		if(width <= 0 || height <= 0 || total.xMax < total.xMin) {
			ctx.popFilter();
			return;
		}
		var t = ctx.textures.allocTarget("filterTemp",width,height,false);
		ctx.pushTarget(t,xMin,yMin,width,height);
		ctx.engine.clear(0);
		var oldAlpha = ctx.globalAlpha;
		var shader = ctx.baseShader;
		var _this = shader.filterMatrixA__;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		var w = _this.w;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var oldA_x = x;
		var oldA_y = y;
		var oldA_z = z;
		var oldA_w = w;
		var _this = shader.filterMatrixB__;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		var w = _this.w;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var oldB_x = x;
		var oldB_y = y;
		var oldB_z = z;
		var oldB_w = w;
		var invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
		var invA = this.matD * invDet * scaleX;
		var invB = -this.matB * invDet * scaleY;
		var invC = -this.matC * invDet * scaleX;
		var invD = this.matA * invDet * scaleY;
		var invX = -(this.absX * invA + this.absY * invC);
		var invY = -(this.absX * invB + this.absY * invD);
		var _this = shader.filterMatrixA__;
		var x = invA;
		var y = invC;
		var z = invX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = shader.filterMatrixB__;
		var x = invB;
		var y = invD;
		var z = invY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		ctx.globalAlpha = 1;
		this.drawContent(ctx);
		var finalTile = h2d_Tile.fromTexture(t);
		finalTile.dx = xMin / scaleX;
		finalTile.dy = yMin / scaleY;
		var prev = finalTile;
		finalTile = this.filter.draw(ctx,finalTile);
		if(finalTile != null) {
			if(finalTile != prev) {
				finalTile.dx = (finalTile.dx + xMin) / scaleX;
				finalTile.dy = (finalTile.dy + yMin) / scaleY;
			}
			finalTile.width /= scaleX;
			finalTile.height /= scaleY;
		}
		var _this = shader.filterMatrixA__;
		_this.x = oldA_x;
		_this.y = oldA_y;
		_this.z = oldA_z;
		_this.w = oldA_w;
		var _this = shader.filterMatrixB__;
		_this.x = oldB_x;
		_this.y = oldB_y;
		_this.z = oldB_z;
		_this.w = oldB_w;
		ctx.popTarget();
		ctx.popFilter();
		ctx.globalAlpha = oldAlpha;
		if(finalTile == null) {
			return;
		}
		this.drawFiltered(ctx,finalTile);
	}
	,drawFiltered: function(ctx,tile) {
		var oldAlpha = ctx.globalAlpha;
		ctx.currentBlend = null;
		ctx.inFilterBlend = this.blendMode;
		ctx.globalAlpha *= this.alpha;
		this.emitTile(ctx,tile);
		ctx.globalAlpha = oldAlpha;
		ctx.inFilterBlend = null;
		ctx.currentBlend = null;
	}
	,drawRec: function(ctx) {
		if(!this.visible) {
			return;
		}
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
		if(this.filter != null && this.filter.get_enable()) {
			this.drawFilters(ctx);
		} else {
			var old = ctx.globalAlpha;
			ctx.globalAlpha *= this.alpha;
			this.drawContent(ctx);
			ctx.globalAlpha = old;
		}
	}
	,drawContent: function(ctx) {
		if(ctx.front2back) {
			var i = this.children.length;
			while(i-- > 0) this.children[i].drawRec(ctx);
			this.draw(ctx);
		} else {
			this.draw(ctx);
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.drawRec(ctx);
			}
		}
	}
	,getChildAt: function(n) {
		return this.children[n];
	}
	,getChildIndex: function(o) {
		var _g = 0;
		var _g1 = this.children.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.children[i] == o) {
				return i;
			}
		}
		return -1;
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		var c1 = c.__name__;
		if(this.name == null) {
			return c1;
		} else {
			return this.name + "(" + c1 + ")";
		}
	}
	,contentChanged: function(s) {
	}
	,__class__: h2d_Object
	,__properties__: {set_filter:"set_filter",set_visible:"set_visible"}
};
var h2d_Drawable = function(parent) {
	h2d_Object.call(this,parent);
	this.color = new h3d_Vector(1,1,1,1);
};
$hxClasses["h2d.Drawable"] = h2d_Drawable;
h2d_Drawable.__name__ = "h2d.Drawable";
h2d_Drawable.__super__ = h2d_Object;
h2d_Drawable.prototype = $extend(h2d_Object.prototype,{
	color: null
	,smooth: null
	,tileWrap: null
	,shaders: null
	,drawFiltered: function(ctx,tile) {
		var old = this.shaders;
		this.shaders = null;
		h2d_Object.prototype.drawFiltered.call(this,ctx,tile);
		this.shaders = old;
	}
	,addShader: function(s) {
		if(s == null) {
			throw haxe_Exception.thrown("Can't add null shader");
		}
		this.shaders = hxsl_ShaderList.addSort(s,this.shaders);
		return s;
	}
	,removeShader: function(s) {
		var prev = null;
		var cur = this.shaders;
		while(cur != null) {
			if(cur.s == s) {
				if(prev == null) {
					this.shaders = cur.next;
				} else {
					prev.next = cur.next;
				}
				return true;
			}
			prev = cur;
			cur = cur.next;
		}
		return false;
	}
	,emitTile: function(ctx,tile) {
		if(tile == null) {
			tile = new h2d_Tile(null,0,0,5,5);
		}
		if(!ctx.drawTile(this,tile)) {
			return;
		}
	}
	,__class__: h2d_Drawable
});
var h2d_Bitmap = function(tile,parent) {
	h2d_Drawable.call(this,parent);
	this.set_tile(tile);
};
$hxClasses["h2d.Bitmap"] = h2d_Bitmap;
h2d_Bitmap.__name__ = "h2d.Bitmap";
h2d_Bitmap.__super__ = h2d_Drawable;
h2d_Bitmap.prototype = $extend(h2d_Drawable.prototype,{
	tile: null
	,width: null
	,height: null
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.tile != null) {
			if(this.width == null && this.height == null) {
				this.addBounds(relativeTo,out,this.tile.dx,this.tile.dy,this.tile.width,this.tile.height);
			} else {
				this.addBounds(relativeTo,out,this.tile.dx,this.tile.dy,this.width != null ? this.width : this.tile.width * this.height / this.tile.height,this.height != null ? this.height : this.tile.height * this.width / this.tile.width);
			}
		}
	}
	,set_tile: function(t) {
		if(this.tile == t) {
			return t;
		}
		this.tile = t;
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
		return t;
	}
	,draw: function(ctx) {
		if(this.width == null && this.height == null) {
			this.emitTile(ctx,this.tile);
			return;
		}
		if(this.tile == null) {
			this.set_tile(h2d_Tile.fromColor(16711935));
		}
		var ow = this.tile.width;
		var oh = this.tile.height;
		this.tile.width = this.width != null ? this.width : ow * this.height / oh;
		this.tile.height = this.height != null ? this.height : oh * this.width / ow;
		this.emitTile(ctx,this.tile);
		this.tile.width = ow;
		this.tile.height = oh;
	}
	,__class__: h2d_Bitmap
	,__properties__: $extend(h2d_Drawable.prototype.__properties__,{set_tile:"set_tile"})
});
var h2d_BlendMode = $hxEnums["h2d.BlendMode"] = { __ename__:"h2d.BlendMode",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"h2d.BlendMode",toString:$estr}
	,Alpha: {_hx_name:"Alpha",_hx_index:1,__enum__:"h2d.BlendMode",toString:$estr}
	,Add: {_hx_name:"Add",_hx_index:2,__enum__:"h2d.BlendMode",toString:$estr}
	,AlphaAdd: {_hx_name:"AlphaAdd",_hx_index:3,__enum__:"h2d.BlendMode",toString:$estr}
	,SoftAdd: {_hx_name:"SoftAdd",_hx_index:4,__enum__:"h2d.BlendMode",toString:$estr}
	,Multiply: {_hx_name:"Multiply",_hx_index:5,__enum__:"h2d.BlendMode",toString:$estr}
	,AlphaMultiply: {_hx_name:"AlphaMultiply",_hx_index:6,__enum__:"h2d.BlendMode",toString:$estr}
	,Erase: {_hx_name:"Erase",_hx_index:7,__enum__:"h2d.BlendMode",toString:$estr}
	,Screen: {_hx_name:"Screen",_hx_index:8,__enum__:"h2d.BlendMode",toString:$estr}
	,Sub: {_hx_name:"Sub",_hx_index:9,__enum__:"h2d.BlendMode",toString:$estr}
	,Max: {_hx_name:"Max",_hx_index:10,__enum__:"h2d.BlendMode",toString:$estr}
	,Min: {_hx_name:"Min",_hx_index:11,__enum__:"h2d.BlendMode",toString:$estr}
};
h2d_BlendMode.__constructs__ = [h2d_BlendMode.None,h2d_BlendMode.Alpha,h2d_BlendMode.Add,h2d_BlendMode.AlphaAdd,h2d_BlendMode.SoftAdd,h2d_BlendMode.Multiply,h2d_BlendMode.AlphaMultiply,h2d_BlendMode.Erase,h2d_BlendMode.Screen,h2d_BlendMode.Sub,h2d_BlendMode.Max,h2d_BlendMode.Min];
h2d_BlendMode.__empty_constructs__ = [h2d_BlendMode.None,h2d_BlendMode.Alpha,h2d_BlendMode.Add,h2d_BlendMode.AlphaAdd,h2d_BlendMode.SoftAdd,h2d_BlendMode.Multiply,h2d_BlendMode.AlphaMultiply,h2d_BlendMode.Erase,h2d_BlendMode.Screen,h2d_BlendMode.Sub,h2d_BlendMode.Max,h2d_BlendMode.Min];
var h2d_Camera = function(scene) {
	this.followRotation = false;
	this.posChanged = true;
	this.x = 0;
	this.posChanged = true;
	this.y = 0;
	this.posChanged = true;
	this.scaleX = 1;
	this.posChanged = true;
	this.scaleY = 1;
	this.posChanged = true;
	this.rotation = 0;
	this.posChanged = true;
	this.anchorX = 0;
	this.posChanged = true;
	this.anchorY = 0;
	this.viewX = 0;
	this.viewY = 0;
	this.viewW = 1;
	this.viewH = 1;
	this.visible = true;
	if(scene != null) {
		scene.addCamera(this);
	}
};
$hxClasses["h2d.Camera"] = h2d_Camera;
h2d_Camera.__name__ = "h2d.Camera";
h2d_Camera.prototype = {
	x: null
	,y: null
	,scaleX: null
	,scaleY: null
	,rotation: null
	,clipViewport: null
	,anchorX: null
	,anchorY: null
	,visible: null
	,follow: null
	,followRotation: null
	,posChanged: null
	,viewX: null
	,viewY: null
	,viewW: null
	,viewH: null
	,matA: null
	,matB: null
	,matC: null
	,matD: null
	,absX: null
	,absY: null
	,invDet: null
	,scene: null
	,layerVisible: function(layer) {
		return true;
	}
	,enter: function(ctx) {
		ctx.pushCamera(this);
		if(this.clipViewport) {
			var old = ctx.inFilter;
			ctx.inFilter = null;
			ctx.pushRenderZone(this.viewX * this.scene.width,this.viewY * this.scene.height,this.viewW * this.scene.width,this.viewH * this.scene.height);
			ctx.inFilter = old;
		}
	}
	,exit: function(ctx) {
		if(this.clipViewport) {
			var old = ctx.inFilter;
			ctx.inFilter = null;
			ctx.popRenderZone();
			ctx.inFilter = old;
		}
		ctx.popCamera();
	}
	,sync: function(ctx,force) {
		if(force == null) {
			force = false;
		}
		if(this.scene == null) {
			return;
		}
		if(this.follow != null) {
			this.posChanged = true;
			this.x = this.follow.absX;
			this.posChanged = true;
			this.y = this.follow.absY;
			if(this.followRotation) {
				this.posChanged = true;
				this.rotation = -this.follow.rotation;
			}
		}
		if(this.posChanged || force) {
			if(this.rotation == 0) {
				this.matA = this.scaleX;
				this.matB = 0;
				this.matC = 0;
				this.matD = this.scaleY;
			} else {
				var cr = Math.cos(this.rotation);
				var sr = Math.sin(this.rotation);
				this.matA = this.scaleX * cr;
				this.matB = this.scaleX * sr;
				this.matC = this.scaleY * -sr;
				this.matD = this.scaleY * cr;
			}
			this.absX = Math.round(-(this.x * this.matA + this.y * this.matC) + this.scene.width * this.anchorX * this.viewW + this.scene.width * this.viewX);
			this.absY = Math.round(-(this.x * this.matB + this.y * this.matD) + this.scene.height * this.anchorY * this.viewH + this.scene.height * this.viewY);
			this.invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
			this.posChanged = false;
		}
	}
	,eventToCamera: function(e) {
		var x = (e.relX - this.scene.offsetX) / this.scene.viewportScaleX - this.absX;
		var y = (e.relY - this.scene.offsetY) / this.scene.viewportScaleY - this.absY;
		e.relX = (x * this.matD - y * this.matC) * this.invDet;
		e.relY = (-x * this.matB + y * this.matA) * this.invDet;
	}
	,__class__: h2d_Camera
};
var h2d_Kerning = function(c,o) {
	this.prevChar = c;
	this.offset = o;
};
$hxClasses["h2d.Kerning"] = h2d_Kerning;
h2d_Kerning.__name__ = "h2d.Kerning";
h2d_Kerning.prototype = {
	prevChar: null
	,offset: null
	,next: null
	,__class__: h2d_Kerning
};
var h2d_FontChar = function(t,w) {
	this.t = t;
	this.width = w;
};
$hxClasses["h2d.FontChar"] = h2d_FontChar;
h2d_FontChar.__name__ = "h2d.FontChar";
h2d_FontChar.prototype = {
	t: null
	,width: null
	,kerning: null
	,addKerning: function(prevChar,offset) {
		var k = new h2d_Kerning(prevChar,offset);
		k.next = this.kerning;
		this.kerning = k;
	}
	,getKerningOffset: function(prevChar) {
		var k = this.kerning;
		while(k != null) {
			if(k.prevChar == prevChar) {
				return k.offset;
			}
			k = k.next;
		}
		return 0;
	}
	,clone: function() {
		var c = new h2d_FontChar(this.t.clone(),this.width);
		var k = this.kerning;
		if(k != null) {
			var kc = new h2d_Kerning(k.prevChar,k.offset);
			c.kerning = kc;
			k = k.next;
			while(k != null) {
				var kn = new h2d_Kerning(k.prevChar,k.offset);
				kc = kc.next = kn;
				k = k.next;
			}
		}
		return c;
	}
	,__class__: h2d_FontChar
};
var h2d_FontType = $hxEnums["h2d.FontType"] = { __ename__:"h2d.FontType",__constructs__:null
	,BitmapFont: {_hx_name:"BitmapFont",_hx_index:0,__enum__:"h2d.FontType",toString:$estr}
	,SignedDistanceField: ($_=function(channel,alphaCutoff,smoothing) { return {_hx_index:1,channel:channel,alphaCutoff:alphaCutoff,smoothing:smoothing,__enum__:"h2d.FontType",toString:$estr}; },$_._hx_name="SignedDistanceField",$_.__params__ = ["channel","alphaCutoff","smoothing"],$_)
};
h2d_FontType.__constructs__ = [h2d_FontType.BitmapFont,h2d_FontType.SignedDistanceField];
h2d_FontType.__empty_constructs__ = [h2d_FontType.BitmapFont];
var h2d_Font = function(name,size,type) {
	this.offsetY = 0;
	this.offsetX = 0;
	this.name = name;
	this.size = size;
	this.initSize = size;
	this.glyphs = new haxe_ds_IntMap();
	this.defaultChar = this.nullChar = new h2d_FontChar(new h2d_Tile(null,0,0,0,0),0);
	this.charset = hxd_Charset.getDefault();
	if(name != null) {
		this.tilePath = haxe_io_Path.withExtension(name,"png");
	}
	if(type == null) {
		this.type = h2d_FontType.BitmapFont;
	} else {
		this.type = type;
	}
};
$hxClasses["h2d.Font"] = h2d_Font;
h2d_Font.__name__ = "h2d.Font";
h2d_Font.prototype = {
	name: null
	,size: null
	,baseLine: null
	,lineHeight: null
	,tile: null
	,tilePath: null
	,type: null
	,charset: null
	,glyphs: null
	,nullChar: null
	,defaultChar: null
	,initSize: null
	,offsetX: null
	,offsetY: null
	,clone: function() {
		var f = new h2d_Font(this.name,this.size);
		f.baseLine = this.baseLine;
		f.lineHeight = this.lineHeight;
		f.tile = this.tile.clone();
		f.charset = this.charset;
		f.defaultChar = this.defaultChar.clone();
		f.type = this.type;
		f.offsetX = this.offsetX;
		f.offsetY = this.offsetY;
		var g = this.glyphs.keys();
		while(g.hasNext()) {
			var g1 = g.next();
			var c = this.glyphs.h[g1];
			var c2 = c.clone();
			if(c == this.defaultChar) {
				f.defaultChar = c2;
			}
			f.glyphs.h[g1] = c2;
		}
		return f;
	}
	,resizeTo: function(size) {
		var ratio = size / this.initSize;
		var c = this.glyphs.iterator();
		while(c.hasNext()) {
			var c1 = c.next();
			c1.width *= ratio;
			c1.t.scaleToSize(c1.t.width * ratio,c1.t.height * ratio);
			c1.t.dx *= ratio;
			c1.t.dy *= ratio;
			var k = c1.kerning;
			while(k != null) {
				k.offset *= ratio;
				k = k.next;
			}
		}
		this.lineHeight = Math.ceil(this.lineHeight * ratio);
		this.baseLine = Math.ceil(this.baseLine * ratio);
		this.size = size;
	}
	,hasChar: function(code) {
		return this.glyphs.h[code] != null;
	}
	,calcBaseLine: function() {
		var padding = 0;
		var space = this.glyphs.h[32];
		if(space != null) {
			padding = space.t.height * .5;
		}
		var a = this.glyphs.h[65];
		if(a == null) {
			a = this.glyphs.h[97];
		}
		if(a == null) {
			a = this.glyphs.h[48];
		}
		if(a == null) {
			return this.lineHeight - 2 - padding;
		}
		return a.t.dy + a.t.height - padding;
	}
	,__class__: h2d_Font
};
var h2d_GPoint = function() {
};
$hxClasses["h2d.GPoint"] = h2d_GPoint;
h2d_GPoint.__name__ = "h2d.GPoint";
h2d_GPoint.prototype = {
	x: null
	,y: null
	,r: null
	,g: null
	,b: null
	,a: null
	,load: function(x,y,r,g,b,a) {
		this.x = x;
		this.y = y;
		this.r = r;
		this.g = g;
		this.b = b;
		this.a = a;
	}
	,__class__: h2d_GPoint
};
var h3d_prim_Primitive = function() {
	this.refCount = 0;
};
$hxClasses["h3d.prim.Primitive"] = h3d_prim_Primitive;
h3d_prim_Primitive.__name__ = "h3d.prim.Primitive";
h3d_prim_Primitive.prototype = {
	buffer: null
	,indexes: null
	,refCount: null
	,triCount: function() {
		if(this.indexes != null) {
			return this.indexes.count / 3 | 0;
		} else if(this.buffer == null) {
			return 0;
		} else {
			return this.buffer.vertices / 3 | 0;
		}
	}
	,getBounds: function() {
		throw haxe_Exception.thrown("not implemented for " + Std.string(this));
	}
	,incref: function() {
		this.refCount++;
	}
	,decref: function() {
		this.refCount--;
		if(this.refCount <= 0) {
			this.refCount = 0;
			this.dispose();
		}
	}
	,alloc: function(engine) {
		throw haxe_Exception.thrown("not implemented");
	}
	,render: function(engine) {
		if(this.buffer == null || this.buffer.vbuf == null) {
			this.alloc(engine);
		}
		if(this.indexes == null) {
			var b = this.buffer;
			engine.renderBuffer(b,engine.mem.getTriIndexes(b.vertices),3,0,-1);
		} else {
			engine.renderIndexed(this.buffer,this.indexes);
		}
	}
	,dispose: function() {
		if(this.buffer != null) {
			this.buffer.dispose();
			this.buffer = null;
		}
		if(this.indexes != null) {
			this.indexes.dispose();
			this.indexes = null;
		}
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__.split(".").pop();
	}
	,__class__: h3d_prim_Primitive
};
var h2d__$Graphics_GraphicsContent = function() {
	h3d_prim_Primitive.call(this);
	this.buffers = [];
	this.state = new h2d_impl_BatchDrawState();
};
$hxClasses["h2d._Graphics.GraphicsContent"] = h2d__$Graphics_GraphicsContent;
h2d__$Graphics_GraphicsContent.__name__ = "h2d._Graphics.GraphicsContent";
h2d__$Graphics_GraphicsContent.__super__ = h3d_prim_Primitive;
h2d__$Graphics_GraphicsContent.prototype = $extend(h3d_prim_Primitive.prototype,{
	tmp: null
	,index: null
	,state: null
	,buffers: null
	,bufferDirty: null
	,indexDirty: null
	,setTile: function(tile) {
		if(tile != null) {
			this.state.setTexture(tile.innerTex);
		}
	}
	,next: function() {
		var nvect = this.tmp.pos >> 3;
		if(nvect < 32768) {
			return false;
		}
		this.buffers.push({ buf : this.tmp, idx : this.index, vbuf : null, ibuf : null, state : this.state});
		this.tmp = hxd__$FloatBuffer_Float32Expand._new(0);
		this.index = new Array(0);
		var tex = this.state.tail.texture;
		this.state = new h2d_impl_BatchDrawState();
		this.state.setTexture(tex);
		h3d_prim_Primitive.prototype.dispose.call(this);
		return true;
	}
	,alloc: function(engine) {
		if(this.index.length <= 0) {
			return;
		}
		var alloc = hxd_impl_Allocator.get();
		this.buffer = alloc.ofFloats(this.tmp,hxd_BufferFormat.get_XY_UV_RGBA());
		this.indexes = alloc.ofIndexes(this.index);
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.vbuf == null || b.vbuf.vbuf == null) {
				b.vbuf = alloc.ofFloats(b.buf,hxd_BufferFormat.get_XY_UV_RGBA());
			}
			if(b.ibuf == null || b.ibuf.isDisposed()) {
				b.ibuf = alloc.ofIndexes(b.idx);
			}
		}
		this.bufferDirty = false;
		this.indexDirty = false;
	}
	,doRender: function(ctx) {
		if(this.index.length == 0) {
			return;
		}
		this.flush();
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.state.drawIndexed(ctx,b.vbuf,b.ibuf);
		}
		this.state.drawIndexed(ctx,this.buffer,this.indexes);
	}
	,flush: function() {
		if(this.buffer == null || this.buffer.vbuf == null) {
			this.alloc(h3d_Engine.CURRENT);
		} else {
			var allocator = hxd_impl_Allocator.get();
			if(this.bufferDirty) {
				allocator.disposeBuffer(this.buffer);
				this.buffer = allocator.ofFloats(this.tmp,hxd_BufferFormat.get_XY_UV_RGBA());
				this.bufferDirty = false;
			}
			if(this.indexDirty) {
				allocator.disposeIndexBuffer(this.indexes);
				this.indexes = allocator.ofIndexes(this.index);
				this.indexDirty = false;
			}
		}
	}
	,dispose: function() {
		var _g = 0;
		var _g1 = this.buffers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.vbuf != null) {
				hxd_impl_Allocator.get().disposeBuffer(b.vbuf);
			}
			if(b.ibuf != null) {
				hxd_impl_Allocator.get().disposeIndexBuffer(b.ibuf);
			}
			b.vbuf = null;
			b.ibuf = null;
			b.state.clear();
		}
		if(this.buffer != null) {
			hxd_impl_Allocator.get().disposeBuffer(this.buffer);
			this.buffer = null;
		}
		if(this.indexes != null) {
			hxd_impl_Allocator.get().disposeIndexBuffer(this.indexes);
			this.indexes = null;
		}
		this.state.clear();
		h3d_prim_Primitive.prototype.dispose.call(this);
	}
	,clear: function() {
		this.dispose();
		this.tmp = hxd__$FloatBuffer_Float32Expand._new(0);
		this.index = new Array(0);
		this.buffers = [];
	}
	,__class__: h2d__$Graphics_GraphicsContent
});
var h2d_Graphics = function(parent) {
	this.bevel = 0.25;
	this.my = 0.;
	this.mx = 0.;
	this.md = 1.;
	this.mc = 0.;
	this.mb = 0.;
	this.ma = 1.;
	h2d_Drawable.call(this,parent);
	this.content = new h2d__$Graphics_GraphicsContent();
	this.tile = h2d_Tile.fromColor(16777215);
	this.clear();
};
$hxClasses["h2d.Graphics"] = h2d_Graphics;
h2d_Graphics.__name__ = "h2d.Graphics";
h2d_Graphics.__super__ = h2d_Drawable;
h2d_Graphics.prototype = $extend(h2d_Drawable.prototype,{
	content: null
	,tmpPoints: null
	,pindex: null
	,curR: null
	,curG: null
	,curB: null
	,curA: null
	,lineSize: null
	,lineR: null
	,lineG: null
	,lineB: null
	,lineA: null
	,doFill: null
	,xMin: null
	,yMin: null
	,xMax: null
	,yMax: null
	,xMinSize: null
	,yMinSize: null
	,xMaxSize: null
	,yMaxSize: null
	,ma: null
	,mb: null
	,mc: null
	,md: null
	,mx: null
	,my: null
	,tile: null
	,bevel: null
	,onRemove: function() {
		h2d_Drawable.prototype.onRemove.call(this);
		this.clear();
	}
	,clear: function() {
		this.content.clear();
		this.tmpPoints = [];
		this.pindex = 0;
		this.lineSize = 0;
		this.xMin = Infinity;
		this.yMin = Infinity;
		this.yMax = -Infinity;
		this.xMax = -Infinity;
		this.xMinSize = Infinity;
		this.yMinSize = Infinity;
		this.yMaxSize = -Infinity;
		this.xMaxSize = -Infinity;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.tile != null) {
			if(forSize) {
				this.addBounds(relativeTo,out,this.xMinSize,this.yMinSize,this.xMaxSize - this.xMinSize,this.yMaxSize - this.yMinSize);
			} else {
				this.addBounds(relativeTo,out,this.xMin,this.yMin,this.xMax - this.xMin,this.yMax - this.yMin);
			}
		}
	}
	,isConvex: function(points) {
		var first = true;
		var sign = false;
		var _g = 0;
		var _g1 = points.length;
		while(_g < _g1) {
			var i = _g++;
			var p1 = points[i];
			var p2 = points[(i + 1) % points.length];
			var p3 = points[(i + 2) % points.length];
			var s = (p2.x - p1.x) * (p3.y - p1.y) - (p2.y - p1.y) * (p3.x - p1.x) > 0;
			if(first) {
				first = false;
				sign = s;
			} else if(sign != s) {
				return false;
			}
		}
		return true;
	}
	,flushLine: function(start) {
		var pts = this.tmpPoints;
		var last = pts.length - 1;
		var prev = pts[last];
		var p = pts[0];
		this.content.setTile(h2d_Tile.fromColor(16777215));
		var closed = p.x == prev.x && p.y == prev.y;
		var count = pts.length;
		if(!closed) {
			var prevLast = pts[last - 1];
			if(prevLast == null) {
				prevLast = p;
			}
			var gp = new h2d_GPoint();
			gp.load(prev.x * 2 - prevLast.x,prev.y * 2 - prevLast.y,0,0,0,0);
			pts.push(gp);
			var pNext = pts[1];
			if(pNext == null) {
				pNext = p;
			}
			var gp = new h2d_GPoint();
			gp.load(p.x * 2 - pNext.x,p.y * 2 - pNext.y,0,0,0,0);
			prev = gp;
		} else if(p != prev) {
			--count;
			--last;
			prev = pts[last];
		}
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			var next = pts[(i + 1) % pts.length];
			var nx1 = prev.y - p.y;
			var ny1 = p.x - prev.x;
			var ns1 = 1. / Math.sqrt(nx1 * nx1 + ny1 * ny1);
			var nx2 = p.y - next.y;
			var ny2 = next.x - p.x;
			var ns2 = 1. / Math.sqrt(nx2 * nx2 + ny2 * ny2);
			var nx = nx1 * ns1 + nx2 * ns2;
			var ny = ny1 * ns1 + ny2 * ns2;
			var ns = 1. / Math.sqrt(nx * nx + ny * ny);
			nx *= ns;
			ny *= ns;
			var size = nx * nx1 * ns1 + ny * ny1 * ns1;
			if(size < 0.1) {
				size = 0.1;
			}
			var d = this.lineSize * 0.5 / size;
			nx *= d;
			ny *= d;
			if(size > this.bevel) {
				var _this = this.content;
				var x = p.x + nx;
				var y = p.y + ny;
				var r = p.r;
				var g = p.g;
				var b = p.b;
				var a = p.a;
				var this1 = _this.tmp;
				if(this1.pos == this1.array.length) {
					var newSize = this1.array.length << 1;
					if(newSize < 128) {
						newSize = 128;
					}
					var newArray = new Float32Array(newSize);
					newArray.set(this1.array);
					this1.array = newArray;
				}
				this1.array[this1.pos++] = x;
				var this2 = _this.tmp;
				if(this2.pos == this2.array.length) {
					var newSize1 = this2.array.length << 1;
					if(newSize1 < 128) {
						newSize1 = 128;
					}
					var newArray1 = new Float32Array(newSize1);
					newArray1.set(this2.array);
					this2.array = newArray1;
				}
				this2.array[this2.pos++] = y;
				var this3 = _this.tmp;
				if(this3.pos == this3.array.length) {
					var newSize2 = this3.array.length << 1;
					if(newSize2 < 128) {
						newSize2 = 128;
					}
					var newArray2 = new Float32Array(newSize2);
					newArray2.set(this3.array);
					this3.array = newArray2;
				}
				this3.array[this3.pos++] = 0;
				var this4 = _this.tmp;
				if(this4.pos == this4.array.length) {
					var newSize3 = this4.array.length << 1;
					if(newSize3 < 128) {
						newSize3 = 128;
					}
					var newArray3 = new Float32Array(newSize3);
					newArray3.set(this4.array);
					this4.array = newArray3;
				}
				this4.array[this4.pos++] = 0;
				var this5 = _this.tmp;
				if(this5.pos == this5.array.length) {
					var newSize4 = this5.array.length << 1;
					if(newSize4 < 128) {
						newSize4 = 128;
					}
					var newArray4 = new Float32Array(newSize4);
					newArray4.set(this5.array);
					this5.array = newArray4;
				}
				this5.array[this5.pos++] = r;
				var this6 = _this.tmp;
				if(this6.pos == this6.array.length) {
					var newSize5 = this6.array.length << 1;
					if(newSize5 < 128) {
						newSize5 = 128;
					}
					var newArray5 = new Float32Array(newSize5);
					newArray5.set(this6.array);
					this6.array = newArray5;
				}
				this6.array[this6.pos++] = g;
				var this7 = _this.tmp;
				if(this7.pos == this7.array.length) {
					var newSize6 = this7.array.length << 1;
					if(newSize6 < 128) {
						newSize6 = 128;
					}
					var newArray6 = new Float32Array(newSize6);
					newArray6.set(this7.array);
					this7.array = newArray6;
				}
				this7.array[this7.pos++] = b;
				var this8 = _this.tmp;
				if(this8.pos == this8.array.length) {
					var newSize7 = this8.array.length << 1;
					if(newSize7 < 128) {
						newSize7 = 128;
					}
					var newArray7 = new Float32Array(newSize7);
					newArray7.set(this8.array);
					this8.array = newArray7;
				}
				this8.array[this8.pos++] = a;
				_this.bufferDirty = true;
				var _this1 = this.content;
				var x1 = p.x - nx;
				var y1 = p.y - ny;
				var r1 = p.r;
				var g1 = p.g;
				var b1 = p.b;
				var a1 = p.a;
				var this9 = _this1.tmp;
				if(this9.pos == this9.array.length) {
					var newSize8 = this9.array.length << 1;
					if(newSize8 < 128) {
						newSize8 = 128;
					}
					var newArray8 = new Float32Array(newSize8);
					newArray8.set(this9.array);
					this9.array = newArray8;
				}
				this9.array[this9.pos++] = x1;
				var this10 = _this1.tmp;
				if(this10.pos == this10.array.length) {
					var newSize9 = this10.array.length << 1;
					if(newSize9 < 128) {
						newSize9 = 128;
					}
					var newArray9 = new Float32Array(newSize9);
					newArray9.set(this10.array);
					this10.array = newArray9;
				}
				this10.array[this10.pos++] = y1;
				var this11 = _this1.tmp;
				if(this11.pos == this11.array.length) {
					var newSize10 = this11.array.length << 1;
					if(newSize10 < 128) {
						newSize10 = 128;
					}
					var newArray10 = new Float32Array(newSize10);
					newArray10.set(this11.array);
					this11.array = newArray10;
				}
				this11.array[this11.pos++] = 0;
				var this12 = _this1.tmp;
				if(this12.pos == this12.array.length) {
					var newSize11 = this12.array.length << 1;
					if(newSize11 < 128) {
						newSize11 = 128;
					}
					var newArray11 = new Float32Array(newSize11);
					newArray11.set(this12.array);
					this12.array = newArray11;
				}
				this12.array[this12.pos++] = 0;
				var this13 = _this1.tmp;
				if(this13.pos == this13.array.length) {
					var newSize12 = this13.array.length << 1;
					if(newSize12 < 128) {
						newSize12 = 128;
					}
					var newArray12 = new Float32Array(newSize12);
					newArray12.set(this13.array);
					this13.array = newArray12;
				}
				this13.array[this13.pos++] = r1;
				var this14 = _this1.tmp;
				if(this14.pos == this14.array.length) {
					var newSize13 = this14.array.length << 1;
					if(newSize13 < 128) {
						newSize13 = 128;
					}
					var newArray13 = new Float32Array(newSize13);
					newArray13.set(this14.array);
					this14.array = newArray13;
				}
				this14.array[this14.pos++] = g1;
				var this15 = _this1.tmp;
				if(this15.pos == this15.array.length) {
					var newSize14 = this15.array.length << 1;
					if(newSize14 < 128) {
						newSize14 = 128;
					}
					var newArray14 = new Float32Array(newSize14);
					newArray14.set(this15.array);
					this15.array = newArray14;
				}
				this15.array[this15.pos++] = b1;
				var this16 = _this1.tmp;
				if(this16.pos == this16.array.length) {
					var newSize15 = this16.array.length << 1;
					if(newSize15 < 128) {
						newSize15 = 128;
					}
					var newArray15 = new Float32Array(newSize15);
					newArray15.set(this16.array);
					this16.array = newArray15;
				}
				this16.array[this16.pos++] = a1;
				_this1.bufferDirty = true;
				var pnext = i == last ? start : this.pindex + 2;
				if(i < count - 1 || closed) {
					var _this2 = this.content;
					_this2.index.push(this.pindex);
					var _this3 = _this2.state;
					_this3.tail.count += 1;
					_this3.totalCount += 1;
					_this2.indexDirty = true;
					var _this4 = this.content;
					_this4.index.push(this.pindex + 1);
					var _this5 = _this4.state;
					_this5.tail.count += 1;
					_this5.totalCount += 1;
					_this4.indexDirty = true;
					var _this6 = this.content;
					_this6.index.push(pnext);
					var _this7 = _this6.state;
					_this7.tail.count += 1;
					_this7.totalCount += 1;
					_this6.indexDirty = true;
					var _this8 = this.content;
					_this8.index.push(this.pindex + 1);
					var _this9 = _this8.state;
					_this9.tail.count += 1;
					_this9.totalCount += 1;
					_this8.indexDirty = true;
					var _this10 = this.content;
					_this10.index.push(pnext);
					var _this11 = _this10.state;
					_this11.tail.count += 1;
					_this11.totalCount += 1;
					_this10.indexDirty = true;
					var _this12 = this.content;
					_this12.index.push(pnext + 1);
					var _this13 = _this12.state;
					_this13.tail.count += 1;
					_this13.totalCount += 1;
					_this12.indexDirty = true;
				}
				this.pindex += 2;
			} else {
				var n0x = next.x - p.x;
				var n0y = next.y - p.y;
				var sign = n0x * nx + n0y * ny;
				var nnx = -ny;
				var nny = nx;
				var size1 = nnx * nx1 * ns1 + nny * ny1 * ns1;
				var d1 = this.lineSize * 0.5 / size1;
				nnx *= d1;
				nny *= d1;
				var pnext1 = i == last ? start : this.pindex + 3;
				if(sign > 0) {
					var _this14 = this.content;
					var x2 = p.x + nx;
					var y2 = p.y + ny;
					var r2 = p.r;
					var g2 = p.g;
					var b2 = p.b;
					var a2 = p.a;
					var this17 = _this14.tmp;
					if(this17.pos == this17.array.length) {
						var newSize16 = this17.array.length << 1;
						if(newSize16 < 128) {
							newSize16 = 128;
						}
						var newArray16 = new Float32Array(newSize16);
						newArray16.set(this17.array);
						this17.array = newArray16;
					}
					this17.array[this17.pos++] = x2;
					var this18 = _this14.tmp;
					if(this18.pos == this18.array.length) {
						var newSize17 = this18.array.length << 1;
						if(newSize17 < 128) {
							newSize17 = 128;
						}
						var newArray17 = new Float32Array(newSize17);
						newArray17.set(this18.array);
						this18.array = newArray17;
					}
					this18.array[this18.pos++] = y2;
					var this19 = _this14.tmp;
					if(this19.pos == this19.array.length) {
						var newSize18 = this19.array.length << 1;
						if(newSize18 < 128) {
							newSize18 = 128;
						}
						var newArray18 = new Float32Array(newSize18);
						newArray18.set(this19.array);
						this19.array = newArray18;
					}
					this19.array[this19.pos++] = 0;
					var this20 = _this14.tmp;
					if(this20.pos == this20.array.length) {
						var newSize19 = this20.array.length << 1;
						if(newSize19 < 128) {
							newSize19 = 128;
						}
						var newArray19 = new Float32Array(newSize19);
						newArray19.set(this20.array);
						this20.array = newArray19;
					}
					this20.array[this20.pos++] = 0;
					var this21 = _this14.tmp;
					if(this21.pos == this21.array.length) {
						var newSize20 = this21.array.length << 1;
						if(newSize20 < 128) {
							newSize20 = 128;
						}
						var newArray20 = new Float32Array(newSize20);
						newArray20.set(this21.array);
						this21.array = newArray20;
					}
					this21.array[this21.pos++] = r2;
					var this22 = _this14.tmp;
					if(this22.pos == this22.array.length) {
						var newSize21 = this22.array.length << 1;
						if(newSize21 < 128) {
							newSize21 = 128;
						}
						var newArray21 = new Float32Array(newSize21);
						newArray21.set(this22.array);
						this22.array = newArray21;
					}
					this22.array[this22.pos++] = g2;
					var this23 = _this14.tmp;
					if(this23.pos == this23.array.length) {
						var newSize22 = this23.array.length << 1;
						if(newSize22 < 128) {
							newSize22 = 128;
						}
						var newArray22 = new Float32Array(newSize22);
						newArray22.set(this23.array);
						this23.array = newArray22;
					}
					this23.array[this23.pos++] = b2;
					var this24 = _this14.tmp;
					if(this24.pos == this24.array.length) {
						var newSize23 = this24.array.length << 1;
						if(newSize23 < 128) {
							newSize23 = 128;
						}
						var newArray23 = new Float32Array(newSize23);
						newArray23.set(this24.array);
						this24.array = newArray23;
					}
					this24.array[this24.pos++] = a2;
					_this14.bufferDirty = true;
					var _this15 = this.content;
					var x3 = p.x - nnx;
					var y3 = p.y - nny;
					var r3 = p.r;
					var g3 = p.g;
					var b3 = p.b;
					var a3 = p.a;
					var this25 = _this15.tmp;
					if(this25.pos == this25.array.length) {
						var newSize24 = this25.array.length << 1;
						if(newSize24 < 128) {
							newSize24 = 128;
						}
						var newArray24 = new Float32Array(newSize24);
						newArray24.set(this25.array);
						this25.array = newArray24;
					}
					this25.array[this25.pos++] = x3;
					var this26 = _this15.tmp;
					if(this26.pos == this26.array.length) {
						var newSize25 = this26.array.length << 1;
						if(newSize25 < 128) {
							newSize25 = 128;
						}
						var newArray25 = new Float32Array(newSize25);
						newArray25.set(this26.array);
						this26.array = newArray25;
					}
					this26.array[this26.pos++] = y3;
					var this27 = _this15.tmp;
					if(this27.pos == this27.array.length) {
						var newSize26 = this27.array.length << 1;
						if(newSize26 < 128) {
							newSize26 = 128;
						}
						var newArray26 = new Float32Array(newSize26);
						newArray26.set(this27.array);
						this27.array = newArray26;
					}
					this27.array[this27.pos++] = 0;
					var this28 = _this15.tmp;
					if(this28.pos == this28.array.length) {
						var newSize27 = this28.array.length << 1;
						if(newSize27 < 128) {
							newSize27 = 128;
						}
						var newArray27 = new Float32Array(newSize27);
						newArray27.set(this28.array);
						this28.array = newArray27;
					}
					this28.array[this28.pos++] = 0;
					var this29 = _this15.tmp;
					if(this29.pos == this29.array.length) {
						var newSize28 = this29.array.length << 1;
						if(newSize28 < 128) {
							newSize28 = 128;
						}
						var newArray28 = new Float32Array(newSize28);
						newArray28.set(this29.array);
						this29.array = newArray28;
					}
					this29.array[this29.pos++] = r3;
					var this30 = _this15.tmp;
					if(this30.pos == this30.array.length) {
						var newSize29 = this30.array.length << 1;
						if(newSize29 < 128) {
							newSize29 = 128;
						}
						var newArray29 = new Float32Array(newSize29);
						newArray29.set(this30.array);
						this30.array = newArray29;
					}
					this30.array[this30.pos++] = g3;
					var this31 = _this15.tmp;
					if(this31.pos == this31.array.length) {
						var newSize30 = this31.array.length << 1;
						if(newSize30 < 128) {
							newSize30 = 128;
						}
						var newArray30 = new Float32Array(newSize30);
						newArray30.set(this31.array);
						this31.array = newArray30;
					}
					this31.array[this31.pos++] = b3;
					var this32 = _this15.tmp;
					if(this32.pos == this32.array.length) {
						var newSize31 = this32.array.length << 1;
						if(newSize31 < 128) {
							newSize31 = 128;
						}
						var newArray31 = new Float32Array(newSize31);
						newArray31.set(this32.array);
						this32.array = newArray31;
					}
					this32.array[this32.pos++] = a3;
					_this15.bufferDirty = true;
					var _this16 = this.content;
					var x4 = p.x + nnx;
					var y4 = p.y + nny;
					var r4 = p.r;
					var g4 = p.g;
					var b4 = p.b;
					var a4 = p.a;
					var this33 = _this16.tmp;
					if(this33.pos == this33.array.length) {
						var newSize32 = this33.array.length << 1;
						if(newSize32 < 128) {
							newSize32 = 128;
						}
						var newArray32 = new Float32Array(newSize32);
						newArray32.set(this33.array);
						this33.array = newArray32;
					}
					this33.array[this33.pos++] = x4;
					var this34 = _this16.tmp;
					if(this34.pos == this34.array.length) {
						var newSize33 = this34.array.length << 1;
						if(newSize33 < 128) {
							newSize33 = 128;
						}
						var newArray33 = new Float32Array(newSize33);
						newArray33.set(this34.array);
						this34.array = newArray33;
					}
					this34.array[this34.pos++] = y4;
					var this35 = _this16.tmp;
					if(this35.pos == this35.array.length) {
						var newSize34 = this35.array.length << 1;
						if(newSize34 < 128) {
							newSize34 = 128;
						}
						var newArray34 = new Float32Array(newSize34);
						newArray34.set(this35.array);
						this35.array = newArray34;
					}
					this35.array[this35.pos++] = 0;
					var this36 = _this16.tmp;
					if(this36.pos == this36.array.length) {
						var newSize35 = this36.array.length << 1;
						if(newSize35 < 128) {
							newSize35 = 128;
						}
						var newArray35 = new Float32Array(newSize35);
						newArray35.set(this36.array);
						this36.array = newArray35;
					}
					this36.array[this36.pos++] = 0;
					var this37 = _this16.tmp;
					if(this37.pos == this37.array.length) {
						var newSize36 = this37.array.length << 1;
						if(newSize36 < 128) {
							newSize36 = 128;
						}
						var newArray36 = new Float32Array(newSize36);
						newArray36.set(this37.array);
						this37.array = newArray36;
					}
					this37.array[this37.pos++] = r4;
					var this38 = _this16.tmp;
					if(this38.pos == this38.array.length) {
						var newSize37 = this38.array.length << 1;
						if(newSize37 < 128) {
							newSize37 = 128;
						}
						var newArray37 = new Float32Array(newSize37);
						newArray37.set(this38.array);
						this38.array = newArray37;
					}
					this38.array[this38.pos++] = g4;
					var this39 = _this16.tmp;
					if(this39.pos == this39.array.length) {
						var newSize38 = this39.array.length << 1;
						if(newSize38 < 128) {
							newSize38 = 128;
						}
						var newArray38 = new Float32Array(newSize38);
						newArray38.set(this39.array);
						this39.array = newArray38;
					}
					this39.array[this39.pos++] = b4;
					var this40 = _this16.tmp;
					if(this40.pos == this40.array.length) {
						var newSize39 = this40.array.length << 1;
						if(newSize39 < 128) {
							newSize39 = 128;
						}
						var newArray39 = new Float32Array(newSize39);
						newArray39.set(this40.array);
						this40.array = newArray39;
					}
					this40.array[this40.pos++] = a4;
					_this16.bufferDirty = true;
					var _this17 = this.content;
					_this17.index.push(this.pindex);
					var _this18 = _this17.state;
					_this18.tail.count += 1;
					_this18.totalCount += 1;
					_this17.indexDirty = true;
					var _this19 = this.content;
					_this19.index.push(pnext1);
					var _this20 = _this19.state;
					_this20.tail.count += 1;
					_this20.totalCount += 1;
					_this19.indexDirty = true;
					var _this21 = this.content;
					_this21.index.push(this.pindex + 2);
					var _this22 = _this21.state;
					_this22.tail.count += 1;
					_this22.totalCount += 1;
					_this21.indexDirty = true;
					var _this23 = this.content;
					_this23.index.push(this.pindex + 2);
					var _this24 = _this23.state;
					_this24.tail.count += 1;
					_this24.totalCount += 1;
					_this23.indexDirty = true;
					var _this25 = this.content;
					_this25.index.push(pnext1);
					var _this26 = _this25.state;
					_this26.tail.count += 1;
					_this26.totalCount += 1;
					_this25.indexDirty = true;
					var _this27 = this.content;
					_this27.index.push(pnext1 + 1);
					var _this28 = _this27.state;
					_this28.tail.count += 1;
					_this28.totalCount += 1;
					_this27.indexDirty = true;
				} else {
					var _this29 = this.content;
					var x5 = p.x + nnx;
					var y5 = p.y + nny;
					var r5 = p.r;
					var g5 = p.g;
					var b5 = p.b;
					var a5 = p.a;
					var this41 = _this29.tmp;
					if(this41.pos == this41.array.length) {
						var newSize40 = this41.array.length << 1;
						if(newSize40 < 128) {
							newSize40 = 128;
						}
						var newArray40 = new Float32Array(newSize40);
						newArray40.set(this41.array);
						this41.array = newArray40;
					}
					this41.array[this41.pos++] = x5;
					var this42 = _this29.tmp;
					if(this42.pos == this42.array.length) {
						var newSize41 = this42.array.length << 1;
						if(newSize41 < 128) {
							newSize41 = 128;
						}
						var newArray41 = new Float32Array(newSize41);
						newArray41.set(this42.array);
						this42.array = newArray41;
					}
					this42.array[this42.pos++] = y5;
					var this43 = _this29.tmp;
					if(this43.pos == this43.array.length) {
						var newSize42 = this43.array.length << 1;
						if(newSize42 < 128) {
							newSize42 = 128;
						}
						var newArray42 = new Float32Array(newSize42);
						newArray42.set(this43.array);
						this43.array = newArray42;
					}
					this43.array[this43.pos++] = 0;
					var this44 = _this29.tmp;
					if(this44.pos == this44.array.length) {
						var newSize43 = this44.array.length << 1;
						if(newSize43 < 128) {
							newSize43 = 128;
						}
						var newArray43 = new Float32Array(newSize43);
						newArray43.set(this44.array);
						this44.array = newArray43;
					}
					this44.array[this44.pos++] = 0;
					var this45 = _this29.tmp;
					if(this45.pos == this45.array.length) {
						var newSize44 = this45.array.length << 1;
						if(newSize44 < 128) {
							newSize44 = 128;
						}
						var newArray44 = new Float32Array(newSize44);
						newArray44.set(this45.array);
						this45.array = newArray44;
					}
					this45.array[this45.pos++] = r5;
					var this46 = _this29.tmp;
					if(this46.pos == this46.array.length) {
						var newSize45 = this46.array.length << 1;
						if(newSize45 < 128) {
							newSize45 = 128;
						}
						var newArray45 = new Float32Array(newSize45);
						newArray45.set(this46.array);
						this46.array = newArray45;
					}
					this46.array[this46.pos++] = g5;
					var this47 = _this29.tmp;
					if(this47.pos == this47.array.length) {
						var newSize46 = this47.array.length << 1;
						if(newSize46 < 128) {
							newSize46 = 128;
						}
						var newArray46 = new Float32Array(newSize46);
						newArray46.set(this47.array);
						this47.array = newArray46;
					}
					this47.array[this47.pos++] = b5;
					var this48 = _this29.tmp;
					if(this48.pos == this48.array.length) {
						var newSize47 = this48.array.length << 1;
						if(newSize47 < 128) {
							newSize47 = 128;
						}
						var newArray47 = new Float32Array(newSize47);
						newArray47.set(this48.array);
						this48.array = newArray47;
					}
					this48.array[this48.pos++] = a5;
					_this29.bufferDirty = true;
					var _this30 = this.content;
					var x6 = p.x - nx;
					var y6 = p.y - ny;
					var r6 = p.r;
					var g6 = p.g;
					var b6 = p.b;
					var a6 = p.a;
					var this49 = _this30.tmp;
					if(this49.pos == this49.array.length) {
						var newSize48 = this49.array.length << 1;
						if(newSize48 < 128) {
							newSize48 = 128;
						}
						var newArray48 = new Float32Array(newSize48);
						newArray48.set(this49.array);
						this49.array = newArray48;
					}
					this49.array[this49.pos++] = x6;
					var this50 = _this30.tmp;
					if(this50.pos == this50.array.length) {
						var newSize49 = this50.array.length << 1;
						if(newSize49 < 128) {
							newSize49 = 128;
						}
						var newArray49 = new Float32Array(newSize49);
						newArray49.set(this50.array);
						this50.array = newArray49;
					}
					this50.array[this50.pos++] = y6;
					var this51 = _this30.tmp;
					if(this51.pos == this51.array.length) {
						var newSize50 = this51.array.length << 1;
						if(newSize50 < 128) {
							newSize50 = 128;
						}
						var newArray50 = new Float32Array(newSize50);
						newArray50.set(this51.array);
						this51.array = newArray50;
					}
					this51.array[this51.pos++] = 0;
					var this52 = _this30.tmp;
					if(this52.pos == this52.array.length) {
						var newSize51 = this52.array.length << 1;
						if(newSize51 < 128) {
							newSize51 = 128;
						}
						var newArray51 = new Float32Array(newSize51);
						newArray51.set(this52.array);
						this52.array = newArray51;
					}
					this52.array[this52.pos++] = 0;
					var this53 = _this30.tmp;
					if(this53.pos == this53.array.length) {
						var newSize52 = this53.array.length << 1;
						if(newSize52 < 128) {
							newSize52 = 128;
						}
						var newArray52 = new Float32Array(newSize52);
						newArray52.set(this53.array);
						this53.array = newArray52;
					}
					this53.array[this53.pos++] = r6;
					var this54 = _this30.tmp;
					if(this54.pos == this54.array.length) {
						var newSize53 = this54.array.length << 1;
						if(newSize53 < 128) {
							newSize53 = 128;
						}
						var newArray53 = new Float32Array(newSize53);
						newArray53.set(this54.array);
						this54.array = newArray53;
					}
					this54.array[this54.pos++] = g6;
					var this55 = _this30.tmp;
					if(this55.pos == this55.array.length) {
						var newSize54 = this55.array.length << 1;
						if(newSize54 < 128) {
							newSize54 = 128;
						}
						var newArray54 = new Float32Array(newSize54);
						newArray54.set(this55.array);
						this55.array = newArray54;
					}
					this55.array[this55.pos++] = b6;
					var this56 = _this30.tmp;
					if(this56.pos == this56.array.length) {
						var newSize55 = this56.array.length << 1;
						if(newSize55 < 128) {
							newSize55 = 128;
						}
						var newArray55 = new Float32Array(newSize55);
						newArray55.set(this56.array);
						this56.array = newArray55;
					}
					this56.array[this56.pos++] = a6;
					_this30.bufferDirty = true;
					var _this31 = this.content;
					var x7 = p.x - nnx;
					var y7 = p.y - nny;
					var r7 = p.r;
					var g7 = p.g;
					var b7 = p.b;
					var a7 = p.a;
					var this57 = _this31.tmp;
					if(this57.pos == this57.array.length) {
						var newSize56 = this57.array.length << 1;
						if(newSize56 < 128) {
							newSize56 = 128;
						}
						var newArray56 = new Float32Array(newSize56);
						newArray56.set(this57.array);
						this57.array = newArray56;
					}
					this57.array[this57.pos++] = x7;
					var this58 = _this31.tmp;
					if(this58.pos == this58.array.length) {
						var newSize57 = this58.array.length << 1;
						if(newSize57 < 128) {
							newSize57 = 128;
						}
						var newArray57 = new Float32Array(newSize57);
						newArray57.set(this58.array);
						this58.array = newArray57;
					}
					this58.array[this58.pos++] = y7;
					var this59 = _this31.tmp;
					if(this59.pos == this59.array.length) {
						var newSize58 = this59.array.length << 1;
						if(newSize58 < 128) {
							newSize58 = 128;
						}
						var newArray58 = new Float32Array(newSize58);
						newArray58.set(this59.array);
						this59.array = newArray58;
					}
					this59.array[this59.pos++] = 0;
					var this60 = _this31.tmp;
					if(this60.pos == this60.array.length) {
						var newSize59 = this60.array.length << 1;
						if(newSize59 < 128) {
							newSize59 = 128;
						}
						var newArray59 = new Float32Array(newSize59);
						newArray59.set(this60.array);
						this60.array = newArray59;
					}
					this60.array[this60.pos++] = 0;
					var this61 = _this31.tmp;
					if(this61.pos == this61.array.length) {
						var newSize60 = this61.array.length << 1;
						if(newSize60 < 128) {
							newSize60 = 128;
						}
						var newArray60 = new Float32Array(newSize60);
						newArray60.set(this61.array);
						this61.array = newArray60;
					}
					this61.array[this61.pos++] = r7;
					var this62 = _this31.tmp;
					if(this62.pos == this62.array.length) {
						var newSize61 = this62.array.length << 1;
						if(newSize61 < 128) {
							newSize61 = 128;
						}
						var newArray61 = new Float32Array(newSize61);
						newArray61.set(this62.array);
						this62.array = newArray61;
					}
					this62.array[this62.pos++] = g7;
					var this63 = _this31.tmp;
					if(this63.pos == this63.array.length) {
						var newSize62 = this63.array.length << 1;
						if(newSize62 < 128) {
							newSize62 = 128;
						}
						var newArray62 = new Float32Array(newSize62);
						newArray62.set(this63.array);
						this63.array = newArray62;
					}
					this63.array[this63.pos++] = b7;
					var this64 = _this31.tmp;
					if(this64.pos == this64.array.length) {
						var newSize63 = this64.array.length << 1;
						if(newSize63 < 128) {
							newSize63 = 128;
						}
						var newArray63 = new Float32Array(newSize63);
						newArray63.set(this64.array);
						this64.array = newArray63;
					}
					this64.array[this64.pos++] = a7;
					_this31.bufferDirty = true;
					var _this32 = this.content;
					_this32.index.push(this.pindex + 1);
					var _this33 = _this32.state;
					_this33.tail.count += 1;
					_this33.totalCount += 1;
					_this32.indexDirty = true;
					var _this34 = this.content;
					_this34.index.push(pnext1);
					var _this35 = _this34.state;
					_this35.tail.count += 1;
					_this35.totalCount += 1;
					_this34.indexDirty = true;
					var _this36 = this.content;
					_this36.index.push(this.pindex + 2);
					var _this37 = _this36.state;
					_this37.tail.count += 1;
					_this37.totalCount += 1;
					_this36.indexDirty = true;
					var _this38 = this.content;
					_this38.index.push(this.pindex + 1);
					var _this39 = _this38.state;
					_this39.tail.count += 1;
					_this39.totalCount += 1;
					_this38.indexDirty = true;
					var _this40 = this.content;
					_this40.index.push(pnext1);
					var _this41 = _this40.state;
					_this41.tail.count += 1;
					_this41.totalCount += 1;
					_this40.indexDirty = true;
					var _this42 = this.content;
					_this42.index.push(pnext1 + 1);
					var _this43 = _this42.state;
					_this43.tail.count += 1;
					_this43.totalCount += 1;
					_this42.indexDirty = true;
				}
				var _this44 = this.content;
				_this44.index.push(this.pindex);
				var _this45 = _this44.state;
				_this45.tail.count += 1;
				_this45.totalCount += 1;
				_this44.indexDirty = true;
				var _this46 = this.content;
				_this46.index.push(this.pindex + 1);
				var _this47 = _this46.state;
				_this47.tail.count += 1;
				_this47.totalCount += 1;
				_this46.indexDirty = true;
				var _this48 = this.content;
				_this48.index.push(this.pindex + 2);
				var _this49 = _this48.state;
				_this49.tail.count += 1;
				_this49.totalCount += 1;
				_this48.indexDirty = true;
				this.pindex += 3;
			}
			prev = p;
			p = next;
		}
		this.content.setTile(this.tile);
	}
	,flushFill: function(i0) {
		if(this.tmpPoints.length < 3) {
			return;
		}
		var pts = this.tmpPoints;
		var p0 = pts[0];
		var p1 = pts[pts.length - 1];
		var last = null;
		var tmp;
		var f = p0.x - p1.x;
		if((f < 0 ? -f : f) < 1e-9) {
			var f = p0.y - p1.y;
			tmp = (f < 0 ? -f : f) < 1e-9;
		} else {
			tmp = false;
		}
		if(tmp) {
			last = pts.pop();
		}
		if(this.isConvex(pts)) {
			var _g = 1;
			var _g1 = pts.length - 1;
			while(_g < _g1) {
				var i = _g++;
				var _this = this.content;
				_this.index.push(i0);
				var _this1 = _this.state;
				_this1.tail.count += 1;
				_this1.totalCount += 1;
				_this.indexDirty = true;
				var _this2 = this.content;
				_this2.index.push(i0 + i);
				var _this3 = _this2.state;
				_this3.tail.count += 1;
				_this3.totalCount += 1;
				_this2.indexDirty = true;
				var _this4 = this.content;
				_this4.index.push(i0 + i + 1);
				var _this5 = _this4.state;
				_this5.tail.count += 1;
				_this5.totalCount += 1;
				_this4.indexDirty = true;
			}
		} else {
			var ear = h2d_Graphics.EARCUT;
			if(ear == null) {
				ear = new hxd_earcut_Earcut();
				h2d_Graphics.EARCUT = ear;
			}
			var _g = 0;
			var _g1 = ear.triangulate_h2d_GPoint(pts);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				var _this = this.content;
				_this.index.push(i + i0);
				var _this1 = _this.state;
				_this1.tail.count += 1;
				_this1.totalCount += 1;
				_this.indexDirty = true;
			}
		}
		if(last != null) {
			pts.push(last);
		}
	}
	,flush: function() {
		if(this.tmpPoints.length == 0) {
			return;
		}
		if(this.doFill) {
			this.flushFill(this.pindex);
			this.pindex += this.tmpPoints.length;
			if(this.content.next()) {
				this.pindex = 0;
			}
		}
		if(this.lineSize > 0) {
			this.flushLine(this.pindex);
			if(this.content.next()) {
				this.pindex = 0;
			}
		}
		this.tmpPoints = [];
	}
	,beginFill: function(color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		if(color == null) {
			color = 0;
		}
		this.flush();
		this.tile = h2d_Tile.fromColor(16777215);
		this.content.setTile(this.tile);
		var alpha1 = alpha;
		if(alpha1 == null) {
			alpha1 = 1.;
		}
		this.curA = alpha1;
		this.curR = (color >> 16 & 255) / 255.;
		this.curG = (color >> 8 & 255) / 255.;
		this.curB = (color & 255) / 255.;
		this.doFill = true;
	}
	,beginTileFill: function(dx,dy,scaleX,scaleY,tile) {
		if(tile == null) {
			tile = this.tile;
		}
		if(tile == null) {
			throw haxe_Exception.thrown("Tile not specified");
		}
		this.flush();
		this.tile = tile;
		this.content.setTile(tile);
		this.curA = 1.;
		this.curR = 1.;
		this.curG = 1.;
		this.curB = 1.;
		this.doFill = true;
		if(dx == null) {
			dx = 0;
		}
		if(dy == null) {
			dy = 0;
		}
		if(scaleX == null) {
			scaleX = 1;
		}
		if(scaleY == null) {
			scaleY = 1;
		}
		dx -= tile.x;
		dy -= tile.y;
		var tex = tile.innerTex;
		var pixWidth = 1 / tex.width;
		var pixHeight = 1 / tex.height;
		this.ma = pixWidth / scaleX;
		this.mb = 0;
		this.mc = 0;
		this.md = pixHeight / scaleY;
		this.mx = -dx * this.ma;
		this.my = -dy * this.md;
	}
	,lineStyle: function(size,color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		if(color == null) {
			color = 0;
		}
		if(size == null) {
			size = 0;
		}
		this.flush();
		this.lineSize = size;
		this.lineA = alpha;
		this.lineR = (color >> 16 & 255) / 255.;
		this.lineG = (color >> 8 & 255) / 255.;
		this.lineB = (color & 255) / 255.;
	}
	,endFill: function() {
		this.flush();
		this.doFill = false;
	}
	,drawRect: function(x,y,w,h) {
		this.flush();
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		var x1 = x + w;
		this.addVertex(x1,y,this.curR,this.curG,this.curB,this.curA,x1 * this.ma + y * this.mc + this.mx,x1 * this.mb + y * this.md + this.my);
		var x1 = x + w;
		var y1 = y + h;
		this.addVertex(x1,y1,this.curR,this.curG,this.curB,this.curA,x1 * this.ma + y1 * this.mc + this.mx,x1 * this.mb + y1 * this.md + this.my);
		var y1 = y + h;
		this.addVertex(x,y1,this.curR,this.curG,this.curB,this.curA,x * this.ma + y1 * this.mc + this.mx,x * this.mb + y1 * this.md + this.my);
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		var e = 0.01;
		this.tmpPoints[0].x += e;
		this.tmpPoints[0].y += e;
		this.tmpPoints[1].y += e;
		this.tmpPoints[3].x += e;
		this.tmpPoints[4].x += e;
		this.tmpPoints[4].y += e;
		this.flush();
	}
	,drawCircle: function(cx,cy,radius,nsegments) {
		if(nsegments == null) {
			nsegments = 0;
		}
		this.flush();
		if(nsegments == 0) {
			var f = radius * 3.14 * 2 / 4;
			nsegments = Math.ceil(f < 0 ? -f : f);
		}
		if(nsegments < 3) {
			nsegments = 3;
		}
		var angle = 6.2831853071795862 / nsegments;
		var _g = 0;
		var _g1 = nsegments + 1;
		while(_g < _g1) {
			var i = _g++;
			var a = i * angle;
			var x = cx + Math.cos(a) * radius;
			var y = cy + Math.sin(a) * radius;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		this.flush();
	}
	,drawPie: function(cx,cy,radius,angleStart,angleLength,nsegments) {
		if(nsegments == null) {
			nsegments = 0;
		}
		if((angleLength < 0 ? -angleLength : angleLength) >= 6.2831853071795862) {
			this.drawCircle(cx,cy,radius,nsegments);
			return;
		}
		this.flush();
		this.addVertex(cx,cy,this.curR,this.curG,this.curB,this.curA,cx * this.ma + cy * this.mc + this.mx,cx * this.mb + cy * this.md + this.my);
		if(nsegments == 0) {
			var f = radius * angleLength / 4;
			nsegments = Math.ceil(f < 0 ? -f : f);
		}
		if(nsegments < 3) {
			nsegments = 3;
		}
		var angle = angleLength / (nsegments - 1);
		var _g = 0;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			var a = i * angle + angleStart;
			var x = cx + Math.cos(a) * radius;
			var y = cy + Math.sin(a) * radius;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		this.addVertex(cx,cy,this.curR,this.curG,this.curB,this.curA,cx * this.ma + cy * this.mc + this.mx,cx * this.mb + cy * this.md + this.my);
		this.flush();
	}
	,drawPieInner: function(cx,cy,radius,innerRadius,angleStart,angleLength,nsegments) {
		if(nsegments == null) {
			nsegments = 0;
		}
		this.flush();
		if((angleLength < 0 ? -angleLength : angleLength) >= 6.2841853071795866) {
			angleLength = 6.2841853071795866;
		}
		var cs = Math.cos(angleStart);
		var ss = Math.sin(angleStart);
		var ce = Math.cos(angleStart + angleLength);
		var se = Math.sin(angleStart + angleLength);
		var x = cx + cs * innerRadius;
		var y = cy + ss * innerRadius;
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		if(nsegments == 0) {
			var f = radius * angleLength / 4;
			nsegments = Math.ceil(f < 0 ? -f : f);
		}
		if(nsegments < 3) {
			nsegments = 3;
		}
		var angle = angleLength / (nsegments - 1);
		var _g = 0;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			var a = i * angle + angleStart;
			var x = cx + Math.cos(a) * radius;
			var y = cy + Math.sin(a) * radius;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		var x = cx + ce * innerRadius;
		var y = cy + se * innerRadius;
		this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		var _g = 0;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			var a = (nsegments - 1 - i) * angle + angleStart;
			var x = cx + Math.cos(a) * innerRadius;
			var y = cy + Math.sin(a) * innerRadius;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		this.flush();
	}
	,curveTo: function(bx,by,cx,cy) {
		var ax = this.tmpPoints.length == 0 ? 0 : this.tmpPoints[this.tmpPoints.length - 1].x;
		var ay = this.tmpPoints.length == 0 ? 0 : this.tmpPoints[this.tmpPoints.length - 1].y;
		var t = 0.66666666666666663;
		this.cubicCurveTo(ax + t * (bx - ax),ay + t * (by - ay),cx + t * (bx - cx),cy + t * (by - cy),cx,cy);
	}
	,cubicCurveTo: function(bx,by,cx,cy,dx,dy,nsegments) {
		if(nsegments == null) {
			nsegments = 40;
		}
		var ax = this.tmpPoints.length == 0 ? 0 : this.tmpPoints[this.tmpPoints.length - 1].x;
		var ay = this.tmpPoints.length == 0 ? 0 : this.tmpPoints[this.tmpPoints.length - 1].y;
		var tobx = bx - ax;
		var toby = by - ay;
		var tocx = cx - bx;
		var tocy = cy - by;
		var todx = dx - cx;
		var tody = dy - cy;
		var step = 1 / nsegments;
		var _g = 1;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			var d = i * step;
			var px = ax + d * tobx;
			var py = ay + d * toby;
			var qx = bx + d * tocx;
			var qy = by + d * tocy;
			var rx = cx + d * todx;
			var ry = cy + d * tody;
			var toqx = qx - px;
			var toqy = qy - py;
			var torx = rx - qx;
			var tory = ry - qy;
			var sx = px + d * toqx;
			var sy = py + d * toqy;
			var tx = qx + d * torx;
			var ty = qy + d * tory;
			var totx = tx - sx;
			var toty = ty - sy;
			var x = sx + d * totx;
			var y = sy + d * toty;
			this.addVertex(x,y,this.curR,this.curG,this.curB,this.curA,x * this.ma + y * this.mc + this.mx,x * this.mb + y * this.md + this.my);
		}
		this.addVertex(dx,dy,this.curR,this.curG,this.curB,this.curA,dx * this.ma + dy * this.mc + this.mx,dx * this.mb + dy * this.md + this.my);
	}
	,addVertex: function(x,y,r,g,b,a,u,v) {
		if(v == null) {
			v = 0.;
		}
		if(u == null) {
			u = 0.;
		}
		var half = this.lineSize / 2.0;
		if(x - half < this.xMin) {
			this.xMin = x - half;
		}
		if(y - half < this.yMin) {
			this.yMin = y - half;
		}
		if(x + half > this.xMax) {
			this.xMax = x + half;
		}
		if(y + half > this.yMax) {
			this.yMax = y + half;
		}
		if(x < this.xMinSize) {
			this.xMinSize = x;
		}
		if(y < this.yMinSize) {
			this.yMinSize = y;
		}
		if(x > this.xMaxSize) {
			this.xMaxSize = x;
		}
		if(y > this.yMaxSize) {
			this.yMaxSize = y;
		}
		if(this.doFill) {
			var _this = this.content;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = x;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = y;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = u;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = v;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = r;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = g;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = b;
			var this1 = _this.tmp;
			if(this1.pos == this1.array.length) {
				var newSize = this1.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(this1.array);
				this1.array = newArray;
			}
			this1.array[this1.pos++] = a;
			_this.bufferDirty = true;
		}
		var gp = new h2d_GPoint();
		gp.load(x,y,this.lineR,this.lineG,this.lineB,this.lineA);
		this.tmpPoints.push(gp);
	}
	,draw: function(ctx) {
		if(!ctx.beginDrawBatchState(this)) {
			return;
		}
		this.content.doRender(ctx);
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		this.flush();
		this.content.flush();
	}
	,__class__: h2d_Graphics
});
var hxd_Interactive = function() { };
$hxClasses["hxd.Interactive"] = hxd_Interactive;
hxd_Interactive.__name__ = "hxd.Interactive";
hxd_Interactive.__isInterface__ = true;
hxd_Interactive.prototype = {
	cursor: null
	,handleEvent: null
	,getInteractiveScene: null
	,__class__: hxd_Interactive
};
var h2d_Interactive = function(width,height,parent,shape) {
	this.shapeY = 0;
	this.shapeX = 0;
	this.lastClickFrame = -1;
	this.mouseDownButton = -1;
	this.allowMultiClick = false;
	this.enableRightButton = false;
	this.propagateEvents = false;
	this.cancelEvents = false;
	this.cursor = hxd_Cursor.Button;
	h2d_Object.call(this,parent);
	this.width = width;
	this.height = height;
	this.shape = shape;
};
$hxClasses["h2d.Interactive"] = h2d_Interactive;
h2d_Interactive.__name__ = "h2d.Interactive";
h2d_Interactive.__interfaces__ = [hxd_Interactive];
h2d_Interactive.__super__ = h2d_Object;
h2d_Interactive.prototype = $extend(h2d_Object.prototype,{
	width: null
	,height: null
	,cursor: null
	,isEllipse: null
	,cancelEvents: null
	,propagateEvents: null
	,enableRightButton: null
	,allowMultiClick: null
	,backgroundColor: null
	,scene: null
	,mouseDownButton: null
	,lastClickFrame: null
	,invDet: null
	,maskedBounds: null
	,shape: null
	,shapeX: null
	,shapeY: null
	,onAdd: function() {
		this.scene = this.getScene();
		if(this.scene != null) {
			this.scene.addEventTarget(this);
		}
		h2d_Object.prototype.onAdd.call(this);
	}
	,draw: function(ctx) {
		this.maskedBounds = ctx.getCurrentRenderZone(this.maskedBounds);
		if(this.backgroundColor != null) {
			this.emitTile(ctx,h2d_Tile.fromColor(this.backgroundColor,this.width | 0,this.height | 0,(this.backgroundColor >>> 24) / 255));
		}
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Object.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.backgroundColor != null || forSize) {
			this.addBounds(relativeTo,out,0,0,this.width | 0,this.height | 0);
		}
	}
	,onHierarchyMoved: function(parentChanged) {
		h2d_Object.prototype.onHierarchyMoved.call(this,parentChanged);
		if(this.scene != null) {
			this.scene.removeEventTarget(this);
			this.scene = this.getScene();
			if(this.scene != null) {
				this.scene.addEventTarget(this);
			}
		}
	}
	,onRemove: function() {
		if(this.scene != null) {
			this.scene.removeEventTarget(this,true);
			this.scene = null;
		}
		h2d_Object.prototype.onRemove.call(this);
	}
	,checkBounds: function(e) {
		switch(e.kind._hx_index) {
		case 4:case 6:case 7:case 10:
			return false;
		default:
			return true;
		}
	}
	,getInteractiveScene: function() {
		return this.scene;
	}
	,handleEvent: function(e) {
		if(this.maskedBounds != null && this.checkBounds(e)) {
			var pt = new h2d_col_Point(e.relX,e.relY);
			this.localToGlobal(pt);
			if(pt.x < this.maskedBounds.xMin || pt.y < this.maskedBounds.yMin || pt.x > this.maskedBounds.xMax || pt.y > this.maskedBounds.yMax) {
				e.cancel = true;
				return;
			}
		}
		if(this.shape == null && this.isEllipse && this.checkBounds(e)) {
			var cx = this.width * 0.5;
			var cy = this.height * 0.5;
			var dx = (e.relX - cx) / cx;
			var dy = (e.relY - cy) / cy;
			if(dx * dx + dy * dy > 1) {
				e.cancel = true;
				return;
			}
		}
		if(this.propagateEvents) {
			e.propagate = true;
		}
		if(this.cancelEvents) {
			e.cancel = true;
		}
		switch(e.kind._hx_index) {
		case 0:
			if(this.enableRightButton || e.button == 0) {
				this.mouseDownButton = e.button;
				this.onPush(e);
				if(e.cancel) {
					this.mouseDownButton = -1;
				}
			}
			break;
		case 1:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				var frame = hxd_Timer.frameCount;
				if(this.mouseDownButton == e.button && (this.lastClickFrame != frame || this.allowMultiClick)) {
					this.onClick(e);
					this.lastClickFrame = frame;
				}
			}
			this.mouseDownButton = -1;
			break;
		case 2:
			this.onMove(e);
			break;
		case 3:
			this.onOver(e);
			break;
		case 4:
			this.onOut(e);
			break;
		case 5:
			e.propagate = true;
			this.onWheel(e);
			break;
		case 6:
			this.onFocus(e);
			break;
		case 7:
			this.onFocusLost(e);
			break;
		case 8:
			this.onKeyDown(e);
			break;
		case 9:
			this.onKeyUp(e);
			break;
		case 10:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				if(this.mouseDownButton == e.button) {
					this.onReleaseOutside(e);
				}
			}
			this.mouseDownButton = -1;
			break;
		case 11:
			this.onTextInput(e);
			break;
		case 12:
			this.onCheck(e);
			break;
		}
	}
	,calcAbsPos: function() {
		h2d_Object.prototype.calcAbsPos.call(this);
		this.invDet = 1 / (this.matA * this.matD - this.matB * this.matC);
	}
	,set_cursor: function(c) {
		this.cursor = c;
		if(this.scene != null && this.scene.events != null) {
			this.scene.events.updateCursor(this);
		}
		return c;
	}
	,focus: function() {
		if(this.scene == null || this.scene.events == null) {
			return;
		}
		this.scene.events.focus(this);
	}
	,blur: function() {
		if(this.hasFocus()) {
			this.scene.events.blur();
		}
	}
	,hasFocus: function() {
		if(this.scene != null && this.scene.events != null) {
			return this.scene.events.currentFocus == this;
		} else {
			return false;
		}
	}
	,onOver: function(e) {
	}
	,onOut: function(e) {
	}
	,onPush: function(e) {
	}
	,onRelease: function(e) {
	}
	,onReleaseOutside: function(e) {
	}
	,onClick: function(e) {
	}
	,onMove: function(e) {
	}
	,onWheel: function(e) {
	}
	,onFocus: function(e) {
	}
	,onFocusLost: function(e) {
	}
	,onKeyUp: function(e) {
	}
	,onKeyDown: function(e) {
	}
	,onCheck: function(e) {
	}
	,onTextInput: function(e) {
	}
	,__class__: h2d_Interactive
	,__properties__: $extend(h2d_Object.prototype.__properties__,{set_cursor:"set_cursor"})
});
var h2d_Layers = function(parent) {
	h2d_Object.call(this,parent);
	this.layersIndexes = [];
	this.layerCount = 0;
};
$hxClasses["h2d.Layers"] = h2d_Layers;
h2d_Layers.__name__ = "h2d.Layers";
h2d_Layers.__super__ = h2d_Object;
h2d_Layers.prototype = $extend(h2d_Object.prototype,{
	layersIndexes: null
	,layerCount: null
	,addChild: function(s) {
		this.add(s,-1);
	}
	,add: function(s,layer,index) {
		if(index == null) {
			index = -1;
		}
		if(layer == null) {
			layer = -1;
		}
		if(s.parent == this) {
			var old = s.allocated;
			s.allocated = false;
			this.removeChild(s);
			s.allocated = old;
		}
		if(layer == -1) {
			layer = this.layerCount == 0 ? 0 : this.layerCount - 1;
		}
		while(layer >= this.layerCount) this.layersIndexes[this.layerCount++] = this.children.length;
		if(index != -1) {
			if(layer == 0) {
				var b = this.layersIndexes[layer];
				var b1 = index > b ? b : index;
				h2d_Object.prototype.addChildAt.call(this,s,0 < b1 ? b1 : 0);
			} else if(index < 0) {
				h2d_Object.prototype.addChildAt.call(this,s,this.layersIndexes[layer - 1]);
			} else {
				var a = this.layersIndexes[layer - 1] + index;
				var b = this.layersIndexes[layer];
				h2d_Object.prototype.addChildAt.call(this,s,a > b ? b : a);
			}
		} else {
			h2d_Object.prototype.addChildAt.call(this,s,this.layersIndexes[layer]);
		}
		var _g = layer;
		var _g1 = this.layerCount;
		while(_g < _g1) {
			var i = _g++;
			this.layersIndexes[i]++;
		}
	}
	,addChildAt: function(s,index) {
		this.add(s,-1,index);
	}
	,removeChild: function(s) {
		var _g = 0;
		var _g1 = this.children.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.children[i] == s) {
				this.children.splice(i,1);
				if(s.allocated) {
					s.onRemove();
				}
				s.parent = null;
				s.posChanged = true;
				if(s.parentContainer != null) {
					s.setParentContainer(null);
				}
				var k = this.layerCount - 1;
				while(k >= 0 && this.layersIndexes[k] > i) {
					this.layersIndexes[k]--;
					--k;
				}
				if(this.parentContainer != null) {
					this.parentContainer.contentChanged(this);
				}
				break;
			}
		}
	}
	,__class__: h2d_Layers
});
var h2d_Mask = function(width,height,parent) {
	this.scrollY = 0;
	this.scrollX = 0;
	h2d_Object.call(this,parent);
	this.width = width;
	this.height = height;
};
$hxClasses["h2d.Mask"] = h2d_Mask;
h2d_Mask.__name__ = "h2d.Mask";
h2d_Mask.maskWith = function(ctx,object,width,height,scrollX,scrollY) {
	if(scrollY == null) {
		scrollY = 0;
	}
	if(scrollX == null) {
		scrollX = 0;
	}
	var x1 = object.absX + scrollX;
	var y1 = object.absY + scrollY;
	var x2 = width * object.matA + height * object.matC + x1;
	var y2 = width * object.matB + height * object.matD + y1;
	var tmp;
	if(x1 > x2) {
		tmp = x1;
		x1 = x2;
		x2 = tmp;
	}
	if(y1 > y2) {
		tmp = y1;
		y1 = y2;
		y2 = tmp;
	}
	ctx.clipRenderZone(x1,y1,x2 - x1,y2 - y1);
};
h2d_Mask.unmask = function(ctx) {
	ctx.popRenderZone();
};
h2d_Mask.__super__ = h2d_Object;
h2d_Mask.prototype = $extend(h2d_Object.prototype,{
	width: null
	,height: null
	,scrollX: null
	,scrollY: null
	,calcAbsPos: function() {
		h2d_Object.prototype.calcAbsPos.call(this);
		this.absX -= this.scrollX;
		this.absY -= this.scrollY;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		var xMin = out.xMin;
		var yMin = out.yMin;
		var xMax = out.xMax;
		var yMax = out.yMax;
		out.xMin = 1e20;
		out.yMin = 1e20;
		out.xMax = -1e20;
		out.yMax = -1e20;
		if(this.posChanged) {
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.posChanged = true;
			}
			this.posChanged = false;
		}
		this.addBounds(relativeTo,out,this.scrollX,this.scrollY,this.width,this.height);
		var bxMin = out.xMin;
		var byMin = out.yMin;
		var bxMax = out.xMax;
		var byMax = out.yMax;
		out.xMin = xMin;
		out.xMax = xMax;
		out.yMin = yMin;
		out.yMax = yMax;
		h2d_Object.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(out.xMin < bxMin) {
			out.xMin = xMin > bxMin ? bxMin : xMin;
		}
		if(out.yMin < byMin) {
			out.yMin = yMin > byMin ? byMin : yMin;
		}
		if(out.xMax > bxMax) {
			out.xMax = xMax < bxMax ? bxMax : xMax;
		}
		if(out.yMax > byMax) {
			out.yMax = yMax < byMax ? byMax : yMax;
		}
	}
	,drawRec: function(ctx) {
		h2d_Mask.maskWith(ctx,this,this.width,this.height,this.scrollX,this.scrollY);
		h2d_Object.prototype.drawRec.call(this,ctx);
		h2d_Mask.unmask(ctx);
	}
	,__class__: h2d_Mask
});
var h3d_impl_RenderContext = function() {
	this.engine = h3d_Engine.CURRENT;
	this.frame = 0;
	this.time = 0.;
	this.elapsedTime = 1. / hxd_System.getDefaultFrameRate();
	this.textures = new h3d_impl_TextureCache(this);
};
$hxClasses["h3d.impl.RenderContext"] = h3d_impl_RenderContext;
h3d_impl_RenderContext.__name__ = "h3d.impl.RenderContext";
h3d_impl_RenderContext.prototype = {
	engine: null
	,time: null
	,elapsedTime: null
	,frame: null
	,textures: null
	,__class__: h3d_impl_RenderContext
};
var h2d_RenderContext = function(scene) {
	this.renderZoneIndex = 0;
	this.renderZoneStack = [];
	this.tmpBounds = new h2d_col_Bounds();
	this.defaultSmooth = false;
	this.globalAlpha = 1.;
	h3d_impl_RenderContext.call(this);
	this.scene = scene;
	this.bufPos = 0;
	this.manager = new h3d_pass_ShaderManager();
	this.pass = new h3d_mat_Pass("",null);
	this.pass.depth(true,h3d_mat_Compare.Always);
	this.pass.set_culling(h3d_mat_Face.None);
	this.baseShader = new h3d_shader_Base2d();
	this.baseShader.setPriority(100);
	this.baseShader.zValue__ = 0.;
	this.baseShaderList = new hxsl_ShaderList(this.baseShader);
	this.targetsStack = [];
	this.targetsStackIndex = 0;
	this.cameraStack = [];
	this.cameraStackIndex = 0;
	this.filterStack = [];
	this.filterStackIndex = 0;
};
$hxClasses["h2d.RenderContext"] = h2d_RenderContext;
h2d_RenderContext.__name__ = "h2d.RenderContext";
h2d_RenderContext.__super__ = h3d_impl_RenderContext;
h2d_RenderContext.prototype = $extend(h3d_impl_RenderContext.prototype,{
	globalAlpha: null
	,bufPos: null
	,scene: null
	,defaultSmooth: null
	,killAlpha: null
	,front2back: null
	,onBeginDraw: null
	,onEnterFilter: null
	,onLeaveFilter: null
	,tmpBounds: null
	,texture: null
	,baseShader: null
	,manager: null
	,compiledShader: null
	,buffers: null
	,fixedBuffer: null
	,pass: null
	,currentShaders: null
	,baseShaderList: null
	,currentObj: null
	,stride: null
	,targetsStack: null
	,targetsStackIndex: null
	,cameraStack: null
	,cameraStackIndex: null
	,curTarget: null
	,renderZoneStack: null
	,renderZoneIndex: null
	,filterStack: null
	,filterStackIndex: null
	,inFilter: null
	,inFilterBlend: null
	,viewA: null
	,viewB: null
	,viewC: null
	,viewD: null
	,viewX: null
	,viewY: null
	,hasRenderZone: null
	,renderX: null
	,renderY: null
	,renderW: null
	,renderH: null
	,currentBlend: null
	,baseFlipY: null
	,targetFlipY: null
	,begin: function() {
		this.texture = null;
		this.currentObj = null;
		this.bufPos = 0;
		this.stride = 0;
		this.viewA = this.scene.viewportA;
		this.viewB = 0;
		this.viewC = 0;
		this.viewD = this.scene.viewportD;
		this.viewX = this.scene.viewportX;
		this.viewY = this.scene.viewportY;
		this.targetFlipY = this.engine.driver.hasFeature(h3d_impl_Feature.BottomLeftCoords) ? -1 : 1;
		this.baseFlipY = this.engine.getCurrentTarget() != null ? this.targetFlipY : 1;
		this.inFilter = null;
		this.manager.globals.set("time",this.time);
		this.manager.globals.set("global.time",this.time);
		var _this = this.baseShader;
		_this.constModified = true;
		_this.pixelAlign__ = false;
		var _this = this.baseShader.halfPixelInverse__;
		var x = 0.5 / this.engine.width;
		var y = 0.5 / this.engine.height;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _this = this.baseShader.viewportA__;
		var x = this.scene.viewportA;
		var y = 0;
		var z = this.scene.viewportX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = 0;
		var y = this.scene.viewportD * -this.baseFlipY;
		var z = this.scene.viewportY * -this.baseFlipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.filterMatrixA__;
		var x = 1;
		var y = 0;
		var z = 0;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.filterMatrixB__;
		var x = 0;
		var y = 1;
		var z = 0;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		this.baseShaderList.next = null;
		this.initShaders(this.baseShaderList);
		this.engine.selectMaterial(this.pass);
		this.textures.begin();
	}
	,initShaders: function(shaders) {
		this.currentShaders = shaders;
		this.compiledShader = this.manager.compileShaders(shaders);
		if(this.buffers == null) {
			this.buffers = new h3d_shader_Buffers(this.compiledShader);
		} else {
			var _this = this.buffers;
			var s = this.compiledShader;
			_this.vertex.grow(s.vertex);
			_this.fragment.grow(s.fragment);
		}
		this.manager.fillGlobals(this.buffers,this.compiledShader);
		this.engine.selectShader(this.compiledShader);
		this.engine.uploadShaderBuffers(this.buffers,0);
	}
	,end: function() {
		this.texture = null;
		this.currentObj = null;
		this.baseShaderList.next = null;
		if(this.targetsStackIndex != 0) {
			throw haxe_Exception.thrown("Missing popTarget()");
		}
		if(this.cameraStackIndex != 0) {
			throw haxe_Exception.thrown("Missing popCamera()");
		}
	}
	,pushCamera: function(cam) {
		var entry = this.cameraStack[this.cameraStackIndex++];
		if(entry == null) {
			entry = { va : 0, vb : 0, vc : 0, vd : 0, vx : 0, vy : 0};
			this.cameraStack.push(entry);
		}
		var tmpA = this.viewA;
		var tmpB = this.viewB;
		var tmpC = this.viewC;
		var tmpD = this.viewD;
		entry.va = tmpA;
		entry.vb = tmpB;
		entry.vc = tmpC;
		entry.vd = tmpD;
		entry.vx = this.viewX;
		entry.vy = this.viewY;
		this.viewA = cam.matA * tmpA + cam.matB * tmpC;
		this.viewB = cam.matA * tmpB + cam.matB * tmpD;
		this.viewC = cam.matC * tmpA + cam.matD * tmpC;
		this.viewD = cam.matC * tmpB + cam.matD * tmpD;
		this.viewX = cam.absX * tmpA + cam.absY * tmpC + this.viewX;
		this.viewY = cam.absX * tmpB + cam.absY * tmpD + this.viewY;
		var flipY = this.curTarget != null ? -this.targetFlipY : -this.baseFlipY;
		var _this = this.baseShader.viewportA__;
		var x = this.viewA;
		var y = this.viewC;
		var z = this.viewX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = this.viewB * flipY;
		var y = this.viewD * flipY;
		var z = this.viewY * flipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
	}
	,popCamera: function() {
		if(this.cameraStackIndex == 0) {
			throw haxe_Exception.thrown("Too many popCamera()");
		}
		var inf = this.cameraStack[--this.cameraStackIndex];
		this.viewA = inf.va;
		this.viewB = inf.vb;
		this.viewC = inf.vc;
		this.viewD = inf.vd;
		this.viewX = inf.vx;
		this.viewY = inf.vy;
		var flipY = this.curTarget != null ? -this.targetFlipY : -this.baseFlipY;
		var _this = this.baseShader.viewportA__;
		var x = this.viewA;
		var y = this.viewC;
		var z = this.viewX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = this.viewB * flipY;
		var y = this.viewD * flipY;
		var z = this.viewY * flipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
	}
	,pushFilter: function(spr) {
		if(this.filterStack.length == 0 && this.onEnterFilter != null) {
			if(!this.onEnterFilter(spr)) {
				return false;
			}
		}
		this.inFilter = this.filterStack[this.filterStackIndex++];
		if(this.inFilter == null) {
			this.inFilter = { spr : null, scaleX : 1, scaleY : 1};
			this.filterStack.push(this.inFilter);
		}
		this.inFilter.spr = spr;
		this.inFilter.scaleX = 1;
		this.inFilter.scaleY = 1;
		return true;
	}
	,setFilterScale: function(scaleX,scaleY) {
		if(this.inFilter != null) {
			this.inFilter.scaleX = scaleX;
			this.inFilter.scaleY = scaleY;
		}
	}
	,popFilter: function() {
		this.inFilter.spr = null;
		this.filterStackIndex--;
		if(this.filterStackIndex > 0) {
			this.inFilter = this.filterStack[this.filterStackIndex - 1];
		} else {
			this.inFilter = null;
			if(this.onLeaveFilter != null) {
				this.onLeaveFilter(this.filterStack[this.filterStackIndex].spr);
			}
		}
	}
	,pushTarget: function(t,startX,startY,width,height) {
		if(height == null) {
			height = -1;
		}
		if(width == null) {
			width = -1;
		}
		if(startY == null) {
			startY = 0;
		}
		if(startX == null) {
			startX = 0;
		}
		this.engine.pushTarget(t);
		this.initShaders(this.baseShaderList);
		var entry = this.targetsStack[this.targetsStackIndex++];
		if(entry == null) {
			entry = { t : null, va : 0, vb : 0, vc : 0, vd : 0, vx : 0, vy : 0, hasRZ : false, rzX : 0, rzY : 0, rzW : 0, rzH : 0};
			this.targetsStack.push(entry);
		}
		entry.t = this.curTarget;
		entry.va = this.viewA;
		entry.vb = this.viewB;
		entry.vc = this.viewC;
		entry.vd = this.viewD;
		entry.vx = this.viewX;
		entry.vy = this.viewY;
		entry.hasRZ = this.hasRenderZone;
		entry.rzX = this.renderX;
		entry.rzY = this.renderY;
		entry.rzW = this.renderW;
		entry.rzH = this.renderH;
		if(width < 0) {
			width = t == null ? this.scene.width : t.width;
		}
		if(height < 0) {
			height = t == null ? this.scene.height : t.height;
		}
		this.viewA = 2 / width;
		this.viewB = 0;
		this.viewC = 0;
		this.viewD = 2 / height;
		this.viewX = -1 - startX * this.viewA;
		this.viewY = -1 - startY * this.viewD;
		var _this = this.baseShader.halfPixelInverse__;
		var x = 0.5 / (t == null ? this.engine.width : t.width);
		var y = 0.5 / (t == null ? this.engine.height : t.height);
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _this = this.baseShader.viewportA__;
		var x = this.viewA;
		var y = this.viewC;
		var z = this.viewX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = this.viewB * -this.targetFlipY;
		var y = this.viewD * -this.targetFlipY;
		var z = this.viewY * -this.targetFlipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		this.curTarget = t;
		this.currentBlend = null;
		if(this.hasRenderZone) {
			this.hasRenderZone = false;
			this.engine.setRenderZone();
		}
	}
	,popTarget: function() {
		if(this.targetsStackIndex <= 0) {
			throw haxe_Exception.thrown("Too many popTarget()");
		}
		this.engine.popTarget();
		var tinf = this.targetsStack[--this.targetsStackIndex];
		var t = this.curTarget = tinf.t;
		this.viewA = tinf.va;
		this.viewB = tinf.vb;
		this.viewC = tinf.vc;
		this.viewD = tinf.vd;
		this.viewX = tinf.vx;
		this.viewY = tinf.vy;
		var flipY = t == null ? -this.baseFlipY : -this.targetFlipY;
		this.initShaders(this.baseShaderList);
		var _this = this.baseShader.halfPixelInverse__;
		var x = 0.5 / (t == null ? this.engine.width : t.width);
		var y = 0.5 / (t == null ? this.engine.height : t.height);
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _this = this.baseShader.viewportA__;
		var x = this.viewA;
		var y = this.viewC;
		var z = this.viewX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.viewportB__;
		var x = this.viewB * flipY;
		var y = this.viewD * flipY;
		var z = this.viewY * flipY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		if(tinf.hasRZ) {
			this.setRZ(tinf.rzX,tinf.rzY,tinf.rzW,tinf.rzH);
		}
	}
	,pushRenderZone: function(x,y,w,h) {
		var inf = this.renderZoneStack[this.renderZoneIndex++];
		if(inf == null) {
			inf = { hasRZ : this.hasRenderZone, x : this.renderX, y : this.renderY, w : this.renderW, h : this.renderH};
			this.renderZoneStack[this.renderZoneIndex - 1] = inf;
		} else if(this.hasRenderZone) {
			inf.hasRZ = true;
			inf.x = this.renderX;
			inf.y = this.renderY;
			inf.w = this.renderW;
			inf.h = this.renderH;
		} else {
			inf.hasRZ = false;
		}
		this.setRZ(x,y,w,h);
	}
	,popRenderZone: function() {
		if(this.renderZoneIndex == 0) {
			throw haxe_Exception.thrown("Too many popRenderZone()");
		}
		var inf = this.renderZoneStack[--this.renderZoneIndex];
		if(inf.hasRZ) {
			this.setRZ(inf.x,inf.y,inf.w,inf.h);
		} else {
			this.hasRenderZone = false;
			this.engine.setRenderZone();
		}
	}
	,getCurrentRenderZone: function(bounds) {
		if(!this.hasRenderZone) {
			return null;
		}
		if(bounds == null) {
			bounds = new h2d_col_Bounds();
		}
		var x = this.renderX;
		var y = this.renderY;
		bounds.xMin = x;
		bounds.yMin = y;
		bounds.xMax = x + this.renderW;
		bounds.yMax = y + this.renderH;
		return bounds;
	}
	,clipRenderZone: function(x,y,w,h) {
		if(!this.hasRenderZone) {
			this.pushRenderZone(x,y,w,h);
			return;
		}
		var x2 = Math.min(x + w,this.renderX + this.renderW);
		var y2 = Math.min(y + h,this.renderY + this.renderH);
		x = Math.max(x,this.renderX);
		y = Math.max(y,this.renderY);
		if(x2 < x) {
			x2 = x;
		}
		if(y2 < y) {
			y2 = y;
		}
		this.pushRenderZone(x,y,x2 - x,y2 - y);
	}
	,setRZ: function(x,y,w,h) {
		this.hasRenderZone = true;
		this.renderX = x;
		this.renderY = y;
		this.renderW = w;
		this.renderH = h;
		var scaleX = this.scene.viewportA * this.engine.width / 2;
		var scaleY = this.scene.viewportD * this.engine.height / 2;
		if(this.inFilter != null) {
			var fa = this.baseShader.filterMatrixA__;
			var fb = this.baseShader.filterMatrixB__;
			var x2 = x + w;
			var y2 = y + h;
			var rx1 = x * fa.x + y * fa.y + fa.z;
			var ry1 = x * fb.x + y * fb.y + fb.z;
			var rx2 = x2 * fa.x + y2 * fa.y + fa.z;
			var ry2 = x2 * fb.x + y2 * fb.y + fb.z;
			x = rx1;
			y = ry1;
			w = rx2 - rx1;
			h = ry2 - ry1;
		}
		this.engine.setRenderZone(x * scaleX + (this.scene.viewportX + 1) * (this.engine.width / 2) + 1e-10 | 0,y * scaleY + (this.scene.viewportY + 1) * (this.engine.height / 2) + 1e-10 | 0,w * scaleX + 1e-10 | 0,h * scaleY + 1e-10 | 0);
	}
	,drawScene: function() {
		this.scene.drawRec(this);
	}
	,beforeDraw: function() {
		if(this.texture == null) {
			this.texture = h3d_mat_Texture.fromColor(16711935);
		}
		this.baseShader.texture__ = this.texture;
		this.texture.set_filter((this.currentObj.smooth == null ? this.defaultSmooth : this.currentObj.smooth) ? h3d_mat_Filter.Linear : h3d_mat_Filter.Nearest);
		this.texture.set_wrap(this.currentObj.tileWrap && (this.currentObj.filter == null || this.inFilter != null) ? h3d_mat_Wrap.Repeat : h3d_mat_Wrap.Clamp);
		var blend = this.currentObj.blendMode;
		if(this.inFilter != null && this.inFilter.spr == this.currentObj && blend == h2d_BlendMode.Erase) {
			blend = h2d_BlendMode.Add;
		}
		if(this.inFilterBlend != null) {
			blend = this.inFilterBlend;
		}
		if(blend != this.currentBlend) {
			this.currentBlend = blend;
			this.pass.setBlendMode(blend);
			if(blend == h2d_BlendMode.Alpha || blend == h2d_BlendMode.Add) {
				this.pass.set_blendAlphaSrc(h3d_mat_Blend.One);
				if(this.inFilterBlend != null) {
					this.pass.set_blendSrc(h3d_mat_Blend.One);
				}
			}
		}
		this.manager.fillParams(this.buffers,this.compiledShader,this.currentShaders);
		this.engine.selectMaterial(this.pass);
		this.engine.uploadShaderBuffers(this.buffers,1);
		this.engine.uploadShaderBuffers(this.buffers,2);
		this.engine.uploadShaderBuffers(this.buffers,3);
	}
	,beginDrawBatchState: function(obj) {
		if(!this.beginDraw(obj,null,true)) {
			return false;
		}
		if(this.inFilter != null && this.inFilter.spr == obj) {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else if(this.inFilterBlend != null) {
			var _this = this.baseShader.color__;
			var x = this.globalAlpha;
			var y = this.globalAlpha;
			var z = this.globalAlpha;
			var w = this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w * this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		}
		var _this = this.baseShader.absoluteMatrixA__;
		var x = obj.matA;
		var y = obj.matC;
		var z = obj.absX;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.absoluteMatrixB__;
		var x = obj.matB;
		var y = obj.matD;
		var z = obj.absY;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		return true;
	}
	,drawTile: function(obj,tile) {
		var matA;
		var matB;
		var matC;
		var matD;
		var absX;
		var absY;
		if(this.inFilter != null) {
			var f1 = this.baseShader.filterMatrixA__;
			var f2 = this.baseShader.filterMatrixB__;
			var tmpA = obj.matA * f1.x + obj.matB * f1.y;
			var tmpB = obj.matA * f2.x + obj.matB * f2.y;
			var tmpC = obj.matC * f1.x + obj.matD * f1.y;
			var tmpD = obj.matC * f2.x + obj.matD * f2.y;
			var tmpX = obj.absX * f1.x + obj.absY * f1.y + f1.z;
			var tmpY = obj.absX * f2.x + obj.absY * f2.y + f2.z;
			matA = tmpA * this.viewA + tmpB * this.viewC;
			matB = tmpA * this.viewB + tmpB * this.viewD;
			matC = tmpC * this.viewA + tmpD * this.viewC;
			matD = tmpC * this.viewB + tmpD * this.viewD;
			absX = tmpX * this.viewA + tmpY * this.viewC + this.viewX;
			absY = tmpX * this.viewB + tmpY * this.viewD + this.viewY;
		} else {
			matA = obj.matA * this.viewA + obj.matB * this.viewC;
			matB = obj.matA * this.viewB + obj.matB * this.viewD;
			matC = obj.matC * this.viewA + obj.matD * this.viewC;
			matD = obj.matC * this.viewB + obj.matD * this.viewD;
			absX = obj.absX * this.viewA + obj.absY * this.viewC + this.viewX;
			absY = obj.absX * this.viewB + obj.absY * this.viewD + this.viewY;
		}
		if(matB == 0 && matC == 0) {
			var tx = tile.dx + tile.width * 0.5;
			var ty = tile.dy + tile.height * 0.5;
			var a = matA < 0 ? -matA : matA;
			var b = matD < 0 ? -matD : matD;
			var tr = (tile.width > tile.height ? tile.width : tile.height) * 1.5 * (a < b ? b : a);
			var cx = absX + tx * matA;
			var cy = absY + ty * matD;
			if(cx + tr < -1 || cx - tr > 1 || cy + tr < -1 || cy - tr > 1) {
				return false;
			}
		} else {
			var xMin = 1e20;
			var yMin = 1e20;
			var xMax = -1e20;
			var yMax = -1e20;
			var hw = tile.width * 0.5;
			var hh = tile.height * 0.5;
			var px = tile.dx * matA + tile.dy * matC;
			var py = tile.dx * matB + tile.dy * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			var x = tile.width;
			var px = (x + tile.dx) * matA + tile.dy * matC;
			var py = (x + tile.dx) * matB + tile.dy * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			var y = tile.height;
			var px = tile.dx * matA + (y + tile.dy) * matC;
			var py = tile.dx * matB + (y + tile.dy) * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			var x = tile.width;
			var y = tile.height;
			var px = (x + tile.dx) * matA + (y + tile.dy) * matC;
			var py = (x + tile.dx) * matB + (y + tile.dy) * matD;
			if(px < xMin) {
				xMin = px;
			}
			if(px > xMax) {
				xMax = px;
			}
			if(py < yMin) {
				yMin = py;
			}
			if(py > yMax) {
				yMax = py;
			}
			if(absX + xMax < -1 || absY + yMax < -1 || absX + xMin > 1 || absY + yMin > 1) {
				return false;
			}
		}
		if(!this.beginDraw(obj,tile.innerTex,true,true)) {
			return false;
		}
		if(this.inFilter != null && this.inFilter.spr == obj) {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else if(this.inFilterBlend != null) {
			var _this = this.baseShader.color__;
			var x = this.globalAlpha;
			var y = this.globalAlpha;
			var z = this.globalAlpha;
			var w = this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		} else {
			var _this = this.baseShader.color__;
			var x = obj.color.x;
			var y = obj.color.y;
			var z = obj.color.z;
			var w = obj.color.w * this.globalAlpha;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		}
		var _this = this.baseShader.absoluteMatrixA__;
		var x = tile.width * obj.matA;
		var y = tile.height * obj.matC;
		var z = obj.absX + tile.dx * obj.matA + tile.dy * obj.matC;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.absoluteMatrixB__;
		var x = tile.width * obj.matB;
		var y = tile.height * obj.matD;
		var z = obj.absY + tile.dx * obj.matB + tile.dy * obj.matD;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = 1.;
		var _this = this.baseShader.uvPos__;
		var x = tile.u;
		var y = tile.v;
		var z = tile.u2 - tile.u;
		var w = tile.v2 - tile.v;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = z;
		_this.w = w;
		this.beforeDraw();
		if(this.fixedBuffer == null || this.fixedBuffer.vbuf == null) {
			this.fixedBuffer = new h3d_Buffer(4,hxd_BufferFormat.get_XY_UV_RGBA());
			var k = hxd__$FloatBuffer_Float32Expand._new(0);
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 0;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			var v = 1;
			if(k.pos == k.array.length) {
				var newSize = k.array.length << 1;
				if(newSize < 128) {
					newSize = 128;
				}
				var newArray = new Float32Array(newSize);
				newArray.set(k.array);
				k.array = newArray;
			}
			k.array[k.pos++] = v;
			this.fixedBuffer.uploadFloats(k,0,4);
		}
		var _this = this.engine;
		var b = this.fixedBuffer;
		_this.renderBuffer(b,_this.mem.getQuadIndexes(b.vertices),2,0,-1);
		return true;
	}
	,beginDraw: function(obj,texture,isRelative,hasUVPos) {
		if(hasUVPos == null) {
			hasUVPos = false;
		}
		if(this.onBeginDraw != null && !this.onBeginDraw(obj)) {
			return false;
		}
		var stride = 8;
		var shaderChanged = false;
		var paramsChanged = false;
		var objShaders = obj.shaders;
		var curShaders = this.currentShaders.next;
		while(objShaders != null && curShaders != null) {
			var s = objShaders.s;
			var t = curShaders.s;
			objShaders = objShaders.next;
			curShaders = curShaders.next;
			var prevInst = t.instance;
			if(s != t) {
				paramsChanged = true;
			}
			s.updateConstants(this.manager.globals);
			if(s.instance != prevInst) {
				shaderChanged = true;
			}
		}
		if(objShaders != null || curShaders != null || this.baseShader.isRelative__ != isRelative || this.baseShader.hasUVPos__ != hasUVPos || this.baseShader.killAlpha__ != this.killAlpha) {
			shaderChanged = true;
		}
		if(shaderChanged) {
			var _this = this.baseShader;
			_this.constModified = true;
			_this.hasUVPos__ = hasUVPos;
			var _this = this.baseShader;
			_this.constModified = true;
			_this.isRelative__ = isRelative;
			var _this = this.baseShader;
			_this.constModified = true;
			_this.killAlpha__ = this.killAlpha;
			this.baseShader.updateConstants(this.manager.globals);
			this.baseShaderList.next = obj.shaders;
			this.initShaders(this.baseShaderList);
		} else if(paramsChanged) {
			if(this.currentShaders != this.baseShaderList) {
				throw haxe_Exception.thrown("!");
			}
			this.currentShaders.next = obj.shaders;
		}
		this.texture = texture;
		this.stride = stride;
		this.currentObj = obj;
		return true;
	}
	,__class__: h2d_RenderContext
});
var h2d_ScaleModeAlign = $hxEnums["h2d.ScaleModeAlign"] = { __ename__:"h2d.ScaleModeAlign",__constructs__:null
	,Left: {_hx_name:"Left",_hx_index:0,__enum__:"h2d.ScaleModeAlign",toString:$estr}
	,Right: {_hx_name:"Right",_hx_index:1,__enum__:"h2d.ScaleModeAlign",toString:$estr}
	,Center: {_hx_name:"Center",_hx_index:2,__enum__:"h2d.ScaleModeAlign",toString:$estr}
	,Top: {_hx_name:"Top",_hx_index:3,__enum__:"h2d.ScaleModeAlign",toString:$estr}
	,Bottom: {_hx_name:"Bottom",_hx_index:4,__enum__:"h2d.ScaleModeAlign",toString:$estr}
};
h2d_ScaleModeAlign.__constructs__ = [h2d_ScaleModeAlign.Left,h2d_ScaleModeAlign.Right,h2d_ScaleModeAlign.Center,h2d_ScaleModeAlign.Top,h2d_ScaleModeAlign.Bottom];
h2d_ScaleModeAlign.__empty_constructs__ = [h2d_ScaleModeAlign.Left,h2d_ScaleModeAlign.Right,h2d_ScaleModeAlign.Center,h2d_ScaleModeAlign.Top,h2d_ScaleModeAlign.Bottom];
var h2d_ScaleMode = $hxEnums["h2d.ScaleMode"] = { __ename__:"h2d.ScaleMode",__constructs__:null
	,Resize: {_hx_name:"Resize",_hx_index:0,__enum__:"h2d.ScaleMode",toString:$estr}
	,Stretch: ($_=function(width,height) { return {_hx_index:1,width:width,height:height,__enum__:"h2d.ScaleMode",toString:$estr}; },$_._hx_name="Stretch",$_.__params__ = ["width","height"],$_)
	,LetterBox: ($_=function(width,height,integerScale,horizontalAlign,verticalAlign) { return {_hx_index:2,width:width,height:height,integerScale:integerScale,horizontalAlign:horizontalAlign,verticalAlign:verticalAlign,__enum__:"h2d.ScaleMode",toString:$estr}; },$_._hx_name="LetterBox",$_.__params__ = ["width","height","integerScale","horizontalAlign","verticalAlign"],$_)
	,Fixed: ($_=function(width,height,zoom,horizontalAlign,verticalAlign) { return {_hx_index:3,width:width,height:height,zoom:zoom,horizontalAlign:horizontalAlign,verticalAlign:verticalAlign,__enum__:"h2d.ScaleMode",toString:$estr}; },$_._hx_name="Fixed",$_.__params__ = ["width","height","zoom","horizontalAlign","verticalAlign"],$_)
	,Zoom: ($_=function(level) { return {_hx_index:4,level:level,__enum__:"h2d.ScaleMode",toString:$estr}; },$_._hx_name="Zoom",$_.__params__ = ["level"],$_)
	,AutoZoom: ($_=function(minWidth,minHeight,integerScaling) { return {_hx_index:5,minWidth:minWidth,minHeight:minHeight,integerScaling:integerScaling,__enum__:"h2d.ScaleMode",toString:$estr}; },$_._hx_name="AutoZoom",$_.__params__ = ["minWidth","minHeight","integerScaling"],$_)
};
h2d_ScaleMode.__constructs__ = [h2d_ScaleMode.Resize,h2d_ScaleMode.Stretch,h2d_ScaleMode.LetterBox,h2d_ScaleMode.Fixed,h2d_ScaleMode.Zoom,h2d_ScaleMode.AutoZoom];
h2d_ScaleMode.__empty_constructs__ = [h2d_ScaleMode.Resize];
var hxd_InteractiveScene = function() { };
$hxClasses["hxd.InteractiveScene"] = hxd_InteractiveScene;
hxd_InteractiveScene.__name__ = "hxd.InteractiveScene";
hxd_InteractiveScene.__isInterface__ = true;
hxd_InteractiveScene.prototype = {
	setEvents: null
	,handleEvent: null
	,dispatchEvent: null
	,dispatchListeners: null
	,isInteractiveVisible: null
	,__class__: hxd_InteractiveScene
};
var h2d_Scene = function() {
	this.scaleMode = h2d_ScaleMode.Resize;
	h2d_Layers.call(this,null);
	var e = h3d_Engine.CURRENT;
	this.ctx = new h2d_RenderContext(this);
	this._cameras = [];
	new h2d_Camera(this);
	this.set_interactiveCamera(this._cameras[0]);
	this.width = e.width;
	this.height = e.height;
	this.viewportA = 2 / e.width;
	this.viewportD = 2 / e.height;
	this.viewportX = -1;
	this.viewportY = -1;
	this.viewportScaleX = 1;
	this.viewportScaleY = 1;
	this.offsetX = 0;
	this.offsetY = 0;
	this.interactive = [];
	this.eventListeners = [];
	this.shapePoint = new h2d_col_Point();
	this.window = hxd_Window.getInstance();
	this.posChanged = true;
};
$hxClasses["h2d.Scene"] = h2d_Scene;
h2d_Scene.__name__ = "h2d.Scene";
h2d_Scene.__interfaces__ = [hxd_InteractiveScene,h3d_IDrawable];
h2d_Scene.__super__ = h2d_Layers;
h2d_Scene.prototype = $extend(h2d_Layers.prototype,{
	width: null
	,height: null
	,viewportA: null
	,viewportD: null
	,viewportX: null
	,viewportY: null
	,offsetX: null
	,offsetY: null
	,viewportScaleX: null
	,viewportScaleY: null
	,scaleMode: null
	,_cameras: null
	,interactiveCamera: null
	,interactive: null
	,eventListeners: null
	,ctx: null
	,window: null
	,events: null
	,shapePoint: null
	,setEvents: function(events) {
		this.events = events;
	}
	,set_interactiveCamera: function(cam) {
		if(cam == null) {
			throw haxe_Exception.thrown("Interactive cammera cannot be null!");
		}
		if(cam.scene != this) {
			this.addCamera(cam);
		}
		return this.interactiveCamera = cam;
	}
	,addCamera: function(cam,pos) {
		if(cam.scene != null) {
			cam.scene.removeCamera(cam);
		}
		cam.scene = this;
		cam.posChanged = true;
		if(pos != null) {
			this._cameras.splice(pos,0,cam);
		} else {
			this._cameras.push(cam);
		}
	}
	,removeCamera: function(cam) {
		if(cam == this.interactiveCamera) {
			throw haxe_Exception.thrown("Current interactive Camera cannot be removed from camera list!");
		}
		cam.scene = null;
		HxOverrides.remove(this._cameras,cam);
	}
	,checkResize: function() {
		var _gthis = this;
		var engine = h3d_Engine.CURRENT;
		if(engine == null) {
			return;
		}
		var _g = this.scaleMode;
		switch(_g._hx_index) {
		case 0:
			var w = engine.width;
			var h = engine.height;
			if(w != _gthis.width || h != _gthis.height) {
				_gthis.width = w;
				_gthis.height = h;
				_gthis.posChanged = true;
			}
			_gthis.viewportScaleX = 1;
			_gthis.viewportScaleY = 1;
			_gthis.viewportA = 2 / _gthis.width;
			_gthis.viewportD = 2 / _gthis.height;
			_gthis.viewportX = -1;
			_gthis.viewportY = -1;
			break;
		case 1:
			var _width = _g.width;
			var _height = _g.height;
			if(_width != _gthis.width || _height != _gthis.height) {
				_gthis.width = _width;
				_gthis.height = _height;
				_gthis.posChanged = true;
			}
			_gthis.viewportScaleX = engine.width / _width;
			_gthis.viewportScaleY = engine.height / _height;
			_gthis.viewportA = 2 / _gthis.width;
			_gthis.viewportD = 2 / _gthis.height;
			_gthis.viewportX = -1;
			_gthis.viewportY = -1;
			break;
		case 2:
			var _width = _g.width;
			var _height = _g.height;
			var integerScale = _g.integerScale;
			var horizontalAlign = _g.horizontalAlign;
			var verticalAlign = _g.verticalAlign;
			if(_width != _gthis.width || _height != _gthis.height) {
				_gthis.width = _width;
				_gthis.height = _height;
				_gthis.posChanged = true;
			}
			var a = engine.width / _width;
			var b = engine.height / _height;
			var zoom = a > b ? b : a;
			if(integerScale) {
				zoom = zoom | 0;
				if(zoom == 0) {
					zoom = 1;
				}
			}
			var horizontal = horizontalAlign;
			var vertical = verticalAlign;
			_gthis.viewportA = zoom * 2 / engine.width;
			_gthis.viewportD = zoom * 2 / engine.height;
			_gthis.viewportScaleX = zoom;
			_gthis.viewportScaleY = zoom;
			if(horizontal == null) {
				horizontal = h2d_ScaleModeAlign.Center;
			}
			switch(horizontal._hx_index) {
			case 0:
				_gthis.viewportX = -1;
				_gthis.offsetX = 0;
				break;
			case 1:
				_gthis.viewportX = 1 - _gthis.width * _gthis.viewportA;
				_gthis.offsetX = engine.width - _gthis.width * zoom;
				break;
			default:
				_gthis.viewportX = Math.floor((engine.width - _gthis.width * zoom) / (zoom * 2)) * _gthis.viewportA - 1.;
				_gthis.offsetX = Math.floor((engine.width - _gthis.width * zoom) / 2);
			}
			if(vertical == null) {
				vertical = h2d_ScaleModeAlign.Center;
			}
			switch(vertical._hx_index) {
			case 3:
				_gthis.viewportY = -1;
				_gthis.offsetY = 0;
				break;
			case 4:
				_gthis.viewportY = 1 - _gthis.height * _gthis.viewportD;
				_gthis.offsetY = engine.height - _gthis.height * zoom;
				break;
			default:
				_gthis.viewportY = Math.floor((engine.height - _gthis.height * zoom) / (zoom * 2)) * _gthis.viewportD - 1.;
				_gthis.offsetY = Math.floor((engine.height - _gthis.height * zoom) / 2);
			}
			break;
		case 3:
			var _width = _g.width;
			var _height = _g.height;
			var zoom = _g.zoom;
			var horizontalAlign = _g.horizontalAlign;
			var verticalAlign = _g.verticalAlign;
			if(_width != _gthis.width || _height != _gthis.height) {
				_gthis.width = _width;
				_gthis.height = _height;
				_gthis.posChanged = true;
			}
			var horizontal = horizontalAlign;
			var vertical = verticalAlign;
			_gthis.viewportA = zoom * 2 / engine.width;
			_gthis.viewportD = zoom * 2 / engine.height;
			_gthis.viewportScaleX = zoom;
			_gthis.viewportScaleY = zoom;
			if(horizontal == null) {
				horizontal = h2d_ScaleModeAlign.Center;
			}
			switch(horizontal._hx_index) {
			case 0:
				_gthis.viewportX = -1;
				_gthis.offsetX = 0;
				break;
			case 1:
				_gthis.viewportX = 1 - _gthis.width * _gthis.viewportA;
				_gthis.offsetX = engine.width - _gthis.width * zoom;
				break;
			default:
				_gthis.viewportX = Math.floor((engine.width - _gthis.width * zoom) / (zoom * 2)) * _gthis.viewportA - 1.;
				_gthis.offsetX = Math.floor((engine.width - _gthis.width * zoom) / 2);
			}
			if(vertical == null) {
				vertical = h2d_ScaleModeAlign.Center;
			}
			switch(vertical._hx_index) {
			case 3:
				_gthis.viewportY = -1;
				_gthis.offsetY = 0;
				break;
			case 4:
				_gthis.viewportY = 1 - _gthis.height * _gthis.viewportD;
				_gthis.offsetY = engine.height - _gthis.height * zoom;
				break;
			default:
				_gthis.viewportY = Math.floor((engine.height - _gthis.height * zoom) / (zoom * 2)) * _gthis.viewportD - 1.;
				_gthis.offsetY = Math.floor((engine.height - _gthis.height * zoom) / 2);
			}
			break;
		case 4:
			var level = _g.level;
			var w = Math.ceil(engine.width / level);
			var h = Math.ceil(engine.height / level);
			if(w != _gthis.width || h != _gthis.height) {
				_gthis.width = w;
				_gthis.height = h;
				_gthis.posChanged = true;
			}
			_gthis.viewportScaleX = level;
			_gthis.viewportScaleY = level;
			_gthis.viewportA = 2 / _gthis.width;
			_gthis.viewportD = 2 / _gthis.height;
			_gthis.viewportX = -1;
			_gthis.viewportY = -1;
			break;
		case 5:
			var minWidth = _g.minWidth;
			var minHeight = _g.minHeight;
			var integerScaling = _g.integerScaling;
			var a = engine.width / minWidth;
			var b = engine.height / minHeight;
			var zoom = a > b ? b : a;
			if(integerScaling) {
				zoom = zoom | 0;
				if(zoom == 0) {
					zoom = 1;
				}
			}
			var w = Math.ceil(engine.width / zoom);
			var h = Math.ceil(engine.height / zoom);
			if(w != _gthis.width || h != _gthis.height) {
				_gthis.width = w;
				_gthis.height = h;
				_gthis.posChanged = true;
			}
			_gthis.viewportScaleX = zoom;
			_gthis.viewportScaleY = zoom;
			_gthis.viewportA = 2 / _gthis.width;
			_gthis.viewportD = 2 / _gthis.height;
			_gthis.viewportX = -1;
			_gthis.viewportY = -1;
			break;
		}
	}
	,dispatchListeners: function(event) {
		this.screenToViewport(event);
		var _g = 0;
		var _g1 = this.eventListeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l(event);
			if(!event.propagate) {
				break;
			}
		}
	}
	,isInteractiveVisible: function(i) {
		var s = i;
		while(s != this) {
			if(s == null || !s.visible) {
				return false;
			}
			s = s.parent;
		}
		return true;
	}
	,getInteractive: function(x,y) {
		var pt = this.shapePoint;
		var _g = 0;
		var _g1 = this.interactive;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.posChanged) {
				i.syncPos();
			}
			var dx = x - i.absX;
			var dy = y - i.absY;
			var rx = (dx * i.matD - dy * i.matC) * i.invDet;
			var ry = (dy * i.matA - dx * i.matB) * i.invDet;
			if(i.shape != null) {
				var x1 = rx + i.shapeX;
				var y1 = ry + i.shapeY;
				if(y1 == null) {
					y1 = 0.;
				}
				if(x1 == null) {
					x1 = 0.;
				}
				pt.x = x1;
				pt.y = y1;
				if(!i.shape.contains(pt)) {
					continue;
				}
			} else if(ry < 0 || rx < 0 || rx >= i.width || ry >= i.height) {
				continue;
			}
			var visible = true;
			var p = i;
			while(p != null) {
				if(!p.visible) {
					visible = false;
					break;
				}
				p = p.parent;
			}
			if(!visible) {
				continue;
			}
			return i;
		}
		return null;
	}
	,screenToViewport: function(e) {
		this.interactiveCamera.eventToCamera(e);
	}
	,dispatchEvent: function(event,to) {
		var i = to;
		this.screenToViewport(event);
		var dx = event.relX - i.absX;
		var dy = event.relY - i.absY;
		var rx = (dx * i.matD - dy * i.matC) * i.invDet;
		var ry = (dy * i.matA - dx * i.matB) * i.invDet;
		event.relX = rx;
		event.relY = ry;
		i.handleEvent(event);
	}
	,handleEvent: function(event,last) {
		this.screenToViewport(event);
		var ex = event.relX;
		var ey = event.relY;
		var index = last == null ? 0 : this.interactive.indexOf(last) + 1;
		var pt = this.shapePoint;
		var _g = index;
		var _g1 = this.interactive.length;
		while(_g < _g1) {
			var idx = _g++;
			var i = this.interactive[idx];
			if(i == null) {
				break;
			}
			if(i.invDet == 0) {
				continue;
			}
			var dx = ex - i.absX;
			var dy = ey - i.absY;
			var rx = (dx * i.matD - dy * i.matC) * i.invDet;
			var ry = (dy * i.matA - dx * i.matB) * i.invDet;
			if(i.shape != null) {
				var x = rx + i.shapeX;
				var y = ry + i.shapeY;
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				pt.x = x;
				pt.y = y;
				if(!i.shape.contains(pt)) {
					continue;
				}
			} else if(ry < 0 || rx < 0 || rx >= i.width || ry >= i.height) {
				continue;
			}
			var visible = true;
			var p = i;
			while(p != null) {
				if(!p.visible) {
					visible = false;
					break;
				}
				p = p.parent;
			}
			if(!visible) {
				continue;
			}
			event.relX = rx;
			event.relY = ry;
			i.handleEvent(event);
			if(event.cancel) {
				event.cancel = false;
				event.propagate = false;
				continue;
			}
			return i;
		}
		return null;
	}
	,startCapture: function(onEvent,onCancel,touchId) {
		var _gthis = this;
		this.events.startCapture(function(e) {
			_gthis.screenToViewport(e);
			onEvent(e);
		},onCancel,touchId);
	}
	,stopCapture: function() {
		this.events.stopCapture();
	}
	,addEventTarget: function(i) {
		var i1 = i;
		var lv = 0;
		while(i1 != null) {
			i1 = i1.parent;
			++lv;
		}
		var level = lv;
		var _g = 0;
		var _g1 = this.interactive.length;
		while(_g < _g1) {
			var index = _g++;
			var i1 = i;
			var i2 = this.interactive[index];
			var lv1 = level;
			var i3 = i2;
			var lv = 0;
			while(i3 != null) {
				i3 = i3.parent;
				++lv;
			}
			var lv2 = lv;
			var p1 = i1;
			var p2 = i2;
			while(lv1 > lv2) {
				i1 = p1;
				p1 = p1.parent;
				--lv1;
			}
			while(lv2 > lv1) {
				i2 = p2;
				p2 = p2.parent;
				--lv2;
			}
			while(p1 != p2) {
				i1 = p1;
				p1 = p1.parent;
				i2 = p2;
				p2 = p2.parent;
			}
			var id = -1;
			var _g2 = 0;
			var _g3 = p1.children.length;
			while(_g2 < _g3) {
				var k = _g2++;
				if(p1.children[k] == i1) {
					id = k;
					break;
				}
			}
			var tmp = id;
			var id1 = -1;
			var _g4 = 0;
			var _g5 = p2.children.length;
			while(_g4 < _g5) {
				var k1 = _g4++;
				if(p2.children[k1] == i2) {
					id1 = k1;
					break;
				}
			}
			if(tmp > id1) {
				this.interactive.splice(index,0,i);
				return;
			}
		}
		this.interactive.push(i);
	}
	,removeEventTarget: function(i,notify) {
		if(notify == null) {
			notify = false;
		}
		HxOverrides.remove(this.interactive,i);
		if(notify && this.events != null) {
			this.events.onRemove(i);
		}
	}
	,setElapsedTime: function(v) {
		this.ctx.elapsedTime = v;
	}
	,render: function(engine) {
		this.ctx.engine = engine;
		this.ctx.frame++;
		this.ctx.time += this.ctx.elapsedTime;
		this.ctx.globalAlpha = this.alpha;
		this.sync(this.ctx);
		if(this.children.length == 0) {
			return;
		}
		this.ctx.begin();
		this.ctx.drawScene();
		this.ctx.end();
	}
	,sync: function(ctx) {
		var forceCamSync = this.posChanged;
		if(!this.allocated) {
			this.onAdd();
		}
		h2d_Layers.prototype.sync.call(this,ctx);
		var _g = 0;
		var _g1 = this._cameras;
		while(_g < _g1.length) {
			var cam = _g1[_g];
			++_g;
			cam.sync(ctx,forceCamSync);
		}
	}
	,clipBounds: function(ctx,bounds,scaleX,scaleY) {
		if(scaleY == null) {
			scaleY = 1.;
		}
		if(scaleX == null) {
			scaleX = 1.;
		}
		var matA;
		var matB;
		var matC;
		var matD;
		var absX;
		var absY;
		if(ctx.inFilter != null) {
			var f1 = ctx.baseShader.filterMatrixA__;
			var f2 = ctx.baseShader.filterMatrixB__;
			var tmpA = this.matA * f1.x + this.matB * f1.y;
			var tmpB = this.matA * f2.x + this.matB * f2.y;
			var tmpC = this.matC * f1.x + this.matD * f1.y;
			var tmpD = this.matC * f2.x + this.matD * f2.y;
			var tmpX = this.absX * f1.x + this.absY * f1.y + f1.z;
			var tmpY = this.absX * f2.x + this.absY * f2.y + f2.z;
			matA = (tmpA * ctx.viewA + tmpB * ctx.viewC) / scaleX;
			matB = (tmpA * ctx.viewB + tmpB * ctx.viewD) / scaleY;
			matC = (tmpC * ctx.viewA + tmpD * ctx.viewC) / scaleX;
			matD = (tmpC * ctx.viewB + tmpD * ctx.viewD) / scaleY;
			absX = tmpX * ctx.viewA + tmpY * ctx.viewC + ctx.viewX;
			absY = tmpX * ctx.viewB + tmpY * ctx.viewD + ctx.viewY;
		} else {
			matA = (this.matA * ctx.viewA + this.matB * ctx.viewC) / scaleX;
			matB = (this.matA * ctx.viewB + this.matB * ctx.viewD) / scaleY;
			matC = (this.matC * ctx.viewA + this.matD * ctx.viewC) / scaleX;
			matD = (this.matC * ctx.viewB + this.matD * ctx.viewD) / scaleY;
			absX = this.absX * ctx.viewA + this.absY * ctx.viewC + ctx.viewX;
			absY = this.absX * ctx.viewB + this.absY * ctx.viewD + ctx.viewY;
		}
		var invDet = 1 / (matA * matD - matB * matC);
		bounds.xMin = ((-1 - absX) * matD + (absY + 1) * matC) * invDet;
		bounds.yMin = ((absX + 1) * matB + (-1 - absY) * matA) * invDet;
		bounds.xMax = ((1 - absX) * matD + (absY - 1) * matC) * invDet;
		bounds.yMax = ((absX - 1) * matB + (1 - absY) * matA) * invDet;
	}
	,drawContent: function(ctx) {
		if(ctx.front2back) {
			var _g = 0;
			var _g1 = this._cameras;
			while(_g < _g1.length) {
				var cam = _g1[_g];
				++_g;
				if(!cam.visible) {
					continue;
				}
				var i = this.children.length;
				var l = this.layerCount;
				cam.enter(ctx);
				while(l-- > 0) {
					var top = l == 0 ? 0 : this.layersIndexes[l - 1];
					if(cam.layerVisible(l)) {
						while(i >= top) this.children[i--].drawRec(ctx);
					} else {
						i = top - 1;
					}
				}
				cam.exit(ctx);
			}
			this.draw(ctx);
		} else {
			this.draw(ctx);
			var _g = 0;
			var _g1 = this._cameras;
			while(_g < _g1.length) {
				var cam = _g1[_g];
				++_g;
				if(!cam.visible) {
					continue;
				}
				var i = 0;
				var l = 0;
				cam.enter(ctx);
				while(l < this.layerCount) {
					var top = this.layersIndexes[l++];
					if(cam.layerVisible(l - 1)) {
						while(i < top) this.children[i++].drawRec(ctx);
					} else {
						i = top;
					}
				}
				cam.exit(ctx);
			}
		}
	}
	,onAdd: function() {
		this.checkResize();
		h2d_Layers.prototype.onAdd.call(this);
		this.window.addResizeEvent($bind(this,this.checkResize));
	}
	,onRemove: function() {
		h2d_Layers.prototype.onRemove.call(this);
		this.window.removeResizeEvent($bind(this,this.checkResize));
	}
	,__class__: h2d_Scene
	,__properties__: $extend(h2d_Layers.prototype.__properties__,{set_interactiveCamera:"set_interactiveCamera"})
});
var h2d_Align = $hxEnums["h2d.Align"] = { __ename__:"h2d.Align",__constructs__:null
	,Left: {_hx_name:"Left",_hx_index:0,__enum__:"h2d.Align",toString:$estr}
	,Right: {_hx_name:"Right",_hx_index:1,__enum__:"h2d.Align",toString:$estr}
	,Center: {_hx_name:"Center",_hx_index:2,__enum__:"h2d.Align",toString:$estr}
	,MultilineRight: {_hx_name:"MultilineRight",_hx_index:3,__enum__:"h2d.Align",toString:$estr}
	,MultilineCenter: {_hx_name:"MultilineCenter",_hx_index:4,__enum__:"h2d.Align",toString:$estr}
};
h2d_Align.__constructs__ = [h2d_Align.Left,h2d_Align.Right,h2d_Align.Center,h2d_Align.MultilineRight,h2d_Align.MultilineCenter];
h2d_Align.__empty_constructs__ = [h2d_Align.Left,h2d_Align.Right,h2d_Align.Center,h2d_Align.MultilineRight,h2d_Align.MultilineCenter];
var h2d_Text = function(font,parent) {
	this.realMaxWidth = -1;
	this.constraintWidth = -1;
	this.lineBreak = true;
	this.lineSpacing = 0;
	this.letterSpacing = 0;
	h2d_Drawable.call(this,parent);
	this.set_font(font);
	this.set_textAlign(h2d_Align.Left);
	this.set_text("");
	this.currentText = "";
	this.set_textColor(16777215);
};
$hxClasses["h2d.Text"] = h2d_Text;
h2d_Text.__name__ = "h2d.Text";
h2d_Text.__super__ = h2d_Drawable;
h2d_Text.prototype = $extend(h2d_Drawable.prototype,{
	font: null
	,text: null
	,textColor: null
	,maxWidth: null
	,dropShadow: null
	,textWidth: null
	,textHeight: null
	,textAlign: null
	,letterSpacing: null
	,lineSpacing: null
	,lineBreak: null
	,glyphs: null
	,needsRebuild: null
	,currentText: null
	,textChanged: null
	,calcDone: null
	,calcXMin: null
	,calcYMin: null
	,calcWidth: null
	,calcHeight: null
	,calcSizeHeight: null
	,constraintWidth: null
	,realMaxWidth: null
	,sdfShader: null
	,set_font: function(font) {
		if(this.font == font) {
			return font;
		}
		this.font = font;
		if(font != null) {
			var _g = font.type;
			switch(_g._hx_index) {
			case 0:
				if(this.sdfShader != null) {
					this.removeShader(this.sdfShader);
					this.sdfShader = null;
				}
				break;
			case 1:
				var channel = _g.channel;
				var alphaCutoff = _g.alphaCutoff;
				var smoothing = _g.smoothing;
				if(this.sdfShader == null) {
					this.sdfShader = new h3d_shader_SignedDistanceField();
					this.addShader(this.sdfShader);
				}
				if(this.smooth == null) {
					this.smooth = true;
				}
				this.sdfShader.alphaCutoff__ = alphaCutoff;
				this.sdfShader.smoothing__ = smoothing;
				var _this = this.sdfShader;
				_this.constModified = true;
				_this.channel__ = channel;
				var _this = this.sdfShader;
				_this.constModified = true;
				_this.autoSmoothing__ = smoothing == -1;
				break;
			}
		}
		if(this.glyphs != null) {
			var _this = this.glyphs;
			if(_this != null && _this.parent != null) {
				_this.parent.removeChild(_this);
			}
		}
		this.glyphs = new h2d_TileGroup(font == null ? null : font.tile,this);
		this.glyphs.set_visible(false);
		this.rebuild();
		return font;
	}
	,set_textAlign: function(a) {
		if(this.textAlign == a) {
			return a;
		}
		this.textAlign = a;
		this.rebuild();
		return a;
	}
	,set_lineBreak: function(b) {
		if(this.lineBreak == b) {
			return b;
		}
		this.lineBreak = b;
		this.rebuild();
		return b;
	}
	,onAdd: function() {
		h2d_Drawable.prototype.onAdd.call(this);
		this.rebuild();
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(this.needsRebuild) {
			this.initGlyphs(this.currentText);
		}
	}
	,draw: function(ctx) {
		if(this.glyphs == null) {
			this.emitTile(ctx,h2d_Tile.fromColor(16711935,16,16));
			return;
		}
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(this.needsRebuild) {
			this.initGlyphs(this.currentText);
		}
		if(this.dropShadow != null) {
			var oldX = this.absX;
			var oldY = this.absY;
			this.absX += this.dropShadow.dx * this.matA + this.dropShadow.dy * this.matC;
			this.absY += this.dropShadow.dx * this.matB + this.dropShadow.dy * this.matD;
			var oldR = this.color.x;
			var oldG = this.color.y;
			var oldB = this.color.z;
			var oldA = this.color.w;
			var _this = this.color;
			var c = this.dropShadow.color;
			_this.x = (c >> 16 & 255) / 255;
			_this.y = (c >> 8 & 255) / 255;
			_this.z = (c & 255) / 255;
			_this.w = (c >>> 24) / 255;
			this.color.w = this.dropShadow.alpha * oldA;
			this.glyphs.drawWith(ctx,this);
			this.absX = oldX;
			this.absY = oldY;
			var _this = this.color;
			var x = oldR;
			var y = oldG;
			var z = oldB;
			var w = oldA;
			if(w == null) {
				w = 1.;
			}
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = w;
		}
		this.glyphs.drawWith(ctx,this);
	}
	,set_text: function(t) {
		var t1 = t == null ? "null" : t;
		if(t1 == this.text) {
			return t1;
		}
		this.text = t1;
		this.textChanged = true;
		this.validateText();
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
		return t1;
	}
	,validateText: function() {
	}
	,rebuild: function() {
		this.calcDone = false;
		this.needsRebuild = true;
		if(this.parentContainer != null) {
			this.parentContainer.contentChanged(this);
		}
	}
	,calcTextWidth: function(text) {
		if(this.calcDone) {
			var ow = this.calcWidth;
			var oh = this.calcHeight;
			var osh = this.calcSizeHeight;
			var ox = this.calcXMin;
			var oy = this.calcYMin;
			this.initGlyphs(text,false);
			var w = this.calcWidth;
			this.calcWidth = ow;
			this.calcHeight = oh;
			this.calcSizeHeight = osh;
			this.calcXMin = ox;
			this.calcYMin = oy;
			return w;
		} else {
			this.initGlyphs(text,false);
			this.calcDone = false;
			return this.calcWidth;
		}
	}
	,splitText: function(text) {
		return this.splitRawText(text,0,0);
	}
	,splitRawText: function(text,leftMargin,afterData,font,sizes,prevChar) {
		if(prevChar == null) {
			prevChar = -1;
		}
		if(afterData == null) {
			afterData = 0.;
		}
		if(leftMargin == null) {
			leftMargin = 0.;
		}
		var maxWidth = this.realMaxWidth;
		if(maxWidth < 0) {
			if(sizes == null) {
				return text;
			} else {
				maxWidth = Infinity;
			}
		}
		if(font == null) {
			font = this.font;
		}
		var lines = [];
		var restPos = 0;
		var x = leftMargin;
		var _g = 0;
		var _g1 = text.length;
		while(_g < _g1) {
			var i = _g++;
			var cc = HxOverrides.cca(text,i);
			var c = font.glyphs.h[cc];
			if(c == null) {
				c = font.charset.resolveChar(cc,font.glyphs);
				if(c == null) {
					c = cc == 13 || cc == 10 ? font.nullChar : font.defaultChar;
				}
			}
			var e = c;
			var newline = cc == 10;
			var esize = e.width + e.getKerningOffset(prevChar);
			var nc = HxOverrides.cca(text,i + 1);
			if(font.charset.isBreakChar(cc) && (nc == null || !font.charset.isComplementChar(nc))) {
				if(lines.length == 0 && leftMargin > 0 && x > maxWidth) {
					lines.push("");
					if(sizes != null) {
						sizes.push(leftMargin);
					}
					x -= leftMargin;
				}
				var size = x + esize + this.letterSpacing;
				var k = i + 1;
				var max = text.length;
				var prevChar1 = prevChar;
				var breakFound = false;
				while(size <= maxWidth && k < max) {
					var cc1 = HxOverrides.cca(text,k++);
					if(this.lineBreak && (font.charset.isSpace(cc1) || cc1 == 10)) {
						breakFound = true;
						break;
					}
					var c1 = font.glyphs.h[cc1];
					if(c1 == null) {
						c1 = font.charset.resolveChar(cc1,font.glyphs);
						if(c1 == null) {
							c1 = cc1 == 13 || cc1 == 10 ? font.nullChar : font.defaultChar;
						}
					}
					var e1 = c1;
					size += e1.width + this.letterSpacing + e1.getKerningOffset(prevChar1);
					prevChar1 = cc1;
					var nc1 = HxOverrides.cca(text,k + 1);
					if(font.charset.isBreakChar(cc1) && (nc1 == null || !font.charset.isComplementChar(nc1))) {
						break;
					}
				}
				if(this.lineBreak && (size > maxWidth || !breakFound && size + afterData > maxWidth)) {
					newline = true;
					if(font.charset.isSpace(cc)) {
						lines.push(HxOverrides.substr(text,restPos,i - restPos));
						e = null;
					} else {
						lines.push(HxOverrides.substr(text,restPos,i + 1 - restPos));
					}
					restPos = i + 1;
				}
			}
			if(e != null && cc != 10) {
				x += esize + this.letterSpacing;
			}
			if(newline) {
				if(sizes != null) {
					sizes.push(x);
				}
				x = 0;
				prevChar = -1;
			} else {
				prevChar = cc;
			}
		}
		if(restPos < text.length) {
			if(lines.length == 0 && leftMargin > 0 && x + afterData - this.letterSpacing > maxWidth) {
				lines.push("");
				if(sizes != null) {
					sizes.push(leftMargin);
				}
				x -= leftMargin;
			}
			lines.push(HxOverrides.substr(text,restPos,text.length - restPos));
			if(sizes != null) {
				sizes.push(x);
			}
		}
		return lines.join("\n");
	}
	,initGlyphs: function(text,rebuild) {
		if(rebuild == null) {
			rebuild = true;
		}
		if(rebuild) {
			this.glyphs.clear();
		}
		var x = 0.;
		var y = 0.;
		var xMax = 0.;
		var xMin = 0.;
		var yMin = 0.;
		var prevChar = -1;
		var linei = 0;
		var align = this.textAlign;
		var lines = [];
		var dl = this.font.lineHeight + this.lineSpacing;
		var t = this.splitRawText(text,0,0,null,lines);
		var _g = 0;
		while(_g < lines.length) {
			var lw = lines[_g];
			++_g;
			if(lw > x) {
				x = lw;
			}
		}
		this.calcWidth = x;
		switch(align._hx_index) {
		case 0:
			x = 0;
			break;
		case 1:case 2:case 3:case 4:
			var max = align == h2d_Align.MultilineCenter || align == h2d_Align.MultilineRight ? Math.ceil(this.calcWidth) : this.realMaxWidth < 0 ? 0 : Math.ceil(this.realMaxWidth);
			var k = align == h2d_Align.Center || align == h2d_Align.MultilineCenter ? 0.5 : 1;
			var _g = 0;
			var _g1 = lines.length;
			while(_g < _g1) {
				var i = _g++;
				lines[i] = Math.floor((max - lines[i]) * k);
			}
			x = lines[0];
			xMin = x;
			break;
		}
		var _g = 0;
		var _g1 = t.length;
		while(_g < _g1) {
			var i = _g++;
			var cc = HxOverrides.cca(t,i);
			var _this = this.font;
			var c = _this.glyphs.h[cc];
			if(c == null) {
				c = _this.charset.resolveChar(cc,_this.glyphs);
				if(c == null) {
					c = cc == 13 || cc == 10 ? _this.nullChar : _this.defaultChar;
				}
			}
			var e = c;
			var offs = e.getKerningOffset(prevChar);
			var esize = e.width + offs;
			if(cc == 10) {
				if(x > xMax) {
					xMax = x;
				}
				switch(align._hx_index) {
				case 0:
					x = 0;
					break;
				case 1:case 2:case 3:case 4:
					x = lines[++linei];
					if(x < xMin) {
						xMin = x;
					}
					break;
				}
				y += dl;
				prevChar = -1;
			} else {
				if(e != null) {
					if(rebuild) {
						var _this1 = this.glyphs;
						_this1.content.add(x + offs,y,_this1.curColor.x,_this1.curColor.y,_this1.curColor.z,_this1.curColor.w,e.t);
					}
					if(y == 0 && e.t.dy < yMin) {
						yMin = e.t.dy;
					}
					x += esize + this.letterSpacing;
				}
				prevChar = cc;
			}
		}
		if(x > xMax) {
			xMax = x;
		}
		this.calcXMin = xMin;
		this.calcYMin = yMin;
		this.calcWidth = xMax - xMin;
		this.calcHeight = y + this.font.lineHeight;
		this.calcSizeHeight = y + (this.font.baseLine > 0 ? this.font.baseLine : this.font.lineHeight);
		this.calcDone = true;
		if(rebuild) {
			this.needsRebuild = false;
		}
	}
	,get_textHeight: function() {
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(!this.calcDone) {
			this.initGlyphs(this.text,this.needsRebuild);
		}
		return this.calcHeight;
	}
	,get_textWidth: function() {
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(!this.calcDone) {
			this.initGlyphs(this.text,this.needsRebuild);
		}
		return this.calcWidth;
	}
	,set_maxWidth: function(w) {
		if(this.maxWidth == w) {
			return w;
		}
		this.maxWidth = w;
		this.updateConstraint();
		return w;
	}
	,updateConstraint: function() {
		var old = this.realMaxWidth;
		if(this.maxWidth == null) {
			this.realMaxWidth = this.constraintWidth;
		} else if(this.constraintWidth < 0) {
			this.realMaxWidth = this.maxWidth;
		} else {
			var a = this.maxWidth;
			var b = this.constraintWidth;
			this.realMaxWidth = a > b ? b : a;
		}
		if(this.realMaxWidth != old) {
			this.rebuild();
		}
	}
	,set_textColor: function(c) {
		if(this.textColor == c) {
			return c;
		}
		this.textColor = c;
		var a = this.color.w;
		var _this = this.color;
		_this.x = (c >> 16 & 255) / 255;
		_this.y = (c >> 8 & 255) / 255;
		_this.z = (c & 255) / 255;
		_this.w = (c >>> 24) / 255;
		this.color.w = a;
		return c;
	}
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		if(this.textChanged && this.text != this.currentText) {
			this.textChanged = false;
			this.currentText = this.text;
			this.calcDone = false;
			this.needsRebuild = true;
		}
		if(!this.calcDone) {
			this.initGlyphs(this.text,this.needsRebuild);
		}
		var x;
		var y;
		var w;
		var h;
		if(forSize) {
			x = this.calcXMin;
			y = 0.;
			w = this.calcWidth;
			h = this.calcSizeHeight;
		} else {
			x = this.calcXMin;
			y = this.calcYMin;
			w = this.calcWidth;
			h = this.calcHeight - this.calcYMin;
		}
		this.addBounds(relativeTo,out,x,y,w,h);
	}
	,__class__: h2d_Text
	,__properties__: $extend(h2d_Drawable.prototype.__properties__,{set_lineBreak:"set_lineBreak",set_textAlign:"set_textAlign",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_maxWidth:"set_maxWidth",set_textColor:"set_textColor",set_text:"set_text",set_font:"set_font"})
});
var h2d_TextInput = function(font,parent) {
	this.maxHistorySize = 100;
	this.lastClick = 0.;
	this.lastChange = 0.;
	this.redo = [];
	this.undo = [];
	this.scrollX = 0.;
	this.cursorBlink = 0.;
	this.useSoftwareKeyboard = true;
	this.canEdit = true;
	this.multiline = false;
	this.cursorBlinkTime = 0.5;
	this.cursorIndex = -1;
	var _gthis = this;
	h2d_Text.call(this,font,parent);
	this.interactive = new h2d_Interactive(0,0);
	this.interactive.set_cursor(hxd_Cursor.TextInput);
	this.interactive.onPush = function(e) {
		_gthis.onPush(e);
		if(!e.cancel && e.button == 0) {
			if(!_gthis.interactive.hasFocus()) {
				e.kind = hxd_EventKind.EFocus;
				_gthis.onFocus(e);
				e.kind = hxd_EventKind.EPush;
				if(e.cancel) {
					return;
				}
				_gthis.interactive.focus();
			}
			_gthis.cursorBlink = 0;
			var startIndex = _gthis.textPos(e.relX,e.relY);
			_gthis.cursorIndex = startIndex;
			_gthis.selectionRange = null;
			var pt = new h2d_col_Point();
			var scene = _gthis.getScene();
			if(scene == null) {
				return;
			}
			scene.startCapture(function(e) {
				pt.x = e.relX;
				pt.y = e.relY;
				_gthis.globalToLocal(pt);
				var index = _gthis.textPos(pt.x,pt.y);
				if(index == startIndex) {
					_gthis.selectionRange = null;
				} else if(index < startIndex) {
					_gthis.selectionRange = { start : index, length : startIndex - index};
				} else {
					_gthis.selectionRange = { start : startIndex, length : index - startIndex};
				}
				_gthis.selectionSize = 0;
				_gthis.cursorIndex = index;
				if(e.kind == hxd_EventKind.ERelease || _gthis.getScene() != scene) {
					scene.stopCapture();
				}
			});
		}
	};
	this.interactive.onKeyDown = function(e) {
		_gthis.onKeyDown(e);
		_gthis.handleKey(e);
	};
	this.interactive.onTextInput = function(e) {
		_gthis.onTextInput(e);
		_gthis.handleKey(e);
	};
	this.interactive.onFocus = function(e) {
		_gthis.onFocus(e);
		if(_gthis.useSoftwareKeyboard && _gthis.canEdit) {
			h2d_TextInput.showSoftwareKeyboard(_gthis);
		}
	};
	this.interactive.onFocusLost = function(e) {
		_gthis.cursorIndex = -1;
		_gthis.selectionRange = null;
		h2d_TextInput.hideSoftwareKeyboard(_gthis);
		_gthis.onFocusLost(e);
	};
	this.interactive.onClick = function(e) {
		_gthis.onClick(e);
		if(e.cancel) {
			return;
		}
		var t = HxOverrides.now() / 1000;
		if(t - _gthis.lastClick < 0.3 && _gthis.text.length != 0) {
			_gthis.selectionRange = { start : 0, length : _gthis.text.length};
			_gthis.selectionSize = 0;
			_gthis.cursorIndex = _gthis.text.length;
		}
		_gthis.lastClick = t;
	};
	this.interactive.onKeyUp = function(e) {
		_gthis.onKeyUp(e);
	};
	this.interactive.onRelease = function(e) {
		_gthis.onRelease(e);
	};
	this.interactive.onKeyUp = function(e) {
		_gthis.onKeyUp(e);
	};
	this.interactive.onMove = function(e) {
		_gthis.onMove(e);
	};
	this.interactive.onOver = function(e) {
		_gthis.onOver(e);
	};
	this.interactive.onOut = function(e) {
		_gthis.onOut(e);
	};
	this.interactive.set_cursor(hxd_Cursor.TextInput);
	this.addChildAt(this.interactive,0);
};
$hxClasses["h2d.TextInput"] = h2d_TextInput;
h2d_TextInput.__name__ = "h2d.TextInput";
h2d_TextInput.showSoftwareKeyboard = function(target) {
};
h2d_TextInput.hideSoftwareKeyboard = function(target) {
};
h2d_TextInput.__super__ = h2d_Text;
h2d_TextInput.prototype = $extend(h2d_Text.prototype,{
	cursorIndex: null
	,cursorTile: null
	,selectionTile: null
	,cursorBlinkTime: null
	,inputWidth: null
	,multiline: null
	,selectionRange: null
	,canEdit: null
	,useSoftwareKeyboard: null
	,interactive: null
	,cursorText: null
	,cursorX: null
	,cursorXIndex: null
	,cursorY: null
	,cursorBlink: null
	,scrollX: null
	,selectionPos: null
	,selectionSize: null
	,undo: null
	,redo: null
	,lastChange: null
	,lastClick: null
	,maxHistorySize: null
	,handleKey: function(e) {
		if(e.cancel || this.cursorIndex < 0) {
			return;
		}
		var oldIndex = this.cursorIndex;
		var oldText = this.text;
		switch(e.keyCode) {
		case 8:
			if(this.selectionRange != null) {
				if(!this.canEdit) {
					return;
				}
				this.beforeChange();
				this.cutSelection();
				this.onChange();
			} else if(this.cursorIndex > 0 && this.canEdit) {
				this.beforeChange();
				var end = this.cursorIndex;
				this.cursorIndex = hxd_Key.isDown(17) ? this.getWordStart() : this.cursorIndex - 1;
				this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + HxOverrides.substr(this.text,end,null));
				this.onChange();
			}
			break;
		case 27:
			this.cursorIndex = -1;
			this.interactive.blur();
			return;
		case 35:
			this.cursorIndex = this.text.length;
			break;
		case 36:
			this.cursorIndex = 0;
			break;
		case 37:
			if(hxd_Key.isDown(17)) {
				this.cursorIndex = this.getWordStart();
			} else if(this.cursorIndex > 0) {
				this.cursorIndex--;
			}
			break;
		case 39:
			if(hxd_Key.isDown(17)) {
				this.cursorIndex = this.getWordEnd();
			} else if(this.cursorIndex < this.text.length) {
				this.cursorIndex++;
			}
			break;
		case 46:
			if(this.selectionRange != null) {
				if(!this.canEdit) {
					return;
				}
				this.beforeChange();
				this.cutSelection();
				this.onChange();
			} else if(this.cursorIndex < this.text.length && this.canEdit) {
				this.beforeChange();
				var end = hxd_Key.isDown(17) ? this.getWordEnd() : this.cursorIndex + 1;
				this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + HxOverrides.substr(this.text,end,null));
				this.onChange();
			}
			break;
		case 65:
			if(hxd_Key.isDown(17)) {
				if(this.text != "") {
					this.cursorIndex = this.text.length;
					this.selectionRange = { start : 0, length : this.text.length};
					this.selectionSize = 0;
				}
				return;
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		case 67:
			if(hxd_Key.isDown(17)) {
				if(this.text != "" && this.selectionRange != null) {
					hxd_System.setClipboardText(HxOverrides.substr(this.text,this.selectionRange.start,this.selectionRange.length));
				}
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		case 86:
			if(hxd_Key.isDown(17)) {
				if(!this.canEdit) {
					return;
				}
				var t = hxd_System.getClipboardText();
				if(t != null && t.length > 0) {
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + t + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex += t.length;
					this.onChange();
				}
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		case 88:
			if(hxd_Key.isDown(17)) {
				if(this.text != "" && this.selectionRange != null) {
					if(hxd_System.setClipboardText(HxOverrides.substr(this.text,this.selectionRange.start,this.selectionRange.length))) {
						if(!this.canEdit) {
							return;
						}
						this.beforeChange();
						this.cutSelection();
						this.onChange();
					}
				}
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		case 89:
			if(hxd_Key.isDown(17)) {
				if(this.redo.length > 0 && this.canEdit) {
					this.undo.push(this.curHistoryState());
					this.setState(this.redo.pop());
					this.onChange();
				}
				return;
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		case 90:
			if(hxd_Key.isDown(17)) {
				if(this.undo.length > 0 && this.canEdit) {
					this.redo.push(this.curHistoryState());
					this.setState(this.undo.pop());
					this.onChange();
				}
				return;
			} else {
				if(e.kind == hxd_EventKind.EKeyDown) {
					return;
				}
				if(e.charCode != 0 && this.canEdit) {
					if(!this.font.hasChar(e.charCode)) {
						return;
					}
					this.beforeChange();
					if(this.selectionRange != null) {
						this.cutSelection();
					}
					var code = e.charCode;
					this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
					this.cursorIndex++;
					this.onChange();
				}
			}
			break;
		case 13:case 108:
			if(!this.multiline) {
				this.cursorIndex = -1;
				this.interactive.blur();
				return;
			} else {
				this.beforeChange();
				if(this.selectionRange != null) {
					this.cutSelection();
				}
				this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + "\n" + HxOverrides.substr(this.text,this.cursorIndex,null));
				this.cursorIndex++;
				this.onChange();
			}
			break;
		default:
			if(e.kind == hxd_EventKind.EKeyDown) {
				return;
			}
			if(e.charCode != 0 && this.canEdit) {
				if(!this.font.hasChar(e.charCode)) {
					return;
				}
				this.beforeChange();
				if(this.selectionRange != null) {
					this.cutSelection();
				}
				var code = e.charCode;
				this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + String.fromCodePoint(code) + HxOverrides.substr(this.text,this.cursorIndex,null));
				this.cursorIndex++;
				this.onChange();
			}
		}
		this.cursorBlink = 0.;
		if(hxd_Key.isDown(16) && this.text == oldText) {
			if(this.cursorIndex == oldIndex) {
				return;
			}
			if(this.selectionRange == null) {
				this.selectionRange = oldIndex < this.cursorIndex ? { start : oldIndex, length : this.cursorIndex - oldIndex} : { start : this.cursorIndex, length : oldIndex - this.cursorIndex};
			} else if(oldIndex == this.selectionRange.start) {
				this.selectionRange.length += oldIndex - this.cursorIndex;
				this.selectionRange.start = this.cursorIndex;
			} else {
				this.selectionRange.length += this.cursorIndex - oldIndex;
			}
			if(this.selectionRange.length == 0) {
				this.selectionRange = null;
			} else if(this.selectionRange.length < 0) {
				this.selectionRange.start += this.selectionRange.length;
				this.selectionRange.length = -this.selectionRange.length;
			}
			this.selectionSize = 0;
		} else {
			this.selectionRange = null;
		}
	}
	,cutSelection: function() {
		if(this.selectionRange == null) {
			return false;
		}
		this.cursorIndex = this.selectionRange.start;
		var end = this.cursorIndex + this.selectionRange.length;
		this.set_text(HxOverrides.substr(this.text,0,this.cursorIndex) + HxOverrides.substr(this.text,end,null));
		this.selectionRange = null;
		return true;
	}
	,getWordEnd: function() {
		var len = this.text.length;
		if(this.cursorIndex >= len) {
			return this.cursorIndex;
		}
		var charset = hxd_Charset.getDefault();
		var ret = this.cursorIndex;
		while(ret < len && charset.isSpace(this.text.charCodeAt(ret))) ++ret;
		while(ret < len && !charset.isSpace(this.text.charCodeAt(ret))) ++ret;
		return ret;
	}
	,getWordStart: function() {
		if(this.cursorIndex <= 0) {
			return this.cursorIndex;
		}
		var charset = hxd_Charset.getDefault();
		var ret = this.cursorIndex;
		while(ret > 0 && charset.isSpace(this.text.charCodeAt(ret - 1))) --ret;
		while(ret > 0 && !charset.isSpace(this.text.charCodeAt(ret - 1))) --ret;
		return ret;
	}
	,setState: function(h) {
		this.set_text(h.t);
		this.cursorIndex = h.c;
		this.selectionRange = h.sel;
		if(this.selectionRange != null) {
			this.cursorIndex = this.selectionRange.start + this.selectionRange.length;
		}
	}
	,curHistoryState: function() {
		return { t : this.text, c : this.cursorIndex, sel : this.selectionRange == null ? null : { start : this.selectionRange.start, length : this.selectionRange.length}};
	}
	,beforeChange: function() {
		var t = HxOverrides.now() / 1000;
		if(t - this.lastChange < 1) {
			this.lastChange = t;
			return;
		}
		this.lastChange = t;
		this.undo.push(this.curHistoryState());
		this.redo = [];
		while(this.undo.length > this.maxHistorySize) this.undo.shift();
	}
	,getAllLines: function() {
		var lines = this.text.split("\n");
		var finalLines = [];
		var _g = 0;
		while(_g < lines.length) {
			var l = lines[_g];
			++_g;
			var splitText = this.splitText(l).split("\n");
			finalLines = finalLines.concat(splitText);
		}
		var _g = 0;
		var _g1 = finalLines.length;
		while(_g < _g1) {
			var i = _g++;
			finalLines[i] += "\n";
		}
		return finalLines;
	}
	,getCurrentLine: function() {
		var lines = this.getAllLines();
		var currIndex = 0;
		var _g = 0;
		var _g1 = lines.length;
		while(_g < _g1) {
			var i = _g++;
			currIndex += lines[i].length;
			if(this.cursorIndex < currIndex) {
				return lines[i];
			}
		}
		return "";
	}
	,getCursorXOffset: function() {
		var lines = this.getAllLines();
		var offset = this.cursorIndex;
		var currLine = this.getCurrentLine();
		var currIndex = 0;
		var _g = 0;
		var _g1 = lines.length;
		while(_g < _g1) {
			var i = _g++;
			currIndex += lines[i].length;
			if(this.cursorIndex < currIndex) {
				break;
			} else {
				offset -= lines[i].length;
			}
		}
		return this.calcTextWidth(HxOverrides.substr(currLine,0,offset));
	}
	,getCursorYOffset: function() {
		var lines = this.getAllLines();
		var currIndex = 0;
		var lineNum = 0;
		var _g = 0;
		var _g1 = lines.length;
		while(_g < _g1) {
			var i = _g++;
			currIndex += lines[i].length;
			if(this.cursorIndex < currIndex) {
				lineNum = i;
				break;
			}
		}
		return lineNum * this.font.lineHeight;
	}
	,set_text: function(t) {
		h2d_Text.prototype.set_text.call(this,t);
		if(this.cursorIndex > t.length) {
			this.cursorIndex = t.length;
		}
		return t;
	}
	,set_font: function(f) {
		h2d_Text.prototype.set_font.call(this,f);
		this.cursorTile = h2d_Tile.fromColor(16777215,1,this.font.size);
		this.cursorTile.dy = 2;
		this.selectionTile = h2d_Tile.fromColor(3381759,0,Math.ceil(this.font.lineHeight));
		return f;
	}
	,initGlyphs: function(text,rebuild) {
		if(rebuild == null) {
			rebuild = true;
		}
		h2d_Text.prototype.initGlyphs.call(this,text,rebuild);
		if(rebuild) {
			this.calcWidth += this.cursorTile.width;
			if(this.inputWidth != null && this.calcWidth > this.inputWidth) {
				this.calcWidth = this.inputWidth;
			}
		}
	}
	,textPos: function(x,y) {
		x += this.scrollX;
		var lineIndex = Math.floor(y / this.font.lineHeight);
		var lines = this.getAllLines();
		var max = lines.length - 1;
		if(lineIndex < 0) {
			lineIndex = 0;
		} else if(lineIndex > max) {
			lineIndex = max;
		}
		var selectedLine = lines[lineIndex];
		var pos = 0;
		var _g = 0;
		var _g1 = lineIndex;
		while(_g < _g1) {
			var i = _g++;
			pos += lines[i].length;
		}
		var linePos = 0;
		while(linePos < selectedLine.length) {
			if(this.calcTextWidth(HxOverrides.substr(selectedLine,0,linePos + 1)) > x) {
				++pos;
				break;
			}
			++pos;
			++linePos;
		}
		return pos - 1;
	}
	,sync: function(ctx) {
		var lines = this.getAllLines();
		var tmp = this.inputWidth != null ? this.inputWidth : this.maxWidth != null ? Math.ceil(this.maxWidth) : this.get_textWidth();
		this.interactive.width = tmp;
		this.interactive.height = this.font.lineHeight * lines.length;
		h2d_Text.prototype.sync.call(this,ctx);
	}
	,draw: function(ctx) {
		if(this.inputWidth != null) {
			var h = this.localToGlobal(new h2d_col_Point(this.inputWidth,this.font.lineHeight));
			ctx.clipRenderZone(this.absX,this.absY,h.x - this.absX,h.y - this.absY);
		}
		if(this.cursorIndex >= 0 && (this.text != this.cursorText || this.cursorIndex != this.cursorXIndex)) {
			if(this.cursorIndex > this.text.length) {
				this.cursorIndex = this.text.length;
			}
			this.cursorText = this.text;
			this.cursorXIndex = this.cursorIndex;
			this.cursorX = this.getCursorXOffset();
			this.cursorY = this.getCursorYOffset();
			if(this.inputWidth != null && this.cursorX - this.scrollX >= this.inputWidth) {
				this.scrollX = this.cursorX - this.inputWidth + 1;
			} else if(this.cursorX < this.scrollX && this.cursorIndex > 0) {
				var a = this.inputWidth;
				var b = this.cursorX | 0;
				this.scrollX = this.cursorX - (a > b ? b : a);
			} else if(this.cursorX < this.scrollX) {
				this.scrollX = this.cursorX;
			}
		}
		this.absX -= this.scrollX * this.matA;
		this.absY -= this.scrollX * this.matC;
		if(this.selectionRange != null) {
			var lines = this.getAllLines();
			var lineOffset = 0;
			var _g = 0;
			var _g1 = lines.length;
			while(_g < _g1) {
				var i = _g++;
				var line = lines[i];
				var selEnd = line.length;
				if(this.selectionRange.start > lineOffset + line.length || this.selectionRange.start + this.selectionRange.length < lineOffset) {
					lineOffset += line.length;
					continue;
				}
				var selStart = Math.floor(Math.max(0,this.selectionRange.start - lineOffset));
				var selEnd1 = Math.floor(Math.min(line.length - selStart,this.selectionRange.length + this.selectionRange.start - lineOffset - selStart));
				this.selectionPos = this.calcTextWidth(HxOverrides.substr(line,0,selStart));
				this.selectionSize = this.calcTextWidth(HxOverrides.substr(line,selStart,selEnd1));
				if(this.selectionRange.start + this.selectionRange.length == this.text.length) {
					this.selectionSize += this.cursorTile.width;
				}
				this.selectionTile.dx += this.selectionPos;
				this.selectionTile.dy += i * this.font.lineHeight;
				this.selectionTile.width += this.selectionSize;
				this.emitTile(ctx,this.selectionTile);
				this.selectionTile.dx -= this.selectionPos;
				this.selectionTile.dy -= i * this.font.lineHeight;
				this.selectionTile.width -= this.selectionSize;
				lineOffset += line.length;
			}
		}
		h2d_Text.prototype.draw.call(this,ctx);
		this.absX += this.scrollX * this.matA;
		this.absY += this.scrollX * this.matC;
		if(this.cursorIndex >= 0) {
			this.cursorBlink += ctx.elapsedTime;
			if(this.cursorBlink % (this.cursorBlinkTime * 2) < this.cursorBlinkTime) {
				this.cursorTile.dx += this.cursorX - this.scrollX;
				this.cursorTile.dy += this.cursorY;
				this.emitTile(ctx,this.cursorTile);
				this.cursorTile.dx -= this.cursorX - this.scrollX;
				this.cursorTile.dy -= this.cursorY;
			}
		}
		if(this.inputWidth != null) {
			ctx.popRenderZone();
		}
	}
	,focus: function() {
		this.interactive.focus();
		if(this.cursorIndex < 0) {
			this.cursorIndex = 0;
			if(this.text != "") {
				this.selectionRange = { start : 0, length : this.text.length};
			}
		}
	}
	,onOut: function(e) {
	}
	,onOver: function(e) {
	}
	,onMove: function(e) {
	}
	,onClick: function(e) {
	}
	,onPush: function(e) {
	}
	,onRelease: function(e) {
	}
	,onKeyDown: function(e) {
	}
	,onKeyUp: function(e) {
	}
	,onTextInput: function(e) {
	}
	,onFocus: function(e) {
	}
	,onFocusLost: function(e) {
	}
	,onChange: function() {
	}
	,drawRec: function(ctx) {
		var old = this.interactive.visible;
		this.interactive.set_visible(false);
		this.interactive.draw(ctx);
		h2d_Text.prototype.drawRec.call(this,ctx);
		this.interactive.set_visible(old);
	}
	,__class__: h2d_TextInput
});
var h2d_Tile = function(tex,x,y,w,h,dx,dy) {
	if(dy == null) {
		dy = 0;
	}
	if(dx == null) {
		dx = 0;
	}
	this.innerTex = tex;
	this.x = x;
	this.y = y;
	this.width = w;
	this.height = h;
	this.dx = dx;
	this.dy = dy;
	if(tex != null) {
		this.setTexture(tex);
	}
};
$hxClasses["h2d.Tile"] = h2d_Tile;
h2d_Tile.__name__ = "h2d.Tile";
h2d_Tile.fromColor = function(color,width,height,alpha) {
	if(alpha == null) {
		alpha = 1.;
	}
	if(height == null) {
		height = 1;
	}
	if(width == null) {
		width = 1;
	}
	var t = new h2d_Tile(h3d_mat_Texture.fromColor(color,alpha),0,0,1,1);
	t.width = width;
	t.height = height;
	return t;
};
h2d_Tile.fromBitmap = function(bmp) {
	var tex = h3d_mat_Texture.fromBitmap(bmp);
	return new h2d_Tile(tex,0,0,bmp.ctx.canvas.width,bmp.ctx.canvas.height);
};
h2d_Tile.fromTexture = function(t) {
	return new h2d_Tile(t,0,0,t.width,t.height);
};
h2d_Tile.prototype = {
	innerTex: null
	,u: null
	,v: null
	,u2: null
	,v2: null
	,dx: null
	,dy: null
	,x: null
	,y: null
	,width: null
	,height: null
	,setTexture: function(tex) {
		this.innerTex = tex;
		if(tex != null) {
			this.u = this.x / tex.width;
			this.v = this.y / tex.height;
			this.u2 = (this.x + this.width) / tex.width;
			this.v2 = (this.y + this.height) / tex.height;
		}
	}
	,sub: function(x,y,w,h,dx,dy) {
		if(dy == null) {
			dy = 0.;
		}
		if(dx == null) {
			dx = 0.;
		}
		return new h2d_Tile(this.innerTex,this.x + x,this.y + y,w,h,dx,dy);
	}
	,scaleToSize: function(w,h) {
		this.width = w;
		this.height = h;
	}
	,dispose: function() {
		if(this.innerTex != null) {
			this.innerTex.dispose();
		}
		this.innerTex = null;
	}
	,clone: function() {
		var t = new h2d_Tile(null,this.x,this.y,this.width,this.height,this.dx,this.dy);
		t.innerTex = this.innerTex;
		t.u = this.u;
		t.u2 = this.u2;
		t.v = this.v;
		t.v2 = this.v2;
		return t;
	}
	,__class__: h2d_Tile
};
var h2d_TileLayerContent = function() {
	this.useAllocatorLimit = 1024;
	h3d_prim_Primitive.call(this);
	this.state = new h2d_impl_BatchDrawState();
	this.clear();
};
$hxClasses["h2d.TileLayerContent"] = h2d_TileLayerContent;
h2d_TileLayerContent.__name__ = "h2d.TileLayerContent";
h2d_TileLayerContent.__super__ = h3d_prim_Primitive;
h2d_TileLayerContent.prototype = $extend(h3d_prim_Primitive.prototype,{
	tmp: null
	,xMin: null
	,yMin: null
	,xMax: null
	,yMax: null
	,useAllocatorLimit: null
	,state: null
	,clear: function() {
		this.tmp = hxd__$FloatBuffer_Float32Expand._new(0);
		if(this.buffer != null) {
			if(this.buffer.vertices * 8 < this.useAllocatorLimit) {
				hxd_impl_Allocator.get().disposeBuffer(this.buffer);
			} else {
				this.buffer.dispose();
			}
		}
		this.buffer = null;
		this.xMin = Infinity;
		this.yMin = Infinity;
		this.xMax = -Infinity;
		this.yMax = -Infinity;
		this.state.clear();
	}
	,triCount: function() {
		if(this.buffer == null) {
			return this.tmp.pos >> 4;
		} else {
			return this.buffer.vertices >> 1;
		}
	}
	,add: function(x,y,r,g,b,a,t) {
		var sx = x + t.dx;
		var sy = y + t.dy;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = sx;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = sy;
		var this1 = this.tmp;
		var v = t.u;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.v;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = r;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = g;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = b;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = a;
		var this1 = this.tmp;
		var v = sx + t.width;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = sy;
		var this1 = this.tmp;
		var v = t.u2;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.v;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = r;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = g;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = b;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = a;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = sx;
		var this1 = this.tmp;
		var v = sy + t.height;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.u;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.v2;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = r;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = g;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = b;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = a;
		var this1 = this.tmp;
		var v = sx + t.width;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = sy + t.height;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.u2;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		var v = t.v2;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = v;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = r;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = g;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = b;
		var this1 = this.tmp;
		if(this1.pos == this1.array.length) {
			var newSize = this1.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(this1.array);
			this1.array = newArray;
		}
		this1.array[this1.pos++] = a;
		var x1 = x + t.dx;
		var y1 = y + t.dy;
		if(x1 < this.xMin) {
			this.xMin = x1;
		}
		if(y1 < this.yMin) {
			this.yMin = y1;
		}
		x1 += t.width;
		y1 += t.height;
		if(x1 > this.xMax) {
			this.xMax = x1;
		}
		if(y1 > this.yMax) {
			this.yMax = y1;
		}
		if(t != null) {
			this.state.setTexture(t.innerTex);
		}
		var _this = this.state;
		_this.tail.count += 4;
		_this.totalCount += 4;
	}
	,alloc: function(engine) {
		if(this.tmp == null) {
			this.clear();
		}
		if(this.tmp.pos > 0) {
			this.buffer = this.tmp.pos < this.useAllocatorLimit ? hxd_impl_Allocator.get().ofFloats(this.tmp,hxd_BufferFormat.get_XY_UV_RGBA()) : h3d_Buffer.ofFloats(this.tmp,hxd_BufferFormat.get_XY_UV_RGBA());
		}
	}
	,dispose: function() {
		if(this.buffer != null) {
			if(this.buffer.vertices * 8 < this.useAllocatorLimit) {
				hxd_impl_Allocator.get().disposeBuffer(this.buffer);
			} else {
				this.buffer.dispose();
			}
			this.buffer = null;
		}
		h3d_prim_Primitive.prototype.dispose.call(this);
	}
	,__class__: h2d_TileLayerContent
});
var h2d_TileGroup = function(t,parent) {
	h2d_Drawable.call(this,parent);
	this.tile = t;
	this.rangeMin = this.rangeMax = -1;
	this.curColor = new h3d_Vector(1,1,1,1);
	this.content = new h2d_TileLayerContent();
};
$hxClasses["h2d.TileGroup"] = h2d_TileGroup;
h2d_TileGroup.__name__ = "h2d.TileGroup";
h2d_TileGroup.__super__ = h2d_Drawable;
h2d_TileGroup.prototype = $extend(h2d_Drawable.prototype,{
	content: null
	,curColor: null
	,tile: null
	,rangeMin: null
	,rangeMax: null
	,getBoundsRec: function(relativeTo,out,forSize) {
		h2d_Drawable.prototype.getBoundsRec.call(this,relativeTo,out,forSize);
		this.addBounds(relativeTo,out,this.content.xMin,this.content.yMin,this.content.xMax - this.content.xMin,this.content.yMax - this.content.yMin);
	}
	,clear: function() {
		this.content.clear();
	}
	,onRemove: function() {
		this.content.dispose();
		h2d_Drawable.prototype.onRemove.call(this);
	}
	,draw: function(ctx) {
		this.drawWith(ctx,this);
	}
	,sync: function(ctx) {
		h2d_Drawable.prototype.sync.call(this,ctx);
		if(this.visible) {
			var _this = this.content;
			if(_this.buffer == null || _this.buffer.vbuf == null) {
				_this.alloc(h3d_Engine.CURRENT);
			}
		}
	}
	,drawWith: function(ctx,obj) {
		var max = this.content.triCount();
		if(max == 0) {
			return;
		}
		if(!ctx.beginDrawBatchState(obj)) {
			return;
		}
		var min = this.rangeMin < 0 ? 0 : this.rangeMin * 2;
		if(this.rangeMax > 0 && this.rangeMax < max * 2) {
			max = this.rangeMax * 2;
		}
		var _this = this.content;
		if(_this.buffer == null || _this.buffer.vbuf == null) {
			_this.alloc(h3d_Engine.CURRENT);
		}
		_this.state.drawQuads(ctx,_this.buffer,min,max - min);
	}
	,__class__: h2d_TileGroup
});
var h2d_col_Collider = function() { };
$hxClasses["h2d.col.Collider"] = h2d_col_Collider;
h2d_col_Collider.__name__ = "h2d.col.Collider";
h2d_col_Collider.prototype = {
	contains: null
	,__class__: h2d_col_Collider
};
var h2d_col_Bounds = function() {
	this.xMin = 1e20;
	this.yMin = 1e20;
	this.xMax = -1e20;
	this.yMax = -1e20;
};
$hxClasses["h2d.col.Bounds"] = h2d_col_Bounds;
h2d_col_Bounds.__name__ = "h2d.col.Bounds";
h2d_col_Bounds.__super__ = h2d_col_Collider;
h2d_col_Bounds.prototype = $extend(h2d_col_Collider.prototype,{
	xMin: null
	,yMin: null
	,xMax: null
	,yMax: null
	,contains: function(p) {
		if(p.x >= this.xMin && p.x < this.xMax && p.y >= this.yMin) {
			return p.y < this.yMax;
		} else {
			return false;
		}
	}
	,__class__: h2d_col_Bounds
});
var h2d_filter_Filter = function() {
	this.useScreenResolution = h2d_filter_Filter.defaultUseScreenResolution;
	this.resolutionScale = 1;
	this.enable = true;
	this.smooth = false;
	this.boundsExtend = 0.;
	this.autoBounds = true;
};
$hxClasses["h2d.filter.Filter"] = h2d_filter_Filter;
h2d_filter_Filter.__name__ = "h2d.filter.Filter";
h2d_filter_Filter.prototype = {
	autoBounds: null
	,boundsExtend: null
	,smooth: null
	,enable: null
	,resolutionScale: null
	,useScreenResolution: null
	,get_enable: function() {
		return this.enable;
	}
	,sync: function(ctx,s) {
	}
	,bind: function(s) {
	}
	,unbind: function(s) {
	}
	,getBounds: function(s,bounds,scale) {
		s.getBounds(s,bounds);
		bounds.xMin = bounds.xMin * scale.x - this.boundsExtend;
		bounds.xMax = bounds.xMax * scale.x + this.boundsExtend;
		bounds.yMin = bounds.yMin * scale.y - this.boundsExtend;
		bounds.yMax = bounds.yMax * scale.y + this.boundsExtend;
	}
	,draw: function(ctx,input) {
		return input;
	}
	,__class__: h2d_filter_Filter
	,__properties__: {get_enable:"get_enable"}
};
var h2d_filter_Blur = function(radius,gain,quality,linear) {
	if(linear == null) {
		linear = 0.;
	}
	if(quality == null) {
		quality = 1.;
	}
	if(gain == null) {
		gain = 1.;
	}
	if(radius == null) {
		radius = 1.;
	}
	h2d_filter_Filter.call(this);
	this.smooth = true;
	this.pass = new h3d_pass_Blur(radius,gain,linear,quality);
};
$hxClasses["h2d.filter.Blur"] = h2d_filter_Blur;
h2d_filter_Blur.__name__ = "h2d.filter.Blur";
h2d_filter_Blur.__super__ = h2d_filter_Filter;
h2d_filter_Blur.prototype = $extend(h2d_filter_Filter.prototype,{
	pass: null
	,sync: function(ctx,s) {
		this.boundsExtend = this.pass.radius * 2;
	}
	,draw: function(ctx,t) {
		var out = t.innerTex;
		var old = out.filter;
		out.set_filter(h3d_mat_Filter.Linear);
		this.pass.apply(ctx,out);
		out.set_filter(old);
		return t;
	}
	,__class__: h2d_filter_Blur
});
var h2d_filter_Glow = function(color,alpha,radius,gain,quality,smoothColor) {
	if(smoothColor == null) {
		smoothColor = false;
	}
	if(quality == null) {
		quality = 1.;
	}
	if(gain == null) {
		gain = 1.;
	}
	if(radius == null) {
		radius = 1.;
	}
	if(alpha == null) {
		alpha = 1.;
	}
	if(color == null) {
		color = 16777215;
	}
	h2d_filter_Blur.call(this,radius,gain,quality);
	this.color = color;
	this.alpha = alpha;
	this.smoothColor = smoothColor;
	var _this = this.pass.shader;
	_this.constModified = true;
	_this.hasFixedColor__ = true;
};
$hxClasses["h2d.filter.Glow"] = h2d_filter_Glow;
h2d_filter_Glow.__name__ = "h2d.filter.Glow";
h2d_filter_Glow.__super__ = h2d_filter_Blur;
h2d_filter_Glow.prototype = $extend(h2d_filter_Blur.prototype,{
	color: null
	,alpha: null
	,knockout: null
	,smoothColor: null
	,setParams: function() {
		var _this = this.pass.shader.fixedColor__;
		var c = this.color;
		_this.x = (c >> 16 & 255) / 255;
		_this.y = (c >> 8 & 255) / 255;
		_this.z = (c & 255) / 255;
		_this.w = (c >>> 24) / 255;
		this.pass.shader.fixedColor__.w = this.smoothColor ? this.alpha * 1.5 : this.alpha;
		var _this = this.pass.shader;
		_this.constModified = true;
		_this.smoothFixedColor__ = this.smoothColor;
	}
	,draw: function(ctx,t) {
		this.setParams();
		var tex = t.innerTex;
		var old = tex.filter;
		var save = ctx.textures.allocTileTarget("glowSave",t);
		h3d_pass_Copy.run(tex,save,h2d_BlendMode.None);
		tex.set_filter(h3d_mat_Filter.Linear);
		this.pass.apply(ctx,tex);
		tex.set_filter(old);
		if(this.knockout) {
			h3d_pass_Copy.run(save,tex,h2d_BlendMode.Erase);
		} else {
			h3d_pass_Copy.run(save,tex,h2d_BlendMode.Alpha);
		}
		return t;
	}
	,__class__: h2d_filter_Glow
});
var h2d_filter_DropShadow = function(distance,angle,color,alpha,radius,gain,quality,smoothColor) {
	if(smoothColor == null) {
		smoothColor = false;
	}
	if(quality == null) {
		quality = 1.;
	}
	if(gain == null) {
		gain = 1;
	}
	if(radius == null) {
		radius = 1.;
	}
	if(alpha == null) {
		alpha = 1.;
	}
	if(color == null) {
		color = 0;
	}
	if(angle == null) {
		angle = 0.785;
	}
	if(distance == null) {
		distance = 4.;
	}
	this.alphaPass = new h3d_mat_Pass("");
	h2d_filter_Glow.call(this,color,alpha,radius,gain,quality,smoothColor);
	this.distance = distance;
	this.angle = angle;
	this.alphaPass.addShader(new h3d_shader_UVDelta());
};
$hxClasses["h2d.filter.DropShadow"] = h2d_filter_DropShadow;
h2d_filter_DropShadow.__name__ = "h2d.filter.DropShadow";
h2d_filter_DropShadow.__super__ = h2d_filter_Glow;
h2d_filter_DropShadow.prototype = $extend(h2d_filter_Glow.prototype,{
	distance: null
	,angle: null
	,alphaPass: null
	,sync: function(ctx,s) {
		h2d_filter_Glow.prototype.sync.call(this,ctx,s);
		var f = Math.cos(this.angle) * this.distance;
		var a = f < 0 ? -f : f;
		var f = Math.sin(this.angle) * this.distance;
		var b = f < 0 ? -f : f;
		this.boundsExtend += a < b ? b : a;
	}
	,draw: function(ctx,t) {
		this.setParams();
		var save = ctx.textures.allocTileTarget("glowSave",t);
		h3d_pass_Copy.run(t.innerTex,save,h2d_BlendMode.None);
		this.pass.apply(ctx,save);
		var dx = Math.round(Math.cos(this.angle) * this.distance);
		var dy = Math.round(Math.sin(this.angle) * this.distance);
		var _this = this.alphaPass.getShader(h3d_shader_UVDelta).uvDelta__;
		var x = dx / t.width;
		var y = dy / t.height;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		h3d_pass_Copy.run(t.innerTex,save,h2d_BlendMode.Alpha,this.alphaPass);
		var ret = h2d_Tile.fromTexture(save);
		ret.dx = dx;
		ret.dy = dy;
		return ret;
	}
	,__class__: h2d_filter_DropShadow
});
var h2d_impl_BatchDrawState = function() {
	this.head = this.tail = new h2d_impl__$BatchDrawState_StateEntry(null);
	this.totalCount = 0;
};
$hxClasses["h2d.impl.BatchDrawState"] = h2d_impl_BatchDrawState;
h2d_impl_BatchDrawState.__name__ = "h2d.impl.BatchDrawState";
h2d_impl_BatchDrawState.prototype = {
	totalCount: null
	,head: null
	,tail: null
	,setTexture: function(texture) {
		if(texture != null) {
			if(this.tail.texture == null) {
				this.tail.texture = texture;
			} else if(this.tail.texture != texture) {
				var cur = this.tail;
				if(cur.count == 0) {
					cur.set(texture);
				} else if(cur.next == null) {
					cur.next = this.tail = new h2d_impl__$BatchDrawState_StateEntry(texture);
				} else {
					this.tail = cur.next.set(texture);
				}
			}
		}
	}
	,clear: function() {
		var state = this.head;
		do {
			state.texture = null;
			state = state.next;
		} while(state != null);
		this.tail = this.head;
		this.tail.count = 0;
		this.totalCount = 0;
	}
	,drawQuads: function(ctx,buffer,offset,length) {
		if(length == null) {
			length = -1;
		}
		if(offset == null) {
			offset = 0;
		}
		var state = this.head;
		var last = this.tail.next;
		var engine = ctx.engine;
		var stateLen;
		if(offset == 0 && length == -1) {
			do {
				ctx.texture = state.texture;
				ctx.beforeDraw();
				stateLen = state.count >> 1;
				var start = offset;
				var max = stateLen;
				if(max == null) {
					max = -1;
				}
				if(start == null) {
					start = 0;
				}
				engine.renderBuffer(buffer,engine.mem.getQuadIndexes(buffer.vertices),2,start,max);
				offset += stateLen;
				state = state.next;
			} while(state != last);
		} else {
			if(length == -1) {
				length = (this.totalCount >> 1) - offset;
			}
			var caret = 0;
			do {
				stateLen = state.count >> 1;
				if(caret + stateLen >= offset) {
					var stateMin = offset >= caret ? offset : caret;
					var stateLen1 = length > stateLen ? stateLen : length;
					ctx.texture = state.texture;
					ctx.beforeDraw();
					var start = stateMin;
					var max = stateLen1;
					if(max == null) {
						max = -1;
					}
					if(start == null) {
						start = 0;
					}
					engine.renderBuffer(buffer,engine.mem.getQuadIndexes(buffer.vertices),2,start,max);
					length -= stateLen1;
					if(length == 0) {
						break;
					}
				}
				caret += stateLen;
				state = state.next;
			} while(state != last);
		}
	}
	,drawIndexed: function(ctx,buffer,indices,offset,length) {
		if(length == null) {
			length = -1;
		}
		if(offset == null) {
			offset = 0;
		}
		var state = this.head;
		var last = this.tail.next;
		var engine = ctx.engine;
		var stateLen;
		if(offset == 0 && length == -1) {
			do {
				ctx.texture = state.texture;
				ctx.beforeDraw();
				stateLen = state.count / 3 | 0;
				engine.renderIndexed(buffer,indices,offset,stateLen);
				offset += stateLen;
				state = state.next;
			} while(state != last);
		} else {
			if(length == -1) {
				length = this.totalCount / 3 | 0;
			}
			var caret = 0;
			do {
				stateLen = state.count / 3 | 0;
				if(caret + stateLen >= offset) {
					var stateMin = offset >= caret ? offset : caret;
					var stateLen1 = length > stateLen ? stateLen : length;
					ctx.texture = state.texture;
					ctx.beforeDraw();
					engine.renderIndexed(buffer,indices,stateMin,stateLen1);
					length -= stateLen1;
					if(length == 0) {
						break;
					}
				}
				caret += stateLen;
				state = state.next;
			} while(state != last);
		}
	}
	,__class__: h2d_impl_BatchDrawState
};
var h2d_impl__$BatchDrawState_StateEntry = function(texture) {
	this.texture = texture;
	this.count = 0;
};
$hxClasses["h2d.impl._BatchDrawState.StateEntry"] = h2d_impl__$BatchDrawState_StateEntry;
h2d_impl__$BatchDrawState_StateEntry.__name__ = "h2d.impl._BatchDrawState.StateEntry";
h2d_impl__$BatchDrawState_StateEntry.prototype = {
	texture: null
	,count: null
	,next: null
	,set: function(texture) {
		this.texture = texture;
		this.count = 0;
		return this;
	}
	,__class__: h2d_impl__$BatchDrawState_StateEntry
};
var h3d_BufferFlag = $hxEnums["h3d.BufferFlag"] = { __ename__:"h3d.BufferFlag",__constructs__:null
	,Dynamic: {_hx_name:"Dynamic",_hx_index:0,__enum__:"h3d.BufferFlag",toString:$estr}
	,NoAlloc: {_hx_name:"NoAlloc",_hx_index:1,__enum__:"h3d.BufferFlag",toString:$estr}
	,UniformBuffer: {_hx_name:"UniformBuffer",_hx_index:2,__enum__:"h3d.BufferFlag",toString:$estr}
};
h3d_BufferFlag.__constructs__ = [h3d_BufferFlag.Dynamic,h3d_BufferFlag.NoAlloc,h3d_BufferFlag.UniformBuffer];
h3d_BufferFlag.__empty_constructs__ = [h3d_BufferFlag.Dynamic,h3d_BufferFlag.NoAlloc,h3d_BufferFlag.UniformBuffer];
var h3d_Buffer = function(vertices,format,flags) {
	this.id = h3d_Buffer.GUID++;
	this.vertices = vertices;
	this.format = format;
	this.flags = 0;
	if(flags != null) {
		var _g = 0;
		while(_g < flags.length) {
			var f = flags[_g];
			++_g;
			this.flags |= 1 << f._hx_index;
		}
	}
	this.engine = h3d_Engine.CURRENT;
	if((this.flags & 1 << h3d_BufferFlag.NoAlloc._hx_index) == 0) {
		this.engine.mem.allocBuffer(this);
	}
};
$hxClasses["h3d.Buffer"] = h3d_Buffer;
h3d_Buffer.__name__ = "h3d.Buffer";
h3d_Buffer.ofFloats = function(v,format,flags) {
	var nvert = v.pos / format.stride | 0;
	var b = new h3d_Buffer(nvert,format,flags);
	b.uploadFloats(v,0,nvert);
	return b;
};
h3d_Buffer.prototype = {
	id: null
	,engine: null
	,vbuf: null
	,vertices: null
	,format: null
	,flags: null
	,dispose: function() {
		if(this.vbuf != null) {
			this.engine.mem.freeBuffer(this);
			this.vbuf = null;
		}
	}
	,uploadFloats: function(buf,bufPos,vertices,startVertice) {
		if(startVertice == null) {
			startVertice = 0;
		}
		if(startVertice < 0 || vertices < 0 || startVertice + vertices > this.vertices) {
			throw haxe_Exception.thrown("Invalid vertices count");
		}
		if(this.format.hasLowPrecision) {
			throw haxe_Exception.thrown("Can't upload floats on low precision buffer");
		}
		if(vertices == 0) {
			return;
		}
		this.engine.driver.uploadBufferData(this,startVertice,vertices,buf,bufPos);
	}
	,__class__: h3d_Buffer
};
var h3d_Camera = function(fovY,zoom,screenRatio,zNear,zFar,rightHanded) {
	if(rightHanded == null) {
		rightHanded = false;
	}
	if(zFar == null) {
		zFar = 4000.;
	}
	if(zNear == null) {
		zNear = 0.02;
	}
	if(screenRatio == null) {
		screenRatio = 1.333333;
	}
	if(zoom == null) {
		zoom = 1.;
	}
	if(fovY == null) {
		fovY = 25.;
	}
	this.viewY = 0.;
	this.viewX = 0.;
	this.fovY = fovY;
	this.zoom = zoom;
	this.screenRatio = screenRatio;
	this.zNear = zNear;
	this.zFar = zFar;
	this.rightHanded = rightHanded;
	this.pos = new h3d_Vector(2,3,4);
	this.up = new h3d_Vector(0,0,1);
	this.target = new h3d_Vector(0,0,0);
	this.m = new h3d_Matrix();
	this.mcam = new h3d_Matrix();
	this.mproj = new h3d_Matrix();
	this.frustum = new h3d_col_Frustum();
	this.update();
};
$hxClasses["h3d.Camera"] = h3d_Camera;
h3d_Camera.__name__ = "h3d.Camera";
h3d_Camera.prototype = {
	zoom: null
	,screenRatio: null
	,fovY: null
	,zNear: null
	,zFar: null
	,orthoBounds: null
	,rightHanded: null
	,mproj: null
	,mcam: null
	,m: null
	,pos: null
	,up: null
	,target: null
	,viewX: null
	,viewY: null
	,follow: null
	,frustum: null
	,minv: null
	,mcamInv: null
	,mprojInv: null
	,needInv: null
	,getInverseViewProj: function() {
		if(this.minv == null) {
			this.minv = new h3d_Matrix();
		}
		if(this.needInv) {
			this.minv.initInverse(this.m);
			this.needInv = false;
		}
		return this.minv;
	}
	,getInverseView: function() {
		if(this.mcamInv == null) {
			this.mcamInv = new h3d_Matrix();
			this.mcamInv._44 = 0;
		}
		if(this.mcamInv._44 == 0) {
			this.mcamInv.initInverse(this.mcam);
		}
		return this.mcamInv;
	}
	,unproject: function(screenX,screenY,camZ) {
		var p = new h3d_Vector(screenX,screenY,camZ);
		var m = this.getInverseViewProj();
		var px = p.x * m._11 + p.y * m._21 + p.z * m._31 + p.w * m._41;
		var py = p.x * m._12 + p.y * m._22 + p.z * m._32 + p.w * m._42;
		var pz = p.x * m._13 + p.y * m._23 + p.z * m._33 + p.w * m._43;
		var iw = 1 / (p.x * m._14 + p.y * m._24 + p.z * m._34 + p.w * m._44);
		p.x = px * iw;
		p.y = py * iw;
		p.z = pz * iw;
		p.w = 1;
		return p;
	}
	,update: function() {
		if(this.follow != null) {
			var fpos = this.follow.pos.localToGlobal();
			var ftarget = this.follow.target.localToGlobal();
			var _this = this.pos;
			var x = fpos.x;
			var y = fpos.y;
			var z = fpos.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.;
			var _this = this.target;
			var x = ftarget.x;
			var y = ftarget.y;
			var z = ftarget.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			_this.x = x;
			_this.y = y;
			_this.z = z;
			_this.w = 1.;
			if(this.follow.pos.name != null) {
				var p = this.follow.pos;
				while(p != null) {
					if(p.currentAnimation != null) {
						var v = p.currentAnimation.getPropValue(this.follow.pos.name,"FOVY");
						if(v != null) {
							this.fovY = v;
							break;
						}
					}
					p = p.parent;
				}
			}
		}
		this.makeCameraMatrix(this.mcam);
		this.makeFrustumMatrix(this.mproj);
		this.m.multiply(this.mcam,this.mproj);
		this.needInv = true;
		if(this.mcamInv != null) {
			this.mcamInv._44 = 0;
		}
		if(this.mprojInv != null) {
			this.mprojInv._44 = 0;
		}
		this.frustum.loadMatrix(this.m);
	}
	,makeCameraMatrix: function(m) {
		var _this = this.target;
		var v = this.pos;
		var x = _this.x - v.x;
		var y = _this.y - v.y;
		var z = _this.z - v.z;
		var w = _this.w - v.w;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var az_x = x;
		var az_y = y;
		var az_z = z;
		var az_w = w;
		if(this.rightHanded) {
			az_x *= -1;
			az_y *= -1;
			az_z *= -1;
		}
		var k = az_x * az_x + az_y * az_y + az_z * az_z;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		az_x *= k;
		az_y *= k;
		az_z *= k;
		var _this = this.up;
		var x = _this.y * az_z - _this.z * az_y;
		var y = _this.z * az_x - _this.x * az_z;
		var z = _this.x * az_y - _this.y * az_x;
		var w = 1;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var ax_x = x;
		var ax_y = y;
		var ax_z = z;
		var ax_w = w;
		var k = ax_x * ax_x + ax_y * ax_y + ax_z * ax_z;
		if(k < 1e-10) {
			k = 0;
		} else {
			k = 1. / Math.sqrt(k);
		}
		ax_x *= k;
		ax_y *= k;
		ax_z *= k;
		if(Math.sqrt(ax_x * ax_x + ax_y * ax_y + ax_z * ax_z) == 0) {
			ax_x = az_y;
			ax_y = az_z;
			ax_z = az_x;
		}
		var x = az_y * ax_z - az_z * ax_y;
		var y = az_z * ax_x - az_x * ax_z;
		var z = az_x * ax_y - az_y * ax_x;
		var w = 1;
		if(w == null) {
			w = 1.;
		}
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var ay_x = x;
		var ay_y = y;
		var ay_z = z;
		var ay_w = w;
		m._11 = ax_x;
		m._12 = ay_x;
		m._13 = az_x;
		m._14 = 0;
		m._21 = ax_y;
		m._22 = ay_y;
		m._23 = az_y;
		m._24 = 0;
		m._31 = ax_z;
		m._32 = ay_z;
		m._33 = az_z;
		m._34 = 0;
		var v = this.pos;
		m._41 = -(ax_x * v.x + ax_y * v.y + ax_z * v.z);
		var v = this.pos;
		m._42 = -(ay_x * v.x + ay_y * v.y + ay_z * v.z);
		var v = this.pos;
		m._43 = -(az_x * v.x + az_y * v.y + az_z * v.z);
		m._44 = 1;
	}
	,makeFrustumMatrix: function(m) {
		m.zero();
		var bounds = this.orthoBounds;
		if(bounds != null) {
			var w = 1 / (bounds.xMax - bounds.xMin);
			var h = 1 / (bounds.yMax - bounds.yMin);
			var d = 1 / (bounds.zMax - bounds.zMin);
			m._11 = 2 * w;
			m._22 = 2 * h;
			m._33 = d;
			m._41 = -(bounds.xMin + bounds.xMax) * w;
			m._42 = -(bounds.yMin + bounds.yMax) * h;
			m._43 = -bounds.zMin * d;
			m._44 = 1;
		} else {
			var degToRad = Math.PI / 180;
			var halfFovX = Math.atan(Math.tan(this.fovY * 0.5 * degToRad) * this.screenRatio);
			var scale = this.zoom / Math.tan(halfFovX);
			m._11 = scale;
			m._22 = scale * this.screenRatio;
			m._33 = this.zFar / (this.zFar - this.zNear);
			m._34 = 1;
			m._43 = -(this.zNear * this.zFar) / (this.zFar - this.zNear);
		}
		m._11 += this.viewX * m._14;
		m._21 += this.viewX * m._24;
		m._31 += this.viewX * m._34;
		m._41 += this.viewX * m._44;
		m._12 += this.viewY * m._14;
		m._22 += this.viewY * m._24;
		m._32 += this.viewY * m._34;
		m._42 += this.viewY * m._44;
		if(this.rightHanded) {
			m._33 *= -1;
			m._34 *= -1;
		}
	}
	,distanceToDepth: function(dist) {
		var min = this.zNear;
		var max = this.zFar;
		if(max == null) {
			max = 1.;
		}
		if(min == null) {
			min = 0.;
		}
		return ((this.zFar + this.zNear - 2.0 * this.zNear * this.zFar / (dist < min ? min : dist > max ? max : dist)) / (this.zFar - this.zNear) + 1.0) / 2.0;
	}
	,__class__: h3d_Camera
};
var h3d__$Engine_TargetTmp = function(t,n,l,m,db) {
	this.t = t;
	this.next = n;
	this.layer = l;
	this.mipLevel = m;
	this.depthBinding = db;
};
$hxClasses["h3d._Engine.TargetTmp"] = h3d__$Engine_TargetTmp;
h3d__$Engine_TargetTmp.__name__ = "h3d._Engine.TargetTmp";
h3d__$Engine_TargetTmp.prototype = {
	t: null
	,textures: null
	,next: null
	,layer: null
	,mipLevel: null
	,depthBinding: null
	,__class__: h3d__$Engine_TargetTmp
};
var h3d_DepthBinding = $hxEnums["h3d.DepthBinding"] = { __ename__:"h3d.DepthBinding",__constructs__:null
	,ReadWrite: {_hx_name:"ReadWrite",_hx_index:0,__enum__:"h3d.DepthBinding",toString:$estr}
	,ReadOnly: {_hx_name:"ReadOnly",_hx_index:1,__enum__:"h3d.DepthBinding",toString:$estr}
	,DepthOnly: {_hx_name:"DepthOnly",_hx_index:2,__enum__:"h3d.DepthBinding",toString:$estr}
	,NotBound: {_hx_name:"NotBound",_hx_index:3,__enum__:"h3d.DepthBinding",toString:$estr}
};
h3d_DepthBinding.__constructs__ = [h3d_DepthBinding.ReadWrite,h3d_DepthBinding.ReadOnly,h3d_DepthBinding.DepthOnly,h3d_DepthBinding.NotBound];
h3d_DepthBinding.__empty_constructs__ = [h3d_DepthBinding.ReadWrite,h3d_DepthBinding.ReadOnly,h3d_DepthBinding.DepthOnly,h3d_DepthBinding.NotBound];
var h3d_Engine = function() {
	this.resCache = new haxe_ds_ObjectMap();
	this.ready = false;
	this.inRender = false;
	this.textureColorCache = new haxe_ds_IntMap();
	this.tmpVector = new h3d_Vector();
	this.backgroundColor = -16777216;
	this.hardware = !h3d_Engine.SOFTWARE_DRIVER;
	this.antiAlias = h3d_Engine.ANTIALIASING;
	this.autoResize = true;
	this.set_fullScreen(!hxd_System.getValue(hxd_SystemValue.IsWindowed));
	this.window = hxd_Window.getInstance();
	this.realFps = hxd_System.getDefaultFrameRate();
	this.lastTime = HxOverrides.now() / 1000;
	this.window.addResizeEvent($bind(this,this.onWindowResize));
	this.driver = js_Browser.get_supported() ? new h3d_impl_GlDriver(this.antiAlias) : new h3d_impl_NullDriver();
	h3d_Engine.CURRENT = this;
};
$hxClasses["h3d.Engine"] = h3d_Engine;
h3d_Engine.__name__ = "h3d.Engine";
h3d_Engine.prototype = {
	driver: null
	,mem: null
	,hardware: null
	,width: null
	,height: null
	,debug: null
	,drawTriangles: null
	,drawCalls: null
	,shaderSwitches: null
	,backgroundColor: null
	,autoResize: null
	,fullScreen: null
	,realFps: null
	,lastTime: null
	,antiAlias: null
	,tmpVector: null
	,window: null
	,targetTmp: null
	,targetStack: null
	,currentTargetTex: null
	,currentTargetLayer: null
	,currentTargetMip: null
	,currentDepthBinding: null
	,needFlushTarget: null
	,nullTexture: null
	,textureColorCache: null
	,inRender: null
	,ready: null
	,resCache: null
	,init: function() {
		this.driver.init($bind(this,this.onCreate),!this.hardware);
	}
	,selectShader: function(shader) {
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		if(this.driver.selectShader(shader)) {
			this.shaderSwitches++;
		}
	}
	,selectMaterial: function(pass) {
		this.driver.selectMaterial(pass);
	}
	,uploadShaderBuffers: function(buffers,which) {
		this.driver.uploadShaderBuffers(buffers,which);
	}
	,selectBuffer: function(buf) {
		if(buf.vbuf == null) {
			return false;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.selectBuffer(buf);
		return true;
	}
	,renderBuffer: function(b,indexes,vertPerTri,startTri,drawTri) {
		if(drawTri == null) {
			drawTri = -1;
		}
		if(startTri == null) {
			startTri = 0;
		}
		if(indexes.isDisposed()) {
			return;
		}
		var ntri = b.vertices / vertPerTri | 0;
		if(drawTri < 0) {
			drawTri = ntri - startTri;
		}
		if(startTri < 0 || drawTri < 0 || startTri + drawTri > ntri) {
			throw haxe_Exception.thrown("Invalid vertices count");
		}
		if(drawTri > 0 && this.selectBuffer(b)) {
			this.driver.draw(indexes.ibuf,startTri * 3,drawTri);
			this.drawTriangles += drawTri;
			this.drawCalls++;
		}
	}
	,renderIndexed: function(b,indexes,startTri,drawTri) {
		if(drawTri == null) {
			drawTri = -1;
		}
		if(startTri == null) {
			startTri = 0;
		}
		if(indexes.isDisposed()) {
			return;
		}
		var maxTri = indexes.count / 3 | 0;
		if(drawTri < 0) {
			drawTri = maxTri - startTri;
		}
		if(drawTri > 0 && this.selectBuffer(b)) {
			this.driver.draw(indexes.ibuf,startTri * 3,drawTri);
			this.drawTriangles += drawTri;
			this.drawCalls++;
		}
	}
	,renderMultiBuffers: function(format,buffers,indexes,startTri,drawTri) {
		if(drawTri == null) {
			drawTri = -1;
		}
		if(startTri == null) {
			startTri = 0;
		}
		var maxTri = indexes.count / 3 | 0;
		if(maxTri <= 0) {
			return;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.selectMultiBuffers(format,buffers);
		if(indexes.isDisposed()) {
			return;
		}
		if(drawTri < 0) {
			drawTri = maxTri - startTri;
		}
		if(drawTri > 0) {
			this.driver.draw(indexes.ibuf,startTri * 3,drawTri);
			this.drawTriangles += drawTri;
			this.drawCalls++;
		}
	}
	,renderInstanced: function(indexes,commands) {
		if(indexes.isDisposed()) {
			return;
		}
		if(commands.commandCount > 0) {
			this.driver.drawInstanced(indexes.ibuf,commands);
			this.drawTriangles += commands.triCount;
			this.drawCalls++;
		}
	}
	,set_debug: function(d) {
		this.debug = d;
		this.driver.setDebug(this.debug);
		return d;
	}
	,onCreate: function(disposed) {
		h3d_Engine.CURRENT = this;
		if(this.autoResize) {
			this.width = this.window.get_width();
			this.height = this.window.get_height();
		}
		if(disposed) {
			hxd_impl_Allocator.get().onContextLost();
			this.mem.onContextLost();
		} else {
			this.mem = new h3d_impl_MemoryManager(this.driver);
			this.mem.init();
			this.nullTexture = new h3d_mat_Texture(0,0,[h3d_mat_TextureFlags.NoAlloc]);
		}
		this.hardware = this.driver.hasFeature(h3d_impl_Feature.HardwareAccelerated);
		this.set_debug(this.debug);
		this.set_fullScreen(this.fullScreen);
		this.resize(this.width,this.height);
		if(disposed) {
			this.onContextLost();
		} else {
			this.onReady();
		}
		this.ready = true;
	}
	,onContextLost: function() {
	}
	,onReady: function() {
	}
	,onWindowResize: function() {
		if(this.autoResize && !this.driver.isDisposed()) {
			var w = this.window.get_width();
			var h = this.window.get_height();
			if(w != this.width || h != this.height) {
				this.resize(w,h);
			}
			this.onResized();
		}
	}
	,set_fullScreen: function(v) {
		this.fullScreen = v;
		if(this.mem != null && hxd_System.getValue(hxd_SystemValue.IsWindowed)) {
			this.window.set_displayMode(v ? hxd_DisplayMode.Borderless : hxd_DisplayMode.Windowed);
		}
		return v;
	}
	,onResized: function() {
	}
	,resize: function(width,height) {
		if(width < 32) {
			width = 32;
		}
		if(height < 32) {
			height = 32;
		}
		this.width = width;
		this.height = height;
		if(!this.driver.isDisposed()) {
			this.driver.resize(width,height);
		}
	}
	,begin: function() {
		if(this.driver.isDisposed()) {
			return false;
		}
		this.inRender = true;
		this.drawTriangles = 0;
		this.shaderSwitches = 0;
		this.drawCalls = 0;
		this.targetStack = null;
		this.needFlushTarget = this.currentTargetTex != null;
		this.driver.begin(hxd_Timer.frameCount);
		if(this.backgroundColor != null) {
			this.clear(this.backgroundColor,1,0);
		}
		return true;
	}
	,end: function() {
		this.inRender = false;
		this.driver.end();
	}
	,getCurrentTarget: function() {
		if(this.targetStack == null) {
			return null;
		} else if(this.targetStack.t == this.nullTexture) {
			return this.targetStack.textures[0];
		} else {
			return this.targetStack.t;
		}
	}
	,pushTarget: function(tex,layer,mipLevel,depthBinding) {
		if(depthBinding == null) {
			depthBinding = h3d_DepthBinding.ReadWrite;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		if(layer == null) {
			layer = 0;
		}
		var c = this.targetTmp;
		if(c == null) {
			c = new h3d__$Engine_TargetTmp(tex,this.targetStack,layer,mipLevel,depthBinding);
		} else {
			this.targetTmp = c.next;
			c.t = tex;
			c.next = this.targetStack;
			c.mipLevel = mipLevel;
			c.layer = layer;
			c.depthBinding = depthBinding;
		}
		this.targetStack = c;
		this.updateNeedFlush();
	}
	,updateNeedFlush: function() {
		var t = this.targetStack;
		if(t == null) {
			this.needFlushTarget = this.currentTargetTex != null;
		} else {
			this.needFlushTarget = this.currentTargetTex != t.t || this.currentTargetLayer != t.layer || this.currentTargetMip != t.mipLevel || t.textures != null || this.currentDepthBinding != t.depthBinding;
		}
	}
	,pushDepth: function(depthBuffer) {
		this.pushTarget(depthBuffer,null,null,h3d_DepthBinding.DepthOnly);
	}
	,popTarget: function() {
		var c = this.targetStack;
		if(c == null) {
			throw haxe_Exception.thrown("popTarget() with no matching pushTarget()");
		}
		this.targetStack = c.next;
		this.updateNeedFlush();
		c.t = null;
		c.textures = null;
		c.next = this.targetTmp;
		this.targetTmp = c;
	}
	,doFlushTarget: function() {
		var t = this.targetStack;
		if(t == null) {
			this.driver.setRenderTarget(null);
			this.currentTargetTex = null;
		} else {
			if(t.depthBinding == h3d_DepthBinding.DepthOnly) {
				this.driver.setDepth(t.t);
			} else if(t.textures != null) {
				this.driver.setRenderTargets(t.textures,t.depthBinding);
			} else {
				this.driver.setRenderTarget(t.t,t.layer,t.mipLevel,t.depthBinding);
			}
			this.currentTargetTex = t.t;
			this.currentTargetLayer = t.layer;
			this.currentTargetMip = t.mipLevel;
			this.currentDepthBinding = t.depthBinding;
		}
		this.needFlushTarget = false;
	}
	,clear: function(color,depth,stencil) {
		if(color != null) {
			var _this = this.tmpVector;
			_this.x = (color >> 16 & 255) / 255;
			_this.y = (color >> 8 & 255) / 255;
			_this.z = (color & 255) / 255;
			_this.w = (color >>> 24) / 255;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.clear(color == null ? null : this.tmpVector,depth,stencil);
	}
	,setRenderZone: function(x,y,width,height) {
		if(height == null) {
			height = -1;
		}
		if(width == null) {
			width = -1;
		}
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		if(this.needFlushTarget) {
			this.doFlushTarget();
		}
		this.driver.setRenderZone(x,y,width,height);
	}
	,render: function(obj) {
		if(!this.begin()) {
			return false;
		}
		obj.render(this);
		this.end();
		var delta = HxOverrides.now() / 1000 - this.lastTime;
		this.lastTime += delta;
		if(delta > 0) {
			var curFps = 1. / delta;
			if(curFps > this.realFps * 2) {
				curFps = this.realFps * 2;
			} else if(curFps < this.realFps * 0.5) {
				curFps = this.realFps * 0.5;
			}
			var f = delta / .5;
			if(f > 0.3) {
				f = 0.3;
			}
			this.realFps = this.realFps * (1 - f) + curFps * f;
		}
		return true;
	}
	,__class__: h3d_Engine
	,__properties__: {set_fullScreen:"set_fullScreen",set_debug:"set_debug"}
};
var h3d_Indexes = function(count,is32) {
	if(is32 == null) {
		is32 = false;
	}
	this.mem = h3d_Engine.CURRENT.mem;
	this.count = count;
	this.is32 = is32;
	this.mem.allocIndexes(this);
};
$hxClasses["h3d.Indexes"] = h3d_Indexes;
h3d_Indexes.__name__ = "h3d.Indexes";
h3d_Indexes.alloc = function(i,startPos,length) {
	if(length == null) {
		length = -1;
	}
	if(startPos == null) {
		startPos = 0;
	}
	if(length < 0) {
		length = i.length;
	}
	var idx = new h3d_Indexes(length);
	idx.upload(i,0,length);
	return idx;
};
h3d_Indexes.prototype = {
	mem: null
	,ibuf: null
	,is32: null
	,count: null
	,isDisposed: function() {
		return this.ibuf == null;
	}
	,upload: function(indexes,pos,count,bufferPos) {
		if(bufferPos == null) {
			bufferPos = 0;
		}
		this.mem.driver.uploadIndexBuffer(this.ibuf,pos,count,indexes,bufferPos);
	}
	,uploadBytes: function(bytes,dataPos,indices) {
		this.mem.driver.uploadIndexBytes(this.ibuf,0,indices,bytes,dataPos);
	}
	,dispose: function() {
		if(this.ibuf != null) {
			this.mem.deleteIndexes(this);
		}
	}
	,__class__: h3d_Indexes
};
var h3d_Matrix = function() {
};
$hxClasses["h3d.Matrix"] = h3d_Matrix;
h3d_Matrix.__name__ = "h3d.Matrix";
h3d_Matrix.I = function() {
	var m = new h3d_Matrix();
	m.identity();
	return m;
};
h3d_Matrix.L = function(a) {
	var m = new h3d_Matrix();
	m.loadValues(a);
	return m;
};
h3d_Matrix.prototype = {
	_11: null
	,_12: null
	,_13: null
	,_14: null
	,_21: null
	,_22: null
	,_23: null
	,_24: null
	,_31: null
	,_32: null
	,_33: null
	,_34: null
	,_41: null
	,_42: null
	,_43: null
	,_44: null
	,zero: function() {
		this._11 = 0.0;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = 0.0;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = 0.0;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 0.0;
	}
	,identity: function() {
		this._11 = 1.0;
		this._12 = 0.0;
		this._13 = 0.0;
		this._14 = 0.0;
		this._21 = 0.0;
		this._22 = 1.0;
		this._23 = 0.0;
		this._24 = 0.0;
		this._31 = 0.0;
		this._32 = 0.0;
		this._33 = 1.0;
		this._34 = 0.0;
		this._41 = 0.0;
		this._42 = 0.0;
		this._43 = 0.0;
		this._44 = 1.0;
	}
	,multiply3x4: function(a,b) {
		var m11 = a._11;
		var m12 = a._12;
		var m13 = a._13;
		var m21 = a._21;
		var m22 = a._22;
		var m23 = a._23;
		var a31 = a._31;
		var a32 = a._32;
		var a33 = a._33;
		var a41 = a._41;
		var a42 = a._42;
		var a43 = a._43;
		var b11 = b._11;
		var b12 = b._12;
		var b13 = b._13;
		var b21 = b._21;
		var b22 = b._22;
		var b23 = b._23;
		var b31 = b._31;
		var b32 = b._32;
		var b33 = b._33;
		var b41 = b._41;
		var b42 = b._42;
		var b43 = b._43;
		this._11 = m11 * b11 + m12 * b21 + m13 * b31;
		this._12 = m11 * b12 + m12 * b22 + m13 * b32;
		this._13 = m11 * b13 + m12 * b23 + m13 * b33;
		this._14 = 0;
		this._21 = m21 * b11 + m22 * b21 + m23 * b31;
		this._22 = m21 * b12 + m22 * b22 + m23 * b32;
		this._23 = m21 * b13 + m22 * b23 + m23 * b33;
		this._24 = 0;
		this._31 = a31 * b11 + a32 * b21 + a33 * b31;
		this._32 = a31 * b12 + a32 * b22 + a33 * b32;
		this._33 = a31 * b13 + a32 * b23 + a33 * b33;
		this._34 = 0;
		this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
		this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
		this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
		this._44 = 1;
	}
	,multiply: function(a,b) {
		var a11 = a._11;
		var a12 = a._12;
		var a13 = a._13;
		var a14 = a._14;
		var a21 = a._21;
		var a22 = a._22;
		var a23 = a._23;
		var a24 = a._24;
		var a31 = a._31;
		var a32 = a._32;
		var a33 = a._33;
		var a34 = a._34;
		var a41 = a._41;
		var a42 = a._42;
		var a43 = a._43;
		var a44 = a._44;
		var b11 = b._11;
		var b12 = b._12;
		var b13 = b._13;
		var b14 = b._14;
		var b21 = b._21;
		var b22 = b._22;
		var b23 = b._23;
		var b24 = b._24;
		var b31 = b._31;
		var b32 = b._32;
		var b33 = b._33;
		var b34 = b._34;
		var b41 = b._41;
		var b42 = b._42;
		var b43 = b._43;
		var b44 = b._44;
		this._11 = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		this._12 = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		this._13 = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		this._14 = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		this._21 = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		this._22 = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		this._23 = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		this._24 = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		this._31 = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		this._32 = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		this._33 = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		this._34 = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		this._41 = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		this._42 = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		this._43 = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		this._44 = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
	}
	,inverse3x4: function(m) {
		var m11 = m._11;
		var m12 = m._12;
		var m13 = m._13;
		var m21 = m._21;
		var m22 = m._22;
		var m23 = m._23;
		var m31 = m._31;
		var m32 = m._32;
		var m33 = m._33;
		var m41 = m._41;
		var m42 = m._42;
		var m43 = m._43;
		this._11 = m22 * m33 - m23 * m32;
		this._12 = m13 * m32 - m12 * m33;
		this._13 = m12 * m23 - m13 * m22;
		this._14 = 0;
		this._21 = m23 * m31 - m21 * m33;
		this._22 = m11 * m33 - m13 * m31;
		this._23 = m13 * m21 - m11 * m23;
		this._24 = 0;
		this._31 = m21 * m32 - m22 * m31;
		this._32 = m12 * m31 - m11 * m32;
		this._33 = m11 * m22 - m12 * m21;
		this._34 = 0;
		this._41 = -m21 * m32 * m43 + m21 * m33 * m42 + m31 * m22 * m43 - m31 * m23 * m42 - m41 * m22 * m33 + m41 * m23 * m32;
		this._42 = m11 * m32 * m43 - m11 * m33 * m42 - m31 * m12 * m43 + m31 * m13 * m42 + m41 * m12 * m33 - m41 * m13 * m32;
		this._43 = -m11 * m22 * m43 + m11 * m23 * m42 + m21 * m12 * m43 - m21 * m13 * m42 - m41 * m12 * m23 + m41 * m13 * m22;
		this._44 = m11 * m22 * m33 - m11 * m23 * m32 - m21 * m12 * m33 + m21 * m13 * m32 + m31 * m12 * m23 - m31 * m13 * m22;
		this._44 = 1;
		var det = m11 * this._11 + m12 * this._21 + m13 * this._31;
		if((det < 0 ? -det : det) < 1e-10) {
			this.zero();
			return;
		}
		var invDet = 1.0 / det;
		this._11 *= invDet;
		this._12 *= invDet;
		this._13 *= invDet;
		this._21 *= invDet;
		this._22 *= invDet;
		this._23 *= invDet;
		this._31 *= invDet;
		this._32 *= invDet;
		this._33 *= invDet;
		this._41 *= invDet;
		this._42 *= invDet;
		this._43 *= invDet;
	}
	,initInverse: function(m) {
		var m11 = m._11;
		var m12 = m._12;
		var m13 = m._13;
		var m14 = m._14;
		var m21 = m._21;
		var m22 = m._22;
		var m23 = m._23;
		var m24 = m._24;
		var m31 = m._31;
		var m32 = m._32;
		var m33 = m._33;
		var m34 = m._34;
		var m41 = m._41;
		var m42 = m._42;
		var m43 = m._43;
		var m44 = m._44;
		this._11 = m22 * m33 * m44 - m22 * m34 * m43 - m32 * m23 * m44 + m32 * m24 * m43 + m42 * m23 * m34 - m42 * m24 * m33;
		this._12 = -m12 * m33 * m44 + m12 * m34 * m43 + m32 * m13 * m44 - m32 * m14 * m43 - m42 * m13 * m34 + m42 * m14 * m33;
		this._13 = m12 * m23 * m44 - m12 * m24 * m43 - m22 * m13 * m44 + m22 * m14 * m43 + m42 * m13 * m24 - m42 * m14 * m23;
		this._14 = -m12 * m23 * m34 + m12 * m24 * m33 + m22 * m13 * m34 - m22 * m14 * m33 - m32 * m13 * m24 + m32 * m14 * m23;
		this._21 = -m21 * m33 * m44 + m21 * m34 * m43 + m31 * m23 * m44 - m31 * m24 * m43 - m41 * m23 * m34 + m41 * m24 * m33;
		this._22 = m11 * m33 * m44 - m11 * m34 * m43 - m31 * m13 * m44 + m31 * m14 * m43 + m41 * m13 * m34 - m41 * m14 * m33;
		this._23 = -m11 * m23 * m44 + m11 * m24 * m43 + m21 * m13 * m44 - m21 * m14 * m43 - m41 * m13 * m24 + m41 * m14 * m23;
		this._24 = m11 * m23 * m34 - m11 * m24 * m33 - m21 * m13 * m34 + m21 * m14 * m33 + m31 * m13 * m24 - m31 * m14 * m23;
		this._31 = m21 * m32 * m44 - m21 * m34 * m42 - m31 * m22 * m44 + m31 * m24 * m42 + m41 * m22 * m34 - m41 * m24 * m32;
		this._32 = -m11 * m32 * m44 + m11 * m34 * m42 + m31 * m12 * m44 - m31 * m14 * m42 - m41 * m12 * m34 + m41 * m14 * m32;
		this._33 = m11 * m22 * m44 - m11 * m24 * m42 - m21 * m12 * m44 + m21 * m14 * m42 + m41 * m12 * m24 - m41 * m14 * m22;
		this._34 = -m11 * m22 * m34 + m11 * m24 * m32 + m21 * m12 * m34 - m21 * m14 * m32 - m31 * m12 * m24 + m31 * m14 * m22;
		this._41 = -m21 * m32 * m43 + m21 * m33 * m42 + m31 * m22 * m43 - m31 * m23 * m42 - m41 * m22 * m33 + m41 * m23 * m32;
		this._42 = m11 * m32 * m43 - m11 * m33 * m42 - m31 * m12 * m43 + m31 * m13 * m42 + m41 * m12 * m33 - m41 * m13 * m32;
		this._43 = -m11 * m22 * m43 + m11 * m23 * m42 + m21 * m12 * m43 - m21 * m13 * m42 - m41 * m12 * m23 + m41 * m13 * m22;
		this._44 = m11 * m22 * m33 - m11 * m23 * m32 - m21 * m12 * m33 + m21 * m13 * m32 + m31 * m12 * m23 - m31 * m13 * m22;
		var det = m11 * this._11 + m12 * this._21 + m13 * this._31 + m14 * this._41;
		if((det < 0 ? -det : det) < 1e-10) {
			this.zero();
			return;
		}
		det = 1.0 / det;
		this._11 *= det;
		this._12 *= det;
		this._13 *= det;
		this._14 *= det;
		this._21 *= det;
		this._22 *= det;
		this._23 *= det;
		this._24 *= det;
		this._31 *= det;
		this._32 *= det;
		this._33 *= det;
		this._34 *= det;
		this._41 *= det;
		this._42 *= det;
		this._43 *= det;
		this._44 *= det;
	}
	,loadValues: function(a) {
		this._11 = a[0];
		this._12 = a[1];
		this._13 = a[2];
		this._14 = a[3];
		this._21 = a[4];
		this._22 = a[5];
		this._23 = a[6];
		this._24 = a[7];
		this._31 = a[8];
		this._32 = a[9];
		this._33 = a[10];
		this._34 = a[11];
		this._41 = a[12];
		this._42 = a[13];
		this._43 = a[14];
		this._44 = a[15];
	}
	,__class__: h3d_Matrix
};
var h3d_Quat = function(x,y,z,w) {
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["h3d.Quat"] = h3d_Quat;
h3d_Quat.__name__ = "h3d.Quat";
h3d_Quat.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,toMatrix: function(m) {
		if(m == null) {
			m = new h3d_Matrix();
		}
		var xx = this.x * this.x;
		var xy = this.x * this.y;
		var xz = this.x * this.z;
		var xw = this.x * this.w;
		var yy = this.y * this.y;
		var yz = this.y * this.z;
		var yw = this.y * this.w;
		var zz = this.z * this.z;
		var zw = this.z * this.w;
		m._11 = 1 - 2 * (yy + zz);
		m._12 = 2 * (xy + zw);
		m._13 = 2 * (xz - yw);
		m._14 = 0;
		m._21 = 2 * (xy - zw);
		m._22 = 1 - 2 * (xx + zz);
		m._23 = 2 * (yz + xw);
		m._24 = 0;
		m._31 = 2 * (xz + yw);
		m._32 = 2 * (yz - xw);
		m._33 = 1 - 2 * (xx + yy);
		m._34 = 0;
		m._41 = 0;
		m._42 = 0;
		m._43 = 0;
		m._44 = 1;
		return m;
	}
	,__class__: h3d_Quat
};
var h3d_Vector = function(x,y,z,w) {
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
$hxClasses["h3d.Vector"] = h3d_Vector;
h3d_Vector.__name__ = "h3d.Vector";
h3d_Vector.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,__class__: h3d_Vector
};
var h3d_anim_AnimatedObject = function() { };
$hxClasses["h3d.anim.AnimatedObject"] = h3d_anim_AnimatedObject;
h3d_anim_AnimatedObject.__name__ = "h3d.anim.AnimatedObject";
var h3d_anim_Animation = function(name,frameCount,sampling) {
	this.name = name;
	this.frameCount = frameCount;
	this.sampling = sampling;
	this.objects = [];
	this.lastEvent = -1;
	this.frame = 0.;
	this.speed = 1.;
	this.loop = true;
	this.pause = false;
};
$hxClasses["h3d.anim.Animation"] = h3d_anim_Animation;
h3d_anim_Animation.__name__ = "h3d.anim.Animation";
h3d_anim_Animation.prototype = {
	name: null
	,frameCount: null
	,sampling: null
	,frame: null
	,speed: null
	,onAnimEnd: null
	,onEvent: null
	,pause: null
	,loop: null
	,events: null
	,isInstance: null
	,objects: null
	,lastEvent: null
	,getPropValue: function(objectName,propName) {
		return null;
	}
	,sync: function(decompose) {
		if(decompose == null) {
			decompose = false;
		}
		throw haxe_Exception.thrown("assert");
	}
	,isPlaying: function() {
		if(!this.pause) {
			return (this.speed < 0 ? -this.speed : this.speed) > 0.000001;
		} else {
			return false;
		}
	}
	,endFrame: function() {
		return this.frameCount;
	}
	,update: function(dt) {
		if(!this.isInstance) {
			throw haxe_Exception.thrown("You must instantiate this animation first");
		}
		if(!this.isPlaying()) {
			return 0;
		}
		if(this.events != null && this.onEvent != null) {
			var f0 = this.frame | 0;
			var f1 = this.frame + dt * this.speed * this.sampling | 0;
			if(f1 >= this.frameCount) {
				f1 = this.frameCount - 1;
			}
			var _g = f0;
			var _g1 = f1 + 1;
			while(_g < _g1) {
				var f = _g++;
				if(f == this.lastEvent) {
					continue;
				}
				this.lastEvent = f;
				if(this.events[f] != null) {
					var oldF = this.frame;
					var oldDT = dt;
					dt -= (f - this.frame) / (this.speed * this.sampling);
					this.frame = f;
					var _g2 = 0;
					var _g3 = this.events[f];
					while(_g2 < _g3.length) {
						var e = _g3[_g2];
						++_g2;
						this.onEvent(e);
					}
					if(this.frame == f && f == this.frameCount - 1) {
						this.frame = oldF;
						dt = oldDT;
						break;
					} else {
						return dt;
					}
				}
			}
		}
		if(this.onAnimEnd != null) {
			var end = this.endFrame();
			var et = this.speed == 0 ? 0 : (end - this.frame) / (this.speed * this.sampling);
			if(et <= dt && et > 0) {
				this.frame = end;
				dt -= et;
				this.onAnimEnd();
				if(this.frame == end && this.isPlaying()) {
					if(this.loop) {
						this.frame = 0;
					} else {
						dt = 0;
					}
				}
				return dt;
			}
		}
		this.frame += dt * this.speed * this.sampling;
		if(this.frame >= this.frameCount) {
			if(this.loop) {
				this.frame %= this.frameCount;
			} else {
				this.frame = this.frameCount;
			}
		}
		return 0;
	}
	,__class__: h3d_anim_Animation
};
var h3d_col_Collider = function() { };
$hxClasses["h3d.col.Collider"] = h3d_col_Collider;
h3d_col_Collider.__name__ = "h3d.col.Collider";
h3d_col_Collider.prototype = {
	rayIntersection: null
	,inFrustum: null
	,__class__: h3d_col_Collider
};
var h3d_col_Bounds = function() {
	this.xMin = 1e20;
	this.xMax = -1e20;
	this.yMin = 1e20;
	this.yMax = -1e20;
	this.zMin = 1e20;
	this.zMax = -1e20;
};
$hxClasses["h3d.col.Bounds"] = h3d_col_Bounds;
h3d_col_Bounds.__name__ = "h3d.col.Bounds";
h3d_col_Bounds.__super__ = h3d_col_Collider;
h3d_col_Bounds.prototype = $extend(h3d_col_Collider.prototype,{
	xMin: null
	,xMax: null
	,yMin: null
	,yMax: null
	,zMin: null
	,zMax: null
	,inFrustum: function(f,m) {
		if(m != null) {
			throw haxe_Exception.thrown("Not implemented");
		}
		return f.hasBounds(this);
	}
	,rayIntersection: function(r,bestMatch) {
		var minTx = (this.xMin - r.px) / r.lx;
		var minTy = (this.yMin - r.py) / r.ly;
		var minTz = (this.zMin - r.pz) / r.lz;
		var maxTx = (this.xMax - r.px) / r.lx;
		var maxTy = (this.yMax - r.py) / r.ly;
		var maxTz = (this.zMax - r.pz) / r.lz;
		var realMinTx = minTx > maxTx ? maxTx : minTx;
		var realMinTy = minTy > maxTy ? maxTy : minTy;
		var realMinTz = minTz > maxTz ? maxTz : minTz;
		var realMaxTx = minTx < maxTx ? maxTx : minTx;
		var realMaxTy = minTy < maxTy ? maxTy : minTy;
		var realMaxTz = minTz < maxTz ? maxTz : minTz;
		var a = realMaxTx > realMaxTy ? realMaxTy : realMaxTx;
		var minmax = a > realMaxTz ? realMaxTz : a;
		var a = realMinTx < realMinTy ? realMinTy : realMinTx;
		var maxmin = a < realMinTz ? realMinTz : a;
		if(minmax < maxmin) {
			return -1;
		}
		return maxmin;
	}
	,transform: function(m) {
		var xMin = this.xMin;
		var yMin = this.yMin;
		var zMin = this.zMin;
		var xMax = this.xMax;
		var yMax = this.yMax;
		var zMax = this.zMax;
		this.xMin = 1e20;
		this.xMax = -1e20;
		this.yMin = 1e20;
		this.yMax = -1e20;
		this.zMin = 1e20;
		this.zMax = -1e20;
		if(xMax < xMin && yMax < yMin && zMax < zMin) {
			return;
		}
		var v_x = 0.;
		var v_y = 0.;
		var v_z = 0.;
		var x = xMin;
		var y = yMin;
		var z = zMin;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		v_x = x;
		v_y = y;
		v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		var x = xMin;
		var y = yMin;
		var z = zMax;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		v_x = x;
		v_y = y;
		v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		var x = xMin;
		var y = yMax;
		var z = zMin;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		v_x = x;
		v_y = y;
		v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		var x = xMin;
		var y = yMax;
		var z = zMax;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		v_x = x;
		v_y = y;
		v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		var x = xMax;
		var y = yMin;
		var z = zMin;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		v_x = x;
		v_y = y;
		v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		var x = xMax;
		var y = yMin;
		var z = zMax;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		v_x = x;
		v_y = y;
		v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		var x = xMax;
		var y = yMax;
		var z = zMin;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		v_x = x;
		v_y = y;
		v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
		var x = xMax;
		var y = yMax;
		var z = zMax;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		v_x = x;
		v_y = y;
		v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		if(v_x < this.xMin) {
			this.xMin = v_x;
		}
		if(v_x > this.xMax) {
			this.xMax = v_x;
		}
		if(v_y < this.yMin) {
			this.yMin = v_y;
		}
		if(v_y > this.yMax) {
			this.yMax = v_y;
		}
		if(v_z < this.zMin) {
			this.zMin = v_z;
		}
		if(v_z > this.zMax) {
			this.zMax = v_z;
		}
	}
	,intersection: function(a,b) {
		var a1 = a.xMin;
		var b1 = b.xMin;
		var xMin = a1 < b1 ? b1 : a1;
		var a1 = a.yMin;
		var b1 = b.yMin;
		var yMin = a1 < b1 ? b1 : a1;
		var a1 = a.zMin;
		var b1 = b.zMin;
		var zMin = a1 < b1 ? b1 : a1;
		var a1 = a.xMax;
		var b1 = b.xMax;
		var xMax = a1 > b1 ? b1 : a1;
		var a1 = a.yMax;
		var b1 = b.yMax;
		var yMax = a1 > b1 ? b1 : a1;
		var a1 = a.zMax;
		var b1 = b.zMax;
		var zMax = a1 > b1 ? b1 : a1;
		this.xMin = xMin;
		this.xMax = xMax;
		this.yMin = yMin;
		this.yMax = yMax;
		this.zMin = zMin;
		this.zMax = zMax;
	}
	,load: function(b) {
		this.xMin = b.xMin;
		this.xMax = b.xMax;
		this.yMin = b.yMin;
		this.yMax = b.yMax;
		this.zMin = b.zMin;
		this.zMax = b.zMax;
	}
	,scaleCenter: function(v) {
		var dx = (this.xMax - this.xMin) * 0.5 * v;
		var dy = (this.yMax - this.yMin) * 0.5 * v;
		var dz = (this.zMax - this.zMin) * 0.5 * v;
		var mx = (this.xMax + this.xMin) * 0.5;
		var my = (this.yMax + this.yMin) * 0.5;
		var mz = (this.zMax + this.zMin) * 0.5;
		this.xMin = mx - dx;
		this.yMin = my - dy;
		this.zMin = mz - dz;
		this.xMax = mx + dx;
		this.yMax = my + dy;
		this.zMax = mz + dz;
	}
	,__class__: h3d_col_Bounds
});
var h3d_col_Frustum = function(mvp) {
	this.checkNearFar = true;
	this.pleft = new h3d_col_Plane(1,0,0,0.0);
	this.pright = new h3d_col_Plane(1,0,0,0.0);
	this.ptop = new h3d_col_Plane(1,0,0,0.0);
	this.pbottom = new h3d_col_Plane(1,0,0,0.0);
	this.pnear = new h3d_col_Plane(1,0,0,0.0);
	this.pfar = new h3d_col_Plane(1,0,0,0.0);
	if(mvp != null) {
		this.loadMatrix(mvp);
	}
};
$hxClasses["h3d.col.Frustum"] = h3d_col_Frustum;
h3d_col_Frustum.__name__ = "h3d.col.Frustum";
h3d_col_Frustum.prototype = {
	pleft: null
	,pright: null
	,ptop: null
	,pbottom: null
	,pnear: null
	,pfar: null
	,checkNearFar: null
	,loadMatrix: function(mvp) {
		var _this = this.pleft;
		var p_nx = mvp._14 + mvp._11;
		var p_ny = mvp._24 + mvp._21;
		var p_nz = mvp._34 + mvp._31;
		var p_d = -(mvp._44 + mvp._41);
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pright;
		var p_nx = mvp._14 - mvp._11;
		var p_ny = mvp._24 - mvp._21;
		var p_nz = mvp._34 - mvp._31;
		var p_d = mvp._41 - mvp._44;
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.ptop;
		var p_nx = mvp._14 - mvp._12;
		var p_ny = mvp._24 - mvp._22;
		var p_nz = mvp._34 - mvp._32;
		var p_d = mvp._42 - mvp._44;
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pbottom;
		var p_nx = mvp._14 + mvp._12;
		var p_ny = mvp._24 + mvp._22;
		var p_nz = mvp._34 + mvp._32;
		var p_d = -(mvp._44 + mvp._42);
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pnear;
		var p_nx = mvp._13;
		var p_ny = mvp._23;
		var p_nz = mvp._33;
		var p_d = -mvp._43;
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pfar;
		var p_nx = mvp._14 - mvp._13;
		var p_ny = mvp._24 - mvp._23;
		var p_nz = mvp._34 - mvp._33;
		var p_d = mvp._43 - mvp._44;
		_this.nx = p_nx;
		_this.ny = p_ny;
		_this.nz = p_nz;
		_this.d = p_d;
		var _this = this.pleft;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.pright;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.ptop;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.pbottom;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.pnear;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
		var _this = this.pfar;
		var len = 1. / Math.sqrt(_this.nx * _this.nx + _this.ny * _this.ny + _this.nz * _this.nz);
		_this.nx *= len;
		_this.ny *= len;
		_this.nz *= len;
		_this.d *= len;
	}
	,hasSphere: function(s) {
		var x = s.x;
		var y = s.y;
		var z = s.z;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var p_x = x;
		var p_y = y;
		var p_z = z;
		var _this = this.pleft;
		if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
			return false;
		}
		var _this = this.pright;
		if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
			return false;
		}
		var _this = this.ptop;
		if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
			return false;
		}
		var _this = this.pbottom;
		if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
			return false;
		}
		if(this.checkNearFar) {
			var _this = this.pnear;
			if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
				return false;
			}
			var _this = this.pfar;
			if(_this.nx * p_x + _this.ny * p_y + _this.nz * p_z - _this.d < -s.r) {
				return false;
			}
		}
		return true;
	}
	,hasBounds: function(b) {
		var p = this.pleft;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.pright;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.ptop;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.pbottom;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.pnear;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		var p = this.pfar;
		var a = p.nx;
		var b1 = p.ny;
		var c = p.nz;
		var dd = a * (b.xMax + b.xMin) + b1 * (b.yMax + b.yMin) + c * (b.zMax + b.zMin);
		if(a < 0) {
			a = -a;
		}
		if(b1 < 0) {
			b1 = -b1;
		}
		if(c < 0) {
			c = -c;
		}
		var rr = a * (b.xMax - b.xMin) + b1 * (b.yMax - b.yMin) + c * (b.zMax - b.zMin);
		if(dd + rr - p.d * 2 < 0) {
			return false;
		}
		return true;
	}
	,__class__: h3d_col_Frustum
};
var h3d_col_Ray = function() {
};
$hxClasses["h3d.col.Ray"] = h3d_col_Ray;
h3d_col_Ray.__name__ = "h3d.col.Ray";
h3d_col_Ray.prototype = {
	px: null
	,py: null
	,pz: null
	,lx: null
	,ly: null
	,lz: null
	,normalize: function() {
		var l = this.lx * this.lx + this.ly * this.ly + this.lz * this.lz;
		if(l == 1.) {
			return;
		}
		if(l < 1e-10) {
			l = 0;
		} else {
			l = 1. / Math.sqrt(l);
		}
		this.lx *= l;
		this.ly *= l;
		this.lz *= l;
	}
	,__class__: h3d_col_Ray
};
var h3d_col_Plane = function(nx,ny,nz,d) {
	this.nx = nx;
	this.ny = ny;
	this.nz = nz;
	this.d = d;
};
$hxClasses["h3d.col.Plane"] = h3d_col_Plane;
h3d_col_Plane.__name__ = "h3d.col.Plane";
h3d_col_Plane.prototype = {
	nx: null
	,ny: null
	,nz: null
	,d: null
	,__class__: h3d_col_Plane
};
var h3d_col_Point = function(x,y,z) {
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
$hxClasses["h3d.col.Point"] = h3d_col_Point;
h3d_col_Point.__name__ = "h3d.col.Point";
h3d_col_Point.prototype = {
	x: null
	,y: null
	,z: null
	,__class__: h3d_col_Point
};
var h3d_scene_Object = function(parent) {
	this.flags = 32768;
	this.absPos = new h3d_Matrix();
	this.absPos.identity();
	this.x = 0;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.y = 0;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.z = 0;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.scaleX = 1;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.scaleY = 1;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.scaleZ = 1;
	var f = 1;
	var b = true;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	this.qRot = new h3d_Quat();
	var f = 1;
	var b = this.follow != null;
	if(b) {
		this.flags |= f;
	} else {
		this.flags &= ~f;
	}
	var f = 2;
	this.flags |= f;
	this.children = [];
	if(parent != null) {
		parent.addChild(this);
	}
};
$hxClasses["h3d.scene.Object"] = h3d_scene_Object;
h3d_scene_Object.__name__ = "h3d.scene.Object";
h3d_scene_Object.prototype = {
	flags: null
	,lastFrame: null
	,children: null
	,parent: null
	,name: null
	,x: null
	,y: null
	,z: null
	,scaleX: null
	,scaleY: null
	,scaleZ: null
	,follow: null
	,defaultTransform: null
	,currentAnimation: null
	,cullingCollider: null
	,set_cullingCollider: function(c) {
		this.cullingCollider = c;
		var f = 4096;
		this.flags &= ~f;
		return c;
	}
	,absPos: null
	,invPos: null
	,qRot: null
	,localToGlobal: function(pt) {
		this.syncPos();
		if(pt == null) {
			pt = new h3d_col_Point();
		}
		var m = this.absPos;
		var px = pt.x * m._11 + pt.y * m._21 + pt.z * m._31 + m._41;
		var py = pt.x * m._12 + pt.y * m._22 + pt.z * m._32 + m._42;
		var pz = pt.x * m._13 + pt.y * m._23 + pt.z * m._33 + m._43;
		pt.x = px;
		pt.y = py;
		pt.z = pz;
		return pt;
	}
	,getInvPos: function() {
		this.syncPos();
		if(this.invPos == null) {
			this.invPos = new h3d_Matrix();
			this.invPos._44 = 0;
		}
		if(this.invPos._44 == 0) {
			this.invPos.inverse3x4(this.absPos);
		}
		return this.invPos;
	}
	,addChild: function(o) {
		this.addChildAt(o,this.children.length);
	}
	,addChildAt: function(o,pos) {
		if(pos < 0) {
			pos = 0;
		}
		if(pos > this.children.length) {
			pos = this.children.length;
		}
		var p = this;
		while(p != null) {
			if(p == o) {
				throw haxe_Exception.thrown("Recursive addChild");
			}
			p = p.parent;
		}
		if(o.parent != null) {
			var old = (o.flags & 32) != 0;
			var f = 32;
			o.flags &= ~f;
			o.parent.removeChild(o);
			var f = 32;
			if(old) {
				o.flags |= f;
			} else {
				o.flags &= ~f;
			}
		}
		this.children.splice(pos,0,o);
		if((this.flags & 32) == 0 && (o.flags & 32) != 0) {
			o.onRemove();
		}
		o.parent = this;
		var f = 1;
		var b = true;
		if(b) {
			o.flags |= f;
		} else {
			o.flags &= ~f;
		}
		if((this.flags & 32) != 0) {
			if((o.flags & 32) == 0) {
				o.onAdd();
			} else {
				o.onParentChanged();
			}
		}
	}
	,iterVisibleMeshes: function(callb) {
		if((this.flags & 2) == 0 || (this.flags & 4) != 0 && (this.flags & 128) != 0) {
			return;
		}
		if((this.flags & 4) == 0) {
			var m = ((this) instanceof h3d_scene_Mesh) ? this : null;
			if(m != null) {
				callb(m);
			}
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.iterVisibleMeshes(callb);
		}
	}
	,onParentChanged: function() {
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onParentChanged();
		}
	}
	,onAdd: function() {
		var f = 32;
		this.flags |= f;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.onAdd();
		}
	}
	,onRemove: function() {
		var f = 32;
		this.flags &= ~f;
		var i = this.children.length - 1;
		while(i >= 0) this.children[i--].onRemove();
	}
	,removeChild: function(o) {
		if(HxOverrides.remove(this.children,o)) {
			if((o.flags & 32) != 0) {
				o.onRemove();
			}
			o.parent = null;
			var f = 1;
			var b = true;
			if(b) {
				o.flags |= f;
			} else {
				o.flags &= ~f;
			}
		}
	}
	,getScene: function() {
		var p = this;
		while(p.parent != null) p = p.parent;
		if(((p) instanceof h3d_scene_Scene)) {
			return p;
		} else {
			return null;
		}
	}
	,getAbsPos: function() {
		this.syncPos();
		return this.absPos;
	}
	,draw: function(ctx) {
	}
	,calcAbsPos: function() {
		this.qRot.toMatrix(this.absPos);
		this.absPos._11 *= this.scaleX;
		this.absPos._12 *= this.scaleX;
		this.absPos._13 *= this.scaleX;
		this.absPos._21 *= this.scaleY;
		this.absPos._22 *= this.scaleY;
		this.absPos._23 *= this.scaleY;
		this.absPos._31 *= this.scaleZ;
		this.absPos._32 *= this.scaleZ;
		this.absPos._33 *= this.scaleZ;
		this.absPos._41 = this.x;
		this.absPos._42 = this.y;
		this.absPos._43 = this.z;
		if(this.follow != null) {
			this.follow.syncPos();
			if((this.flags & 8) != 0) {
				var _this = this.absPos;
				var a = this.absPos;
				var b = this.parent.absPos;
				var m11 = a._11;
				var m12 = a._12;
				var m13 = a._13;
				var m21 = a._21;
				var m22 = a._22;
				var m23 = a._23;
				var a31 = a._31;
				var a32 = a._32;
				var a33 = a._33;
				var a41 = a._41;
				var a42 = a._42;
				var a43 = a._43;
				var b11 = b._11;
				var b12 = b._12;
				var b13 = b._13;
				var b21 = b._21;
				var b22 = b._22;
				var b23 = b._23;
				var b31 = b._31;
				var b32 = b._32;
				var b33 = b._33;
				var b41 = b._41;
				var b42 = b._42;
				var b43 = b._43;
				_this._11 = m11 * b11 + m12 * b21 + m13 * b31;
				_this._12 = m11 * b12 + m12 * b22 + m13 * b32;
				_this._13 = m11 * b13 + m12 * b23 + m13 * b33;
				_this._14 = 0;
				_this._21 = m21 * b11 + m22 * b21 + m23 * b31;
				_this._22 = m21 * b12 + m22 * b22 + m23 * b32;
				_this._23 = m21 * b13 + m22 * b23 + m23 * b33;
				_this._24 = 0;
				_this._31 = a31 * b11 + a32 * b21 + a33 * b31;
				_this._32 = a31 * b12 + a32 * b22 + a33 * b32;
				_this._33 = a31 * b13 + a32 * b23 + a33 * b33;
				_this._34 = 0;
				_this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
				_this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
				_this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
				_this._44 = 1;
				this.absPos._41 = this.x + this.follow.absPos._41;
				this.absPos._42 = this.y + this.follow.absPos._42;
				this.absPos._43 = this.z + this.follow.absPos._43;
			} else {
				this.absPos.multiply3x4(this.absPos,this.follow.absPos);
			}
		} else if(this.parent != null && (this.flags & 2048) == 0) {
			var _this = this.absPos;
			var a = this.absPos;
			var b = this.parent.absPos;
			var m11 = a._11;
			var m12 = a._12;
			var m13 = a._13;
			var m21 = a._21;
			var m22 = a._22;
			var m23 = a._23;
			var a31 = a._31;
			var a32 = a._32;
			var a33 = a._33;
			var a41 = a._41;
			var a42 = a._42;
			var a43 = a._43;
			var b11 = b._11;
			var b12 = b._12;
			var b13 = b._13;
			var b21 = b._21;
			var b22 = b._22;
			var b23 = b._23;
			var b31 = b._31;
			var b32 = b._32;
			var b33 = b._33;
			var b41 = b._41;
			var b42 = b._42;
			var b43 = b._43;
			_this._11 = m11 * b11 + m12 * b21 + m13 * b31;
			_this._12 = m11 * b12 + m12 * b22 + m13 * b32;
			_this._13 = m11 * b13 + m12 * b23 + m13 * b33;
			_this._14 = 0;
			_this._21 = m21 * b11 + m22 * b21 + m23 * b31;
			_this._22 = m21 * b12 + m22 * b22 + m23 * b32;
			_this._23 = m21 * b13 + m22 * b23 + m23 * b33;
			_this._24 = 0;
			_this._31 = a31 * b11 + a32 * b21 + a33 * b31;
			_this._32 = a31 * b12 + a32 * b22 + a33 * b32;
			_this._33 = a31 * b13 + a32 * b23 + a33 * b33;
			_this._34 = 0;
			_this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
			_this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
			_this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
			_this._44 = 1;
		}
		if(this.defaultTransform != null) {
			var _this = this.absPos;
			var a = this.defaultTransform;
			var b = this.absPos;
			var m11 = a._11;
			var m12 = a._12;
			var m13 = a._13;
			var m21 = a._21;
			var m22 = a._22;
			var m23 = a._23;
			var a31 = a._31;
			var a32 = a._32;
			var a33 = a._33;
			var a41 = a._41;
			var a42 = a._42;
			var a43 = a._43;
			var b11 = b._11;
			var b12 = b._12;
			var b13 = b._13;
			var b21 = b._21;
			var b22 = b._22;
			var b23 = b._23;
			var b31 = b._31;
			var b32 = b._32;
			var b33 = b._33;
			var b41 = b._41;
			var b42 = b._42;
			var b43 = b._43;
			_this._11 = m11 * b11 + m12 * b21 + m13 * b31;
			_this._12 = m11 * b12 + m12 * b22 + m13 * b32;
			_this._13 = m11 * b13 + m12 * b23 + m13 * b33;
			_this._14 = 0;
			_this._21 = m21 * b11 + m22 * b21 + m23 * b31;
			_this._22 = m21 * b12 + m22 * b22 + m23 * b32;
			_this._23 = m21 * b13 + m22 * b23 + m23 * b33;
			_this._24 = 0;
			_this._31 = a31 * b11 + a32 * b21 + a33 * b31;
			_this._32 = a31 * b12 + a32 * b22 + a33 * b32;
			_this._33 = a31 * b13 + a32 * b23 + a33 * b33;
			_this._34 = 0;
			_this._41 = a41 * b11 + a42 * b21 + a43 * b31 + b41;
			_this._42 = a41 * b12 + a42 * b22 + a43 * b32 + b42;
			_this._43 = a41 * b13 + a42 * b23 + a43 * b33 + b43;
			_this._44 = 1;
		}
		if(this.invPos != null) {
			this.invPos._44 = 0;
		}
	}
	,sync: function(ctx) {
	}
	,syncRec: function(ctx) {
		if(this.currentAnimation != null) {
			var old = this.parent;
			var dt = ctx.elapsedTime;
			while(dt > 0 && this.currentAnimation != null) dt = this.currentAnimation.update(dt);
			if(this.currentAnimation != null && (ctx.visibleFlag && (this.flags & 2) != 0 && (this.flags & 4) == 0 || (this.flags & 64) != 0)) {
				this.currentAnimation.sync();
			}
			if(this.parent == null && old != null) {
				return;
			}
		}
		if((this.flags & 32768) == 0 && ((this.flags & 4) != 0 || (this.flags & 2) == 0 || !ctx.visibleFlag)) {
			return;
		}
		var old = ctx.visibleFlag;
		if((this.flags & 2) == 0 || (this.flags & 4) != 0 && (this.flags & 128) != 0) {
			ctx.visibleFlag = false;
		}
		if(ctx.cullingCollider != null && (this.cullingCollider == null || (this.flags & 4096) != 0)) {
			this.set_cullingCollider(ctx.cullingCollider);
			var f = 4096;
			this.flags |= f;
		} else if((this.flags & 4096) != 0) {
			this.set_cullingCollider(null);
		}
		var prevCollider = ctx.cullingCollider;
		if((this.flags & 128) != 0) {
			ctx.cullingCollider = this.cullingCollider;
		}
		var changed = (this.flags & 1) != 0;
		if(changed) {
			this.calcAbsPos();
		}
		if((this.flags & 8192) != 0) {
			if((this.flags & 16384) != 0 && !changed && !ctx.wasContextLost) {
				ctx.visibleFlag = old;
				ctx.cullingCollider = prevCollider;
				return;
			}
			var f = 16384;
			this.flags |= f;
		}
		this.sync(ctx);
		var f = 1;
		var b = this.follow != null;
		if(b) {
			this.flags |= f;
		} else {
			this.flags &= ~f;
		}
		this.lastFrame = ctx.frame;
		var p = 0;
		var len = this.children.length;
		while(p < len) {
			var c = this.children[p];
			if(c == null) {
				break;
			}
			if(c.lastFrame != ctx.frame) {
				if(changed) {
					var f = 1;
					var b = true;
					if(b) {
						c.flags |= f;
					} else {
						c.flags &= ~f;
					}
				}
				c.syncRec(ctx);
			}
			if(this.children[p] != c) {
				p = 0;
				len = this.children.length;
			} else {
				++p;
			}
		}
		ctx.visibleFlag = old;
		ctx.cullingCollider = prevCollider;
	}
	,syncPos: function() {
		if(this.parent != null) {
			this.parent.syncPos();
		}
		if((this.flags & 1) != 0) {
			var f = 1;
			var b = this.follow != null;
			if(b) {
				this.flags |= f;
			} else {
				this.flags &= ~f;
			}
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var f = 1;
				var b = true;
				if(b) {
					c.flags |= f;
				} else {
					c.flags &= ~f;
				}
			}
		}
	}
	,emit: function(ctx) {
	}
	,emitRec: function(ctx) {
		if((this.flags & 2) == 0 || (this.flags & 4) != 0 && (this.flags & 128) != 0 && !ctx.computingStatic) {
			return;
		}
		if((this.flags & 1) != 0) {
			if(this.currentAnimation != null) {
				this.currentAnimation.sync();
			}
			var f = 1;
			var b = this.follow != null;
			if(b) {
				this.flags |= f;
			} else {
				this.flags &= ~f;
			}
			this.calcAbsPos();
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				var f = 1;
				var b = true;
				if(b) {
					c.flags |= f;
				} else {
					c.flags &= ~f;
				}
			}
		}
		if((this.flags & 4) == 0 || ctx.computingStatic) {
			this.emit(ctx);
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.emitRec(ctx);
		}
	}
	,__class__: h3d_scene_Object
	,__properties__: {set_cullingCollider:"set_cullingCollider"}
};
var h3d_col_Sphere = function(x,y,z,r) {
	if(r == null) {
		r = 0.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	var sx = x;
	var sy = y;
	var sz = z;
	var sr = r;
	if(sr == null) {
		sr = 0.;
	}
	if(sz == null) {
		sz = 0.;
	}
	if(sy == null) {
		sy = 0.;
	}
	if(sx == null) {
		sx = 0.;
	}
	this.x = sx;
	this.y = sy;
	this.z = sz;
	this.r = sr;
};
$hxClasses["h3d.col.Sphere"] = h3d_col_Sphere;
h3d_col_Sphere.__name__ = "h3d.col.Sphere";
h3d_col_Sphere.__super__ = h3d_col_Collider;
h3d_col_Sphere.prototype = $extend(h3d_col_Collider.prototype,{
	x: null
	,y: null
	,z: null
	,r: null
	,rayIntersection: function(r,bestMatch) {
		var r2 = this.r * this.r;
		var px = r.px + r.lx;
		var py = r.py + r.ly;
		var pz = r.pz + r.lz;
		var a = r.lx * r.lx + r.ly * r.ly + r.lz * r.lz;
		var b = 2 * r.lx * (this.x - px) + 2 * r.ly * (this.y - py) + 2 * r.lz * (this.z - pz);
		var c = this.x * this.x + this.y * this.y + this.z * this.z + (px * px + py * py + pz * pz) - 2 * (this.x * px + this.y * py + this.z * pz) - r2;
		var d = b * b - 4 * a * c;
		if(d < 0) {
			return -1;
		}
		d = Math.sqrt(d);
		var t = (-b + d) / (2 * a);
		return 1 - t;
	}
	,inFrustum: function(f,m) {
		if(m != null) {
			return this.inFrustumMatrix(f,m);
		}
		return f.hasSphere(this);
	}
	,inFrustumMatrix: function(f,m) {
		var oldX = this.x;
		var oldY = this.y;
		var oldZ = this.z;
		var oldR = this.r;
		var x = this.x;
		var y = this.y;
		var z = this.z;
		if(z == null) {
			z = 0.;
		}
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		var v_x = x;
		var v_y = y;
		var v_z = z;
		var px = v_x * m._11 + v_y * m._21 + v_z * m._31 + m._41;
		var py = v_x * m._12 + v_y * m._22 + v_z * m._32 + m._42;
		var pz = v_x * m._13 + v_y * m._23 + v_z * m._33 + m._43;
		v_x = px;
		v_y = py;
		v_z = pz;
		this.x = v_x;
		this.y = v_y;
		this.z = v_z;
		var scale_x = 0.;
		var scale_y = 0.;
		var scale_z = 0.;
		var scale_w = 1.;
		scale_x = Math.sqrt(m._11 * m._11 + m._12 * m._12 + m._13 * m._13);
		scale_y = Math.sqrt(m._21 * m._21 + m._22 * m._22 + m._23 * m._23);
		scale_z = Math.sqrt(m._31 * m._31 + m._32 * m._32 + m._33 * m._33);
		if(m._11 * (m._22 * m._33 - m._23 * m._32) + m._12 * (m._23 * m._31 - m._21 * m._33) + m._13 * (m._21 * m._32 - m._22 * m._31) < 0) {
			scale_x *= -1;
			scale_y *= -1;
			scale_z *= -1;
		}
		this.r *= Math.max(Math.max(scale_x,scale_y),scale_z);
		var res = f.hasSphere(this);
		this.x = oldX;
		this.y = oldY;
		this.z = oldZ;
		this.r = oldR;
		return res;
	}
	,__class__: h3d_col_Sphere
});
var h3d_impl_Feature = $hxEnums["h3d.impl.Feature"] = { __ename__:"h3d.impl.Feature",__constructs__:null
	,StandardDerivatives: {_hx_name:"StandardDerivatives",_hx_index:0,__enum__:"h3d.impl.Feature",toString:$estr}
	,FloatTextures: {_hx_name:"FloatTextures",_hx_index:1,__enum__:"h3d.impl.Feature",toString:$estr}
	,AllocDepthBuffer: {_hx_name:"AllocDepthBuffer",_hx_index:2,__enum__:"h3d.impl.Feature",toString:$estr}
	,HardwareAccelerated: {_hx_name:"HardwareAccelerated",_hx_index:3,__enum__:"h3d.impl.Feature",toString:$estr}
	,MultipleRenderTargets: {_hx_name:"MultipleRenderTargets",_hx_index:4,__enum__:"h3d.impl.Feature",toString:$estr}
	,Queries: {_hx_name:"Queries",_hx_index:5,__enum__:"h3d.impl.Feature",toString:$estr}
	,SRGBTextures: {_hx_name:"SRGBTextures",_hx_index:6,__enum__:"h3d.impl.Feature",toString:$estr}
	,ShaderModel3: {_hx_name:"ShaderModel3",_hx_index:7,__enum__:"h3d.impl.Feature",toString:$estr}
	,BottomLeftCoords: {_hx_name:"BottomLeftCoords",_hx_index:8,__enum__:"h3d.impl.Feature",toString:$estr}
	,Wireframe: {_hx_name:"Wireframe",_hx_index:9,__enum__:"h3d.impl.Feature",toString:$estr}
	,InstancedRendering: {_hx_name:"InstancedRendering",_hx_index:10,__enum__:"h3d.impl.Feature",toString:$estr}
};
h3d_impl_Feature.__constructs__ = [h3d_impl_Feature.StandardDerivatives,h3d_impl_Feature.FloatTextures,h3d_impl_Feature.AllocDepthBuffer,h3d_impl_Feature.HardwareAccelerated,h3d_impl_Feature.MultipleRenderTargets,h3d_impl_Feature.Queries,h3d_impl_Feature.SRGBTextures,h3d_impl_Feature.ShaderModel3,h3d_impl_Feature.BottomLeftCoords,h3d_impl_Feature.Wireframe,h3d_impl_Feature.InstancedRendering];
h3d_impl_Feature.__empty_constructs__ = [h3d_impl_Feature.StandardDerivatives,h3d_impl_Feature.FloatTextures,h3d_impl_Feature.AllocDepthBuffer,h3d_impl_Feature.HardwareAccelerated,h3d_impl_Feature.MultipleRenderTargets,h3d_impl_Feature.Queries,h3d_impl_Feature.SRGBTextures,h3d_impl_Feature.ShaderModel3,h3d_impl_Feature.BottomLeftCoords,h3d_impl_Feature.Wireframe,h3d_impl_Feature.InstancedRendering];
var h3d_impl_RenderFlag = $hxEnums["h3d.impl.RenderFlag"] = { __ename__:"h3d.impl.RenderFlag",__constructs__:null
	,CameraHandness: {_hx_name:"CameraHandness",_hx_index:0,__enum__:"h3d.impl.RenderFlag",toString:$estr}
};
h3d_impl_RenderFlag.__constructs__ = [h3d_impl_RenderFlag.CameraHandness];
h3d_impl_RenderFlag.__empty_constructs__ = [h3d_impl_RenderFlag.CameraHandness];
var h3d_impl_Driver = function() {
};
$hxClasses["h3d.impl.Driver"] = h3d_impl_Driver;
h3d_impl_Driver.__name__ = "h3d.impl.Driver";
h3d_impl_Driver.prototype = {
	hasFeature: function(f) {
		return false;
	}
	,setRenderFlag: function(r,value) {
	}
	,isSupportedFormat: function(fmt) {
		return false;
	}
	,isDisposed: function() {
		return true;
	}
	,begin: function(frame) {
	}
	,generateMipMaps: function(texture) {
		throw haxe_Exception.thrown("Mipmaps auto generation is not supported on this platform");
	}
	,clear: function(color,depth,stencil) {
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
	}
	,resize: function(width,height) {
	}
	,selectShader: function(shader) {
		return false;
	}
	,selectMaterial: function(pass) {
	}
	,uploadShaderBuffers: function(buffers,which) {
	}
	,selectBuffer: function(buffer) {
	}
	,selectMultiBuffers: function(format,buffers) {
	}
	,draw: function(ibuf,startIndex,ntriangles) {
	}
	,drawInstanced: function(ibuf,commands) {
	}
	,setRenderZone: function(x,y,width,height) {
	}
	,setRenderTarget: function(tex,layer,mipLevel,depthBinding) {
		if(depthBinding == null) {
			depthBinding = h3d_DepthBinding.ReadWrite;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		if(layer == null) {
			layer = 0;
		}
	}
	,setRenderTargets: function(textures,depthBinding) {
		if(depthBinding == null) {
			depthBinding = h3d_DepthBinding.ReadWrite;
		}
	}
	,setDepth: function(tex) {
	}
	,allocDepthBuffer: function(b) {
		return null;
	}
	,disposeDepthBuffer: function(b) {
	}
	,getDefaultDepthBuffer: function() {
		return null;
	}
	,end: function() {
	}
	,setDebug: function(b) {
	}
	,allocTexture: function(t) {
		return null;
	}
	,allocIndexes: function(count,is32) {
		return null;
	}
	,allocBuffer: function(b) {
		return null;
	}
	,disposeTexture: function(t) {
	}
	,disposeIndexes: function(i) {
	}
	,disposeBuffer: function(b) {
	}
	,uploadIndexBuffer: function(i,startIndice,indiceCount,buf,bufPos) {
	}
	,uploadIndexBytes: function(i,startIndice,indiceCount,buf,bufPos) {
	}
	,uploadBufferData: function(b,startVertex,vertexCount,buf,bufPos) {
	}
	,uploadTextureBitmap: function(t,bmp,mipLevel,side) {
	}
	,uploadTexturePixels: function(t,pixels,mipLevel,side) {
	}
	,copyTexture: function(from,to) {
		return false;
	}
	,__class__: h3d_impl_Driver
};
var h3d_impl__$GlDriver_CompiledShader = function(s,vertex,shader) {
	this.s = s;
	this.vertex = vertex;
	this.shader = shader;
};
$hxClasses["h3d.impl._GlDriver.CompiledShader"] = h3d_impl__$GlDriver_CompiledShader;
h3d_impl__$GlDriver_CompiledShader.__name__ = "h3d.impl._GlDriver.CompiledShader";
h3d_impl__$GlDriver_CompiledShader.prototype = {
	s: null
	,vertex: null
	,globals: null
	,params: null
	,textures: null
	,buffers: null
	,shader: null
	,__class__: h3d_impl__$GlDriver_CompiledShader
};
var h3d_impl__$GlDriver_CompiledAttribute = function() {
};
$hxClasses["h3d.impl._GlDriver.CompiledAttribute"] = h3d_impl__$GlDriver_CompiledAttribute;
h3d_impl__$GlDriver_CompiledAttribute.__name__ = "h3d.impl._GlDriver.CompiledAttribute";
h3d_impl__$GlDriver_CompiledAttribute.prototype = {
	index: null
	,type: null
	,size: null
	,divisor: null
	,__class__: h3d_impl__$GlDriver_CompiledAttribute
};
var h3d_impl__$GlDriver_CompiledProgram = function() {
};
$hxClasses["h3d.impl._GlDriver.CompiledProgram"] = h3d_impl__$GlDriver_CompiledProgram;
h3d_impl__$GlDriver_CompiledProgram.__name__ = "h3d.impl._GlDriver.CompiledProgram";
h3d_impl__$GlDriver_CompiledProgram.prototype = {
	p: null
	,vertex: null
	,fragment: null
	,format: null
	,attribs: null
	,hasAttribIndex: null
	,__class__: h3d_impl__$GlDriver_CompiledProgram
};
var h3d_impl_GlDriver = function(antiAlias) {
	if(antiAlias == null) {
		antiAlias = 0;
	}
	this.features = new haxe_ds_EnumValueMap();
	this.maxCompressedTexturesSupport = 0;
	this.rightHanded = false;
	this.firstShader = true;
	this.boundTextures = [];
	this.curTargets = [];
	var _g = [];
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	_g.push(0);
	this.currentDivisor = _g;
	this.curColorMask = -1;
	this.lastActiveIndex = 0;
	this.curStEnabled = false;
	this.curStMaskBits = -1;
	this.curStOpBits = -1;
	this.curMatBits = -1;
	this.maxIdxCurAttribs = 0;
	this.curAttribs = [];
	h3d_impl_Driver.call(this);
	this.canvas = hxd_Window.getInstance().canvas;
	var options = { alpha : false, stencil : true, antialias : antiAlias > 0};
	if(h3d_impl_GlDriver.ALLOW_WEBGL2) {
		this.gl = this.canvas.getContext("webgl2",options);
	}
	if(this.gl == null) {
		this.gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.canvas,options);
	}
	if(this.gl == null) {
		throw haxe_Exception.thrown("Could not acquire GL context");
	}
	if(typeof(WebGLDebugUtils) != "undefined") {
		this.gl = WebGLDebugUtils.makeDebugContext(this.gl);
		this.glDebug = true;
	}
	this.commonFB = this.gl.createFramebuffer();
	this.programs = new haxe_ds_IntMap();
	this.defStencil = new h3d_mat_Stencil();
	this.frame = hxd_Timer.frameCount;
	var v = this.gl.getParameter(7938);
	var reg = new EReg("ES ([0-9]+\\.[0-9]+)","");
	if(reg.match(v)) {
		this.glES = parseFloat(reg.matched(1));
	}
	var reg = new EReg("[0-9]+\\.[0-9]+","");
	var v = this.gl.getParameter(35724);
	if(reg.match(v)) {
		this.glES = parseFloat(reg.matched(0));
		this.shaderVersion = Math.round(parseFloat(reg.matched(0)) * 100);
	}
	this.drawMode = 4;
	this.makeFeatures();
	if(this.hasFeature(h3d_impl_Feature.InstancedRendering) && this.glES < 3) {
		var extension = this.gl.getExtension("ANGLE_instanced_arrays");
		this.gl["vertexAttribDivisor"] = $bind(extension,extension.vertexAttribDivisorANGLE);
		this.gl["drawElementsInstanced"] = $bind(extension,extension.drawElementsInstancedANGLE);
	}
	hxsl_SharedShader.UNROLL_LOOPS = !this.hasFeature(h3d_impl_Feature.ShaderModel3);
	this.gl.pixelStorei(3333,1);
	this.gl.pixelStorei(3317,1);
};
$hxClasses["h3d.impl.GlDriver"] = h3d_impl_GlDriver;
h3d_impl_GlDriver.__name__ = "h3d.impl.GlDriver";
h3d_impl_GlDriver.__super__ = h3d_impl_Driver;
h3d_impl_GlDriver.prototype = $extend(h3d_impl_Driver.prototype,{
	canvas: null
	,mrtExt: null
	,gl: null
	,commonFB: null
	,curAttribs: null
	,maxIdxCurAttribs: null
	,curShader: null
	,curBuffer: null
	,curIndexBuffer: null
	,curMatBits: null
	,curStOpBits: null
	,curStMaskBits: null
	,curStEnabled: null
	,defStencil: null
	,programs: null
	,frame: null
	,lastActiveIndex: null
	,curColorMask: null
	,currentDivisor: null
	,bufferWidth: null
	,bufferHeight: null
	,curTarget: null
	,curTargets: null
	,numTargets: null
	,curTargetLayer: null
	,curTargetMip: null
	,debug: null
	,glDebug: null
	,boundTextures: null
	,glES: null
	,shaderVersion: null
	,firstShader: null
	,rightHanded: null
	,maxCompressedTexturesSupport: null
	,drawMode: null
	,isIntelGpu: null
	,setRenderFlag: function(r,value) {
		this.rightHanded = value > 0;
	}
	,setDebug: function(d) {
		this.debug = d;
	}
	,begin: function(frame) {
		this.frame = frame;
		this.resetStream();
		this.gl.useProgram(null);
		this.curShader = null;
		this.curBuffer = null;
	}
	,makeCompiler: function() {
		var glout = new hxsl_GlslOut();
		glout.glES = this.glES;
		glout.version = this.shaderVersion;
		glout.intelDriverFix = this.isIntelGpu;
		return glout;
	}
	,getDriverName: function(details) {
		var render = this.gl.getParameter(7937);
		if(details) {
			render += " GLv" + Std.string(this.gl.getParameter(7938));
		} else {
			render = render.split("/").shift();
		}
		render = render.split("WebGL ").join("");
		return "OpenGL " + render;
	}
	,compileShader: function(glout,shader) {
		var type = shader.vertex ? 35633 : 35632;
		var s = this.gl.createShader(type);
		if(shader.code == null) {
			shader.code = glout.run(shader.data);
			shader.data.funs = null;
		}
		this.gl.shaderSource(s,shader.code);
		this.gl.compileShader(s);
		var log = this.gl.getShaderInfoLog(s);
		if(this.gl.getShaderParameter(s,35713) != 1) {
			var log = this.gl.getShaderInfoLog(s);
			var lid = Std.parseInt(HxOverrides.substr(log,9,null));
			var line = lid == null ? null : shader.code.split("\n")[lid - 1];
			if(line == null) {
				line = "";
			} else {
				line = "(" + StringTools.trim(line) + ")";
			}
			var codeLines = shader.code.split("\n");
			var _g = 0;
			var _g1 = codeLines.length;
			while(_g < _g1) {
				var i = _g++;
				codeLines[i] = i + 1 + "\t" + codeLines[i];
			}
			throw haxe_Exception.thrown("An error occurred compiling the shaders: " + log + line + "\n\n" + codeLines.join("\n"));
		}
		return new h3d_impl__$GlDriver_CompiledShader(s,shader.vertex,shader);
	}
	,initShader: function(p,s,shader,rt) {
		var prefix = s.vertex ? "vertex" : "fragment";
		s.globals = this.gl.getUniformLocation(p.p,prefix + "Globals");
		s.params = this.gl.getUniformLocation(p.p,prefix + "Params");
		s.textures = [];
		var index = 0;
		var curT = null;
		var mode = 0;
		var name = "";
		var t = shader.textures;
		while(t != null) {
			var tt = t.type;
			var count = 1;
			switch(tt._hx_index) {
			case 15:
				var _g = tt.size;
				if(_g._hx_index == 0) {
					var n = _g.v;
					var t1 = tt.t;
					tt = t1;
					count = n;
				}
				break;
			case 17:
				var _g1 = tt.size;
				tt = hxsl_Type.TSampler2D;
				break;
			default:
			}
			if(tt != curT) {
				curT = tt;
				switch(tt._hx_index) {
				case 10:
					mode = 3553;
					name = "Textures";
					break;
				case 11:
					mode = 35866;
					name = "TexturesArray";
					break;
				case 12:
					mode = 34067;
					name = "TexturesCube";
					break;
				default:
					throw haxe_Exception.thrown("Unsupported texture type " + Std.string(tt));
				}
				index = 0;
			}
			var _g2 = 0;
			var _g3 = count;
			while(_g2 < _g3) {
				var i = _g2++;
				var loc = this.gl.getUniformLocation(p.p,prefix + name + "[" + index + "]");
				if(loc == null) {
					throw haxe_Exception.thrown("Texture " + rt.spec.instances[t.instance].shader.data.name + "." + t.name + " is missing from generated shader");
				}
				s.textures.push({ u : loc, t : curT, mode : mode});
				++index;
			}
			t = t.next;
		}
		if(shader.bufferCount > 0) {
			var _g = [];
			var _g1 = 0;
			var _g2 = shader.bufferCount;
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(this.gl.getUniformBlockIndex(p.p,(shader.vertex ? "vertex_" : "") + "uniform_buffer" + i));
			}
			s.buffers = _g;
			var start = 0;
			if(!s.vertex) {
				start = rt.vertex.bufferCount;
			}
			var _g = 0;
			var _g1 = shader.bufferCount;
			while(_g < _g1) {
				var i = _g++;
				this.gl.uniformBlockBinding(p.p,s.buffers[i],i + start);
			}
		}
	}
	,selectShader: function(shader) {
		var p = this.programs.h[shader.id];
		if(p == null) {
			p = new h3d_impl__$GlDriver_CompiledProgram();
			var glout = this.makeCompiler();
			p.vertex = this.compileShader(glout,shader.vertex);
			p.fragment = this.compileShader(glout,shader.fragment);
			p.p = this.gl.createProgram();
			this.gl.attachShader(p.p,p.vertex.s);
			this.gl.attachShader(p.p,p.fragment.s);
			var log = null;
			try {
				this.gl.linkProgram(p.p);
				if(this.gl.getProgramParameter(p.p,35714) != 1) {
					log = this.gl.getProgramInfoLog(p.p);
				}
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				throw haxe_Exception.thrown("Shader linkage error: " + Std.string(e) + " (" + this.getDriverName(false) + ")");
			}
			this.gl.deleteShader(p.vertex.s);
			this.gl.deleteShader(p.fragment.s);
			if(log != null) {
				this.gl.deleteProgram(p.p);
				throw haxe_Exception.thrown("Program linkage failure: " + log + "\nVertex=\n" + shader.vertex.code + "\n\nFragment=\n" + shader.fragment.code);
			}
			this.firstShader = false;
			this.initShader(p,p.vertex,shader.vertex,shader);
			this.initShader(p,p.fragment,shader.fragment,shader);
			p.attribs = [];
			p.hasAttribIndex = 0;
			var format = [];
			var _g = 0;
			var _g1 = shader.vertex.data.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				if(v.kind._hx_index == 1) {
					var t = hxd_InputFormat.fromHXSL(v.type);
					var index = this.gl.getAttribLocation(p.p,glout.varNames.h.hasOwnProperty(v.id) ? glout.varNames.h[v.id] : v.name);
					if(index < 0) {
						continue;
					}
					if(index >= 32) {
						throw haxe_Exception.thrown("assert");
					}
					var a = new h3d_impl__$GlDriver_CompiledAttribute();
					a.type = 5126;
					a.index = index;
					a.size = t & 7;
					var _g2 = v.type;
					if(_g2._hx_index == 9) {
						var n = _g2.size;
						a.type = 5120;
						a.size = n;
					}
					a.divisor = 0;
					if(v.qualifiers != null) {
						var _g3 = 0;
						var _g4 = v.qualifiers;
						while(_g3 < _g4.length) {
							var q = _g4[_g3];
							++_g3;
							if(q._hx_index == 9) {
								var n1 = q.v;
								a.divisor = n1;
							}
						}
					}
					p.attribs.push(a);
					p.hasAttribIndex |= 1 << a.index;
					format.push(new hxd_BufferInput(v.name,t,0));
				}
			}
			p.format = hxd_BufferFormat.make(format);
			this.programs.h[shader.id] = p;
		}
		if(this.curShader == p) {
			return false;
		}
		this.setProgram(p);
		return true;
	}
	,setProgram: function(p) {
		this.gl.useProgram(p.p);
		var _g = 0;
		var _g1 = p.attribs;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(!this.curAttribs[a.index]) {
				this.gl.enableVertexAttribArray(a.index);
				this.curAttribs[a.index] = true;
				if(this.maxIdxCurAttribs < a.index) {
					this.maxIdxCurAttribs = a.index;
				}
			}
		}
		var lastIdxCurAttribTrue = 0;
		var _g = 0;
		var _g1 = this.maxIdxCurAttribs + 1;
		while(_g < _g1) {
			var i = _g++;
			if(this.curAttribs[i] && (p.hasAttribIndex & 1 << i) == 0) {
				this.gl.disableVertexAttribArray(i);
				this.curAttribs[i] = false;
			} else if(this.curAttribs[i]) {
				lastIdxCurAttribTrue = i;
			}
		}
		this.maxIdxCurAttribs = lastIdxCurAttribTrue;
		this.curShader = p;
		this.curBuffer = null;
		var _g = 0;
		var _g1 = this.boundTextures.length;
		while(_g < _g1) {
			var i = _g++;
			this.boundTextures[i] = null;
		}
	}
	,uploadShaderBuffers: function(buf,which) {
		this.uploadBuffer(buf,this.curShader.vertex,buf.vertex,which);
		this.uploadBuffer(buf,this.curShader.fragment,buf.fragment,which);
	}
	,uploadBuffer: function(buffer,s,buf,which) {
		switch(which) {
		case 0:
			if(s.globals != null) {
				var a = buf.globals.subarray(0,s.shader.globalsSize * 4);
				this.gl.uniform4fv(s.globals,a);
			}
			break;
		case 1:
			if(s.params != null) {
				var a = buf.params.subarray(0,s.shader.paramsSize * 4);
				this.gl.uniform4fv(s.params,a);
			}
			break;
		case 2:
			var tcount = s.textures.length;
			var _g = 0;
			var _g1 = s.textures.length;
			while(_g < _g1) {
				var i = _g++;
				var t = buf.tex[i];
				var pt = s.textures[i];
				if(t == null || (t.isDepth() ? t.t == null : t.t == null && t.realloc == null)) {
					switch(pt.t._hx_index) {
					case 10:
						var color = h3d_mat_Defaults.loadingTextureColor;
						t = h3d_mat_Texture.fromColor(color,(color >>> 24) / 255);
						break;
					case 12:
						t = h3d_mat_Texture.defaultCubeTexture();
						break;
					default:
						throw haxe_Exception.thrown("Missing texture");
					}
				}
				if(t != null && t.t == null && t.realloc != null) {
					var s1 = this.curShader;
					t.alloc();
					t.realloc();
					if(this.curShader != s1) {
						this.setProgram(s1);
						this.uploadShaderBuffers(buffer,0);
						this.uploadShaderBuffers(buffer,1);
						this.uploadShaderBuffers(buffer,2);
						return;
					}
				}
				t.set_lastFrame(this.frame);
				if(pt.u == null) {
					continue;
				}
				var idx = s.vertex ? i : this.curShader.vertex.textures.length + i;
				if(this.boundTextures[idx] != t.t) {
					this.boundTextures[idx] = t.t;
					var mode = this.getBindType(t);
					if(mode != pt.mode) {
						throw haxe_Exception.thrown("Texture format mismatch: " + Std.string(t) + " should be " + Std.string(pt.t));
					}
					this.gl.activeTexture(33984 + idx);
					this.gl.uniform1i(pt.u,idx);
					this.gl.bindTexture(mode,t.t.t);
					this.lastActiveIndex = idx;
				}
				var mip = t.mipMap._hx_index;
				var filter = t.filter._hx_index;
				var wrap = t.wrap._hx_index;
				var bits = mip | filter << 3 | wrap << 6;
				if(bits != t.t.bits) {
					t.t.bits = bits;
					var flags = h3d_impl_GlDriver.TFILTERS[mip][filter];
					var mode1 = pt.mode;
					this.gl.texParameteri(mode1,10240,flags[0]);
					this.gl.texParameteri(mode1,10241,flags[1]);
					this.gl.texParameteri(mode1,34892,0);
					var w = h3d_impl_GlDriver.TWRAP[wrap];
					this.gl.texParameteri(mode1,10242,w);
					this.gl.texParameteri(mode1,10243,w);
				}
				if(t.t.startMip != t.startingMip) {
					this.gl.texParameteri(pt.mode,33084,t.startingMip);
					t.t.startMip = t.startingMip;
				}
			}
			break;
		case 3:
			if(s.buffers != null) {
				var start = 0;
				if(!s.vertex && this.curShader.vertex.buffers != null) {
					start = this.curShader.vertex.buffers.length;
				}
				var _g = 0;
				var _g1 = s.buffers.length;
				while(_g < _g1) {
					var i = _g++;
					this.gl.bindBufferBase(35345,i + start,buf.buffers[i].vbuf);
				}
			}
			break;
		}
	}
	,selectMaterial: function(pass) {
		var bits = pass.bits;
		if(this.curTarget == null == this.rightHanded) {
			switch(pass.culling._hx_index) {
			case 1:
				bits = bits & -4 | 2;
				break;
			case 2:
				bits = bits & -4 | 1;
				break;
			default:
			}
		}
		this.selectMaterialBits(bits);
		if(this.curColorMask != pass.colorMask) {
			var m = pass.colorMask;
			this.gl.colorMask((m & 1) != 0,(m & 2) != 0,(m & 4) != 0,(m & 8) != 0);
			var mi = m >> 4;
			if(mi > 0) {
				throw haxe_Exception.thrown("GL ColorMaski support requires hlsdl 1.14+");
			}
			this.curColorMask = m;
		}
		var s = this.defStencil;
		if(pass.stencil == null) {
			if(this.curStEnabled) {
				this.gl.disable(2960);
				this.curStEnabled = false;
			}
		} else {
			s = pass.stencil;
			if(!this.curStEnabled) {
				this.gl.enable(2960);
				this.curStEnabled = true;
			}
		}
		this.selectStencilBits(s.opBits,s.maskBits);
	}
	,selectMaterialBits: function(bits) {
		var diff = bits ^ this.curMatBits;
		if(this.curMatBits < 0) {
			diff = -1;
		}
		if(diff == 0) {
			return;
		}
		var wireframe = (bits & 268435456) != 0;
		this.drawMode = wireframe ? 3 : 4;
		if((diff & 3) != 0) {
			var cull = bits & 3;
			if(cull == 0) {
				this.gl.disable(2884);
			} else {
				if(this.curMatBits < 0 || (this.curMatBits & 3) == 0) {
					this.gl.enable(2884);
				}
				this.gl.cullFace(h3d_impl_GlDriver.FACES[cull]);
			}
		}
		if((diff & 4194240) != 0) {
			var csrc = bits >> 6 & 15;
			var cdst = bits >> 10 & 15;
			var asrc = bits >> 14 & 15;
			var adst = bits >> 18 & 15;
			if(csrc == asrc && cdst == adst) {
				if(csrc == 0 && cdst == 1) {
					this.gl.disable(3042);
				} else {
					if(this.curMatBits < 0 || (this.curMatBits >> 6 & 15) == 0 && (this.curMatBits >> 10 & 15) == 1) {
						this.gl.enable(3042);
					}
					this.gl.blendFunc(h3d_impl_GlDriver.BLEND[csrc],h3d_impl_GlDriver.BLEND[cdst]);
				}
			} else {
				if(this.curMatBits < 0 || (this.curMatBits >> 6 & 15) == 0 && (this.curMatBits >> 10 & 15) == 1) {
					this.gl.enable(3042);
				}
				this.gl.blendFuncSeparate(h3d_impl_GlDriver.BLEND[csrc],h3d_impl_GlDriver.BLEND[cdst],h3d_impl_GlDriver.BLEND[asrc],h3d_impl_GlDriver.BLEND[adst]);
			}
		}
		if((diff & 264241152) != 0) {
			var cop = bits >> 22 & 7;
			var aop = bits >> 25 & 7;
			if(cop == aop) {
				this.gl.blendEquation(h3d_impl_GlDriver.OP[cop]);
			} else {
				this.gl.blendEquationSeparate(h3d_impl_GlDriver.OP[cop],h3d_impl_GlDriver.OP[aop]);
			}
		}
		if((diff & 4) != 0) {
			this.gl.depthMask((bits >> 2 & 1) != 0);
		}
		if((diff & 56) != 0) {
			var cmp = bits >> 3 & 7;
			if(cmp == 0) {
				this.gl.disable(2929);
			} else {
				if(this.curMatBits < 0 || (this.curMatBits >> 3 & 7) == 0) {
					this.gl.enable(2929);
				}
				this.gl.depthFunc(h3d_impl_GlDriver.COMPARE[cmp]);
			}
		}
		this.curMatBits = bits;
	}
	,selectStencilBits: function(opBits,maskBits) {
		var diffOp = opBits ^ this.curStOpBits;
		var diffMask = maskBits ^ this.curStMaskBits;
		if((diffOp | diffMask) == 0) {
			return;
		}
		if((diffOp & 4088) != 0) {
			this.gl.stencilOpSeparate(h3d_impl_GlDriver.FACES[2],h3d_impl_GlDriver.STENCIL_OP[opBits >> 6 & 7],h3d_impl_GlDriver.STENCIL_OP[opBits >> 9 & 7],h3d_impl_GlDriver.STENCIL_OP[opBits >> 3 & 7]);
		}
		if((diffOp & 16744448) != 0) {
			this.gl.stencilOpSeparate(h3d_impl_GlDriver.FACES[1],h3d_impl_GlDriver.STENCIL_OP[opBits >> 18 & 7],h3d_impl_GlDriver.STENCIL_OP[opBits >> 21 & 7],h3d_impl_GlDriver.STENCIL_OP[opBits >> 15 & 7]);
		}
		if((diffOp & 7 | diffMask & 16711935) != 0) {
			this.gl.stencilFuncSeparate(h3d_impl_GlDriver.FACES[2],h3d_impl_GlDriver.COMPARE[opBits & 7],maskBits >> 16 & 255,maskBits & 255);
		}
		if((diffOp & 28672 | diffMask & 16711935) != 0) {
			this.gl.stencilFuncSeparate(h3d_impl_GlDriver.FACES[1],h3d_impl_GlDriver.COMPARE[opBits >> 12 & 7],maskBits >> 16 & 255,maskBits & 255);
		}
		if((diffMask & 65280) != 0) {
			var w = maskBits >> 8 & 255;
			this.gl.stencilMaskSeparate(h3d_impl_GlDriver.FACES[2],w);
			this.gl.stencilMaskSeparate(h3d_impl_GlDriver.FACES[1],w);
		}
		this.curStOpBits = opBits;
		this.curStMaskBits = maskBits;
	}
	,clear: function(color,depth,stencil) {
		var bits = 0;
		if(color != null) {
			this.gl.colorMask(true,true,true,true);
			this.curColorMask = 15;
			this.gl.clearColor(color.x,color.y,color.z,color.w);
			bits |= 16384;
		}
		if(depth != null) {
			this.gl.depthMask(true);
			if(this.curMatBits >= 0) {
				this.curMatBits |= 4;
			}
			this.gl.clearDepth(depth);
			bits |= 256;
		}
		if(stencil != null) {
			this.selectStencilBits(this.defStencil.opBits,this.defStencil.maskBits);
			this.gl.clearStencil(stencil);
			bits |= 1024;
		}
		if(bits != 0) {
			this.gl.clear(bits);
		}
		if(this.curTarget != null) {
			this.curTarget.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
		}
	}
	,resize: function(width,height) {
		if(this.canvas.style.width == "") {
			var tmp = width / window.devicePixelRatio | 0;
			this.canvas.style.width = tmp + "px";
			var tmp = height / window.devicePixelRatio | 0;
			this.canvas.style.height = tmp + "px";
		}
		this.canvas.width = width;
		this.canvas.height = height;
		this.bufferWidth = width;
		this.bufferHeight = height;
		this.gl.viewport(0,0,width,height);
		if(this.defaultDepth != null) {
			this.disposeDepthBuffer(this.defaultDepth);
			this.defaultDepth.width = this.bufferWidth;
			this.defaultDepth.height = this.bufferHeight;
			this.defaultDepth.t = this.allocDepthBuffer(this.defaultDepth);
		}
	}
	,getChannels: function(t) {
		switch(t.internalFmt) {
		case 6407:
			return 6407;
		case 6408:
			return 6408;
		case 32857:
			return 6408;
		case 6403:case 33321:case 33322:case 33325:case 33326:
			return 6403;
		case 33319:case 33323:case 33324:case 33327:case 33328:
			return 33319;
		case 34836:case 34842:
			return 6408;
		case 35898:
			return 6407;
		case 35904:case 35905:
			return 6407;
		case 32859:case 33777:case 33778:case 33779:case 36492:
			return 6408;
		case 32852:case 34837:case 34843:case 36495:
			return 6407;
		default:
			throw haxe_Exception.thrown("Invalid format " + t.internalFmt);
		}
	}
	,isSupportedFormat: function(fmt) {
		switch(fmt._hx_index) {
		case 2:
			return true;
		case 3:case 4:
			return this.hasFeature(h3d_impl_Feature.FloatTextures);
		case 14:case 15:
			return this.hasFeature(h3d_impl_Feature.SRGBTextures);
		case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 16:case 17:
			return this.glES >= 3;
		case 22:
			var n = fmt.v;
			return n <= this.maxCompressedTexturesSupport;
		default:
			return false;
		}
	}
	,getBindType: function(t) {
		var isCube = (t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0;
		var isArray = (t.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0;
		if(isCube) {
			return 34067;
		} else if(isArray) {
			return 35866;
		} else {
			return 3553;
		}
	}
	,allocTexture: function(t) {
		var _gthis = this;
		if(h3d_impl_GlDriver.outOfMemoryCheck) {
			this.gl.getError();
		}
		var tt = this.gl.createTexture();
		var bind = this.getBindType(t);
		var tt1 = { t : tt, width : t.width, height : t.height, internalFmt : 6408, pixelFmt : 5121, bits : -1, bind : bind, bias : 0, startMip : t.startingMip};
		var _g = t.format;
		switch(_g._hx_index) {
		case 1:
			tt1.internalFmt = 32856;
			break;
		case 2:
			break;
		case 3:
			if(this.hasFeature(h3d_impl_Feature.FloatTextures)) {
				tt1.pixelFmt = 5131;
				tt1.internalFmt = 34842;
			} else {
				throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
			}
			break;
		case 4:
			if(this.hasFeature(h3d_impl_Feature.FloatTextures)) {
				tt1.internalFmt = 34836;
				tt1.pixelFmt = 5126;
			} else {
				throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
			}
			break;
		case 5:
			tt1.internalFmt = 33321;
			break;
		case 6:
			tt1.internalFmt = 33325;
			tt1.pixelFmt = 5131;
			break;
		case 7:
			tt1.internalFmt = 33326;
			tt1.pixelFmt = 5126;
			break;
		case 8:
			tt1.internalFmt = 33323;
			break;
		case 9:
			tt1.internalFmt = 33327;
			tt1.pixelFmt = 5131;
			break;
		case 10:
			tt1.internalFmt = 33328;
			tt1.pixelFmt = 5126;
			break;
		case 11:
			tt1.internalFmt = 6407;
			break;
		case 12:
			tt1.internalFmt = 34843;
			tt1.pixelFmt = 5131;
			break;
		case 13:
			tt1.internalFmt = 34837;
			tt1.pixelFmt = 5126;
			break;
		case 14:
			tt1.internalFmt = 35905;
			break;
		case 16:
			tt1.internalFmt = 32857;
			tt1.pixelFmt = 33640;
			break;
		case 17:
			tt1.internalFmt = 35898;
			tt1.pixelFmt = 35899;
			break;
		case 18:
			tt1.internalFmt = 33322;
			tt1.pixelFmt = 5123;
			break;
		case 19:
			tt1.internalFmt = 33324;
			tt1.pixelFmt = 5123;
			break;
		case 20:
			tt1.internalFmt = 32852;
			tt1.pixelFmt = 5123;
			break;
		case 21:
			tt1.internalFmt = 32859;
			tt1.pixelFmt = 5123;
			break;
		case 22:
			var n = _g.v;
			if(n <= this.maxCompressedTexturesSupport) {
				if((t.width & 3) != 0 || (t.height & 3) != 0) {
					throw haxe_Exception.thrown("Compressed texture " + Std.string(t) + " has size " + t.width + "x" + t.height + " - must be a multiple of 4");
				}
				switch(n) {
				case 1:
					tt1.internalFmt = 33777;
					break;
				case 2:
					tt1.internalFmt = 33778;
					break;
				case 3:
					tt1.internalFmt = 33779;
					break;
				case 6:
					tt1.internalFmt = 36495;
					break;
				case 7:
					tt1.internalFmt = 36492;
					break;
				default:
					throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
				}
			} else {
				throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
			}
			break;
		default:
			throw haxe_Exception.thrown("Unsupported texture format " + Std.string(t.format));
		}
		if(tt1.pixelFmt == 5123 && !this.has16Bits) {
			throw haxe_Exception.thrown("16 bit textures requires EXT_texture_norm16 extension");
		}
		t.set_lastFrame(this.frame);
		t.flags &= -1 - (1 << h3d_mat_TextureFlags.WasCleared._hx_index);
		this.gl.bindTexture(bind,tt1.t);
		var outOfMem = false;
		this.gl.texParameteri(bind,33084,t.startingMip);
		this.gl.texParameteri(bind,33085,t.get_mipLevels() - 1);
		var sizedFormat = tt1.internalFmt == 6408 ? 32856 : tt1.internalFmt;
		if((t.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0 && (t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) == 0) {
			this.gl.texStorage3D(bind,t.get_mipLevels(),sizedFormat,tt1.width,tt1.height,t.get_layerCount());
			if(h3d_impl_GlDriver.outOfMemoryCheck) {
				var err = _gthis.gl.getError();
				if(err == 1285) {
					outOfMem = true;
				} else if(err != 0) {
					throw haxe_Exception.thrown("Failed to alloc texture " + Std.string(t.format) + "(error " + err + ")");
				}
			}
		} else {
			this.gl.texStorage2D(bind,t.get_mipLevels(),sizedFormat,tt1.width,tt1.height);
			if(h3d_impl_GlDriver.outOfMemoryCheck) {
				var err = _gthis.gl.getError();
				if(err == 1285) {
					outOfMem = true;
				} else if(err != 0) {
					throw haxe_Exception.thrown("Failed to alloc texture " + Std.string(t.format) + "(error " + err + ")");
				}
			}
		}
		this.restoreBind();
		if(outOfMem) {
			this.gl.deleteTexture(tt1.t);
			return null;
		}
		return tt1;
	}
	,restoreBind: function() {
		var t = this.boundTextures[this.lastActiveIndex];
		if(t == null) {
			this.gl.bindTexture(3553,null);
		} else {
			this.gl.bindTexture(t.bind,t.t);
		}
	}
	,allocDepthBuffer: function(t) {
		var tt = this.gl.createTexture();
		var tt1 = { t : tt, width : t.width, height : t.height, internalFmt : 6408, pixelFmt : 5121, bits : -1, bind : 3553, bias : 0, startMip : 0};
		var fmt = 6402;
		switch(t.format._hx_index) {
		case 23:
			tt1.internalFmt = 33189;
			break;
		case 24:
			if(this.glES >= 3) {
				tt1.internalFmt = 6402;
			} else {
				throw haxe_Exception.thrown("Unsupported depth format " + Std.string(t.format));
			}
			break;
		case 25:
			tt1.internalFmt = 35056;
			tt1.pixelFmt = 34042;
			fmt = 34041;
			break;
		default:
			throw haxe_Exception.thrown("Unsupported depth format " + Std.string(t.format));
		}
		t.set_lastFrame(this.frame);
		t.flags &= -1 - (1 << h3d_mat_TextureFlags.WasCleared._hx_index);
		this.gl.bindTexture(tt1.bind,tt1.t);
		this.gl.texParameteri(tt1.bind,10241,9728);
		this.gl.texParameteri(tt1.bind,10240,9728);
		this.gl.texParameteri(tt1.bind,10242,33071);
		this.gl.texParameteri(tt1.bind,10243,33071);
		this.gl.texImage2D(tt1.bind,0,tt1.internalFmt,tt1.width,tt1.height,0,fmt,tt1.pixelFmt,null);
		this.restoreBind();
		return tt1;
	}
	,disposeDepthBuffer: function(b) {
		if(b.t != null && b.t.t != null) {
			this.gl.deleteTexture(b.t.t);
			b.t = null;
		}
	}
	,defaultDepth: null
	,getDefaultDepthBuffer: function() {
		if(this.defaultDepth != null) {
			return this.defaultDepth;
		}
		this.defaultDepth = new h3d_mat_Texture(0,0,null,hxd_PixelFormat.Depth24Stencil8);
		this.defaultDepth.name = "defaultDepthBuffer";
		this.defaultDepth.width = this.bufferWidth;
		this.defaultDepth.height = this.bufferHeight;
		this.defaultDepth.t = this.allocDepthBuffer(this.defaultDepth);
		return this.defaultDepth;
	}
	,allocBuffer: function(b) {
		if(h3d_impl_GlDriver.outOfMemoryCheck) {
			this.gl.getError();
		}
		var vb = this.gl.createBuffer();
		this.gl.bindBuffer(34962,vb);
		if(b.vertices * b.format.stride == 0) {
			throw haxe_Exception.thrown("assert");
		}
		this.gl.bufferData(34962,b.vertices * b.format.strideBytes,(b.flags & 1 << h3d_BufferFlag.Dynamic._hx_index) != 0 ? 35048 : 35044);
		var outOfMem = h3d_impl_GlDriver.outOfMemoryCheck && this.gl.getError() == 1285;
		this.gl.bindBuffer(34962,null);
		if(outOfMem) {
			this.gl.deleteBuffer(vb);
			return null;
		}
		return vb;
	}
	,allocIndexes: function(count,is32) {
		if(h3d_impl_GlDriver.outOfMemoryCheck) {
			this.gl.getError();
		}
		var b = this.gl.createBuffer();
		var size = is32 ? 4 : 2;
		this.gl.bindBuffer(34963,b);
		this.gl.bufferData(34963,count * size,35044);
		var outOfMem = h3d_impl_GlDriver.outOfMemoryCheck && this.gl.getError() == 1285;
		this.gl.bindBuffer(34963,null);
		this.curIndexBuffer = null;
		if(outOfMem) {
			this.gl.deleteBuffer(b);
			return null;
		}
		return { b : b, is32 : is32};
	}
	,disposeTexture: function(t) {
		var tt = t.t;
		if(tt == null) {
			return;
		}
		t.t = null;
		var _g = 0;
		var _g1 = this.boundTextures.length;
		while(_g < _g1) {
			var i = _g++;
			if(this.boundTextures[i] == tt) {
				this.boundTextures[i] = null;
			}
		}
		this.gl.deleteTexture(tt.t);
	}
	,disposeIndexes: function(i) {
		this.gl.deleteBuffer(i.b);
	}
	,disposeBuffer: function(b) {
		this.gl.deleteBuffer(b.vbuf);
	}
	,generateMipMaps: function(t) {
		var bind = this.getBindType(t);
		this.gl.bindTexture(bind,t.t.t);
		this.gl.generateMipmap(bind);
		this.restoreBind();
	}
	,uploadTextureBitmap: function(t,bmp,mipLevel,side) {
		if(t.format != hxd_PixelFormat.RGBA || t.get_layerCount() != 1) {
			var pixels = bmp.getPixels();
			this.uploadTexturePixels(t,pixels,mipLevel,side);
			pixels.dispose();
		} else {
			var img = bmp.ctx;
			this.gl.bindTexture(3553,t.t.t);
			this.gl.texSubImage2D(3553,mipLevel,0,0,this.getChannels(t.t),t.t.pixelFmt,img.getImageData(0,0,bmp.ctx.canvas.width,bmp.ctx.canvas.height));
			this.restoreBind();
		}
	}
	,resetStream: function() {
	}
	,uploadTexturePixels: function(t,pixels,mipLevel,side) {
		var cubic = (t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0;
		var face = cubic ? h3d_impl_GlDriver.CUBE_FACES[side] : (t.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0 ? 35866 : 3553;
		var bind = this.getBindType(t);
		this.gl.bindTexture(bind,t.t.t);
		pixels.convert(t.format);
		var dataLen = pixels.dataSize;
		var buffer;
		switch(t.format._hx_index) {
		case 4:case 7:case 10:case 13:
			buffer = new Float32Array(pixels.bytes.b.buffer,pixels.offset,dataLen >> 2);
			break;
		case 16:case 17:
			buffer = new Uint32Array(pixels.bytes.b.buffer,pixels.offset,dataLen >> 2);
			break;
		case 3:case 6:case 9:case 12:case 18:case 19:case 20:case 21:
			buffer = new Uint16Array(pixels.bytes.b.buffer,pixels.offset,dataLen >> 1);
			break;
		default:
			buffer = new Uint8Array(pixels.bytes.b.buffer,pixels.offset,dataLen);
		}
		var _g = t.format;
		var tmp;
		if(_g._hx_index == 22) {
			var _g1 = _g.v;
			tmp = true;
		} else {
			tmp = false;
		}
		if(tmp) {
			if((t.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0) {
				this.gl.compressedTexSubImage3D(face,mipLevel,0,0,side,pixels.width,pixels.height,1,t.t.internalFmt,buffer);
			} else {
				this.gl.compressedTexSubImage2D(face,mipLevel,0,0,pixels.width,pixels.height,t.t.internalFmt,buffer);
			}
		} else if((t.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0) {
			this.gl.texSubImage3D(face,mipLevel,0,0,side,pixels.width,pixels.height,1,this.getChannels(t.t),t.t.pixelFmt,buffer);
		} else {
			this.gl.texSubImage2D(face,mipLevel,0,0,pixels.width,pixels.height,this.getChannels(t.t),t.t.pixelFmt,buffer);
		}
		t.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
		this.restoreBind();
	}
	,uploadBufferData: function(b,startVertex,vertexCount,buf,bufPos) {
		var stride = b.format.strideBytes;
		this.gl.bindBuffer(34962,b.vbuf);
		var buf1 = buf.array;
		var sub = new Float32Array(buf1.buffer,bufPos * 4,vertexCount * stride >> 2);
		this.gl.bufferSubData(34962,startVertex * stride,sub);
		this.gl.bindBuffer(34962,null);
	}
	,uploadIndexBuffer: function(i,startIndice,indiceCount,buf,bufPos) {
		var bits = i.is32 ? 2 : 1;
		this.gl.bindBuffer(34963,i.b);
		var buf1 = new Uint16Array(buf);
		var sub = new Uint16Array(buf1.buffer,bufPos << bits,indiceCount);
		this.gl.bufferSubData(34963,startIndice << bits,sub);
		this.gl.bindBuffer(34963,null);
		this.curIndexBuffer = null;
	}
	,uploadIndexBytes: function(i,startIndice,indiceCount,buf,bufPos) {
		var bits = i.is32 ? 2 : 1;
		this.gl.bindBuffer(34963,i.b);
		var sub = new Uint8Array(buf.b.bufferValue,bufPos << bits,indiceCount << bits);
		this.gl.bufferSubData(34963,startIndice << bits,sub);
		this.gl.bindBuffer(34963,null);
		this.curIndexBuffer = null;
	}
	,selectBuffer: function(b) {
		if(b == this.curBuffer) {
			return;
		}
		if(this.curShader == null) {
			throw haxe_Exception.thrown("No shader selected");
		}
		this.gl.bindBuffer(34962,b.vbuf);
		this.curBuffer = b;
		var strideBytes = b.format.strideBytes;
		var map = b.format.resolveMapping(this.curShader.format);
		var _g_current = 0;
		var _g_array = this.curShader.attribs;
		while(_g_current < _g_array.length) {
			var _g_value = _g_array[_g_current];
			var _g_key = _g_current++;
			var i = _g_key;
			var a = _g_value;
			var inf = map[i];
			var norm = false;
			var tmp = this.gl;
			var a1 = a.index;
			var a2 = a.size;
			var tmp1;
			switch(inf & 7) {
			case 0:
				tmp1 = a.type;
				break;
			case 1:
				tmp1 = 5131;
				break;
			case 2:
				norm = true;
				tmp1 = 5121;
				break;
			case 3:
				norm = true;
				tmp1 = 5120;
				break;
			}
			tmp.vertexAttribPointer(a1,a2,tmp1,norm,strideBytes,inf >> 16);
			if(this.currentDivisor[a.index] != a.divisor) {
				this.currentDivisor[a.index] = a.divisor;
				this.gl.vertexAttribDivisor(a.index,a.divisor);
			}
		}
	}
	,selectMultiBuffers: function(format,buffers) {
		var format1 = this.curShader.format;
		var m = format.mappings[format1.uid];
		if(m == null) {
			m = format.makeMapping(format1);
		}
		var map = m;
		var _g_current = 0;
		var _g_array = this.curShader.attribs;
		while(_g_current < _g_array.length) {
			var _g_value = _g_array[_g_current];
			var _g_key = _g_current++;
			var i = _g_key;
			var a = _g_value;
			var inf = map[i];
			var b = buffers[inf >> 3 & 255];
			if(this.curBuffer != b) {
				this.gl.bindBuffer(34962,b.vbuf);
				this.curBuffer = b;
			}
			var norm = false;
			var tmp = this.gl;
			var a1 = a.index;
			var a2 = a.size;
			var tmp1;
			switch(inf & 7) {
			case 0:
				tmp1 = a.type;
				break;
			case 1:
				tmp1 = 5131;
				break;
			case 2:
				norm = true;
				tmp1 = 5121;
				break;
			case 3:
				norm = true;
				tmp1 = 5120;
				break;
			}
			tmp.vertexAttribPointer(a1,a2,tmp1,norm,b.format.strideBytes,inf >> 16);
			if(this.currentDivisor[a.index] != a.divisor) {
				this.currentDivisor[a.index] = a.divisor;
				this.gl.vertexAttribDivisor(a.index,a.divisor);
			}
		}
	}
	,draw: function(ibuf,startIndex,ntriangles) {
		if(ibuf != this.curIndexBuffer) {
			this.curIndexBuffer = ibuf;
			this.gl.bindBuffer(34963,ibuf.b);
		}
		if(ibuf.is32) {
			this.gl.drawElements(this.drawMode,ntriangles * 3,5125,startIndex * 4);
		} else {
			this.gl.drawElements(this.drawMode,ntriangles * 3,5123,startIndex * 2);
		}
	}
	,drawInstanced: function(ibuf,commands) {
		if(ibuf != this.curIndexBuffer) {
			this.curIndexBuffer = ibuf;
			this.gl.bindBuffer(34963,ibuf.b);
		}
		var kind;
		var size;
		if(ibuf.is32) {
			kind = 5125;
			size = 4;
		} else {
			kind = 5123;
			size = 2;
		}
		var args = commands.data;
		if(args != null) {
			var p = 0;
			var _g = 0;
			var _g1 = args.length / 3 | 0;
			while(_g < _g1) {
				var i = _g++;
				this.gl.drawElementsInstanced(this.drawMode,args[p++],kind,args[p++] * size,args[p++]);
			}
		} else {
			this.gl.drawElementsInstanced(this.drawMode,commands.indexCount,kind,commands.startIndex * size,commands.commandCount);
		}
	}
	,end: function() {
	}
	,isDisposed: function() {
		return this.gl.isContextLost();
	}
	,setRenderZone: function(x,y,width,height) {
		if(x == 0 && y == 0 && width < 0 && height < 0) {
			this.gl.disable(3089);
		} else {
			this.gl.enable(3089);
			if(this.curTarget == null) {
				y = this.bufferHeight - (y + height);
			}
			this.gl.scissor(x,y,width,height);
		}
	}
	,setDrawBuffers: function(k) {
		if(this.glES >= 3) {
			this.gl.drawBuffers(h3d_impl_GlDriver.CBUFFERS[k]);
		} else if(this.mrtExt != null) {
			this.mrtExt.drawBuffersWEBGL(h3d_impl_GlDriver.CBUFFERS[k]);
		}
	}
	,unbindTargets: function() {
		if(this.curTarget != null && this.numTargets > 1) {
			while(this.numTargets > 1) {
				this.gl.framebufferTexture2D(36160,36064 + --this.numTargets,3553,null,0);
				this.curTargets[this.numTargets] = null;
			}
			this.setDrawBuffers(1);
		}
	}
	,setRenderTarget: function(tex,layer,mipLevel,depthBinding) {
		if(depthBinding == null) {
			depthBinding = h3d_DepthBinding.ReadWrite;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		if(layer == null) {
			layer = 0;
		}
		this.unbindTargets();
		this.curTarget = tex;
		if(tex == null) {
			this.gl.bindFramebuffer(36160,null);
			this.gl.viewport(0,0,this.bufferWidth,this.bufferHeight);
			return;
		}
		if(tex.depthBuffer != null && (tex.depthBuffer.width != tex.width || tex.depthBuffer.height != tex.height)) {
			throw haxe_Exception.thrown("Invalid depth buffer size : does not match render target size");
		}
		if(mipLevel > 0 && this.glES == 1) {
			throw haxe_Exception.thrown("Cannot render to mipLevel in WebGL1, use upload() instead");
		}
		if(tex.t == null) {
			tex.alloc();
		}
		if((tex.flags & 1 << h3d_mat_TextureFlags.MipMapped._hx_index) != 0 && (tex.flags & 1 << h3d_mat_TextureFlags.WasCleared._hx_index) == 0) {
			var bind = this.getBindType(tex);
			this.gl.bindTexture(bind,tex.t.t);
			this.gl.generateMipmap(bind);
			this.restoreBind();
		}
		tex.set_lastFrame(this.frame);
		this.curTargetLayer = layer;
		this.curTargetMip = mipLevel;
		this.gl.bindFramebuffer(36160,this.commonFB);
		if((tex.flags & 1 << h3d_mat_TextureFlags.IsArray._hx_index) != 0) {
			this.gl.framebufferTextureLayer(36160,36064,tex.t.t,mipLevel,layer);
		} else {
			this.gl.framebufferTexture2D(36160,36064,(tex.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0 ? h3d_impl_GlDriver.CUBE_FACES[layer] : 3553,tex.t.t,mipLevel);
		}
		if(tex.depthBuffer != null && depthBinding != h3d_DepthBinding.NotBound) {
			if(tex.depthBuffer.hasStencil() && tex.depthBuffer.format == hxd_PixelFormat.Depth24Stencil8) {
				this.gl.framebufferTexture2D(36160,33306,3553,tex.depthBuffer.t.t,0);
			} else {
				this.gl.framebufferTexture2D(36160,33306,3553,null,0);
				this.gl.framebufferTexture2D(36160,36096,3553,tex.depthBuffer.t.t,0);
				this.gl.framebufferTexture2D(36160,36128,3553,tex.depthBuffer.hasStencil() ? tex.depthBuffer.t.t : null,0);
			}
		} else {
			this.gl.framebufferTexture2D(36160,33306,3553,null,0);
			this.gl.framebufferTexture2D(36160,36096,3553,null,0);
			this.gl.framebufferTexture2D(36160,36128,3553,null,0);
		}
		var w = tex.width >> mipLevel;
		if(w == 0) {
			w = 1;
		}
		var h = tex.height >> mipLevel;
		if(h == 0) {
			h = 1;
		}
		this.gl.viewport(0,0,w,h);
		var _g = 0;
		var _g1 = this.boundTextures.length;
		while(_g < _g1) {
			var i = _g++;
			this.boundTextures[i] = null;
		}
		if((tex.flags & 1 << h3d_mat_TextureFlags.WasCleared._hx_index) == 0) {
			tex.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
			this.clear(h3d_impl_GlDriver.BLACK);
		}
		if(this.glDebug) {
			var code = this.gl.checkFramebufferStatus(36160);
			if(code != 36053) {
				throw haxe_Exception.thrown("Invalid frame buffer: " + code);
			}
		}
	}
	,setRenderTargets: function(textures,depthBinding) {
		if(depthBinding == null) {
			depthBinding = h3d_DepthBinding.ReadWrite;
		}
		this.unbindTargets();
		this.setRenderTarget(textures[0],null,null,depthBinding);
		if(textures.length < 2) {
			return;
		}
		this.numTargets = textures.length;
		var needClear = false;
		var _g = 1;
		var _g1 = textures.length;
		while(_g < _g1) {
			var i = _g++;
			var tex = textures[i];
			if(tex.t == null) {
				tex.alloc();
			}
			this.gl.framebufferTexture2D(36160,36064 + i,3553,tex.t.t,0);
			this.curTargets[i] = tex;
			tex.set_lastFrame(this.frame);
			if((tex.flags & 1 << h3d_mat_TextureFlags.WasCleared._hx_index) == 0) {
				tex.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
				needClear = true;
			}
		}
		this.setDrawBuffers(textures.length);
		if(needClear) {
			this.clear(h3d_impl_GlDriver.BLACK);
		}
	}
	,setDepth: function(depthBuffer) {
		this.unbindTargets();
		this.curTarget = depthBuffer;
		depthBuffer.set_lastFrame(this.frame);
		this.curTargetLayer = 0;
		this.curTargetMip = 0;
		this.gl.bindFramebuffer(36160,this.commonFB);
		this.gl.framebufferTexture2D(36160,36064,3553,null,0);
		if(depthBuffer.hasStencil() && depthBuffer.format == hxd_PixelFormat.Depth24Stencil8) {
			this.gl.framebufferTexture2D(36160,33306,3553,depthBuffer.t.t,0);
		} else {
			this.gl.framebufferTexture2D(36160,33306,3553,null,0);
			this.gl.framebufferTexture2D(36160,36096,3553,depthBuffer.t.t,0);
			this.gl.framebufferTexture2D(36160,36128,3553,depthBuffer.hasStencil() ? depthBuffer.t.t : null,0);
		}
		var w = depthBuffer.width;
		if(w == 0) {
			w = 1;
		}
		var h = depthBuffer.height;
		if(h == 0) {
			h = 1;
		}
		this.gl.viewport(0,0,w,h);
		var _g = 0;
		var _g1 = this.boundTextures.length;
		while(_g < _g1) {
			var i = _g++;
			this.boundTextures[i] = null;
		}
		if(this.glDebug) {
			var code = this.gl.checkFramebufferStatus(36160);
			if(code != 36053) {
				throw haxe_Exception.thrown("Invalid frame buffer: " + code);
			}
		}
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
		if(window.document.readyState == "complete") {
			var _g = onCreate;
			var a1 = false;
			haxe_Timer.delay(function() {
				_g(a1);
			},1);
		} else {
			var onLoad = null;
			onLoad = function() {
				window.removeEventListener("load",onLoad);
				onCreate(false);
			};
			window.addEventListener("load",onLoad);
		}
	}
	,hasFeature: function(f) {
		return this.features.get(f);
	}
	,features: null
	,has16Bits: null
	,makeFeatures: function() {
		var _g = 0;
		var _g1 = h3d_impl_Feature.__empty_constructs__.slice();
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.features.set(f,this.checkFeature(f));
		}
		if(this.gl.getExtension("WEBGL_compressed_texture_s3tc") != null) {
			this.maxCompressedTexturesSupport = 3;
			if(this.gl.getExtension("EXT_texture_compression_bptc") != null) {
				this.maxCompressedTexturesSupport = 7;
			}
		}
		if(this.glES < 3) {
			this.gl.getExtension("WEBGL_depth_texture");
		}
		this.has16Bits = this.gl.getExtension("EXT_texture_norm16") != null;
	}
	,checkFeature: function(f) {
		switch(f._hx_index) {
		case 0:
			if(this.glES >= 3) {
				return true;
			} else {
				return this.gl.getExtension("OES_standard_derivatives") != null;
			}
			break;
		case 1:
			if(this.glES >= 3) {
				if(this.gl.getExtension("EXT_color_buffer_float") != null) {
					return this.gl.getExtension("OES_texture_float_linear") != null;
				} else {
					return false;
				}
			} else if(this.gl.getExtension("OES_texture_float") != null && this.gl.getExtension("OES_texture_float_linear") != null && this.gl.getExtension("OES_texture_half_float") != null) {
				return this.gl.getExtension("OES_texture_half_float_linear") != null;
			} else {
				return false;
			}
			break;
		case 4:
			if(this.glES >= 3) {
				return true;
			} else if(this.mrtExt == null) {
				return (this.mrtExt = this.gl.getExtension("WEBGL_draw_buffers")) != null;
			} else {
				return true;
			}
			break;
		case 6:
			if(this.glES >= 3) {
				return true;
			} else {
				return this.gl.getExtension("EXT_sRGB") != null;
			}
			break;
		case 7:
			if(this.glES >= 3) {
				return true;
			} else {
				return false;
			}
			break;
		case 2:case 3:case 8:case 9:
			return true;
		case 10:
			if(this.glES >= 3) {
				return true;
			} else {
				return this.gl.getExtension("ANGLE_instanced_arrays") != null;
			}
			break;
		default:
			return false;
		}
	}
	,__class__: h3d_impl_GlDriver
});
var h3d_impl_InstanceBuffer = function() {
	this.triCount = 0;
};
$hxClasses["h3d.impl.InstanceBuffer"] = h3d_impl_InstanceBuffer;
h3d_impl_InstanceBuffer.__name__ = "h3d.impl.InstanceBuffer";
h3d_impl_InstanceBuffer.prototype = {
	data: null
	,indexCount: null
	,startIndex: null
	,triCount: null
	,commandCount: null
	,__class__: h3d_impl_InstanceBuffer
};
var h3d_impl_MemoryManager = function(driver) {
	this.texMemory = 0;
	this.usedMemory = 0;
	this.driver = driver;
};
$hxClasses["h3d.impl.MemoryManager"] = h3d_impl_MemoryManager;
h3d_impl_MemoryManager.__name__ = "h3d.impl.MemoryManager";
h3d_impl_MemoryManager.prototype = {
	driver: null
	,buffers: null
	,indexes: null
	,textures: null
	,depths: null
	,triIndexes16: null
	,quadIndexes16: null
	,triIndexes32: null
	,quadIndexes32: null
	,usedMemory: null
	,texMemory: null
	,init: function() {
		this.indexes = [];
		this.textures = [];
		this.buffers = [];
		this.depths = [];
		this.initIndexes();
	}
	,initIndexes: function() {
		var indices = new Array(0);
		var _g = 0;
		while(_g < 65532) {
			var i = _g++;
			indices.push(i);
		}
		this.triIndexes16 = h3d_Indexes.alloc(indices);
		var indices = new Array(0);
		var p = 0;
		var _g = 0;
		while(_g < 10922) {
			var i = _g++;
			var k = i << 2;
			indices.push(k);
			indices.push(k + 1);
			indices.push(k + 2);
			indices.push(k + 2);
			indices.push(k + 1);
			indices.push(k + 3);
		}
		indices.push(65532);
		this.quadIndexes16 = h3d_Indexes.alloc(indices);
	}
	,garbage: function() {
	}
	,getTriIndexes: function(vertices) {
		if(vertices <= 65532) {
			return this.triIndexes16;
		}
		if(this.triIndexes32 == null || this.triIndexes32.count < vertices) {
			var sz = 131072;
			while(sz < vertices) sz <<= 1;
			var bytes = new haxe_io_Bytes(new ArrayBuffer(sz << 2));
			var _g = 0;
			var _g1 = sz;
			while(_g < _g1) {
				var i = _g++;
				bytes.setInt32(i << 2,i);
			}
			if(this.triIndexes32 != null) {
				this.triIndexes32.dispose();
			}
			this.triIndexes32 = new h3d_Indexes(sz,true);
			this.triIndexes32.uploadBytes(bytes,0,sz);
		}
		return this.triIndexes32;
	}
	,getQuadIndexes: function(vertices) {
		var nquads = (vertices + 3 >> 2) * 6;
		if(nquads <= 65532) {
			return this.quadIndexes16;
		}
		if(this.quadIndexes32 == null || this.quadIndexes32.count < vertices) {
			var sz = 131072;
			while(sz < nquads) sz <<= 1;
			var bytes = new haxe_io_Bytes(new ArrayBuffer(sz << 2));
			var p = 0;
			var _g = 0;
			var _g1 = sz / 6 | 0;
			while(_g < _g1) {
				var i = _g++;
				var k = i << 2;
				bytes.setInt32(p++ << 2,k);
				bytes.setInt32(p++ << 2,k + 1);
				bytes.setInt32(p++ << 2,k + 2);
				bytes.setInt32(p++ << 2,k + 2);
				bytes.setInt32(p++ << 2,k + 1);
				bytes.setInt32(p++ << 2,k + 3);
			}
			if(this.quadIndexes32 != null) {
				this.quadIndexes32.dispose();
			}
			this.quadIndexes32 = new h3d_Indexes(sz,true);
			this.quadIndexes32.uploadBytes(bytes,0,sz);
		}
		return this.quadIndexes32;
	}
	,allocBuffer: function(b) {
		if(b.vbuf != null) {
			return;
		}
		var mem = b.vertices * b.format.strideBytes;
		if(mem == 0) {
			return;
		}
		while(this.usedMemory + mem > 4294967296. || this.buffers.length >= 65536 || (b.vbuf = this.driver.allocBuffer(b)) == null) {
			if(this.driver.isDisposed()) {
				return;
			}
			var size = this.usedMemory;
			this.garbage();
			if(this.usedMemory == size) {
				if(this.buffers.length >= 65536) {
					throw haxe_Exception.thrown("Too many buffers");
				}
				throw haxe_Exception.thrown("Memory full (" + Math.ceil(size / 1024) + " KB," + this.buffers.length + " buffers)");
			}
		}
		this.usedMemory += mem;
		this.buffers.push(b);
	}
	,freeBuffer: function(b) {
		if(b.vbuf == null) {
			return;
		}
		this.driver.disposeBuffer(b);
		b.vbuf = null;
		if(HxOverrides.remove(this.buffers,b)) {
			this.usedMemory -= b.vertices * b.format.strideBytes;
		}
	}
	,deleteIndexes: function(i) {
		HxOverrides.remove(this.indexes,i);
		this.driver.disposeIndexes(i.ibuf);
		i.ibuf = null;
		this.usedMemory -= i.count * (i.is32 ? 4 : 2);
	}
	,allocIndexes: function(i) {
		i.ibuf = this.driver.allocIndexes(i.count,i.is32);
		this.indexes.push(i);
		this.usedMemory += i.count * (i.is32 ? 4 : 2);
	}
	,memSize: function(t) {
		if((t.flags & 1 << h3d_mat_TextureFlags.AsyncLoading._hx_index) != 0 && (t.flags & 1 << h3d_mat_TextureFlags.Loading._hx_index) != 0) {
			return 4;
		}
		var size = hxd_Pixels.calcDataSize(t.width,t.height,t.format);
		if(t.get_mipLevels() > 0) {
			var _g = 1;
			var _g1 = t.get_mipLevels();
			while(_g < _g1) {
				var i = _g++;
				var w = t.width >> i;
				if(w == 0) {
					w = 1;
				}
				var h = t.height >> i;
				if(h == 0) {
					h = 1;
				}
				size += hxd_Pixels.calcDataSize(w,h,t.format);
			}
		}
		return size * t.get_layerCount();
	}
	,cleanTextures: function(force) {
		if(force == null) {
			force = true;
		}
		this.textures.sort($bind(this,this.sortByLRU));
		var _g = 0;
		var _g1 = this.textures;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.realloc == null || (t.isDepth() ? t.t == null : t.t == null && t.realloc == null)) {
				continue;
			}
			if((force || t._lastFrame < hxd_Timer.frameCount - 3600) && t._lastFrame != h3d_mat_Texture.PREVENT_AUTO_DISPOSE) {
				t.dispose();
				return true;
			}
		}
		return false;
	}
	,sortByLRU: function(t1,t2) {
		return t1._lastFrame - t2._lastFrame;
	}
	,deleteTexture: function(t) {
		if(!HxOverrides.remove(this.textures,t)) {
			return;
		}
		this.driver.disposeTexture(t);
		this.texMemory -= this.memSize(t);
	}
	,allocTexture: function(t) {
		while(true) {
			var free = this.cleanTextures(false);
			t.t = this.driver.allocTexture(t);
			if(t.t != null) {
				break;
			}
			if(this.driver.isDisposed()) {
				return;
			}
			while(this.cleanTextures(false)) {
			}
			if(!free && !this.cleanTextures(true)) {
				throw haxe_Exception.thrown("Maximum texture memory reached");
			}
		}
		this.textures.push(t);
		this.texMemory += this.memSize(t);
	}
	,allocDepth: function(b) {
		while(true) {
			var free = this.cleanTextures(false);
			b.t = this.driver.allocDepthBuffer(b);
			if(b.t != null) {
				break;
			}
			if(this.driver.isDisposed()) {
				return;
			}
			while(this.cleanTextures(false)) {
			}
			if(!free && !this.cleanTextures(true)) {
				throw haxe_Exception.thrown("Maximum texture memory reached");
			}
		}
		this.depths.push(b);
		this.texMemory += b.width * b.height * 4;
	}
	,deleteDepth: function(b) {
		if(!HxOverrides.remove(this.depths,b)) {
			return;
		}
		this.driver.disposeDepthBuffer(b);
		this.texMemory -= b.width * b.height * 4;
	}
	,onContextLost: function() {
		this.dispose();
		this.initIndexes();
	}
	,dispose: function() {
		if(this.triIndexes16 != null) {
			this.triIndexes16.dispose();
		}
		if(this.quadIndexes16 != null) {
			this.quadIndexes16.dispose();
		}
		if(this.triIndexes32 != null) {
			this.triIndexes32.dispose();
		}
		if(this.quadIndexes32 != null) {
			this.quadIndexes32.dispose();
		}
		this.triIndexes16 = null;
		this.quadIndexes16 = null;
		this.triIndexes32 = null;
		this.quadIndexes32 = null;
		var _g = 0;
		var _g1 = this.textures.slice();
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			t.dispose();
		}
		var _g = 0;
		var _g1 = this.depths.slice();
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.dispose();
		}
		var _g = 0;
		var _g1 = this.buffers.slice();
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.dispose();
		}
		var _g = 0;
		var _g1 = this.indexes.slice();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			i.dispose();
		}
		this.buffers = [];
		this.indexes = [];
		this.textures = [];
		this.usedMemory = 0;
		this.texMemory = 0;
	}
	,__class__: h3d_impl_MemoryManager
};
var h3d_impl_NullDriver = function() {
	h3d_impl_Driver.call(this);
};
$hxClasses["h3d.impl.NullDriver"] = h3d_impl_NullDriver;
h3d_impl_NullDriver.__name__ = "h3d.impl.NullDriver";
h3d_impl_NullDriver.__super__ = h3d_impl_Driver;
h3d_impl_NullDriver.prototype = $extend(h3d_impl_Driver.prototype,{
	cur: null
	,hasFeature: function(f) {
		return true;
	}
	,isSupportedFormat: function(fmt) {
		return true;
	}
	,isDisposed: function() {
		return false;
	}
	,init: function(onCreate,forceSoftware) {
		if(forceSoftware == null) {
			forceSoftware = false;
		}
		onCreate(false);
	}
	,selectShader: function(shader) {
		if(this.cur == shader) {
			return false;
		}
		this.cur = shader;
		return true;
	}
	,allocTexture: function(t) {
		return { };
	}
	,allocIndexes: function(count,is32) {
		return { };
	}
	,allocBuffer: function(b) {
		return { };
	}
	,__class__: h3d_impl_NullDriver
});
var h3d_impl_TextureCache = function(ctx) {
	this.position = 0;
	this.ctx = ctx;
	this.cache = [];
	var engine = h3d_Engine.CURRENT;
	this.defaultFormat = h3d_mat_Texture.nativeFormat;
	this.defaultDepthBuffer = h3d_mat_Texture.getDefaultDepth();
};
$hxClasses["h3d.impl.TextureCache"] = h3d_impl_TextureCache;
h3d_impl_TextureCache.__name__ = "h3d.impl.TextureCache";
h3d_impl_TextureCache.prototype = {
	cache: null
	,position: null
	,defaultDepthBuffer: null
	,ctx: null
	,defaultFormat: null
	,begin: function() {
		while(this.cache.length > this.position) {
			var t = this.cache.pop();
			if(t != null) {
				t.dispose();
			}
		}
		this.position = 0;
	}
	,lookupTarget: function(name,width,height,format,isCube) {
		var t = this.cache[this.position];
		var _g = this.position + 1;
		var _g1 = this.cache.length;
		while(_g < _g1) {
			var i = _g++;
			var t2 = this.cache[i];
			if(t2 != null && !(t2.isDepth() ? t2.t == null : t2.t == null && t2.realloc == null) && t2.width == width && t2.height == height && t2.format == format && isCube == ((t2.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0)) {
				this.cache[this.position] = t2;
				this.cache[i] = t;
				return t2;
			}
		}
		if(t != null && t.name == name) {
			t.dispose();
			t = null;
		}
		var flags = [h3d_mat_TextureFlags.Target];
		if(isCube) {
			flags.push(h3d_mat_TextureFlags.Cube);
		}
		var newt = new h3d_mat_Texture(width,height,flags,format);
		newt.realloc = function() {
		};
		if(t != null) {
			this.cache.splice(this.position,0,newt);
		} else {
			this.cache[this.position] = newt;
		}
		return newt;
	}
	,allocTarget: function(name,width,height,defaultDepth,format,isCube) {
		if(isCube == null) {
			isCube = false;
		}
		if(defaultDepth == null) {
			defaultDepth = true;
		}
		var t = this.cache[this.position];
		if(format == null) {
			format = this.defaultFormat;
		}
		if(t == null || (t.isDepth() ? t.t == null : t.t == null && t.realloc == null) || t.width != width || t.height != height || t.format != format || isCube != ((t.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0)) {
			t = this.lookupTarget(name,width,height,format,isCube);
		}
		t.depthBuffer = defaultDepth ? this.defaultDepthBuffer : null;
		t.setName(name);
		this.position++;
		return t;
	}
	,allocTileTarget: function(name,tile,defaultDepth,format) {
		if(defaultDepth == null) {
			defaultDepth = false;
		}
		return this.allocTarget(name,Math.ceil(tile.width + tile.x) - Math.floor(tile.x),Math.ceil(tile.height + tile.y) - Math.floor(tile.y),defaultDepth,format);
	}
	,__class__: h3d_impl_TextureCache
};
var hxd_impl_AnyProps = function() { };
$hxClasses["hxd.impl.AnyProps"] = hxd_impl_AnyProps;
hxd_impl_AnyProps.__name__ = "hxd.impl.AnyProps";
hxd_impl_AnyProps.prototype = {
	props: null
	,set_props: function(p) {
		this.props = p;
		this.refreshProps();
		return p;
	}
	,getDefaultProps: function(kind) {
		return { };
	}
	,refreshProps: function() {
	}
	,__class__: hxd_impl_AnyProps
	,__properties__: {set_props:"set_props"}
};
var h3d_mat_BaseMaterial = function(shader) {
	if(shader != null) {
		this.addPass(new h3d_mat_Pass("default",null)).addShader(shader);
	}
};
$hxClasses["h3d.mat.BaseMaterial"] = h3d_mat_BaseMaterial;
h3d_mat_BaseMaterial.__name__ = "h3d.mat.BaseMaterial";
h3d_mat_BaseMaterial.__super__ = hxd_impl_AnyProps;
h3d_mat_BaseMaterial.prototype = $extend(hxd_impl_AnyProps.prototype,{
	passes: null
	,addPass: function(p) {
		var prev = null;
		var cur = this.passes;
		while(cur != null) {
			prev = cur;
			cur = cur.nextPass;
		}
		if(prev == null) {
			this.passes = p;
		} else {
			prev.nextPass = p;
		}
		p.nextPass = null;
		return p;
	}
	,removePass: function(p) {
		var prev = null;
		var cur = this.passes;
		while(cur != null) {
			if(cur == p) {
				if(prev == null) {
					this.passes = p.nextPass;
				} else {
					prev.nextPass = p.nextPass;
				}
				p.nextPass = null;
				return true;
			}
			prev = cur;
			cur = cur.nextPass;
		}
		return false;
	}
	,getPass: function(name) {
		var p = this.passes;
		while(p != null) {
			if(p.name == name) {
				return p;
			}
			p = p.nextPass;
		}
		return null;
	}
	,__class__: h3d_mat_BaseMaterial
});
var h3d_mat_Face = $hxEnums["h3d.mat.Face"] = { __ename__:"h3d.mat.Face",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"h3d.mat.Face",toString:$estr}
	,Back: {_hx_name:"Back",_hx_index:1,__enum__:"h3d.mat.Face",toString:$estr}
	,Front: {_hx_name:"Front",_hx_index:2,__enum__:"h3d.mat.Face",toString:$estr}
	,Both: {_hx_name:"Both",_hx_index:3,__enum__:"h3d.mat.Face",toString:$estr}
};
h3d_mat_Face.__constructs__ = [h3d_mat_Face.None,h3d_mat_Face.Back,h3d_mat_Face.Front,h3d_mat_Face.Both];
h3d_mat_Face.__empty_constructs__ = [h3d_mat_Face.None,h3d_mat_Face.Back,h3d_mat_Face.Front,h3d_mat_Face.Both];
var h3d_mat_Blend = $hxEnums["h3d.mat.Blend"] = { __ename__:"h3d.mat.Blend",__constructs__:null
	,One: {_hx_name:"One",_hx_index:0,__enum__:"h3d.mat.Blend",toString:$estr}
	,Zero: {_hx_name:"Zero",_hx_index:1,__enum__:"h3d.mat.Blend",toString:$estr}
	,SrcAlpha: {_hx_name:"SrcAlpha",_hx_index:2,__enum__:"h3d.mat.Blend",toString:$estr}
	,SrcColor: {_hx_name:"SrcColor",_hx_index:3,__enum__:"h3d.mat.Blend",toString:$estr}
	,DstAlpha: {_hx_name:"DstAlpha",_hx_index:4,__enum__:"h3d.mat.Blend",toString:$estr}
	,DstColor: {_hx_name:"DstColor",_hx_index:5,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusSrcAlpha: {_hx_name:"OneMinusSrcAlpha",_hx_index:6,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusSrcColor: {_hx_name:"OneMinusSrcColor",_hx_index:7,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusDstAlpha: {_hx_name:"OneMinusDstAlpha",_hx_index:8,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusDstColor: {_hx_name:"OneMinusDstColor",_hx_index:9,__enum__:"h3d.mat.Blend",toString:$estr}
	,ConstantColor: {_hx_name:"ConstantColor",_hx_index:10,__enum__:"h3d.mat.Blend",toString:$estr}
	,ConstantAlpha: {_hx_name:"ConstantAlpha",_hx_index:11,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusConstantColor: {_hx_name:"OneMinusConstantColor",_hx_index:12,__enum__:"h3d.mat.Blend",toString:$estr}
	,OneMinusConstantAlpha: {_hx_name:"OneMinusConstantAlpha",_hx_index:13,__enum__:"h3d.mat.Blend",toString:$estr}
	,SrcAlphaSaturate: {_hx_name:"SrcAlphaSaturate",_hx_index:14,__enum__:"h3d.mat.Blend",toString:$estr}
};
h3d_mat_Blend.__constructs__ = [h3d_mat_Blend.One,h3d_mat_Blend.Zero,h3d_mat_Blend.SrcAlpha,h3d_mat_Blend.SrcColor,h3d_mat_Blend.DstAlpha,h3d_mat_Blend.DstColor,h3d_mat_Blend.OneMinusSrcAlpha,h3d_mat_Blend.OneMinusSrcColor,h3d_mat_Blend.OneMinusDstAlpha,h3d_mat_Blend.OneMinusDstColor,h3d_mat_Blend.ConstantColor,h3d_mat_Blend.ConstantAlpha,h3d_mat_Blend.OneMinusConstantColor,h3d_mat_Blend.OneMinusConstantAlpha,h3d_mat_Blend.SrcAlphaSaturate];
h3d_mat_Blend.__empty_constructs__ = [h3d_mat_Blend.One,h3d_mat_Blend.Zero,h3d_mat_Blend.SrcAlpha,h3d_mat_Blend.SrcColor,h3d_mat_Blend.DstAlpha,h3d_mat_Blend.DstColor,h3d_mat_Blend.OneMinusSrcAlpha,h3d_mat_Blend.OneMinusSrcColor,h3d_mat_Blend.OneMinusDstAlpha,h3d_mat_Blend.OneMinusDstColor,h3d_mat_Blend.ConstantColor,h3d_mat_Blend.ConstantAlpha,h3d_mat_Blend.OneMinusConstantColor,h3d_mat_Blend.OneMinusConstantAlpha,h3d_mat_Blend.SrcAlphaSaturate];
var h3d_mat_Compare = $hxEnums["h3d.mat.Compare"] = { __ename__:"h3d.mat.Compare",__constructs__:null
	,Always: {_hx_name:"Always",_hx_index:0,__enum__:"h3d.mat.Compare",toString:$estr}
	,Never: {_hx_name:"Never",_hx_index:1,__enum__:"h3d.mat.Compare",toString:$estr}
	,Equal: {_hx_name:"Equal",_hx_index:2,__enum__:"h3d.mat.Compare",toString:$estr}
	,NotEqual: {_hx_name:"NotEqual",_hx_index:3,__enum__:"h3d.mat.Compare",toString:$estr}
	,Greater: {_hx_name:"Greater",_hx_index:4,__enum__:"h3d.mat.Compare",toString:$estr}
	,GreaterEqual: {_hx_name:"GreaterEqual",_hx_index:5,__enum__:"h3d.mat.Compare",toString:$estr}
	,Less: {_hx_name:"Less",_hx_index:6,__enum__:"h3d.mat.Compare",toString:$estr}
	,LessEqual: {_hx_name:"LessEqual",_hx_index:7,__enum__:"h3d.mat.Compare",toString:$estr}
};
h3d_mat_Compare.__constructs__ = [h3d_mat_Compare.Always,h3d_mat_Compare.Never,h3d_mat_Compare.Equal,h3d_mat_Compare.NotEqual,h3d_mat_Compare.Greater,h3d_mat_Compare.GreaterEqual,h3d_mat_Compare.Less,h3d_mat_Compare.LessEqual];
h3d_mat_Compare.__empty_constructs__ = [h3d_mat_Compare.Always,h3d_mat_Compare.Never,h3d_mat_Compare.Equal,h3d_mat_Compare.NotEqual,h3d_mat_Compare.Greater,h3d_mat_Compare.GreaterEqual,h3d_mat_Compare.Less,h3d_mat_Compare.LessEqual];
var h3d_mat_StencilOp = $hxEnums["h3d.mat.StencilOp"] = { __ename__:"h3d.mat.StencilOp",__constructs__:null
	,Keep: {_hx_name:"Keep",_hx_index:0,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Zero: {_hx_name:"Zero",_hx_index:1,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Replace: {_hx_name:"Replace",_hx_index:2,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Increment: {_hx_name:"Increment",_hx_index:3,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,IncrementWrap: {_hx_name:"IncrementWrap",_hx_index:4,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Decrement: {_hx_name:"Decrement",_hx_index:5,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,DecrementWrap: {_hx_name:"DecrementWrap",_hx_index:6,__enum__:"h3d.mat.StencilOp",toString:$estr}
	,Invert: {_hx_name:"Invert",_hx_index:7,__enum__:"h3d.mat.StencilOp",toString:$estr}
};
h3d_mat_StencilOp.__constructs__ = [h3d_mat_StencilOp.Keep,h3d_mat_StencilOp.Zero,h3d_mat_StencilOp.Replace,h3d_mat_StencilOp.Increment,h3d_mat_StencilOp.IncrementWrap,h3d_mat_StencilOp.Decrement,h3d_mat_StencilOp.DecrementWrap,h3d_mat_StencilOp.Invert];
h3d_mat_StencilOp.__empty_constructs__ = [h3d_mat_StencilOp.Keep,h3d_mat_StencilOp.Zero,h3d_mat_StencilOp.Replace,h3d_mat_StencilOp.Increment,h3d_mat_StencilOp.IncrementWrap,h3d_mat_StencilOp.Decrement,h3d_mat_StencilOp.DecrementWrap,h3d_mat_StencilOp.Invert];
var h3d_mat_MipMap = $hxEnums["h3d.mat.MipMap"] = { __ename__:"h3d.mat.MipMap",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"h3d.mat.MipMap",toString:$estr}
	,Nearest: {_hx_name:"Nearest",_hx_index:1,__enum__:"h3d.mat.MipMap",toString:$estr}
	,Linear: {_hx_name:"Linear",_hx_index:2,__enum__:"h3d.mat.MipMap",toString:$estr}
};
h3d_mat_MipMap.__constructs__ = [h3d_mat_MipMap.None,h3d_mat_MipMap.Nearest,h3d_mat_MipMap.Linear];
h3d_mat_MipMap.__empty_constructs__ = [h3d_mat_MipMap.None,h3d_mat_MipMap.Nearest,h3d_mat_MipMap.Linear];
var h3d_mat_Filter = $hxEnums["h3d.mat.Filter"] = { __ename__:"h3d.mat.Filter",__constructs__:null
	,Nearest: {_hx_name:"Nearest",_hx_index:0,__enum__:"h3d.mat.Filter",toString:$estr}
	,Linear: {_hx_name:"Linear",_hx_index:1,__enum__:"h3d.mat.Filter",toString:$estr}
};
h3d_mat_Filter.__constructs__ = [h3d_mat_Filter.Nearest,h3d_mat_Filter.Linear];
h3d_mat_Filter.__empty_constructs__ = [h3d_mat_Filter.Nearest,h3d_mat_Filter.Linear];
var h3d_mat_Wrap = $hxEnums["h3d.mat.Wrap"] = { __ename__:"h3d.mat.Wrap",__constructs__:null
	,Clamp: {_hx_name:"Clamp",_hx_index:0,__enum__:"h3d.mat.Wrap",toString:$estr}
	,Repeat: {_hx_name:"Repeat",_hx_index:1,__enum__:"h3d.mat.Wrap",toString:$estr}
};
h3d_mat_Wrap.__constructs__ = [h3d_mat_Wrap.Clamp,h3d_mat_Wrap.Repeat];
h3d_mat_Wrap.__empty_constructs__ = [h3d_mat_Wrap.Clamp,h3d_mat_Wrap.Repeat];
var h3d_mat_Operation = $hxEnums["h3d.mat.Operation"] = { __ename__:"h3d.mat.Operation",__constructs__:null
	,Add: {_hx_name:"Add",_hx_index:0,__enum__:"h3d.mat.Operation",toString:$estr}
	,Sub: {_hx_name:"Sub",_hx_index:1,__enum__:"h3d.mat.Operation",toString:$estr}
	,ReverseSub: {_hx_name:"ReverseSub",_hx_index:2,__enum__:"h3d.mat.Operation",toString:$estr}
	,Min: {_hx_name:"Min",_hx_index:3,__enum__:"h3d.mat.Operation",toString:$estr}
	,Max: {_hx_name:"Max",_hx_index:4,__enum__:"h3d.mat.Operation",toString:$estr}
};
h3d_mat_Operation.__constructs__ = [h3d_mat_Operation.Add,h3d_mat_Operation.Sub,h3d_mat_Operation.ReverseSub,h3d_mat_Operation.Min,h3d_mat_Operation.Max];
h3d_mat_Operation.__empty_constructs__ = [h3d_mat_Operation.Add,h3d_mat_Operation.Sub,h3d_mat_Operation.ReverseSub,h3d_mat_Operation.Min,h3d_mat_Operation.Max];
var h3d_mat_TextureFlags = $hxEnums["h3d.mat.TextureFlags"] = { __ename__:"h3d.mat.TextureFlags",__constructs__:null
	,Target: {_hx_name:"Target",_hx_index:0,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,Cube: {_hx_name:"Cube",_hx_index:1,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,MipMapped: {_hx_name:"MipMapped",_hx_index:2,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,ManualMipMapGen: {_hx_name:"ManualMipMapGen",_hx_index:3,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,IsNPOT: {_hx_name:"IsNPOT",_hx_index:4,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,NoAlloc: {_hx_name:"NoAlloc",_hx_index:5,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,Dynamic: {_hx_name:"Dynamic",_hx_index:6,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,AlphaPremultiplied: {_hx_name:"AlphaPremultiplied",_hx_index:7,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,WasCleared: {_hx_name:"WasCleared",_hx_index:8,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,Loading: {_hx_name:"Loading",_hx_index:9,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,Serialize: {_hx_name:"Serialize",_hx_index:10,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,IsArray: {_hx_name:"IsArray",_hx_index:11,__enum__:"h3d.mat.TextureFlags",toString:$estr}
	,AsyncLoading: {_hx_name:"AsyncLoading",_hx_index:12,__enum__:"h3d.mat.TextureFlags",toString:$estr}
};
h3d_mat_TextureFlags.__constructs__ = [h3d_mat_TextureFlags.Target,h3d_mat_TextureFlags.Cube,h3d_mat_TextureFlags.MipMapped,h3d_mat_TextureFlags.ManualMipMapGen,h3d_mat_TextureFlags.IsNPOT,h3d_mat_TextureFlags.NoAlloc,h3d_mat_TextureFlags.Dynamic,h3d_mat_TextureFlags.AlphaPremultiplied,h3d_mat_TextureFlags.WasCleared,h3d_mat_TextureFlags.Loading,h3d_mat_TextureFlags.Serialize,h3d_mat_TextureFlags.IsArray,h3d_mat_TextureFlags.AsyncLoading];
h3d_mat_TextureFlags.__empty_constructs__ = [h3d_mat_TextureFlags.Target,h3d_mat_TextureFlags.Cube,h3d_mat_TextureFlags.MipMapped,h3d_mat_TextureFlags.ManualMipMapGen,h3d_mat_TextureFlags.IsNPOT,h3d_mat_TextureFlags.NoAlloc,h3d_mat_TextureFlags.Dynamic,h3d_mat_TextureFlags.AlphaPremultiplied,h3d_mat_TextureFlags.WasCleared,h3d_mat_TextureFlags.Loading,h3d_mat_TextureFlags.Serialize,h3d_mat_TextureFlags.IsArray,h3d_mat_TextureFlags.AsyncLoading];
var h3d_mat_Defaults = function() { };
$hxClasses["h3d.mat.Defaults"] = h3d_mat_Defaults;
h3d_mat_Defaults.__name__ = "h3d.mat.Defaults";
h3d_mat_Defaults.__properties__ = {set_shadowShader:"set_shadowShader",get_shadowShader:"get_shadowShader"};
h3d_mat_Defaults.get_shadowShader = function() {
	var s = h3d_mat_Defaults.shadowShader;
	if(s == null) {
		s = new h3d_shader_Shadow();
		h3d_mat_Defaults.set_shadowShader(s);
		h3d_mat_Defaults.shadowShader.setPriority(-1);
	}
	return s;
};
h3d_mat_Defaults.set_shadowShader = function(s) {
	return h3d_mat_Defaults.shadowShader = s;
};
var h3d_mat_Material = function(texture) {
	this.mshader = new h3d_shader_BaseMesh();
	this.set_blendMode(h2d_BlendMode.None);
	h3d_mat_BaseMaterial.call(this,this.mshader);
	this.set_texture(texture);
};
$hxClasses["h3d.mat.Material"] = h3d_mat_Material;
h3d_mat_Material.__name__ = "h3d.mat.Material";
h3d_mat_Material.__super__ = h3d_mat_BaseMaterial;
h3d_mat_Material.prototype = $extend(h3d_mat_BaseMaterial.prototype,{
	mshader: null
	,castShadows: null
	,receiveShadows: null
	,staticShadows: null
	,textureShader: null
	,blendMode: null
	,set_castShadows: function(v) {
		if(this.castShadows == v) {
			return v;
		}
		if(this.passes != null) {
			if(v) {
				this.addPass(new h3d_mat_Pass("shadow",null,this.passes)).set_isStatic(this.staticShadows);
			} else {
				this.removePass(this.getPass("shadow"));
			}
		}
		return this.castShadows = v;
	}
	,set_receiveShadows: function(v) {
		if(v == this.receiveShadows) {
			return v;
		}
		if(this.passes != null) {
			var shadows = h3d_mat_Defaults.get_shadowShader();
			if(v) {
				this.passes.addShader(shadows);
			} else {
				this.passes.removeShader(shadows);
			}
		}
		return this.receiveShadows = v;
	}
	,set_blendMode: function(v) {
		if(this.passes != null) {
			this.passes.setBlendMode(v);
			switch(v._hx_index) {
			case 0:
				this.passes.set_depthWrite(true);
				this.passes.setPassName("default");
				break;
			case 1:
				this.passes.set_depthWrite(true);
				this.passes.setPassName("alpha");
				break;
			case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:
				this.passes.set_depthWrite(false);
				this.passes.setPassName("additive");
				break;
			}
		}
		return this.blendMode = v;
	}
	,set_texture: function(t) {
		if(t == null) {
			if(this.textureShader != null) {
				this.passes.removeShader(this.textureShader);
				this.textureShader = null;
			}
		} else {
			if(this.textureShader == null) {
				this.textureShader = new h3d_shader_Texture();
				this.passes.addShader(this.textureShader);
			}
			this.textureShader.texture__ = t;
		}
		return t;
	}
	,getDefaultProps: function(type) {
		var props;
		if(type == null) {
			props = { kind : "Opaque", shadows : true, culling : true, light : true};
		} else {
			switch(type) {
			case "particles3D":case "trail3D":
				props = { kind : "Alpha", shadows : false, culling : false, light : true};
				break;
			case "ui":
				props = { kind : "Alpha", shadows : false, culling : false, light : false};
				break;
			default:
				props = { kind : "Opaque", shadows : true, culling : true, light : true};
			}
		}
		return props;
	}
	,refreshProps: function() {
		if(this.props == null || this.passes == null) {
			return;
		}
		var props = this.props;
		switch(props.kind) {
		case "Add":
			this.set_blendMode(h2d_BlendMode.Add);
			break;
		case "Alpha":
			this.set_blendMode(h2d_BlendMode.Alpha);
			break;
		case "AlphaKill":case "Hidden":case "Opaque":
			this.set_blendMode(h2d_BlendMode.None);
			break;
		case "SoftAdd":
			this.set_blendMode(h2d_BlendMode.SoftAdd);
			break;
		}
		var tshader = this.textureShader;
		if(tshader != null) {
			tshader.constModified = true;
			tshader.killAlpha__ = props.kind == "AlphaKill";
			tshader.killAlphaThreshold__ = 0.5;
		}
		this.passes.set_culling(props.kind == "Hidden" ? h3d_mat_Face.Both : props.culling ? h3d_mat_Face.Back : h3d_mat_Face.None);
		this.passes.set_enableLights(props.light);
		var v = props.shadows;
		this.set_castShadows(v);
		this.set_receiveShadows(v);
		if(this.castShadows && this.receiveShadows) {
			this.getPass("shadow").set_culling(this.passes.culling);
		}
	}
	,__class__: h3d_mat_Material
	,__properties__: $extend(h3d_mat_BaseMaterial.prototype.__properties__,{set_texture:"set_texture",set_blendMode:"set_blendMode",set_receiveShadows:"set_receiveShadows",set_castShadows:"set_castShadows"})
});
var h3d_mat_MaterialDatabase = function() {
};
$hxClasses["h3d.mat.MaterialDatabase"] = h3d_mat_MaterialDatabase;
h3d_mat_MaterialDatabase.__name__ = "h3d.mat.MaterialDatabase";
h3d_mat_MaterialDatabase.prototype = {
	__class__: h3d_mat_MaterialDatabase
};
var h3d_mat_MaterialSetup = function(name) {
	if(this.database == null) {
		this.database = new h3d_mat_MaterialDatabase();
	}
	this.name = name;
};
$hxClasses["h3d.mat.MaterialSetup"] = h3d_mat_MaterialSetup;
h3d_mat_MaterialSetup.__name__ = "h3d.mat.MaterialSetup";
h3d_mat_MaterialSetup.prototype = {
	name: null
	,database: null
	,createRenderer: function() {
		return new h3d_scene_fwd_Renderer();
	}
	,createLightSystem: function() {
		return new h3d_scene_fwd_LightSystem();
	}
	,createMaterial: function() {
		return new h3d_mat_Material();
	}
	,__class__: h3d_mat_MaterialSetup
};
var h3d_mat_Pass = function(name,shaders,parent) {
	this.layer = 0;
	this.rendererFlags = 0;
	this.culled = false;
	this.bits = 0;
	this.parentPass = parent;
	this.shaders = shaders;
	this.setPassName(name);
	this.set_culling(h3d_mat_Face.Back);
	var src = h3d_mat_Blend.One;
	var dst = h3d_mat_Blend.Zero;
	this.set_blendSrc(src);
	this.set_blendAlphaSrc(src);
	this.set_blendDst(dst);
	this.set_blendAlphaDst(dst);
	this.depth(true,h3d_mat_Compare.Less);
	this.set_blendOp(this.set_blendAlphaOp(h3d_mat_Operation.Add));
	this.colorMask = 15;
};
$hxClasses["h3d.mat.Pass"] = h3d_mat_Pass;
h3d_mat_Pass.__name__ = "h3d.mat.Pass";
h3d_mat_Pass.prototype = {
	name: null
	,flags: null
	,passId: null
	,bits: null
	,parentPass: null
	,parentShaders: null
	,selfShaders: null
	,selfShadersChanged: null
	,selfShadersCache: null
	,shaders: null
	,nextPass: null
	,culled: null
	,rendererFlags: null
	,enableLights: null
	,dynamicParameters: null
	,isStatic: null
	,batchMode: null
	,culling: null
	,depthWrite: null
	,depthTest: null
	,blendSrc: null
	,blendDst: null
	,blendAlphaSrc: null
	,blendAlphaDst: null
	,blendOp: null
	,blendAlphaOp: null
	,colorMask: null
	,layer: null
	,stencil: null
	,setPassName: function(name) {
		this.name = name;
		this.passId = hxsl_Globals.allocID(name);
	}
	,setBlendMode: function(b) {
		this.set_blendOp(h3d_mat_Operation.Add);
		this.set_blendAlphaOp(h3d_mat_Operation.Add);
		switch(b._hx_index) {
		case 0:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.Zero;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			break;
		case 1:
			var src = h3d_mat_Blend.SrcAlpha;
			var dst = h3d_mat_Blend.OneMinusSrcAlpha;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendAlphaSrc(h3d_mat_Blend.One);
			break;
		case 2:
			var src = h3d_mat_Blend.SrcAlpha;
			var dst = h3d_mat_Blend.One;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendAlphaSrc(h3d_mat_Blend.One);
			break;
		case 3:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.OneMinusSrcAlpha;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			break;
		case 4:
			var src = h3d_mat_Blend.OneMinusDstColor;
			var dst = h3d_mat_Blend.One;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendAlphaSrc(h3d_mat_Blend.One);
			break;
		case 5:
			var src = h3d_mat_Blend.DstColor;
			var dst = h3d_mat_Blend.Zero;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendAlphaSrc(h3d_mat_Blend.One);
			break;
		case 6:
			var src = h3d_mat_Blend.DstColor;
			var dst = h3d_mat_Blend.OneMinusSrcAlpha;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			break;
		case 7:
			var src = h3d_mat_Blend.Zero;
			var dst = h3d_mat_Blend.OneMinusSrcColor;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			break;
		case 8:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.OneMinusSrcColor;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			break;
		case 9:
			var src = h3d_mat_Blend.SrcAlpha;
			var dst = h3d_mat_Blend.One;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendOp(h3d_mat_Operation.ReverseSub);
			this.set_blendAlphaOp(h3d_mat_Operation.ReverseSub);
			break;
		case 10:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.One;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendAlphaOp(h3d_mat_Operation.Max);
			this.set_blendOp(h3d_mat_Operation.Max);
			break;
		case 11:
			var src = h3d_mat_Blend.One;
			var dst = h3d_mat_Blend.One;
			this.set_blendSrc(src);
			this.set_blendAlphaSrc(src);
			this.set_blendDst(dst);
			this.set_blendAlphaDst(dst);
			this.set_blendAlphaOp(h3d_mat_Operation.Min);
			this.set_blendOp(h3d_mat_Operation.Min);
			break;
		}
	}
	,depth: function(write,test) {
		this.set_depthWrite(write);
		this.set_depthTest(test);
	}
	,resetRendererFlags: function() {
		this.rendererFlags = 0;
	}
	,addShader: function(s) {
		if(s == null) {
			return null;
		}
		this.shaders = hxsl_ShaderList.addSort(s,this.shaders);
		this.resetRendererFlags();
		return s;
	}
	,removeShader: function(s) {
		var sl = this.shaders;
		var prev = null;
		while(sl != null) {
			if(sl.s == s) {
				this.resetRendererFlags();
				if(this.selfShadersCache == sl) {
					this.selfShadersCache = this.selfShadersCache.next;
				}
				if(prev == null) {
					this.shaders = sl.next;
				} else {
					prev.next = sl.next;
				}
				return true;
			}
			prev = sl;
			sl = sl.next;
		}
		sl = this.selfShaders;
		prev = null;
		while(sl != null) {
			if(sl.s == s) {
				this.resetRendererFlags();
				if(this.selfShadersCache == sl) {
					this.selfShadersCache = this.selfShadersCache.next;
				}
				if(prev == null) {
					this.selfShaders = sl.next;
				} else {
					prev.next = sl.next;
				}
				return true;
			}
			prev = sl;
			sl = sl.next;
		}
		return false;
	}
	,getShader: function(t) {
		var s = this._getShader(t,this.shaders);
		if(s != null) {
			return s;
		} else {
			return this._getShader(t,this.selfShaders);
		}
	}
	,_getShader: function(t,s) {
		while(s != null && s != this.parentShaders) {
			var value = s.s;
			var sh = js_Boot.__downcastCheck(value,t) ? value : null;
			if(sh != null) {
				return sh;
			}
			s = s.next;
		}
		return null;
	}
	,selfShadersRec: function(rebuild) {
		if(this.selfShaders == null) {
			return this.shaders;
		}
		if(!this.selfShadersChanged && !rebuild && this.shaders == this.selfShadersCache) {
			return this.selfShaders;
		}
		var sl = this.selfShaders;
		var prev = null;
		while(sl != null && sl != this.selfShadersCache) {
			prev = sl;
			sl = sl.next;
		}
		this.selfShadersCache = this.shaders;
		if(prev != null) {
			prev.next = this.selfShadersCache;
		} else {
			this.selfShaders = this.shaders;
		}
		return this.selfShaders;
	}
	,getShadersRec: function() {
		if(this.parentPass == null || this.parentShaders == this.parentPass.shaders) {
			return this.selfShadersRec(false);
		}
		var s = this.shaders;
		var prev = null;
		while(s != null && s != this.parentShaders) {
			prev = s;
			s = s.next;
		}
		this.parentShaders = this.parentPass.shaders;
		if(prev == null) {
			this.shaders = this.parentShaders;
		} else {
			prev.next = this.parentShaders;
		}
		return this.selfShadersRec(true);
	}
	,set_enableLights: function(v) {
		this.flags = this.flags & -2 | (v ? 1 : 0);
		return this.enableLights = v;
	}
	,set_isStatic: function(v) {
		this.flags = this.flags & -5 | (v ? 1 : 0) << 2;
		return this.isStatic = v;
	}
	,set_culling: function(v) {
		this.bits = this.bits & -4 | v._hx_index;
		return this.culling = v;
	}
	,set_depthWrite: function(v) {
		this.bits = this.bits & -5 | (v ? 1 : 0) << 2;
		return this.depthWrite = v;
	}
	,set_depthTest: function(v) {
		this.bits = this.bits & -57 | v._hx_index << 3;
		return this.depthTest = v;
	}
	,set_blendSrc: function(v) {
		this.bits = this.bits & -961 | v._hx_index << 6;
		return this.blendSrc = v;
	}
	,set_blendDst: function(v) {
		this.bits = this.bits & -15361 | v._hx_index << 10;
		return this.blendDst = v;
	}
	,set_blendAlphaSrc: function(v) {
		this.bits = this.bits & -245761 | v._hx_index << 14;
		return this.blendAlphaSrc = v;
	}
	,set_blendAlphaDst: function(v) {
		this.bits = this.bits & -3932161 | v._hx_index << 18;
		return this.blendAlphaDst = v;
	}
	,set_blendOp: function(v) {
		this.bits = this.bits & -29360129 | v._hx_index << 22;
		return this.blendOp = v;
	}
	,set_blendAlphaOp: function(v) {
		this.bits = this.bits & -234881025 | v._hx_index << 25;
		return this.blendAlphaOp = v;
	}
	,__class__: h3d_mat_Pass
	,__properties__: {set_blendAlphaOp:"set_blendAlphaOp",set_blendOp:"set_blendOp",set_blendAlphaDst:"set_blendAlphaDst",set_blendAlphaSrc:"set_blendAlphaSrc",set_blendDst:"set_blendDst",set_blendSrc:"set_blendSrc",set_depthTest:"set_depthTest",set_depthWrite:"set_depthWrite",set_culling:"set_culling",set_isStatic:"set_isStatic",set_enableLights:"set_enableLights"}
};
var h3d_mat_Stencil = function() {
	this.opBits = 0;
	this.maskBits = 0;
	this.setOp(h3d_mat_StencilOp.Keep,h3d_mat_StencilOp.Keep,h3d_mat_StencilOp.Keep);
	this.setFunc(h3d_mat_Compare.Always);
};
$hxClasses["h3d.mat.Stencil"] = h3d_mat_Stencil;
h3d_mat_Stencil.__name__ = "h3d.mat.Stencil";
h3d_mat_Stencil.prototype = {
	maskBits: null
	,opBits: null
	,readMask: null
	,writeMask: null
	,reference: null
	,frontTest: null
	,frontPass: null
	,frontSTfail: null
	,frontDPfail: null
	,backTest: null
	,backPass: null
	,backSTfail: null
	,backDPfail: null
	,setFront: function(stfail,dpfail,pass) {
		this.set_frontSTfail(stfail);
		this.set_frontDPfail(dpfail);
		this.set_frontPass(pass);
	}
	,setBack: function(stfail,dpfail,pass) {
		this.set_backSTfail(stfail);
		this.set_backDPfail(dpfail);
		this.set_backPass(pass);
	}
	,setOp: function(stfail,dpfail,pass) {
		this.setFront(stfail,dpfail,pass);
		this.setBack(stfail,dpfail,pass);
	}
	,setFunc: function(f,reference,readMask,writeMask) {
		if(writeMask == null) {
			writeMask = 255;
		}
		if(readMask == null) {
			readMask = 255;
		}
		if(reference == null) {
			reference = 0;
		}
		this.set_frontTest(this.set_backTest(f));
		this.set_reference(reference);
		this.set_readMask(readMask);
		this.set_writeMask(writeMask);
	}
	,set_readMask: function(v) {
		this.maskBits = this.maskBits & -256 | v & 255;
		return this.readMask = v;
	}
	,set_writeMask: function(v) {
		this.maskBits = this.maskBits & -65281 | (v & 255) << 8;
		return this.writeMask = v;
	}
	,set_reference: function(v) {
		this.maskBits = this.maskBits & -16711681 | (v & 255) << 16;
		return this.reference = v;
	}
	,set_frontTest: function(v) {
		this.opBits = this.opBits & -8 | v._hx_index;
		return this.frontTest = v;
	}
	,set_frontPass: function(v) {
		this.opBits = this.opBits & -57 | v._hx_index << 3;
		return this.frontPass = v;
	}
	,set_frontSTfail: function(v) {
		this.opBits = this.opBits & -449 | v._hx_index << 6;
		return this.frontSTfail = v;
	}
	,set_frontDPfail: function(v) {
		this.opBits = this.opBits & -3585 | v._hx_index << 9;
		return this.frontDPfail = v;
	}
	,set_backTest: function(v) {
		this.opBits = this.opBits & -28673 | v._hx_index << 12;
		return this.backTest = v;
	}
	,set_backPass: function(v) {
		this.opBits = this.opBits & -229377 | v._hx_index << 15;
		return this.backPass = v;
	}
	,set_backSTfail: function(v) {
		this.opBits = this.opBits & -1835009 | v._hx_index << 18;
		return this.backSTfail = v;
	}
	,set_backDPfail: function(v) {
		this.opBits = this.opBits & -14680065 | v._hx_index << 21;
		return this.backDPfail = v;
	}
	,__class__: h3d_mat_Stencil
	,__properties__: {set_backDPfail:"set_backDPfail",set_backSTfail:"set_backSTfail",set_backPass:"set_backPass",set_backTest:"set_backTest",set_frontDPfail:"set_frontDPfail",set_frontSTfail:"set_frontSTfail",set_frontPass:"set_frontPass",set_frontTest:"set_frontTest",set_reference:"set_reference",set_writeMask:"set_writeMask",set_readMask:"set_readMask"}
};
var hxd_PixelFormat = $hxEnums["hxd.PixelFormat"] = { __ename__:"hxd.PixelFormat",__constructs__:null
	,ARGB: {_hx_name:"ARGB",_hx_index:0,__enum__:"hxd.PixelFormat",toString:$estr}
	,BGRA: {_hx_name:"BGRA",_hx_index:1,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGBA: {_hx_name:"RGBA",_hx_index:2,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGBA16F: {_hx_name:"RGBA16F",_hx_index:3,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGBA32F: {_hx_name:"RGBA32F",_hx_index:4,__enum__:"hxd.PixelFormat",toString:$estr}
	,R8: {_hx_name:"R8",_hx_index:5,__enum__:"hxd.PixelFormat",toString:$estr}
	,R16F: {_hx_name:"R16F",_hx_index:6,__enum__:"hxd.PixelFormat",toString:$estr}
	,R32F: {_hx_name:"R32F",_hx_index:7,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG8: {_hx_name:"RG8",_hx_index:8,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG16F: {_hx_name:"RG16F",_hx_index:9,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG32F: {_hx_name:"RG32F",_hx_index:10,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB8: {_hx_name:"RGB8",_hx_index:11,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB16F: {_hx_name:"RGB16F",_hx_index:12,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB32F: {_hx_name:"RGB32F",_hx_index:13,__enum__:"hxd.PixelFormat",toString:$estr}
	,SRGB: {_hx_name:"SRGB",_hx_index:14,__enum__:"hxd.PixelFormat",toString:$estr}
	,SRGB_ALPHA: {_hx_name:"SRGB_ALPHA",_hx_index:15,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB10A2: {_hx_name:"RGB10A2",_hx_index:16,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG11B10UF: {_hx_name:"RG11B10UF",_hx_index:17,__enum__:"hxd.PixelFormat",toString:$estr}
	,R16U: {_hx_name:"R16U",_hx_index:18,__enum__:"hxd.PixelFormat",toString:$estr}
	,RG16U: {_hx_name:"RG16U",_hx_index:19,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGB16U: {_hx_name:"RGB16U",_hx_index:20,__enum__:"hxd.PixelFormat",toString:$estr}
	,RGBA16U: {_hx_name:"RGBA16U",_hx_index:21,__enum__:"hxd.PixelFormat",toString:$estr}
	,S3TC: ($_=function(v) { return {_hx_index:22,v:v,__enum__:"hxd.PixelFormat",toString:$estr}; },$_._hx_name="S3TC",$_.__params__ = ["v"],$_)
	,Depth16: {_hx_name:"Depth16",_hx_index:23,__enum__:"hxd.PixelFormat",toString:$estr}
	,Depth24: {_hx_name:"Depth24",_hx_index:24,__enum__:"hxd.PixelFormat",toString:$estr}
	,Depth24Stencil8: {_hx_name:"Depth24Stencil8",_hx_index:25,__enum__:"hxd.PixelFormat",toString:$estr}
};
hxd_PixelFormat.__constructs__ = [hxd_PixelFormat.ARGB,hxd_PixelFormat.BGRA,hxd_PixelFormat.RGBA,hxd_PixelFormat.RGBA16F,hxd_PixelFormat.RGBA32F,hxd_PixelFormat.R8,hxd_PixelFormat.R16F,hxd_PixelFormat.R32F,hxd_PixelFormat.RG8,hxd_PixelFormat.RG16F,hxd_PixelFormat.RG32F,hxd_PixelFormat.RGB8,hxd_PixelFormat.RGB16F,hxd_PixelFormat.RGB32F,hxd_PixelFormat.SRGB,hxd_PixelFormat.SRGB_ALPHA,hxd_PixelFormat.RGB10A2,hxd_PixelFormat.RG11B10UF,hxd_PixelFormat.R16U,hxd_PixelFormat.RG16U,hxd_PixelFormat.RGB16U,hxd_PixelFormat.RGBA16U,hxd_PixelFormat.S3TC,hxd_PixelFormat.Depth16,hxd_PixelFormat.Depth24,hxd_PixelFormat.Depth24Stencil8];
hxd_PixelFormat.__empty_constructs__ = [hxd_PixelFormat.ARGB,hxd_PixelFormat.BGRA,hxd_PixelFormat.RGBA,hxd_PixelFormat.RGBA16F,hxd_PixelFormat.RGBA32F,hxd_PixelFormat.R8,hxd_PixelFormat.R16F,hxd_PixelFormat.R32F,hxd_PixelFormat.RG8,hxd_PixelFormat.RG16F,hxd_PixelFormat.RG32F,hxd_PixelFormat.RGB8,hxd_PixelFormat.RGB16F,hxd_PixelFormat.RGB32F,hxd_PixelFormat.SRGB,hxd_PixelFormat.SRGB_ALPHA,hxd_PixelFormat.RGB10A2,hxd_PixelFormat.RG11B10UF,hxd_PixelFormat.R16U,hxd_PixelFormat.RG16U,hxd_PixelFormat.RGB16U,hxd_PixelFormat.RGBA16U,hxd_PixelFormat.Depth16,hxd_PixelFormat.Depth24,hxd_PixelFormat.Depth24Stencil8];
var h3d_mat_Texture = function(w,h,flags,format) {
	this.startingMip = 0;
	if(format == null) {
		format = h3d_mat_Texture.nativeFormat;
	}
	this.id = ++h3d_mat_Texture.UID;
	this.format = format;
	this.flags = 0;
	if(flags != null) {
		var _g = 0;
		while(_g < flags.length) {
			var f = flags[_g];
			++_g;
			this.flags |= 1 << f._hx_index;
		}
	}
	if(!this.isDepth()) {
		var engine = h3d_Engine.CURRENT;
		this.mem = engine.mem;
	}
	var tw = 1;
	var th = 1;
	while(tw < w) tw <<= 1;
	while(th < h) th <<= 1;
	if(tw != w || th != h) {
		this.flags |= 1 << h3d_mat_TextureFlags.IsNPOT._hx_index;
	}
	this.width = w;
	this.height = h;
	if((this.flags & 1 << h3d_mat_TextureFlags.MipMapped._hx_index) != 0) {
		this.set_mipMap(h3d_mat_Texture.TRILINEAR_FILTERING_ENABLED ? h3d_mat_MipMap.Linear : h3d_mat_MipMap.Nearest);
	} else {
		this.set_mipMap(h3d_mat_MipMap.None);
	}
	this.set_filter(h3d_mat_Filter.Linear);
	this.set_wrap(h3d_mat_Texture.DEFAULT_WRAP);
	this.bits &= 32767;
	if((this.flags & 1 << h3d_mat_TextureFlags.NoAlloc._hx_index) == 0 && (!this.isDepth() || this.width > 0)) {
		this.alloc();
	}
};
$hxClasses["h3d.mat.Texture"] = h3d_mat_Texture;
h3d_mat_Texture.__name__ = "h3d.mat.Texture";
h3d_mat_Texture.fromBitmap = function(bmp) {
	var t = new h3d_mat_Texture(bmp.ctx.canvas.width,bmp.ctx.canvas.height);
	t.uploadBitmap(bmp);
	return t;
};
h3d_mat_Texture.fromPixels = function(pixels,format) {
	var t = new h3d_mat_Texture(pixels.width,pixels.height,null,format != null ? format : pixels.innerFormat);
	t.uploadPixels(pixels);
	return t;
};
h3d_mat_Texture.fromColor = function(color,alpha) {
	if(alpha == null) {
		alpha = 1.;
	}
	var engine = h3d_Engine.CURRENT;
	var aval = alpha * 255 | 0;
	if(aval < 0) {
		aval = 0;
	} else if(aval > 255) {
		aval = 255;
	}
	var key = color & 16777215 | aval << 24;
	var t = engine.textureColorCache.h[key];
	if(t != null) {
		return t;
	}
	var t = new h3d_mat_Texture(1,1,null);
	t.clear(color,alpha);
	t.realloc = function() {
		t.clear(color,alpha);
	};
	engine.textureColorCache.h[key] = t;
	return t;
};
h3d_mat_Texture.defaultCubeTexture = function() {
	var engine = h3d_Engine.CURRENT;
	var t = engine.resCache.h[h3d_mat_Texture.__id__];
	if(t != null) {
		return t;
	}
	t = new h3d_mat_Texture(1,1,[h3d_mat_TextureFlags.Cube]);
	t.clear(2105376);
	t.realloc = function() {
		t.clear(2105376);
	};
	engine.resCache.set(h3d_mat_Texture,t);
	return t;
};
h3d_mat_Texture.getDefaultDepth = function() {
	return h3d_Engine.CURRENT.driver.getDefaultDepthBuffer();
};
h3d_mat_Texture.prototype = {
	t: null
	,mem: null
	,id: null
	,name: null
	,width: null
	,height: null
	,flags: null
	,format: null
	,bits: null
	,waitLoads: null
	,mipMap: null
	,filter: null
	,wrap: null
	,startingMip: null
	,customMipLevels: null
	,realloc: null
	,depthBuffer: null
	,_lastFrame: null
	,set_lastFrame: function(lf) {
		if(this._lastFrame != h3d_mat_Texture.PREVENT_AUTO_DISPOSE) {
			this._lastFrame = lf;
		}
		return this._lastFrame;
	}
	,get_mipLevels: function() {
		if((this.flags & 1 << h3d_mat_TextureFlags.MipMapped._hx_index) == 0) {
			return 1;
		}
		if(this.customMipLevels > 0) {
			return this.customMipLevels;
		}
		var lv = 1;
		var w = this.width;
		var h = this.height;
		while(w >> lv >= 1 || h >> lv >= 1) ++lv;
		return lv;
	}
	,get_layerCount: function() {
		if((this.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0) {
			return 6;
		} else {
			return 1;
		}
	}
	,alloc: function() {
		if(this.isDepth()) {
			h3d_Engine.CURRENT.mem.allocDepth(this);
		} else if(this.t == null) {
			this.mem.allocTexture(this);
		}
	}
	,toString: function() {
		var str = this.name;
		if(this.name == null) {
			str = "Texture_" + this.id;
		}
		return str + "(" + this.width + "x" + this.height + ")";
	}
	,setName: function(n) {
		this.name = n;
	}
	,set_mipMap: function(m) {
		this.bits = this.bits & -4 | m._hx_index;
		return this.mipMap = m;
	}
	,set_filter: function(f) {
		this.bits = this.bits & -25 | f._hx_index << 3;
		return this.filter = f;
	}
	,set_wrap: function(w) {
		this.bits = this.bits & -193 | w._hx_index << 6;
		return this.wrap = w;
	}
	,resize: function(width,height) {
		this.dispose();
		var tw = 1;
		var th = 1;
		while(tw < width) tw <<= 1;
		while(th < height) th <<= 1;
		if(tw != width || th != height) {
			this.flags |= 1 << h3d_mat_TextureFlags.IsNPOT._hx_index;
		} else {
			this.flags &= -1 - (1 << h3d_mat_TextureFlags.IsNPOT._hx_index);
		}
		this.width = width;
		this.height = height;
		if((this.flags & 1 << h3d_mat_TextureFlags.NoAlloc._hx_index) == 0) {
			this.alloc();
		}
	}
	,clear: function(color,alpha,layer) {
		if(layer == null) {
			layer = -1;
		}
		if(alpha == null) {
			alpha = 1.;
		}
		this.alloc();
		if(this.width == 0 || this.height == 0) {
			return;
		}
		if(this.width != 1 || this.height != 1) {
			var engine = h3d_Engine.CURRENT;
			color |= ((alpha < 0. ? 0. : alpha > 1. ? 1. : alpha) * 255 | 0) << 24;
			if(layer < 0) {
				var _g = 0;
				var _g1 = this.get_layerCount();
				while(_g < _g1) {
					var i = _g++;
					engine.pushTarget(this,i);
					engine.clear(color);
					engine.popTarget();
				}
			} else {
				engine.pushTarget(this,layer);
				engine.clear(color);
				engine.popTarget();
			}
		} else {
			var p = hxd_Pixels.alloc(this.width,this.height,h3d_mat_Texture.nativeFormat);
			var k = 0;
			var b = color & 255;
			var g = color >> 8 & 255;
			var r = color >> 16 & 255;
			var a = alpha * 255 | 0;
			if(a < 0) {
				a = 0;
			} else if(a > 255) {
				a = 255;
			}
			switch(h3d_mat_Texture.nativeFormat._hx_index) {
			case 1:
				var tmp = r;
				r = b;
				b = tmp;
				break;
			case 2:
				break;
			default:
				throw haxe_Exception.thrown("TODO");
			}
			var _g = 0;
			var _g1 = this.width * this.height;
			while(_g < _g1) {
				var i = _g++;
				p.bytes.b[k++] = r;
				p.bytes.b[k++] = g;
				p.bytes.b[k++] = b;
				p.bytes.b[k++] = a;
			}
			if(layer < 0) {
				var _g = 0;
				var _g1 = this.get_layerCount();
				while(_g < _g1) {
					var i = _g++;
					this.uploadPixels(p,0,i);
				}
			} else {
				this.uploadPixels(p,0,layer);
			}
			p.dispose();
		}
	}
	,checkSize: function(width,height,mip) {
		var mw = this.width >> mip;
		if(mw == 0) {
			mw = 1;
		}
		var mh = this.height >> mip;
		if(mh == 0) {
			mh = 1;
		}
		if(width != mw || height != mh) {
			throw haxe_Exception.thrown("Invalid upload size : " + width + "x" + height + " should be " + mw + "x" + mh);
		}
	}
	,checkMipMapGen: function(mipLevel,layer) {
		if(mipLevel == 0 && (this.flags & 1 << h3d_mat_TextureFlags.MipMapped._hx_index) != 0 && (this.flags & 1 << h3d_mat_TextureFlags.ManualMipMapGen._hx_index) == 0 && layer == this.get_layerCount() - 1) {
			this.mem.driver.generateMipMaps(this);
		}
	}
	,uploadBitmap: function(bmp,mipLevel,layer) {
		if(layer == null) {
			layer = 0;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		this.alloc();
		this.checkSize(bmp.ctx.canvas.width,bmp.ctx.canvas.height,mipLevel);
		this.mem.driver.uploadTextureBitmap(this,bmp,mipLevel,layer);
		this.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
		this.checkMipMapGen(mipLevel,layer);
	}
	,uploadPixels: function(pixels,mipLevel,layer) {
		if(layer == null) {
			layer = 0;
		}
		if(mipLevel == null) {
			mipLevel = 0;
		}
		this.alloc();
		this.checkSize(pixels.width,pixels.height,mipLevel);
		this.mem.driver.uploadTexturePixels(this,pixels,mipLevel,layer);
		this.flags |= 1 << h3d_mat_TextureFlags.WasCleared._hx_index;
		this.checkMipMapGen(mipLevel,layer);
	}
	,dispose: function() {
		if(this.t != null) {
			if(this.isDepth()) {
				h3d_Engine.CURRENT.mem.deleteDepth(this);
			} else {
				this.mem.deleteTexture(this);
			}
		}
	}
	,hasStencil: function() {
		if(this.format._hx_index == 25) {
			return true;
		} else {
			return false;
		}
	}
	,isDepth: function() {
		switch(this.format._hx_index) {
		case 23:case 24:case 25:
			return true;
		default:
			return false;
		}
	}
	,__class__: h3d_mat_Texture
	,__properties__: {set_lastFrame:"set_lastFrame",get_mipLevels:"get_mipLevels",get_layerCount:"get_layerCount",set_wrap:"set_wrap",set_filter:"set_filter",set_mipMap:"set_mipMap"}
};
var h3d_mat_TextureArray = function(w,h,layers,flags,format) {
	this.layers = layers;
	if(flags == null) {
		flags = [];
	}
	flags.push(h3d_mat_TextureFlags.IsArray);
	h3d_mat_Texture.call(this,w,h,flags,format);
};
$hxClasses["h3d.mat.TextureArray"] = h3d_mat_TextureArray;
h3d_mat_TextureArray.__name__ = "h3d.mat.TextureArray";
h3d_mat_TextureArray.__super__ = h3d_mat_Texture;
h3d_mat_TextureArray.prototype = $extend(h3d_mat_Texture.prototype,{
	layers: null
	,get_layerCount: function() {
		return this.layers;
	}
	,toString: function() {
		return h3d_mat_Texture.prototype.toString.call(this) + "[" + this.layers + "]";
	}
	,__class__: h3d_mat_TextureArray
});
var h3d_pass_Base = function(name) {
	this.name = name;
};
$hxClasses["h3d.pass.Base"] = h3d_pass_Base;
h3d_pass_Base.__name__ = "h3d.pass.Base";
h3d_pass_Base.prototype = {
	ctx: null
	,name: null
	,setContext: function(ctx) {
		this.ctx = ctx;
	}
	,draw: function(passes,sort) {
	}
	,__class__: h3d_pass_Base
};
var h3d_pass_ScreenFx = function(shader,output) {
	this.shader = shader;
	this.manager = new h3d_pass_ShaderManager(output);
	this.pass = new h3d_mat_Pass("screenfx",new hxsl_ShaderList(shader));
	this.pass.set_culling(h3d_mat_Face.None);
	this.pass.depth(false,h3d_mat_Compare.Always);
};
$hxClasses["h3d.pass.ScreenFx"] = h3d_pass_ScreenFx;
h3d_pass_ScreenFx.__name__ = "h3d.pass.ScreenFx";
h3d_pass_ScreenFx.prototype = {
	shader: null
	,pass: null
	,primitive: null
	,manager: null
	,_engine: null
	,buffers: null
	,get_engine: function() {
		if(this._engine == null) {
			this._engine = h3d_Engine.CURRENT;
		}
		return this._engine;
	}
	,render: function() {
		if(this.primitive == null) {
			this.primitive = h3d_prim_Plane2D.get();
		}
		this.shader.flipY__ = this.get_engine().driver.hasFeature(h3d_impl_Feature.BottomLeftCoords) && this.get_engine().getCurrentTarget() != null ? -1 : 1;
		var shaders = this.pass.shaders;
		var rts = this.manager.compileShaders(shaders);
		this.get_engine().selectMaterial(this.pass);
		this.get_engine().selectShader(rts);
		if(this.buffers == null) {
			this.buffers = new h3d_shader_Buffers(rts);
		} else {
			var _this = this.buffers;
			_this.vertex.grow(rts.vertex);
			_this.fragment.grow(rts.fragment);
		}
		this.manager.fillGlobals(this.buffers,rts);
		this.manager.fillParams(this.buffers,rts,shaders);
		this.get_engine().uploadShaderBuffers(this.buffers,0);
		this.get_engine().uploadShaderBuffers(this.buffers,1);
		this.get_engine().uploadShaderBuffers(this.buffers,2);
		this.get_engine().uploadShaderBuffers(this.buffers,3);
		this.primitive.render(this.get_engine());
	}
	,dispose: function() {
	}
	,__class__: h3d_pass_ScreenFx
	,__properties__: {get_engine:"get_engine"}
};
var h3d_pass_Blur = function(radius,gain,linear,quality) {
	if(quality == null) {
		quality = 1.;
	}
	if(linear == null) {
		linear = 0.;
	}
	if(gain == null) {
		gain = 1.;
	}
	if(radius == null) {
		radius = 1.;
	}
	this.cubeDir = [h3d_Matrix.L([0,0,-1,0,0,-1,0,0,1,0,0,0]),h3d_Matrix.L([0,0,1,0,0,-1,0,0,-1,0,0,0]),h3d_Matrix.L([1,0,0,0,0,0,1,0,0,1,0,0]),h3d_Matrix.L([1,0,0,0,0,0,-1,0,0,-1,0,0]),h3d_Matrix.L([1,0,0,0,0,-1,0,0,0,1,0,0]),h3d_Matrix.L([-1,0,0,0,0,-1,0,0,0,0,-1,0])];
	h3d_pass_ScreenFx.call(this,new h3d_shader_Blur());
	this.set_radius(radius);
	this.set_quality(quality);
	this.set_gain(gain);
	this.set_linear(linear);
};
$hxClasses["h3d.pass.Blur"] = h3d_pass_Blur;
h3d_pass_Blur.__name__ = "h3d.pass.Blur";
h3d_pass_Blur.__super__ = h3d_pass_ScreenFx;
h3d_pass_Blur.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	cubeDir: null
	,radius: null
	,gain: null
	,linear: null
	,quality: null
	,values: null
	,offsets: null
	,set_radius: function(r) {
		if(this.radius == r) {
			return r;
		}
		this.values = null;
		return this.radius = r;
	}
	,set_quality: function(q) {
		if(this.quality == q) {
			return q;
		}
		this.values = null;
		return this.quality = q;
	}
	,set_gain: function(s) {
		if(this.gain == s) {
			return s;
		}
		this.values = null;
		return this.gain = s;
	}
	,set_linear: function(b) {
		if(this.linear == b) {
			return b;
		}
		this.values = null;
		return this.linear = b;
	}
	,gauss: function(x,s) {
		if(s <= 0) {
			if(x == 0) {
				return 1;
			} else {
				return 0;
			}
		}
		var sq = s * s;
		var p = Math.pow(2.718281828459,-(x * x) / (2 * sq));
		return p / Math.sqrt(2 * Math.PI * sq);
	}
	,calcValues: function() {
		this.values = [];
		this.offsets = [];
		var tot = 0.;
		var f = this.quality;
		var qadj = (f < 0. ? 0. : f > 1. ? 1. : f) * 0.7 + 0.3;
		var width;
		if(this.radius > 0) {
			var a = this.radius - 1;
			width = Math.ceil((a < 1 ? 1 : a) * qadj / 2);
		} else {
			width = 0;
		}
		var sigma = Math.sqrt(this.radius);
		var _g = 0;
		var _g1 = width + 1;
		while(_g < _g1) {
			var i = _g++;
			var i1 = i * 2;
			var i2 = i == 0 ? 0 : i * 2 - 1;
			var g1 = this.gauss(i1,sigma);
			var g2 = this.gauss(i2,sigma);
			var g = g1 + g2;
			this.values[i] = g;
			this.offsets[i] = i == 0 ? 0 : (g1 * i1 + g2 * i2) / (g * i * Math.sqrt(qadj));
			tot += g;
			if(i > 0) {
				tot += g;
			}
		}
		var minVal = this.values[0] * (0.01 / qadj);
		while(this.values.length > 2) {
			var last = this.values[this.values.length - 1];
			if(last > minVal) {
				break;
			}
			tot -= last * 2;
			this.values.pop();
		}
		tot /= this.gain;
		var _g = 0;
		var _g1 = this.values.length;
		while(_g < _g1) {
			var i = _g++;
			this.values[i] /= tot;
		}
		if(this.linear > 0) {
			var m = this.gain / (this.values.length * 2 - 1);
			var _g = 0;
			var _g1 = this.values.length;
			while(_g < _g1) {
				var i = _g++;
				var a = this.values[i];
				this.values[i] = a + this.linear * (m - a);
				var a1 = this.offsets[i];
				this.offsets[i] = a1 + this.linear * ((i == 0 ? 0 : (i * 2 - 0.5) / (i * qadj)) - a1);
			}
		}
	}
	,apply: function(ctx,src,output) {
		if(this.radius <= 0 && this.shader.fixedColor__ == null) {
			if(output != null) {
				h3d_pass_Copy.run(src,output);
			}
			return;
		}
		if(output == null) {
			output = src;
		}
		if(this.values == null) {
			this.calcValues();
		}
		var isCube = (src.flags & 1 << h3d_mat_TextureFlags.Cube._hx_index) != 0;
		var faceCount = isCube ? 6 : 1;
		var tmp = ctx.textures.allocTarget(src.name + "BlurTmp",src.width,src.height,false,src.format,isCube);
		var _this = this.shader;
		_this.constModified = true;
		_this.Quality__ = this.values.length;
		this.shader.values__ = this.values;
		this.shader.offsets__ = this.offsets;
		if(isCube) {
			this.shader.cubeTexture__ = src;
			var _this = this.shader;
			_this.constModified = true;
			_this.isCube__ = true;
		} else {
			this.shader.texture__ = src;
			var _this = this.shader;
			_this.constModified = true;
			_this.isCube__ = false;
		}
		var _this = this.shader.pixel__;
		var x = 1 / src.width;
		var y = 0;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var _g = 0;
		var _g1 = faceCount;
		while(_g < _g1) {
			var i = _g++;
			this.get_engine().pushTarget(tmp,i);
			if(isCube) {
				this.shader.cubeDir__ = this.cubeDir[i];
			}
			this.render();
			this.get_engine().popTarget();
		}
		if(isCube) {
			this.shader.cubeTexture__ = tmp;
		} else {
			this.shader.texture__ = tmp;
		}
		var _this = this.shader.pixel__;
		var x = 0;
		var y = 1 / src.height;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		var outDepth = output.depthBuffer;
		output.depthBuffer = null;
		var _g = 0;
		var _g1 = faceCount;
		while(_g < _g1) {
			var i = _g++;
			this.get_engine().pushTarget(output,i);
			if(isCube) {
				this.shader.cubeDir__ = this.cubeDir[i];
			}
			this.render();
			this.get_engine().popTarget();
		}
		output.depthBuffer = outDepth;
	}
	,__class__: h3d_pass_Blur
	,__properties__: $extend(h3d_pass_ScreenFx.prototype.__properties__,{set_quality:"set_quality",set_linear:"set_linear",set_gain:"set_gain",set_radius:"set_radius"})
});
var hxsl_Shader = function() {
	this.priority = 0;
	this.initialize();
};
$hxClasses["hxsl.Shader"] = hxsl_Shader;
hxsl_Shader.__name__ = "hxsl.Shader";
hxsl_Shader.prototype = {
	priority: null
	,shader: null
	,instance: null
	,constBits: null
	,constModified: null
	,initialize: function() {
		this.constModified = true;
		if(this.shader != null) {
			return;
		}
		var cl = js_Boot.getClass(this);
		this.shader = cl._SHADER;
		if(this.shader == null) {
			var curClass = cl;
			while(curClass != null && curClass.SRC == null) curClass = curClass.__super__;
			if(curClass == null) {
				throw haxe_Exception.thrown(cl.__name__ + " has no shader source");
			}
			this.shader = curClass._SHADER;
			if(this.shader == null) {
				this.shader = new hxsl_SharedShader(curClass.SRC);
				curClass._SHADER = this.shader;
			}
		}
	}
	,setPriority: function(v) {
		this.priority = v;
	}
	,getParamValue: function(index) {
		throw haxe_Exception.thrown("assert");
	}
	,getParamFloatValue: function(index) {
		throw haxe_Exception.thrown("assert");
	}
	,updateConstants: function(globals) {
		throw haxe_Exception.thrown("assert");
	}
	,updateConstantsFinal: function(globals) {
		var c = this.shader.consts;
		while(c != null) {
			if(c.globalId == 0) {
				c = c.next;
				continue;
			}
			var v = globals.map.h[c.globalId];
			var _g = c.v.type;
			switch(_g._hx_index) {
			case 1:
				var v1 = v;
				if(v1 >>> c.bits != 0) {
					throw haxe_Exception.thrown("Constant " + c.v.name + " is outside range (" + v1 + " > " + ((1 << c.bits) - 1) + ")");
				}
				this.constBits |= v1 << c.pos;
				break;
			case 2:
				var v2 = v;
				if(v2) {
					this.constBits |= 1 << c.pos;
				}
				break;
			case 17:
				var count = _g.size;
				if(v == null) {
					c = c.next;
					continue;
				}
				var v3 = v;
				var sel = v3.channel;
				if(v3.texture == null) {
					sel = hxsl_Channel.Unknown;
				} else if(sel == null || sel == hxsl_Channel.Unknown) {
					switch(count) {
					case 1:
						if(v3.texture.format == h3d_mat_Texture.nativeFormat) {
							sel = hxsl_Channel.PackedFloat;
						} else {
							throw haxe_Exception.thrown("Constant " + c.v.name + " does not define channel select value");
						}
						break;
					case 3:
						if(v3.texture.format == h3d_mat_Texture.nativeFormat) {
							sel = hxsl_Channel.PackedNormal;
						} else {
							throw haxe_Exception.thrown("Constant " + c.v.name + " does not define channel select value");
						}
						break;
					default:
						throw haxe_Exception.thrown("Constant " + c.v.name + " does not define channel select value");
					}
				}
				this.constBits |= (globals.allocChannelID(v3.texture) << 3 | sel._hx_index) << c.pos;
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
			c = c.next;
		}
		var _this = this.shader;
		var constBits = this.constBits;
		var i = _this.instanceCache.h[constBits];
		this.instance = i == null ? _this.makeInstance(constBits) : i;
	}
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__;
	}
	,__class__: hxsl_Shader
};
var h3d_shader_ScreenShader = function() {
	this.flipY__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.ScreenShader"] = h3d_shader_ScreenShader;
h3d_shader_ScreenShader.__name__ = "h3d.shader.ScreenShader";
h3d_shader_ScreenShader.__super__ = hxsl_Shader;
h3d_shader_ScreenShader.prototype = $extend(hxsl_Shader.prototype,{
	flipY__: null
	,get_flipY: function() {
		return this.flipY__;
	}
	,set_flipY: function(_v) {
		return this.flipY__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_ScreenShader
	,__properties__: {set_flipY:"set_flipY",get_flipY:"get_flipY"}
});
var h3d_pass__$Border_BorderShader = function() {
	this.color__ = new h3d_Vector();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass._Border.BorderShader"] = h3d_pass__$Border_BorderShader;
h3d_pass__$Border_BorderShader.__name__ = "h3d.pass._Border.BorderShader";
h3d_pass__$Border_BorderShader.__super__ = h3d_shader_ScreenShader;
h3d_pass__$Border_BorderShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	color__: null
	,get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.color__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_pass__$Border_BorderShader
	,__properties__: $extend(h3d_shader_ScreenShader.prototype.__properties__,{set_color:"set_color",get_color:"get_color"})
});
var h3d_pass_Border = function(width,height,size) {
	if(size == null) {
		size = 1;
	}
	h3d_pass_ScreenFx.call(this,new h3d_pass__$Border_BorderShader());
	var bbuf = hxd__$FloatBuffer_Float32Expand._new(0);
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - size / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - size / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = size / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = size / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - (height - size) / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - (height - size) / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 0 / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = (width - size) / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - 0 / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = (width - size) / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = width / width * 2 - 1;
	if(bbuf.pos == bbuf.array.length) {
		var newSize = bbuf.array.length << 1;
		if(newSize < 128) {
			newSize = 128;
		}
		var newArray = new Float32Array(newSize);
		newArray.set(bbuf.array);
		bbuf.array = newArray;
	}
	bbuf.array[bbuf.pos++] = 1 - height / height * 2;
	this.primitive = new h3d_prim_RawPrimitive({ vbuf : bbuf, format : hxd_BufferFormat.make([new hxd_BufferInput("position",2,0)])},true);
	var _this = this.shader.color__;
	var x = 1;
	var y = 1;
	var z = 1;
	var w = 1;
	if(w == null) {
		w = 1.;
	}
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = w;
};
$hxClasses["h3d.pass.Border"] = h3d_pass_Border;
h3d_pass_Border.__name__ = "h3d.pass.Border";
h3d_pass_Border.__super__ = h3d_pass_ScreenFx;
h3d_pass_Border.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	dispose: function() {
		h3d_pass_ScreenFx.prototype.dispose.call(this);
		this.primitive.dispose();
	}
	,__class__: h3d_pass_Border
});
var h3d_pass__$Copy_ArrayCopyShader = function() {
	this.layer__ = 0;
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass._Copy.ArrayCopyShader"] = h3d_pass__$Copy_ArrayCopyShader;
h3d_pass__$Copy_ArrayCopyShader.__name__ = "h3d.pass._Copy.ArrayCopyShader";
h3d_pass__$Copy_ArrayCopyShader.__super__ = h3d_shader_ScreenShader;
h3d_pass__$Copy_ArrayCopyShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	texture__: null
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,layer__: null
	,get_layer: function() {
		return this.layer__;
	}
	,set_layer: function(_v) {
		return this.layer__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texture__;
		case 2:
			return this.layer__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_pass__$Copy_ArrayCopyShader
	,__properties__: $extend(h3d_shader_ScreenShader.prototype.__properties__,{set_layer:"set_layer",get_layer:"get_layer",set_texture:"set_texture",get_texture:"get_texture"})
});
var h3d_pass__$Copy_CopyShader = function() {
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass._Copy.CopyShader"] = h3d_pass__$Copy_CopyShader;
h3d_pass__$Copy_CopyShader.__name__ = "h3d.pass._Copy.CopyShader";
h3d_pass__$Copy_CopyShader.__super__ = h3d_shader_ScreenShader;
h3d_pass__$Copy_CopyShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	texture__: null
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texture__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_pass__$Copy_CopyShader
	,__properties__: $extend(h3d_shader_ScreenShader.prototype.__properties__,{set_texture:"set_texture",get_texture:"get_texture"})
});
var h3d_pass_Copy = function() {
	h3d_pass_ScreenFx.call(this,new h3d_pass__$Copy_CopyShader());
};
$hxClasses["h3d.pass.Copy"] = h3d_pass_Copy;
h3d_pass_Copy.__name__ = "h3d.pass.Copy";
h3d_pass_Copy.run = function(from,to,blend,pass,layer) {
	var engine = h3d_Engine.CURRENT;
	if(to != null && from != null && (blend == null || blend == h2d_BlendMode.None) && pass == null && layer == null && engine.driver.copyTexture(from,to)) {
		return;
	}
	var inst = engine.resCache.h[h3d_pass_Copy.__id__];
	if(inst == null) {
		inst = new h3d_pass_Copy();
		engine.resCache.set(h3d_pass_Copy,inst);
	}
	inst.apply(from,to,blend,pass,layer);
};
h3d_pass_Copy.__super__ = h3d_pass_ScreenFx;
h3d_pass_Copy.prototype = $extend(h3d_pass_ScreenFx.prototype,{
	apply: function(from,to,blend,customPass,layer) {
		if(to != null) {
			this.get_engine().pushTarget(to,layer != null ? layer : 0);
		}
		this.shader.texture__ = from;
		if(customPass != null) {
			if(blend != null) {
				customPass.setBlendMode(blend);
			}
			var h = customPass.shaders;
			while(h.next != null) h = h.next;
			h.next = this.pass.shaders;
			var old = this.pass;
			this.pass = customPass;
			this.render();
			this.pass = old;
			h.next = null;
		} else {
			this.pass.setBlendMode(blend == null ? h2d_BlendMode.None : blend);
			this.render();
		}
		this.shader.texture__ = null;
		if(to != null) {
			this.get_engine().popTarget();
		}
	}
	,__class__: h3d_pass_Copy
});
var h3d_pass__$CubeCopy_CubeCopyShader = function() {
	this.mat__ = new h3d_Matrix();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.pass._CubeCopy.CubeCopyShader"] = h3d_pass__$CubeCopy_CubeCopyShader;
h3d_pass__$CubeCopy_CubeCopyShader.__name__ = "h3d.pass._CubeCopy.CubeCopyShader";
h3d_pass__$CubeCopy_CubeCopyShader.__super__ = h3d_shader_ScreenShader;
h3d_pass__$CubeCopy_CubeCopyShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	texture__: null
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,mat__: null
	,get_mat: function() {
		return this.mat__;
	}
	,set_mat: function(_v) {
		return this.mat__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texture__;
		case 2:
			return this.mat__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_pass__$CubeCopy_CubeCopyShader
	,__properties__: $extend(h3d_shader_ScreenShader.prototype.__properties__,{set_mat:"set_mat",get_mat:"get_mat",set_texture:"set_texture",get_texture:"get_texture"})
});
var h3d_pass_Default = function(name) {
	this.defaultSort = ($_=new h3d_pass_SortByMaterial(),$bind($_,$_.sort));
	h3d_pass_Base.call(this,name);
	this.manager = new h3d_pass_ShaderManager(this.getOutputs());
	this.initGlobals();
};
$hxClasses["h3d.pass.Default"] = h3d_pass_Default;
h3d_pass_Default.__name__ = "h3d.pass.Default";
h3d_pass_Default.onShaderError = function(e,p) {
	throw haxe_Exception.thrown(e);
};
h3d_pass_Default.__super__ = h3d_pass_Base;
h3d_pass_Default.prototype = $extend(h3d_pass_Base.prototype,{
	manager: null
	,defaultSort: null
	,getCurrentPixelSize: function() {
		var t = this.ctx.engine.getCurrentTarget();
		return new h3d_Vector(2 / (t == null ? this.ctx.engine.width : t.width),2 / (t == null ? this.ctx.engine.height : t.height));
	}
	,getOutputs: function() {
		return [hxsl_Output.Value("output.color")];
	}
	,processShaders: function(p,shaders) {
		var p = this.ctx.extraShaders;
		while(p != null) {
			shaders = this.ctx.allocShaderList(p.s,shaders);
			p = p.next;
		}
		return shaders;
	}
	,setupShaders: function(passes) {
		var lightInit = false;
		var _g_o = passes.current;
		while(_g_o != null) {
			var tmp = _g_o;
			_g_o = _g_o.next;
			var p = tmp;
			var shaders = p.pass.getShadersRec();
			shaders = this.processShaders(p,shaders);
			if(p.pass.enableLights && this.ctx.lightSystem != null) {
				if(!lightInit) {
					this.ctx.lightSystem.initGlobals(this.manager.globals);
					lightInit = true;
				}
				shaders = this.ctx.lightSystem.computeLight(p.obj,shaders);
			}
			p.shader = this.manager.compileShaders(shaders,p.pass.batchMode);
			p.shaders = shaders;
			var t = p.shader.fragment.textures;
			var tmp1;
			if(t != null) {
				var _g = t.type;
				if(_g._hx_index == 15) {
					var _g1 = _g.t;
					var _g2 = _g.size;
					tmp1 = true;
				} else {
					tmp1 = false;
				}
			} else {
				tmp1 = true;
			}
			if(tmp1) {
				p.texture = 0;
			} else {
				var _this = this.manager;
				var opt = true;
				if(opt == null) {
					opt = false;
				}
				var t1;
				if(t.perObjectGlobal != null) {
					var v = _this.globals.map.h[t.perObjectGlobal.gid];
					if(v == null) {
						throw haxe_Exception.thrown("Missing global value " + t.perObjectGlobal.path + " for shader " + _this.shaderInfo(shaders,t.perObjectGlobal.path));
					}
					var _g3 = t.type;
					var t2;
					if(_g3._hx_index == 17) {
						var _g4 = _g3.size;
						t2 = true;
					} else {
						t2 = false;
					}
					t1 = t2 ? v.texture : v;
				} else {
					var si = shaders;
					var n = t.instance;
					while(--n > 0) si = si.next;
					var v1 = si.s.getParamValue(t.index);
					if(v1 == null && !opt) {
						throw haxe_Exception.thrown("Missing param value " + Std.string(si.s) + "." + t.name);
					}
					t1 = v1;
				}
				p.texture = t1 == null ? 0 : t1.id;
			}
		}
	}
	,drawObject: function(p) {
		this.ctx.drawPass = p;
		this.ctx.engine.selectMaterial(p.pass);
		p.obj.draw(this.ctx);
	}
	,draw: function(passes,sort) {
		if(passes.current == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.ctx.sharedGlobals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			this.manager.globals.map.h[g.gid] = g.value;
		}
		this.setGlobals();
		this.setupShaders(passes);
		if(sort == null) {
			this.defaultSort(passes);
		} else {
			sort(passes);
		}
		this.ctx.currentManager = this.manager;
		var buf = this.ctx.shaderBuffers;
		var prevShader = null;
		var _g_o = passes.current;
		while(_g_o != null) {
			var tmp = _g_o;
			_g_o = _g_o.next;
			var p = tmp;
			var v = p.obj.absPos;
			this.manager.globals.map.h[this.globalModelView_id] = v;
			if(p.shader.globals.h.hasOwnProperty(this.globalModelViewInverse_id)) {
				var v1 = p.obj.getInvPos();
				this.manager.globals.map.h[this.globalModelViewInverse_id] = v1;
			}
			if(prevShader != p.shader) {
				prevShader = p.shader;
				try {
					this.ctx.engine.selectShader(p.shader);
				} catch( _g ) {
					var e = haxe_Exception.caught(_g).unwrap();
					h3d_pass_Default.onShaderError(e,p);
					continue;
				}
				if(buf == null) {
					buf = this.ctx.shaderBuffers = new h3d_shader_Buffers(p.shader);
				} else {
					var s = p.shader;
					buf.vertex.grow(s.vertex);
					buf.fragment.grow(s.fragment);
				}
				this.manager.fillGlobals(buf,p.shader);
				this.ctx.engine.uploadShaderBuffers(buf,0);
			}
			if(!p.pass.dynamicParameters) {
				this.manager.fillParams(buf,p.shader,p.shaders);
				this.ctx.engine.uploadShaderBuffers(buf,1);
				this.ctx.engine.uploadShaderBuffers(buf,2);
				this.ctx.engine.uploadShaderBuffers(buf,3);
			}
			this.drawObject(p);
		}
		var _this = this.ctx;
		_this.cachedPos = 0;
		_this.drawPass = null;
	}
	,cameraView_id: null
	,cameraNear_id: null
	,cameraFar_id: null
	,cameraProj_id: null
	,cameraPos_id: null
	,cameraProjDiag_id: null
	,cameraProjFlip_id: null
	,cameraViewProj_id: null
	,cameraInverseViewProj_id: null
	,globalTime_id: null
	,pixelSize_id: null
	,globalModelView_id: null
	,globalModelViewInverse_id: null
	,initGlobals: function() {
		this.cameraView_id = hxsl_Globals.allocID("camera.view");
		this.cameraNear_id = hxsl_Globals.allocID("camera.zNear");
		this.cameraFar_id = hxsl_Globals.allocID("camera.zFar");
		this.cameraProj_id = hxsl_Globals.allocID("camera.proj");
		this.cameraPos_id = hxsl_Globals.allocID("camera.position");
		this.cameraProjDiag_id = hxsl_Globals.allocID("camera.projDiag");
		this.cameraProjFlip_id = hxsl_Globals.allocID("camera.projFlip");
		this.cameraViewProj_id = hxsl_Globals.allocID("camera.viewProj");
		this.cameraInverseViewProj_id = hxsl_Globals.allocID("camera.inverseViewProj");
		this.globalTime_id = hxsl_Globals.allocID("global.time");
		this.pixelSize_id = hxsl_Globals.allocID("global.pixelSize");
		this.globalModelView_id = hxsl_Globals.allocID("global.modelView");
		this.globalModelViewInverse_id = hxsl_Globals.allocID("global.modelViewInverse");
	}
	,setGlobals: function() {
		var v = this.ctx.camera.mcam;
		this.manager.globals.map.h[this.cameraView_id] = v;
		var v = this.ctx.camera.zNear;
		this.manager.globals.map.h[this.cameraNear_id] = v;
		var v = this.ctx.camera.zFar;
		this.manager.globals.map.h[this.cameraFar_id] = v;
		var v = this.ctx.camera.mproj;
		this.manager.globals.map.h[this.cameraProj_id] = v;
		var v = this.ctx.camera.pos;
		this.manager.globals.map.h[this.cameraPos_id] = v;
		var v = new h3d_Vector(this.ctx.camera.mproj._11,this.ctx.camera.mproj._22,this.ctx.camera.mproj._33,this.ctx.camera.mproj._44);
		this.manager.globals.map.h[this.cameraProjDiag_id] = v;
		var v = this.ctx.engine.driver.hasFeature(h3d_impl_Feature.BottomLeftCoords) && this.ctx.engine.getCurrentTarget() != null ? -1 : 1;
		this.manager.globals.map.h[this.cameraProjFlip_id] = v;
		var v = this.ctx.camera.m;
		this.manager.globals.map.h[this.cameraViewProj_id] = v;
		var v = this.ctx.camera.getInverseViewProj();
		this.manager.globals.map.h[this.cameraInverseViewProj_id] = v;
		var v = this.ctx.time;
		this.manager.globals.map.h[this.globalTime_id] = v;
		var v = this.getCurrentPixelSize();
		this.manager.globals.map.h[this.pixelSize_id] = v;
	}
	,__class__: h3d_pass_Default
});
var h3d_pass_Shadows = function(light) {
	this.pcfScale = 1.0;
	this.pcfQuality = 1;
	this.bias = 0.01;
	this.power = 30.0;
	this.samplingKind = h3d_pass_ShadowSamplingKind.None;
	this.size = 1024;
	this.mode = h3d_pass_RenderMode.None;
	this.enabled = true;
	if(this.format == null) {
		this.format = hxd_PixelFormat.R16F;
	}
	if(!h3d_Engine.CURRENT.driver.isSupportedFormat(this.format)) {
		this.format = h3d_mat_Texture.nativeFormat;
	}
	h3d_pass_Default.call(this,"shadow");
	this.light = light;
	this.blur = new h3d_pass_Blur(5);
	this.blur.set_quality(0.5);
	var _this = this.blur.shader;
	_this.constModified = true;
	_this.isDepth__ = this.format == h3d_mat_Texture.nativeFormat;
};
$hxClasses["h3d.pass.Shadows"] = h3d_pass_Shadows;
h3d_pass_Shadows.__name__ = "h3d.pass.Shadows";
h3d_pass_Shadows.__super__ = h3d_pass_Default;
h3d_pass_Shadows.prototype = $extend(h3d_pass_Default.prototype,{
	lightCamera: null
	,format: null
	,staticTexture: null
	,light: null
	,enabled: null
	,mode: null
	,size: null
	,shader: null
	,blur: null
	,samplingKind: null
	,power: null
	,bias: null
	,pcfQuality: null
	,pcfScale: null
	,set_size: function(s) {
		if(s != this.size && this.staticTexture != null) {
			this.staticTexture.dispose();
			this.staticTexture = null;
		}
		return this.size = s;
	}
	,getShadowProj: function() {
		return this.lightCamera.m;
	}
	,isUsingWorldDist: function() {
		return false;
	}
	,getOutputs: function() {
		if(this.isUsingWorldDist()) {
			return [hxsl_Output.Swiz(hxsl_Output.Value("output.worldDist",1),[hxsl_Component.X,hxsl_Component.X,hxsl_Component.X,hxsl_Component.X])];
		}
		if(this.format == h3d_mat_Texture.nativeFormat) {
			return [hxsl_Output.PackFloat(hxsl_Output.Value("output.depth"))];
		}
		return [hxsl_Output.Swiz(hxsl_Output.Value("output.depth",1),[hxsl_Component.X,hxsl_Component.X,hxsl_Component.X,hxsl_Component.X])];
	}
	,createDefaultShadowMap: function() {
		var tex = h3d_mat_Texture.fromColor(16777215);
		tex.name = "defaultShadowMap";
		return tex;
	}
	,syncShader: function(texture) {
	}
	,filterPasses: function(passes) {
		if(!this.ctx.computingStatic) {
			switch(this.mode._hx_index) {
			case 0:
				return false;
			case 1:
				var tmp;
				if(this.staticTexture != null) {
					var _this = this.staticTexture;
					tmp = _this.isDepth() ? _this.t == null : _this.t == null && _this.realloc == null;
				} else {
					tmp = true;
				}
				if(tmp) {
					this.staticTexture = this.createDefaultShadowMap();
				}
				this.syncShader(this.staticTexture);
				return false;
			case 2:
				return true;
			case 3:
				var tmp;
				if(this.staticTexture != null) {
					var _this = this.staticTexture;
					tmp = _this.isDepth() ? _this.t == null : _this.t == null && _this.realloc == null;
				} else {
					tmp = true;
				}
				if(tmp) {
					this.staticTexture = this.createDefaultShadowMap();
				}
				var head = null;
				var prev = null;
				var disc = passes.discarded;
				var discQueue = passes.lastDisc;
				var cur = passes.current;
				while(cur != null) {
					if(cur.pass.isStatic == false) {
						if(head == null) {
							prev = cur;
							head = prev;
						} else {
							prev.next = cur;
							prev = cur;
						}
					} else if(disc == null) {
						discQueue = cur;
						disc = discQueue;
					} else {
						discQueue.next = cur;
						discQueue = cur;
					}
					cur = cur.next;
				}
				if(prev != null) {
					prev.next = null;
				}
				if(discQueue != null) {
					discQueue.next = null;
				}
				passes.current = head;
				passes.discarded = disc;
				passes.lastDisc = discQueue;
				return true;
			}
		} else {
			switch(this.mode._hx_index) {
			case 0:
				return false;
			case 1:
				var head = null;
				var prev = null;
				var disc = passes.discarded;
				var discQueue = passes.lastDisc;
				var cur = passes.current;
				while(cur != null) {
					if(cur.pass.isStatic == true) {
						if(head == null) {
							prev = cur;
							head = prev;
						} else {
							prev.next = cur;
							prev = cur;
						}
					} else if(disc == null) {
						discQueue = cur;
						disc = discQueue;
					} else {
						discQueue.next = cur;
						discQueue = cur;
					}
					cur = cur.next;
				}
				if(prev != null) {
					prev.next = null;
				}
				if(discQueue != null) {
					discQueue.next = null;
				}
				passes.current = head;
				passes.discarded = disc;
				passes.lastDisc = discQueue;
				return true;
			case 2:
				return false;
			case 3:
				var head = null;
				var prev = null;
				var disc = passes.discarded;
				var discQueue = passes.lastDisc;
				var cur = passes.current;
				while(cur != null) {
					if(cur.pass.isStatic == true) {
						if(head == null) {
							prev = cur;
							head = prev;
						} else {
							prev.next = cur;
							prev = cur;
						}
					} else if(disc == null) {
						discQueue = cur;
						disc = discQueue;
					} else {
						discQueue.next = cur;
						discQueue = cur;
					}
					cur = cur.next;
				}
				if(prev != null) {
					prev.next = null;
				}
				if(discQueue != null) {
					discQueue.next = null;
				}
				passes.current = head;
				passes.discarded = disc;
				passes.lastDisc = discQueue;
				return true;
			}
		}
	}
	,__class__: h3d_pass_Shadows
	,__properties__: {set_size:"set_size"}
});
var h3d_pass_DirShadowMap = function(light) {
	this.minDist = -1.0;
	this.maxDist = -1.0;
	this.autoZPlanes = false;
	this.autoShrink = true;
	this.mergePass = new h3d_pass_ScreenFx(new h3d_shader_MinMaxShader());
	h3d_pass_Shadows.call(this,light);
	this.lightCamera = new h3d_Camera();
	this.lightCamera.orthoBounds = new h3d_col_Bounds();
	this.shader = this.dshader = new h3d_shader_DirShadow();
	this.border = new h3d_pass_Border(this.size,this.size);
};
$hxClasses["h3d.pass.DirShadowMap"] = h3d_pass_DirShadowMap;
h3d_pass_DirShadowMap.__name__ = "h3d.pass.DirShadowMap";
h3d_pass_DirShadowMap.__super__ = h3d_pass_Shadows;
h3d_pass_DirShadowMap.prototype = $extend(h3d_pass_Shadows.prototype,{
	depth: null
	,dshader: null
	,border: null
	,mergePass: null
	,boundingObject: null
	,autoShrink: null
	,autoZPlanes: null
	,maxDist: null
	,minDist: null
	,set_mode: function(m) {
		var _this = this.dshader;
		_this.constModified = true;
		_this.enable__ = m != h3d_pass_RenderMode.None;
		return this.mode = m;
	}
	,set_size: function(s) {
		if(this.border != null && this.size != s) {
			this.border.dispose();
			this.border = new h3d_pass_Border(s,s);
		}
		return h3d_pass_Shadows.prototype.set_size.call(this,s);
	}
	,calcShadowBounds: function(camera) {
		var _gthis = this;
		var bounds = camera.orthoBounds;
		var zMax = -1e9;
		var zMin = 1e9;
		if(this.autoShrink) {
			var mtmp = new h3d_Matrix();
			var identity = h3d_Matrix.I();
			var btmp = this.autoZPlanes ? new h3d_col_Bounds() : null;
			var obj = this.boundingObject != null ? this.boundingObject : this.ctx.scene;
			obj.iterVisibleMeshes(function(m) {
				if(m.primitive == null || !m.material.castShadows) {
					return;
				}
				var b = m.primitive.getBounds();
				if(b.xMin > b.xMax) {
					return;
				}
				var absPos = ((m.primitive) instanceof h3d_prim_Instanced) ? identity : m.getAbsPos();
				if(_gthis.autoZPlanes) {
					btmp.load(b);
					btmp.transform(absPos);
					if(btmp.zMax > zMax) {
						zMax = btmp.zMax;
					}
					if(btmp.zMin < zMin) {
						zMin = btmp.zMin;
					}
				}
				mtmp.multiply3x4(absPos,camera.mcam);
				var x = b.xMin;
				var y = b.yMin;
				var z = b.zMin;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMin;
				var y = b.yMin;
				var z = b.zMax;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMin;
				var y = b.yMax;
				var z = b.zMin;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMin;
				var y = b.yMax;
				var z = b.zMax;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMax;
				var y = b.yMin;
				var z = b.zMin;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMax;
				var y = b.yMin;
				var z = b.zMax;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMax;
				var y = b.yMax;
				var z = b.zMin;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
				var x = b.xMax;
				var y = b.yMax;
				var z = b.zMax;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p_x = x;
				var p_y = y;
				var p_z = z;
				var px = p_x * mtmp._11 + p_y * mtmp._21 + p_z * mtmp._31 + mtmp._41;
				var py = p_x * mtmp._12 + p_y * mtmp._22 + p_z * mtmp._32 + mtmp._42;
				var pz = p_x * mtmp._13 + p_y * mtmp._23 + p_z * mtmp._33 + mtmp._43;
				p_x = px;
				p_y = py;
				p_z = pz;
				if(p_x < bounds.xMin) {
					bounds.xMin = p_x;
				}
				if(p_x > bounds.xMax) {
					bounds.xMax = p_x;
				}
				if(p_y < bounds.yMin) {
					bounds.yMin = p_y;
				}
				if(p_y > bounds.yMax) {
					bounds.yMax = p_y;
				}
				if(p_z < bounds.zMin) {
					bounds.zMin = p_z;
				}
				if(p_z > bounds.zMax) {
					bounds.zMax = p_z;
				}
			});
		} else if(this.mode == h3d_pass_RenderMode.Dynamic) {
			bounds.xMin = -1e20;
			bounds.xMax = 1e20;
			bounds.yMin = -1e20;
			bounds.yMax = 1e20;
			bounds.zMin = -1e20;
			bounds.zMax = 1e20;
		}
		if(this.mode == h3d_pass_RenderMode.Dynamic) {
			var cameraBounds = new h3d_col_Bounds();
			var minDist = this.minDist < 0 ? this.ctx.camera.zNear : this.minDist;
			var maxDist = this.maxDist < 0 ? this.ctx.camera.zFar : this.maxDist;
			var dist = minDist;
			var _this = _gthis.ctx.camera.unproject(-1,-1,_gthis.ctx.camera.distanceToDepth(dist));
			var x = _this.x;
			var y = _this.y;
			var z = _this.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var pt_x = x;
			var pt_y = y;
			var pt_z = z;
			if(_gthis.autoShrink && _gthis.autoZPlanes) {
				var _this = _gthis.ctx.camera.pos;
				var x = _this.x;
				var y = _this.y;
				var z = _this.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p1_x = x;
				var p1_y = y;
				var p1_z = z;
				var r = new h3d_col_Ray();
				r.px = p1_x;
				r.py = p1_y;
				r.pz = p1_z;
				r.lx = pt_x - p1_x;
				r.ly = pt_y - p1_y;
				r.lz = pt_z - p1_z;
				r.normalize();
				var r1 = r;
				var v = zMax;
				if(v == null) {
					v = 0.0;
				}
				var p_nx = 0;
				var p_ny = 0;
				var p_nz = 1;
				var p_d = v;
				var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
				var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
				var d2 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
				var k = 1;
				if(d2 > 0 && d2 * k > dist * k) {
					var x = r1.px + d2 * r1.lx;
					var y = r1.py + d2 * r1.ly;
					var z = r1.pz + d2 * r1.lz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					pt_x = p_x;
					pt_y = p_y;
					pt_z = p_z;
				}
			}
			var m = camera.mcam;
			var px = pt_x * m._11 + pt_y * m._21 + pt_z * m._31 + m._41;
			var py = pt_x * m._12 + pt_y * m._22 + pt_z * m._32 + m._42;
			var pz = pt_x * m._13 + pt_y * m._23 + pt_z * m._33 + m._43;
			pt_x = px;
			pt_y = py;
			pt_z = pz;
			var x = pt_x;
			var y = pt_y;
			var z = pt_z;
			if(x < cameraBounds.xMin) {
				cameraBounds.xMin = x;
			}
			if(x > cameraBounds.xMax) {
				cameraBounds.xMax = x;
			}
			if(y < cameraBounds.yMin) {
				cameraBounds.yMin = y;
			}
			if(y > cameraBounds.yMax) {
				cameraBounds.yMax = y;
			}
			if(z < cameraBounds.zMin) {
				cameraBounds.zMin = z;
			}
			if(z > cameraBounds.zMax) {
				cameraBounds.zMax = z;
			}
			var dist = minDist;
			var _this = _gthis.ctx.camera.unproject(-1,1,_gthis.ctx.camera.distanceToDepth(dist));
			var x = _this.x;
			var y = _this.y;
			var z = _this.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var pt_x = x;
			var pt_y = y;
			var pt_z = z;
			if(_gthis.autoShrink && _gthis.autoZPlanes) {
				var _this = _gthis.ctx.camera.pos;
				var x = _this.x;
				var y = _this.y;
				var z = _this.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p1_x = x;
				var p1_y = y;
				var p1_z = z;
				var r = new h3d_col_Ray();
				r.px = p1_x;
				r.py = p1_y;
				r.pz = p1_z;
				r.lx = pt_x - p1_x;
				r.ly = pt_y - p1_y;
				r.lz = pt_z - p1_z;
				r.normalize();
				var r1 = r;
				var v = zMax;
				if(v == null) {
					v = 0.0;
				}
				var p_nx = 0;
				var p_ny = 0;
				var p_nz = 1;
				var p_d = v;
				var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
				var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
				var d2 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
				var k = 1;
				if(d2 > 0 && d2 * k > dist * k) {
					var x = r1.px + d2 * r1.lx;
					var y = r1.py + d2 * r1.ly;
					var z = r1.pz + d2 * r1.lz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					pt_x = p_x;
					pt_y = p_y;
					pt_z = p_z;
				}
			}
			var m = camera.mcam;
			var px = pt_x * m._11 + pt_y * m._21 + pt_z * m._31 + m._41;
			var py = pt_x * m._12 + pt_y * m._22 + pt_z * m._32 + m._42;
			var pz = pt_x * m._13 + pt_y * m._23 + pt_z * m._33 + m._43;
			pt_x = px;
			pt_y = py;
			pt_z = pz;
			var x = pt_x;
			var y = pt_y;
			var z = pt_z;
			if(x < cameraBounds.xMin) {
				cameraBounds.xMin = x;
			}
			if(x > cameraBounds.xMax) {
				cameraBounds.xMax = x;
			}
			if(y < cameraBounds.yMin) {
				cameraBounds.yMin = y;
			}
			if(y > cameraBounds.yMax) {
				cameraBounds.yMax = y;
			}
			if(z < cameraBounds.zMin) {
				cameraBounds.zMin = z;
			}
			if(z > cameraBounds.zMax) {
				cameraBounds.zMax = z;
			}
			var dist = minDist;
			var _this = _gthis.ctx.camera.unproject(1,-1,_gthis.ctx.camera.distanceToDepth(dist));
			var x = _this.x;
			var y = _this.y;
			var z = _this.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var pt_x = x;
			var pt_y = y;
			var pt_z = z;
			if(_gthis.autoShrink && _gthis.autoZPlanes) {
				var _this = _gthis.ctx.camera.pos;
				var x = _this.x;
				var y = _this.y;
				var z = _this.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p1_x = x;
				var p1_y = y;
				var p1_z = z;
				var r = new h3d_col_Ray();
				r.px = p1_x;
				r.py = p1_y;
				r.pz = p1_z;
				r.lx = pt_x - p1_x;
				r.ly = pt_y - p1_y;
				r.lz = pt_z - p1_z;
				r.normalize();
				var r1 = r;
				var v = zMax;
				if(v == null) {
					v = 0.0;
				}
				var p_nx = 0;
				var p_ny = 0;
				var p_nz = 1;
				var p_d = v;
				var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
				var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
				var d2 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
				var k = 1;
				if(d2 > 0 && d2 * k > dist * k) {
					var x = r1.px + d2 * r1.lx;
					var y = r1.py + d2 * r1.ly;
					var z = r1.pz + d2 * r1.lz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					pt_x = p_x;
					pt_y = p_y;
					pt_z = p_z;
				}
			}
			var m = camera.mcam;
			var px = pt_x * m._11 + pt_y * m._21 + pt_z * m._31 + m._41;
			var py = pt_x * m._12 + pt_y * m._22 + pt_z * m._32 + m._42;
			var pz = pt_x * m._13 + pt_y * m._23 + pt_z * m._33 + m._43;
			pt_x = px;
			pt_y = py;
			pt_z = pz;
			var x = pt_x;
			var y = pt_y;
			var z = pt_z;
			if(x < cameraBounds.xMin) {
				cameraBounds.xMin = x;
			}
			if(x > cameraBounds.xMax) {
				cameraBounds.xMax = x;
			}
			if(y < cameraBounds.yMin) {
				cameraBounds.yMin = y;
			}
			if(y > cameraBounds.yMax) {
				cameraBounds.yMax = y;
			}
			if(z < cameraBounds.zMin) {
				cameraBounds.zMin = z;
			}
			if(z > cameraBounds.zMax) {
				cameraBounds.zMax = z;
			}
			var dist = minDist;
			var _this = _gthis.ctx.camera.unproject(1,1,_gthis.ctx.camera.distanceToDepth(dist));
			var x = _this.x;
			var y = _this.y;
			var z = _this.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var pt_x = x;
			var pt_y = y;
			var pt_z = z;
			if(_gthis.autoShrink && _gthis.autoZPlanes) {
				var _this = _gthis.ctx.camera.pos;
				var x = _this.x;
				var y = _this.y;
				var z = _this.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p1_x = x;
				var p1_y = y;
				var p1_z = z;
				var r = new h3d_col_Ray();
				r.px = p1_x;
				r.py = p1_y;
				r.pz = p1_z;
				r.lx = pt_x - p1_x;
				r.ly = pt_y - p1_y;
				r.lz = pt_z - p1_z;
				r.normalize();
				var r1 = r;
				var v = zMax;
				if(v == null) {
					v = 0.0;
				}
				var p_nx = 0;
				var p_ny = 0;
				var p_nz = 1;
				var p_d = v;
				var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
				var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
				var d2 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
				var k = 1;
				if(d2 > 0 && d2 * k > dist * k) {
					var x = r1.px + d2 * r1.lx;
					var y = r1.py + d2 * r1.ly;
					var z = r1.pz + d2 * r1.lz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					pt_x = p_x;
					pt_y = p_y;
					pt_z = p_z;
				}
			}
			var m = camera.mcam;
			var px = pt_x * m._11 + pt_y * m._21 + pt_z * m._31 + m._41;
			var py = pt_x * m._12 + pt_y * m._22 + pt_z * m._32 + m._42;
			var pz = pt_x * m._13 + pt_y * m._23 + pt_z * m._33 + m._43;
			pt_x = px;
			pt_y = py;
			pt_z = pz;
			var x = pt_x;
			var y = pt_y;
			var z = pt_z;
			if(x < cameraBounds.xMin) {
				cameraBounds.xMin = x;
			}
			if(x > cameraBounds.xMax) {
				cameraBounds.xMax = x;
			}
			if(y < cameraBounds.yMin) {
				cameraBounds.yMin = y;
			}
			if(y > cameraBounds.yMax) {
				cameraBounds.yMax = y;
			}
			if(z < cameraBounds.zMin) {
				cameraBounds.zMin = z;
			}
			if(z > cameraBounds.zMax) {
				cameraBounds.zMax = z;
			}
			var dist = maxDist;
			var _this = _gthis.ctx.camera.unproject(-1,-1,_gthis.ctx.camera.distanceToDepth(dist));
			var x = _this.x;
			var y = _this.y;
			var z = _this.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var pt_x = x;
			var pt_y = y;
			var pt_z = z;
			if(_gthis.autoShrink && _gthis.autoZPlanes) {
				var _this = _gthis.ctx.camera.pos;
				var x = _this.x;
				var y = _this.y;
				var z = _this.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p1_x = x;
				var p1_y = y;
				var p1_z = z;
				var r = new h3d_col_Ray();
				r.px = p1_x;
				r.py = p1_y;
				r.pz = p1_z;
				r.lx = pt_x - p1_x;
				r.ly = pt_y - p1_y;
				r.lz = pt_z - p1_z;
				r.normalize();
				var r1 = r;
				var v = zMin;
				if(v == null) {
					v = 0.0;
				}
				var p_nx = 0;
				var p_ny = 0;
				var p_nz = 1;
				var p_d = v;
				var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
				var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
				var d2 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
				var k = -1;
				if(d2 > 0 && d2 * k > dist * k) {
					var x = r1.px + d2 * r1.lx;
					var y = r1.py + d2 * r1.ly;
					var z = r1.pz + d2 * r1.lz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					pt_x = p_x;
					pt_y = p_y;
					pt_z = p_z;
				}
			}
			var m = camera.mcam;
			var px = pt_x * m._11 + pt_y * m._21 + pt_z * m._31 + m._41;
			var py = pt_x * m._12 + pt_y * m._22 + pt_z * m._32 + m._42;
			var pz = pt_x * m._13 + pt_y * m._23 + pt_z * m._33 + m._43;
			pt_x = px;
			pt_y = py;
			pt_z = pz;
			var x = pt_x;
			var y = pt_y;
			var z = pt_z;
			if(x < cameraBounds.xMin) {
				cameraBounds.xMin = x;
			}
			if(x > cameraBounds.xMax) {
				cameraBounds.xMax = x;
			}
			if(y < cameraBounds.yMin) {
				cameraBounds.yMin = y;
			}
			if(y > cameraBounds.yMax) {
				cameraBounds.yMax = y;
			}
			if(z < cameraBounds.zMin) {
				cameraBounds.zMin = z;
			}
			if(z > cameraBounds.zMax) {
				cameraBounds.zMax = z;
			}
			var dist = maxDist;
			var _this = _gthis.ctx.camera.unproject(-1,1,_gthis.ctx.camera.distanceToDepth(dist));
			var x = _this.x;
			var y = _this.y;
			var z = _this.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var pt_x = x;
			var pt_y = y;
			var pt_z = z;
			if(_gthis.autoShrink && _gthis.autoZPlanes) {
				var _this = _gthis.ctx.camera.pos;
				var x = _this.x;
				var y = _this.y;
				var z = _this.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p1_x = x;
				var p1_y = y;
				var p1_z = z;
				var r = new h3d_col_Ray();
				r.px = p1_x;
				r.py = p1_y;
				r.pz = p1_z;
				r.lx = pt_x - p1_x;
				r.ly = pt_y - p1_y;
				r.lz = pt_z - p1_z;
				r.normalize();
				var r1 = r;
				var v = zMin;
				if(v == null) {
					v = 0.0;
				}
				var p_nx = 0;
				var p_ny = 0;
				var p_nz = 1;
				var p_d = v;
				var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
				var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
				var d2 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
				var k = -1;
				if(d2 > 0 && d2 * k > dist * k) {
					var x = r1.px + d2 * r1.lx;
					var y = r1.py + d2 * r1.ly;
					var z = r1.pz + d2 * r1.lz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					pt_x = p_x;
					pt_y = p_y;
					pt_z = p_z;
				}
			}
			var m = camera.mcam;
			var px = pt_x * m._11 + pt_y * m._21 + pt_z * m._31 + m._41;
			var py = pt_x * m._12 + pt_y * m._22 + pt_z * m._32 + m._42;
			var pz = pt_x * m._13 + pt_y * m._23 + pt_z * m._33 + m._43;
			pt_x = px;
			pt_y = py;
			pt_z = pz;
			var x = pt_x;
			var y = pt_y;
			var z = pt_z;
			if(x < cameraBounds.xMin) {
				cameraBounds.xMin = x;
			}
			if(x > cameraBounds.xMax) {
				cameraBounds.xMax = x;
			}
			if(y < cameraBounds.yMin) {
				cameraBounds.yMin = y;
			}
			if(y > cameraBounds.yMax) {
				cameraBounds.yMax = y;
			}
			if(z < cameraBounds.zMin) {
				cameraBounds.zMin = z;
			}
			if(z > cameraBounds.zMax) {
				cameraBounds.zMax = z;
			}
			var dist = maxDist;
			var _this = _gthis.ctx.camera.unproject(1,-1,_gthis.ctx.camera.distanceToDepth(dist));
			var x = _this.x;
			var y = _this.y;
			var z = _this.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var pt_x = x;
			var pt_y = y;
			var pt_z = z;
			if(_gthis.autoShrink && _gthis.autoZPlanes) {
				var _this = _gthis.ctx.camera.pos;
				var x = _this.x;
				var y = _this.y;
				var z = _this.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p1_x = x;
				var p1_y = y;
				var p1_z = z;
				var r = new h3d_col_Ray();
				r.px = p1_x;
				r.py = p1_y;
				r.pz = p1_z;
				r.lx = pt_x - p1_x;
				r.ly = pt_y - p1_y;
				r.lz = pt_z - p1_z;
				r.normalize();
				var r1 = r;
				var v = zMin;
				if(v == null) {
					v = 0.0;
				}
				var p_nx = 0;
				var p_ny = 0;
				var p_nz = 1;
				var p_d = v;
				var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
				var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
				var d2 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
				var k = -1;
				if(d2 > 0 && d2 * k > dist * k) {
					var x = r1.px + d2 * r1.lx;
					var y = r1.py + d2 * r1.ly;
					var z = r1.pz + d2 * r1.lz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					pt_x = p_x;
					pt_y = p_y;
					pt_z = p_z;
				}
			}
			var m = camera.mcam;
			var px = pt_x * m._11 + pt_y * m._21 + pt_z * m._31 + m._41;
			var py = pt_x * m._12 + pt_y * m._22 + pt_z * m._32 + m._42;
			var pz = pt_x * m._13 + pt_y * m._23 + pt_z * m._33 + m._43;
			pt_x = px;
			pt_y = py;
			pt_z = pz;
			var x = pt_x;
			var y = pt_y;
			var z = pt_z;
			if(x < cameraBounds.xMin) {
				cameraBounds.xMin = x;
			}
			if(x > cameraBounds.xMax) {
				cameraBounds.xMax = x;
			}
			if(y < cameraBounds.yMin) {
				cameraBounds.yMin = y;
			}
			if(y > cameraBounds.yMax) {
				cameraBounds.yMax = y;
			}
			if(z < cameraBounds.zMin) {
				cameraBounds.zMin = z;
			}
			if(z > cameraBounds.zMax) {
				cameraBounds.zMax = z;
			}
			var dist = maxDist;
			var _this = _gthis.ctx.camera.unproject(1,1,_gthis.ctx.camera.distanceToDepth(dist));
			var x = _this.x;
			var y = _this.y;
			var z = _this.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var pt_x = x;
			var pt_y = y;
			var pt_z = z;
			if(_gthis.autoShrink && _gthis.autoZPlanes) {
				var _this = _gthis.ctx.camera.pos;
				var x = _this.x;
				var y = _this.y;
				var z = _this.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				var p1_x = x;
				var p1_y = y;
				var p1_z = z;
				var r = new h3d_col_Ray();
				r.px = p1_x;
				r.py = p1_y;
				r.pz = p1_z;
				r.lx = pt_x - p1_x;
				r.ly = pt_y - p1_y;
				r.lz = pt_z - p1_z;
				r.normalize();
				var r1 = r;
				var v = zMin;
				if(v == null) {
					v = 0.0;
				}
				var p_nx = 0;
				var p_ny = 0;
				var p_nz = 1;
				var p_d = v;
				var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
				var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
				var d2 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
				var k = -1;
				if(d2 > 0 && d2 * k > dist * k) {
					var x = r1.px + d2 * r1.lx;
					var y = r1.py + d2 * r1.ly;
					var z = r1.pz + d2 * r1.lz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					pt_x = p_x;
					pt_y = p_y;
					pt_z = p_z;
				}
			}
			var m = camera.mcam;
			var px = pt_x * m._11 + pt_y * m._21 + pt_z * m._31 + m._41;
			var py = pt_x * m._12 + pt_y * m._22 + pt_z * m._32 + m._42;
			var pz = pt_x * m._13 + pt_y * m._23 + pt_z * m._33 + m._43;
			pt_x = px;
			pt_y = py;
			pt_z = pz;
			var x = pt_x;
			var y = pt_y;
			var z = pt_z;
			if(x < cameraBounds.xMin) {
				cameraBounds.xMin = x;
			}
			if(x > cameraBounds.xMax) {
				cameraBounds.xMax = x;
			}
			if(y < cameraBounds.yMin) {
				cameraBounds.yMin = y;
			}
			if(y > cameraBounds.yMax) {
				cameraBounds.yMax = y;
			}
			if(z < cameraBounds.zMin) {
				cameraBounds.zMin = z;
			}
			if(z > cameraBounds.zMax) {
				cameraBounds.zMax = z;
			}
			if(this.autoShrink) {
				cameraBounds.zMin = bounds.zMin;
				bounds.intersection(bounds,cameraBounds);
				if(this.autoZPlanes) {
					var _this = camera.target;
					var v = camera.pos;
					var x = _this.x - v.x;
					var y = _this.y - v.y;
					var z = _this.z - v.z;
					var w = _this.w - v.w;
					if(w == null) {
						w = 1.;
					}
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var _this_x = x;
					var _this_y = y;
					var _this_z = z;
					var _this_w = w;
					var k = _this_x * _this_x + _this_y * _this_y + _this_z * _this_z;
					if(k < 1e-10) {
						k = 0;
					} else {
						k = 1. / Math.sqrt(k);
					}
					var x = _this_x * k;
					var y = _this_y * k;
					var z = _this_z * k;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var v_x = x;
					var v_y = y;
					var v_z = z;
					var v_w = 1.;
					var dMin = 1e9;
					var px = bounds.xMin;
					var py = bounds.yMin;
					var x = px;
					var y = py;
					var z = bounds.zMin;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var _this_x = x;
					var _this_y = y;
					var _this_z = z;
					var m = camera.getInverseView();
					var px = _this_x * m._11 + _this_y * m._21 + _this_z * m._31 + m._41;
					var py = _this_x * m._12 + _this_y * m._22 + _this_z * m._32 + m._42;
					var pz = _this_x * m._13 + _this_y * m._23 + _this_z * m._33 + m._43;
					var x = px;
					var y = py;
					var z = pz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var r0_x = x;
					var r0_y = y;
					var r0_z = z;
					var r = new h3d_col_Ray();
					r.px = r0_x;
					r.py = r0_y;
					r.pz = r0_z;
					r.lx = v_x;
					r.ly = v_y;
					r.lz = v_z;
					r.normalize();
					var r1 = r;
					var v = zMax;
					if(v == null) {
						v = 0.0;
					}
					var p_nx = 0;
					var p_ny = 0;
					var p_nz = 1;
					var p_d = v;
					var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
					var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
					var d1 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
					if(d1 < dMin) {
						dMin = d1;
					}
					var px = bounds.xMin;
					var py = bounds.yMax;
					var x = px;
					var y = py;
					var z = bounds.zMin;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var _this_x = x;
					var _this_y = y;
					var _this_z = z;
					var m = camera.getInverseView();
					var px = _this_x * m._11 + _this_y * m._21 + _this_z * m._31 + m._41;
					var py = _this_x * m._12 + _this_y * m._22 + _this_z * m._32 + m._42;
					var pz = _this_x * m._13 + _this_y * m._23 + _this_z * m._33 + m._43;
					var x = px;
					var y = py;
					var z = pz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var r0_x = x;
					var r0_y = y;
					var r0_z = z;
					var r = new h3d_col_Ray();
					r.px = r0_x;
					r.py = r0_y;
					r.pz = r0_z;
					r.lx = v_x;
					r.ly = v_y;
					r.lz = v_z;
					r.normalize();
					var r1 = r;
					var v = zMax;
					if(v == null) {
						v = 0.0;
					}
					var p_nx = 0;
					var p_ny = 0;
					var p_nz = 1;
					var p_d = v;
					var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
					var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
					var d1 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
					if(d1 < dMin) {
						dMin = d1;
					}
					var px = bounds.xMax;
					var py = bounds.yMin;
					var x = px;
					var y = py;
					var z = bounds.zMin;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var _this_x = x;
					var _this_y = y;
					var _this_z = z;
					var m = camera.getInverseView();
					var px = _this_x * m._11 + _this_y * m._21 + _this_z * m._31 + m._41;
					var py = _this_x * m._12 + _this_y * m._22 + _this_z * m._32 + m._42;
					var pz = _this_x * m._13 + _this_y * m._23 + _this_z * m._33 + m._43;
					var x = px;
					var y = py;
					var z = pz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var r0_x = x;
					var r0_y = y;
					var r0_z = z;
					var r = new h3d_col_Ray();
					r.px = r0_x;
					r.py = r0_y;
					r.pz = r0_z;
					r.lx = v_x;
					r.ly = v_y;
					r.lz = v_z;
					r.normalize();
					var r1 = r;
					var v = zMax;
					if(v == null) {
						v = 0.0;
					}
					var p_nx = 0;
					var p_ny = 0;
					var p_nz = 1;
					var p_d = v;
					var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
					var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
					var d1 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
					if(d1 < dMin) {
						dMin = d1;
					}
					var px = bounds.xMax;
					var py = bounds.yMax;
					var x = px;
					var y = py;
					var z = bounds.zMin;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var _this_x = x;
					var _this_y = y;
					var _this_z = z;
					var m = camera.getInverseView();
					var px = _this_x * m._11 + _this_y * m._21 + _this_z * m._31 + m._41;
					var py = _this_x * m._12 + _this_y * m._22 + _this_z * m._32 + m._42;
					var pz = _this_x * m._13 + _this_y * m._23 + _this_z * m._33 + m._43;
					var x = px;
					var y = py;
					var z = pz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var r0_x = x;
					var r0_y = y;
					var r0_z = z;
					var r = new h3d_col_Ray();
					r.px = r0_x;
					r.py = r0_y;
					r.pz = r0_z;
					r.lx = v_x;
					r.ly = v_y;
					r.lz = v_z;
					r.normalize();
					var r1 = r;
					var v = zMax;
					if(v == null) {
						v = 0.0;
					}
					var p_nx = 0;
					var p_ny = 0;
					var p_nz = 1;
					var p_d = v;
					var d = r1.lx * p_nx + r1.ly * p_ny + r1.lz * p_nz;
					var nd = p_d - (r1.px * p_nx + r1.py * p_ny + r1.pz * p_nz);
					var d1 = (d < 0 ? -d : d) < 1e-10 ? (nd < 0 ? -nd : nd) < 1e-10 ? 0. : -1 : nd / d;
					if(d1 < dMin) {
						dMin = d1;
					}
					bounds.zMin += dMin;
				}
			} else {
				bounds.load(cameraBounds);
			}
		}
		bounds.scaleCenter(1.01);
	}
	,setGlobals: function() {
		h3d_pass_Shadows.prototype.setGlobals.call(this);
		var v = this.getShadowProj();
		this.manager.globals.map.h[this.cameraViewProj_id] = v;
	}
	,syncShader: function(texture) {
		var _this = this.dshader;
		_this.constModified = true;
		_this.shadowMap__ = texture;
		var _this = this.dshader;
		_this.constModified = true;
		_this.shadowMapChannel__ = this.format == h3d_mat_Texture.nativeFormat ? hxsl_Channel.PackedFloat : hxsl_Channel.R;
		this.dshader.shadowBias__ = this.bias;
		this.dshader.shadowPower__ = this.power;
		this.dshader.shadowProj__ = this.getShadowProj();
		var _this = this.dshader;
		_this.constModified = true;
		_this.USE_ESM__ = this.samplingKind == h3d_pass_ShadowSamplingKind.ESM;
		this.dshader.shadowPower__ = this.power;
		var _this = this.dshader;
		_this.constModified = true;
		_this.USE_PCF__ = this.samplingKind == h3d_pass_ShadowSamplingKind.PCF;
		var _this = this.dshader.shadowRes__;
		var x = texture.width;
		var y = texture.height;
		if(y == null) {
			y = 0.;
		}
		if(x == null) {
			x = 0.;
		}
		_this.x = x;
		_this.y = y;
		_this.z = 0.;
		_this.w = 1.;
		this.dshader.pcfScale__ = this.pcfScale;
		this.dshader.set_pcfQuality(this.pcfQuality);
	}
	,processShadowMap: function(passes,tex,sort) {
		if(tex.isDepth()) {
			this.ctx.engine.pushDepth(tex);
		} else {
			this.ctx.engine.pushTarget(tex);
		}
		this.ctx.engine.clear(16777215,1.0);
		h3d_pass_Shadows.prototype.draw.call(this,passes,sort);
		var doBlur = this.blur.radius > 0 && (this.mode != h3d_pass_RenderMode.Mixed || !this.ctx.computingStatic);
		if(this.border != null && !doBlur) {
			this.border.render();
		}
		this.ctx.engine.popTarget();
		if(this.mode == h3d_pass_RenderMode.Mixed && !this.ctx.computingStatic) {
			var merge = this.ctx.textures.allocTarget("mergedDirShadowMap",this.size,this.size,false,this.format);
			this.mergePass.shader.texA__ = tex;
			this.mergePass.shader.texB__ = this.staticTexture;
			this.ctx.engine.pushTarget(merge);
			this.mergePass.render();
			this.ctx.engine.popTarget();
			tex = merge;
		}
		if(doBlur) {
			if(tex.isDepth()) {
				var tmp = this.ctx.textures.allocTarget("dirShadowMapFloat",this.size,this.size,false,this.format);
				h3d_pass_Copy.run(tex,tmp);
				tex = tmp;
			}
			this.blur.apply(this.ctx,tex);
			if(this.border != null) {
				this.ctx.engine.pushTarget(tex);
				this.border.render();
				this.ctx.engine.popTarget();
			}
		}
		return tex;
	}
	,draw: function(passes,sort) {
		var _gthis = this;
		if(!this.enabled) {
			return;
		}
		if(!this.filterPasses(passes)) {
			return;
		}
		if(this.mode != h3d_pass_RenderMode.Mixed || this.ctx.computingStatic) {
			var ct = this.ctx.camera.target;
			var slight = this.light == null ? this.ctx.lightSystem.shadowLight : this.light;
			var ldir = slight == null ? null : slight.getShadowDirection();
			if(ldir == null) {
				var _this = this.lightCamera.target;
				var x = 0;
				var y = 0;
				var z = -1;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = 1.;
			} else {
				var _this = this.lightCamera.target;
				var x = ldir.x;
				var y = ldir.y;
				var z = ldir.z;
				if(z == null) {
					z = 0.;
				}
				if(y == null) {
					y = 0.;
				}
				if(x == null) {
					x = 0.;
				}
				_this.x = x;
				_this.y = y;
				_this.z = z;
				_this.w = 1.;
				var _this = this.lightCamera.target;
				var k = _this.x * _this.x + _this.y * _this.y + _this.z * _this.z;
				if(k < 1e-10) {
					k = 0;
				} else {
					k = 1. / Math.sqrt(k);
				}
				_this.x *= k;
				_this.y *= k;
				_this.z *= k;
			}
			this.lightCamera.target.x += ct.x;
			this.lightCamera.target.y += ct.y;
			this.lightCamera.target.z += ct.z;
			var _this = this.lightCamera.pos;
			_this.x = ct.x;
			_this.y = ct.y;
			_this.z = ct.z;
			_this.w = ct.w;
			this.lightCamera.update();
			var _this = this.lightCamera.orthoBounds;
			_this.xMin = 1e20;
			_this.xMax = -1e20;
			_this.yMin = 1e20;
			_this.yMax = -1e20;
			_this.zMin = 1e20;
			_this.zMax = -1e20;
			if(passes.current != null) {
				this.calcShadowBounds(this.lightCamera);
			}
			this.lightCamera.update();
		}
		var f = function(col) {
			return col.inFrustum(_gthis.lightCamera.frustum);
		};
		var prevCollider = null;
		var prevResult = true;
		var head = null;
		var prev = null;
		var disc = passes.discarded;
		var discQueue = passes.lastDisc;
		var cur = passes.current;
		while(cur != null) {
			var col = cur.obj.cullingCollider;
			var tmp;
			if(col == null) {
				tmp = true;
			} else {
				if(col != prevCollider) {
					prevCollider = col;
					prevResult = f(col);
				}
				tmp = prevResult;
			}
			if(tmp) {
				if(head == null) {
					prev = cur;
					head = prev;
				} else {
					prev.next = cur;
					prev = cur;
				}
			} else if(disc == null) {
				discQueue = cur;
				disc = discQueue;
			} else {
				discQueue.next = cur;
				discQueue = cur;
			}
			cur = cur.next;
		}
		if(prev != null) {
			prev.next = null;
		}
		if(discQueue != null) {
			discQueue.next = null;
		}
		passes.current = head;
		passes.discarded = disc;
		passes.lastDisc = discQueue;
		var texture = this.ctx.textures.allocTarget("dirShadowMap",this.size,this.size,false,this.format);
		var tmp;
		if(!(this.depth == null || this.depth.width != this.size || this.depth.height != this.size)) {
			var _this = this.depth;
			tmp = _this.isDepth() ? _this.t == null : _this.t == null && _this.realloc == null;
		} else {
			tmp = true;
		}
		if(tmp) {
			if(this.depth != null) {
				this.depth.dispose();
			}
			this.depth = new h3d_mat_Texture(this.size,this.size,null,hxd_PixelFormat.Depth24Stencil8);
			this.depth.name = "dirShadowMapDepth";
		}
		texture.depthBuffer = this.depth;
		texture = this.processShadowMap(passes,texture,sort);
		this.syncShader(texture);
	}
	,__class__: h3d_pass_DirShadowMap
});
var h3d_pass_DefaultShadowMap = function(size,format) {
	if(size == null) {
		size = 1024;
	}
	if(format != null) {
		this.format = format;
	}
	h3d_pass_DirShadowMap.call(this,null);
	this.set_size(size);
	this.color = new h3d_Vector();
	this.set_mode(h3d_pass_RenderMode.Dynamic);
	this.shadowMapId = hxsl_Globals.allocID("shadow.map");
	this.shadowProjId = hxsl_Globals.allocID("shadow.proj");
	this.shadowColorId = hxsl_Globals.allocID("shadow.color");
	this.shadowPowerId = hxsl_Globals.allocID("shadow.power");
	this.shadowBiasId = hxsl_Globals.allocID("shadow.bias");
};
$hxClasses["h3d.pass.DefaultShadowMap"] = h3d_pass_DefaultShadowMap;
h3d_pass_DefaultShadowMap.__name__ = "h3d.pass.DefaultShadowMap";
h3d_pass_DefaultShadowMap.__super__ = h3d_pass_DirShadowMap;
h3d_pass_DefaultShadowMap.prototype = $extend(h3d_pass_DirShadowMap.prototype,{
	shadowMapId: null
	,shadowProjId: null
	,shadowColorId: null
	,shadowPowerId: null
	,shadowBiasId: null
	,color: null
	,draw: function(passes,sort) {
		h3d_pass_DirShadowMap.prototype.draw.call(this,passes,sort);
		this.ctx.setGlobalID(this.shadowMapId,{ texture : this.dshader.shadowMap__, channel : this.format == h3d_mat_Texture.nativeFormat ? hxsl_Channel.PackedFloat : hxsl_Channel.R});
		this.ctx.setGlobalID(this.shadowProjId,this.getShadowProj());
		this.ctx.setGlobalID(this.shadowColorId,this.color);
		this.ctx.setGlobalID(this.shadowPowerId,this.power);
		this.ctx.setGlobalID(this.shadowBiasId,this.bias);
	}
	,__class__: h3d_pass_DefaultShadowMap
});
var h3d_pass__$HardwarePick_FixedColor = function() {
	this.viewport__ = new h3d_Vector();
	this.colorID__ = new h3d_Vector();
	hxsl_Shader.call(this);
};
$hxClasses["h3d.pass._HardwarePick.FixedColor"] = h3d_pass__$HardwarePick_FixedColor;
h3d_pass__$HardwarePick_FixedColor.__name__ = "h3d.pass._HardwarePick.FixedColor";
h3d_pass__$HardwarePick_FixedColor.__super__ = hxsl_Shader;
h3d_pass__$HardwarePick_FixedColor.prototype = $extend(hxsl_Shader.prototype,{
	colorID__: null
	,get_colorID: function() {
		return this.colorID__;
	}
	,set_colorID: function(_v) {
		return this.colorID__ = _v;
	}
	,viewport__: null
	,get_viewport: function() {
		return this.viewport__;
	}
	,set_viewport: function(_v) {
		return this.viewport__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.colorID__;
		case 1:
			return this.viewport__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_pass__$HardwarePick_FixedColor
	,__properties__: {set_viewport:"set_viewport",get_viewport:"get_viewport",set_colorID:"set_colorID",get_colorID:"get_colorID"}
});
var h3d_pass_PassList = function(current) {
	this.current = current;
	this.discarded = this.lastDisc = null;
};
$hxClasses["h3d.pass.PassList"] = h3d_pass_PassList;
h3d_pass_PassList.__name__ = "h3d.pass.PassList";
h3d_pass_PassList.prototype = {
	current: null
	,discarded: null
	,lastDisc: null
	,__class__: h3d_pass_PassList
};
var h3d_pass_PassObject = function() {
	this.texture = 0;
};
$hxClasses["h3d.pass.PassObject"] = h3d_pass_PassObject;
h3d_pass_PassObject.__name__ = "h3d.pass.PassObject";
h3d_pass_PassObject.prototype = {
	next: null
	,nextAlloc: null
	,pass: null
	,obj: null
	,index: null
	,shaders: null
	,shader: null
	,depth: null
	,texture: null
	,__class__: h3d_pass_PassObject
};
var h3d_pass_ShaderManager = function(output) {
	this.shaderCache = hxsl_Cache.get();
	this.globals = new hxsl_Globals();
	this.currentOutput = new hxsl_ShaderList(null);
	this.setOutput(output);
};
$hxClasses["h3d.pass.ShaderManager"] = h3d_pass_ShaderManager;
h3d_pass_ShaderManager.__name__ = "h3d.pass.ShaderManager";
h3d_pass_ShaderManager.prototype = {
	globals: null
	,shaderCache: null
	,currentOutput: null
	,setOutput: function(output) {
		if(output == null) {
			output = [hxsl_Output.Value("output.color")];
		}
		this.currentOutput.s = this.shaderCache.getLinkShader(output);
	}
	,fillRec: function(v,type,out,pos) {
		switch(type._hx_index) {
		case 1:
			out[pos] = v;
			return 1;
		case 3:
			out[pos] = v;
			return 1;
		case 5:
			var _g = type.t;
			var n = type.size;
			var v1 = v;
			out[pos++] = v1.x;
			out[pos++] = v1.y;
			switch(n) {
			case 3:
				out[pos++] = v1.z;
				break;
			case 4:
				out[pos++] = v1.z;
				out[pos++] = v1.w;
				break;
			}
			return n;
		case 6:
			var m = v;
			out[pos++] = m._11;
			out[pos++] = m._21;
			out[pos++] = m._31;
			out[pos++] = 0;
			out[pos++] = m._12;
			out[pos++] = m._22;
			out[pos++] = m._32;
			out[pos++] = 0;
			out[pos++] = m._13;
			out[pos++] = m._23;
			out[pos++] = m._33;
			out[pos++] = 0;
			return 12;
		case 7:
			var m = v;
			out[pos++] = m._11;
			out[pos++] = m._21;
			out[pos++] = m._31;
			out[pos++] = m._41;
			out[pos++] = m._12;
			out[pos++] = m._22;
			out[pos++] = m._32;
			out[pos++] = m._42;
			out[pos++] = m._13;
			out[pos++] = m._23;
			out[pos++] = m._33;
			out[pos++] = m._43;
			out[pos++] = m._14;
			out[pos++] = m._24;
			out[pos++] = m._34;
			out[pos++] = m._44;
			return 16;
		case 8:
			var m = v;
			out[pos++] = m._11;
			out[pos++] = m._21;
			out[pos++] = m._31;
			out[pos++] = m._41;
			out[pos++] = m._12;
			out[pos++] = m._22;
			out[pos++] = m._32;
			out[pos++] = m._42;
			out[pos++] = m._13;
			out[pos++] = m._23;
			out[pos++] = m._33;
			out[pos++] = m._43;
			return 12;
		case 13:
			var vl = type.vl;
			var tot = 0;
			var _g = 0;
			while(_g < vl.length) {
				var vv = vl[_g];
				++_g;
				tot += this.fillRec(Reflect.field(v,vv.name),vv.type,out,pos + tot);
			}
			return tot;
		case 15:
			var _g = type.t;
			var _g1 = type.size;
			switch(_g._hx_index) {
			case 3:
				if(_g1._hx_index == 0) {
					var len = _g1.v;
					var v1 = v;
					var size = 0;
					var count = v1.length < len ? v1.length : len;
					var _g2 = 0;
					var _g3 = count;
					while(_g2 < _g3) {
						var i = _g2++;
						out[pos++] = v1[i];
					}
					return len;
				} else {
					throw haxe_Exception.thrown("assert " + Std.string(type));
				}
				break;
			case 5:
				if(_g.size == 4) {
					if(_g.t._hx_index == 1) {
						if(_g1._hx_index == 0) {
							var len = _g1.v;
							var v1 = v;
							var _g2 = 0;
							var _g3 = len;
							while(_g2 < _g3) {
								var i = _g2++;
								var n = v1[i];
								if(n == null) {
									break;
								}
								out[pos++] = n.x;
								out[pos++] = n.y;
								out[pos++] = n.z;
								out[pos++] = n.w;
							}
							return len * 4;
						} else {
							throw haxe_Exception.thrown("assert " + Std.string(type));
						}
					} else if(_g1._hx_index == 0) {
						var t = _g;
						var len = _g1.v;
						var v1 = v;
						var size = 0;
						var _g2 = 0;
						var _g3 = len;
						while(_g2 < _g3) {
							var i = _g2++;
							var n = v1[i];
							if(n == null) {
								break;
							}
							size = this.fillRec(n,t,out,pos);
							pos += size;
						}
						return len * size;
					} else {
						throw haxe_Exception.thrown("assert " + Std.string(type));
					}
				} else if(_g1._hx_index == 0) {
					var t = _g;
					var len = _g1.v;
					var v1 = v;
					var size = 0;
					var _g2 = 0;
					var _g3 = len;
					while(_g2 < _g3) {
						var i = _g2++;
						var n = v1[i];
						if(n == null) {
							break;
						}
						size = this.fillRec(n,t,out,pos);
						pos += size;
					}
					return len * size;
				} else {
					throw haxe_Exception.thrown("assert " + Std.string(type));
				}
				break;
			case 8:
				if(_g1._hx_index == 0) {
					var len = _g1.v;
					var v1 = v;
					var _g2 = 0;
					var _g3 = len;
					while(_g2 < _g3) {
						var i = _g2++;
						var m = v1[i];
						if(m == null) {
							break;
						}
						out[pos++] = m._11;
						out[pos++] = m._21;
						out[pos++] = m._31;
						out[pos++] = m._41;
						out[pos++] = m._12;
						out[pos++] = m._22;
						out[pos++] = m._32;
						out[pos++] = m._42;
						out[pos++] = m._13;
						out[pos++] = m._23;
						out[pos++] = m._33;
						out[pos++] = m._43;
					}
					return len * 12;
				} else {
					throw haxe_Exception.thrown("assert " + Std.string(type));
				}
				break;
			default:
				if(_g1._hx_index == 0) {
					var t = _g;
					var len = _g1.v;
					var v1 = v;
					var size = 0;
					var _g = 0;
					var _g1 = len;
					while(_g < _g1) {
						var i = _g++;
						var n = v1[i];
						if(n == null) {
							break;
						}
						size = this.fillRec(n,t,out,pos);
						pos += size;
					}
					return len * size;
				} else {
					throw haxe_Exception.thrown("assert " + Std.string(type));
				}
			}
			break;
		default:
			throw haxe_Exception.thrown("assert " + Std.string(type));
		}
	}
	,shaderInfo: function(shaders,path) {
		var name = path.split(".").pop();
		while(shaders != null) {
			var inst = shaders.s.instance;
			var _g = 0;
			var _g1 = inst.shader.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				if(v.name == name) {
					return shaders.s.toString();
				}
			}
			shaders = shaders.next;
		}
		return "(not found)";
	}
	,fillGlobals: function(buf,s) {
		var _gthis = this;
		var s1 = s.vertex;
		var g = s1.globals;
		var ptr = buf.vertex.globals;
		while(g != null) {
			var v = _gthis.globals.map.h[g.gid];
			if(v == null) {
				if(g.path == "__consts__") {
					_gthis.fillRec(s1.consts,g.type,ptr,g.pos);
					g = g.next;
					continue;
				}
				throw haxe_Exception.thrown("Missing global value " + g.path);
			}
			_gthis.fillRec(v,g.type,ptr,g.pos);
			g = g.next;
		}
		var s1 = s.fragment;
		var g = s1.globals;
		var ptr = buf.fragment.globals;
		while(g != null) {
			var v = _gthis.globals.map.h[g.gid];
			if(v == null) {
				if(g.path == "__consts__") {
					_gthis.fillRec(s1.consts,g.type,ptr,g.pos);
					g = g.next;
					continue;
				}
				throw haxe_Exception.thrown("Missing global value " + g.path);
			}
			_gthis.fillRec(v,g.type,ptr,g.pos);
			g = g.next;
		}
	}
	,fillParams: function(buf,s,shaders) {
		var _gthis = this;
		var curInstance = -1;
		var curInstanceValue = null;
		var buf1 = buf.vertex;
		var s1 = s.vertex;
		var p = s1.params;
		var ptr = buf1.params;
		while(p != null) {
			var v;
			if(p.perObjectGlobal == null) {
				if(p.type == hxsl_Type.TFloat) {
					var index = p.instance;
					var i;
					if(curInstance == index) {
						i = curInstanceValue;
					} else {
						var si = shaders;
						curInstance = index;
						while(--index > 0) si = si.next;
						curInstanceValue = si.s;
						i = curInstanceValue;
					}
					ptr[p.pos] = i.getParamFloatValue(p.index);
					p = p.next;
					continue;
				}
				var index1 = p.instance;
				var v1;
				if(curInstance == index1) {
					v1 = curInstanceValue;
				} else {
					var si1 = shaders;
					curInstance = index1;
					while(--index1 > 0) si1 = si1.next;
					curInstanceValue = si1.s;
					v1 = curInstanceValue;
				}
				v = v1.getParamValue(p.index);
				if(v == null) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(curInstanceValue) + "." + p.name);
				}
			} else if(p.perObjectGlobal != null) {
				var v2 = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v2 == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var v3;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					v3 = true;
				} else {
					v3 = false;
				}
				v = v3 ? v2.texture : v2;
			} else {
				var index2 = p.instance;
				var v4;
				if(curInstance == index2) {
					v4 = curInstanceValue;
				} else {
					var si2 = shaders;
					curInstance = index2;
					while(--index2 > 0) si2 = si2.next;
					curInstanceValue = si2.s;
					v4 = curInstanceValue;
				}
				var v5 = v4.getParamValue(p.index);
				if(v5 == null) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(shaders.s) + "." + p.name);
				}
				v = v5;
			}
			_gthis.fillRec(v,p.type,ptr,p.pos);
			p = p.next;
		}
		var tid = 0;
		var p = s1.textures;
		while(p != null) {
			var opt = !h3d_pass_ShaderManager.STRICT;
			if(opt == null) {
				opt = false;
			}
			var t;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var t1;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					t1 = true;
				} else {
					t1 = false;
				}
				t = t1 ? v.texture : v;
			} else {
				var index = p.instance;
				var v1;
				if(curInstance == index) {
					v1 = curInstanceValue;
				} else {
					var si = shaders;
					curInstance = index;
					while(--index > 0) si = si.next;
					curInstanceValue = si.s;
					v1 = curInstanceValue;
				}
				var v2 = v1.getParamValue(p.index);
				if(v2 == null && !opt) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(shaders.s) + "." + p.name);
				}
				t = v2;
			}
			if(p.pos < 0) {
				var arr = t;
				var _g2 = 0;
				var _g3 = -p.pos;
				while(_g2 < _g3) {
					var i = _g2++;
					buf1.tex[tid++] = arr[i];
				}
			} else {
				buf1.tex[tid++] = t;
			}
			p = p.next;
		}
		var p = s1.buffers;
		var bid = 0;
		while(p != null) {
			var opt = !h3d_pass_ShaderManager.STRICT;
			if(opt == null) {
				opt = false;
			}
			var b;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var b1;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					b1 = true;
				} else {
					b1 = false;
				}
				b = b1 ? v.texture : v;
			} else {
				var index = p.instance;
				var v1;
				if(curInstance == index) {
					v1 = curInstanceValue;
				} else {
					var si = shaders;
					curInstance = index;
					while(--index > 0) si = si.next;
					curInstanceValue = si.s;
					v1 = curInstanceValue;
				}
				var v2 = v1.getParamValue(p.index);
				if(v2 == null && !opt) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(shaders.s) + "." + p.name);
				}
				b = v2;
			}
			buf1.buffers[bid++] = b;
			p = p.next;
		}
		var buf1 = buf.fragment;
		var s1 = s.fragment;
		var p = s1.params;
		var ptr = buf1.params;
		while(p != null) {
			var v;
			if(p.perObjectGlobal == null) {
				if(p.type == hxsl_Type.TFloat) {
					var index = p.instance;
					var i;
					if(curInstance == index) {
						i = curInstanceValue;
					} else {
						var si = shaders;
						curInstance = index;
						while(--index > 0) si = si.next;
						curInstanceValue = si.s;
						i = curInstanceValue;
					}
					ptr[p.pos] = i.getParamFloatValue(p.index);
					p = p.next;
					continue;
				}
				var index1 = p.instance;
				var v1;
				if(curInstance == index1) {
					v1 = curInstanceValue;
				} else {
					var si1 = shaders;
					curInstance = index1;
					while(--index1 > 0) si1 = si1.next;
					curInstanceValue = si1.s;
					v1 = curInstanceValue;
				}
				v = v1.getParamValue(p.index);
				if(v == null) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(curInstanceValue) + "." + p.name);
				}
			} else if(p.perObjectGlobal != null) {
				var v2 = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v2 == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var v3;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					v3 = true;
				} else {
					v3 = false;
				}
				v = v3 ? v2.texture : v2;
			} else {
				var index2 = p.instance;
				var v4;
				if(curInstance == index2) {
					v4 = curInstanceValue;
				} else {
					var si2 = shaders;
					curInstance = index2;
					while(--index2 > 0) si2 = si2.next;
					curInstanceValue = si2.s;
					v4 = curInstanceValue;
				}
				var v5 = v4.getParamValue(p.index);
				if(v5 == null) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(shaders.s) + "." + p.name);
				}
				v = v5;
			}
			_gthis.fillRec(v,p.type,ptr,p.pos);
			p = p.next;
		}
		var tid = 0;
		var p = s1.textures;
		while(p != null) {
			var opt = !h3d_pass_ShaderManager.STRICT;
			if(opt == null) {
				opt = false;
			}
			var t;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var t1;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					t1 = true;
				} else {
					t1 = false;
				}
				t = t1 ? v.texture : v;
			} else {
				var index = p.instance;
				var v1;
				if(curInstance == index) {
					v1 = curInstanceValue;
				} else {
					var si = shaders;
					curInstance = index;
					while(--index > 0) si = si.next;
					curInstanceValue = si.s;
					v1 = curInstanceValue;
				}
				var v2 = v1.getParamValue(p.index);
				if(v2 == null && !opt) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(shaders.s) + "." + p.name);
				}
				t = v2;
			}
			if(p.pos < 0) {
				var arr = t;
				var _g2 = 0;
				var _g3 = -p.pos;
				while(_g2 < _g3) {
					var i = _g2++;
					buf1.tex[tid++] = arr[i];
				}
			} else {
				buf1.tex[tid++] = t;
			}
			p = p.next;
		}
		var p = s1.buffers;
		var bid = 0;
		while(p != null) {
			var opt = !h3d_pass_ShaderManager.STRICT;
			if(opt == null) {
				opt = false;
			}
			var b;
			if(p.perObjectGlobal != null) {
				var v = _gthis.globals.map.h[p.perObjectGlobal.gid];
				if(v == null) {
					throw haxe_Exception.thrown("Missing global value " + p.perObjectGlobal.path + " for shader " + _gthis.shaderInfo(shaders,p.perObjectGlobal.path));
				}
				var _g = p.type;
				var b1;
				if(_g._hx_index == 17) {
					var _g1 = _g.size;
					b1 = true;
				} else {
					b1 = false;
				}
				b = b1 ? v.texture : v;
			} else {
				var index = p.instance;
				var v1;
				if(curInstance == index) {
					v1 = curInstanceValue;
				} else {
					var si = shaders;
					curInstance = index;
					while(--index > 0) si = si.next;
					curInstanceValue = si.s;
					v1 = curInstanceValue;
				}
				var v2 = v1.getParamValue(p.index);
				if(v2 == null && !opt) {
					throw haxe_Exception.thrown("Missing param value " + Std.string(shaders.s) + "." + p.name);
				}
				b = v2;
			}
			buf1.buffers[bid++] = b;
			p = p.next;
		}
	}
	,compileShaders: function(shaders,batchMode) {
		if(batchMode == null) {
			batchMode = false;
		}
		this.globals.maxChannels = 0;
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			var s1 = s;
			s1.updateConstants(this.globals);
		}
		this.currentOutput.next = shaders;
		var s = this.shaderCache.link(this.currentOutput,batchMode);
		this.currentOutput.next = null;
		return s;
	}
	,__class__: h3d_pass_ShaderManager
};
var h3d_pass_RenderMode = $hxEnums["h3d.pass.RenderMode"] = { __ename__:"h3d.pass.RenderMode",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"h3d.pass.RenderMode",toString:$estr}
	,Static: {_hx_name:"Static",_hx_index:1,__enum__:"h3d.pass.RenderMode",toString:$estr}
	,Dynamic: {_hx_name:"Dynamic",_hx_index:2,__enum__:"h3d.pass.RenderMode",toString:$estr}
	,Mixed: {_hx_name:"Mixed",_hx_index:3,__enum__:"h3d.pass.RenderMode",toString:$estr}
};
h3d_pass_RenderMode.__constructs__ = [h3d_pass_RenderMode.None,h3d_pass_RenderMode.Static,h3d_pass_RenderMode.Dynamic,h3d_pass_RenderMode.Mixed];
h3d_pass_RenderMode.__empty_constructs__ = [h3d_pass_RenderMode.None,h3d_pass_RenderMode.Static,h3d_pass_RenderMode.Dynamic,h3d_pass_RenderMode.Mixed];
var h3d_pass_ShadowSamplingKind = $hxEnums["h3d.pass.ShadowSamplingKind"] = { __ename__:"h3d.pass.ShadowSamplingKind",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"h3d.pass.ShadowSamplingKind",toString:$estr}
	,PCF: {_hx_name:"PCF",_hx_index:1,__enum__:"h3d.pass.ShadowSamplingKind",toString:$estr}
	,ESM: {_hx_name:"ESM",_hx_index:2,__enum__:"h3d.pass.ShadowSamplingKind",toString:$estr}
};
h3d_pass_ShadowSamplingKind.__constructs__ = [h3d_pass_ShadowSamplingKind.None,h3d_pass_ShadowSamplingKind.PCF,h3d_pass_ShadowSamplingKind.ESM];
h3d_pass_ShadowSamplingKind.__empty_constructs__ = [h3d_pass_ShadowSamplingKind.None,h3d_pass_ShadowSamplingKind.PCF,h3d_pass_ShadowSamplingKind.ESM];
var h3d_pass_SortByMaterial = function() {
	this.textureCount = 1;
	this.shaderCount = 1;
	this.shaderIdMap = [];
	this.textureIdMap = [];
};
$hxClasses["h3d.pass.SortByMaterial"] = h3d_pass_SortByMaterial;
h3d_pass_SortByMaterial.__name__ = "h3d.pass.SortByMaterial";
h3d_pass_SortByMaterial.prototype = {
	shaderCount: null
	,textureCount: null
	,shaderIdMap: null
	,textureIdMap: null
	,sort: function(passes) {
		var _gthis = this;
		var shaderStart = this.shaderCount;
		var textureStart = this.textureCount;
		var _g_o = passes.current;
		while(_g_o != null) {
			var tmp = _g_o;
			_g_o = _g_o.next;
			var p = tmp;
			if(this.shaderIdMap[p.shader.id] < shaderStart || this.shaderIdMap[p.shader.id] == null) {
				this.shaderIdMap[p.shader.id] = this.shaderCount++;
			}
			if(this.textureIdMap[p.texture] < textureStart || this.textureIdMap[p.shader.id] == null) {
				this.textureIdMap[p.texture] = this.textureCount++;
			}
		}
		var list = passes.current;
		var tmp;
		if(list == null) {
			tmp = null;
		} else {
			var insize = 1;
			var nmerges;
			var psize = 0;
			var qsize = 0;
			var p;
			var q;
			var e;
			var tail;
			while(true) {
				p = list;
				list = null;
				tail = null;
				nmerges = 0;
				while(p != null) {
					++nmerges;
					q = p;
					psize = 0;
					var _g = 0;
					var _g1 = insize;
					while(_g < _g1) {
						var i = _g++;
						++psize;
						q = q.next;
						if(q == null) {
							break;
						}
					}
					qsize = insize;
					while(psize > 0 || qsize > 0 && q != null) {
						if(psize == 0) {
							e = q;
							q = q.next;
							--qsize;
						} else {
							var tmp1;
							if(!(qsize == 0 || q == null)) {
								var tmp2;
								if(p.pass.layer != q.pass.layer) {
									tmp2 = p.pass.layer - q.pass.layer;
								} else {
									var d = _gthis.shaderIdMap[p.shader.id] - _gthis.shaderIdMap[q.shader.id];
									tmp2 = d != 0 ? d : _gthis.textureIdMap[p.texture] - _gthis.textureIdMap[q.texture];
								}
								tmp1 = tmp2 <= 0;
							} else {
								tmp1 = true;
							}
							if(tmp1) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
						}
						if(tail != null) {
							tail.next = e;
						} else {
							list = e;
						}
						tail = e;
					}
					p = q;
				}
				tail.next = null;
				if(nmerges <= 1) {
					break;
				}
				insize *= 2;
			}
			tmp = list;
		}
		passes.current = tmp;
	}
	,__class__: h3d_pass_SortByMaterial
};
var h3d_prim_MeshPrimitive = function() {
	h3d_prim_Primitive.call(this);
};
$hxClasses["h3d.prim.MeshPrimitive"] = h3d_prim_MeshPrimitive;
h3d_prim_MeshPrimitive.__name__ = "h3d.prim.MeshPrimitive";
h3d_prim_MeshPrimitive.__super__ = h3d_prim_Primitive;
h3d_prim_MeshPrimitive.prototype = $extend(h3d_prim_Primitive.prototype,{
	buffers: null
	,formats: null
	,dispose: function() {
		h3d_prim_Primitive.prototype.dispose.call(this);
		if(this.buffers != null) {
			var _g = 0;
			var _g1 = this.buffers;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				b.dispose();
			}
			this.buffers = null;
			this.formats = null;
		}
	}
	,render: function(engine) {
		if(this.indexes == null || this.indexes.isDisposed() || this.buffer == null || this.buffer.vbuf == null) {
			this.alloc(engine);
		}
		if(this.buffers != null) {
			engine.renderMultiBuffers(this.formats,this.buffers,this.indexes);
		} else {
			engine.renderIndexed(this.buffer,this.indexes);
		}
	}
	,__class__: h3d_prim_MeshPrimitive
});
var h3d_prim_Instanced = function() {
	h3d_prim_Primitive.call(this);
	this.bounds = new h3d_col_Bounds();
	var _this = this.bounds;
	if(0 < _this.xMin) {
		_this.xMin = 0;
	}
	if(0 > _this.xMax) {
		_this.xMax = 0;
	}
	if(0 < _this.yMin) {
		_this.yMin = 0;
	}
	if(0 > _this.yMax) {
		_this.yMax = 0;
	}
	if(0 < _this.zMin) {
		_this.zMin = 0;
	}
	if(0 > _this.zMax) {
		_this.zMax = 0;
	}
	this.tmpBounds = new h3d_col_Bounds();
};
$hxClasses["h3d.prim.Instanced"] = h3d_prim_Instanced;
h3d_prim_Instanced.__name__ = "h3d.prim.Instanced";
h3d_prim_Instanced.__super__ = h3d_prim_Primitive;
h3d_prim_Instanced.prototype = $extend(h3d_prim_Primitive.prototype,{
	commands: null
	,bounds: null
	,tmpBounds: null
	,primitive: null
	,dispose: function() {
	}
	,incref: function() {
		if(this.refCount == 0 && this.primitive != null) {
			this.primitive.incref();
		}
		h3d_prim_Primitive.prototype.incref.call(this);
	}
	,decref: function() {
		h3d_prim_Primitive.prototype.decref.call(this);
		if(this.refCount == 0 && this.primitive != null) {
			this.primitive.decref();
		}
	}
	,getBounds: function() {
		return this.bounds;
	}
	,render: function(engine) {
		if(this.primitive.buffer == null || this.primitive.buffer.vbuf == null) {
			this.primitive.alloc(engine);
		}
		if(engine.needFlushTarget) {
			engine.doFlushTarget();
		}
		if(this.primitive.buffers == null) {
			engine.driver.selectBuffer(this.primitive.buffer);
		} else {
			engine.driver.selectMultiBuffers(this.primitive.formats,this.primitive.buffers);
		}
		var indexes = this.primitive.indexes;
		if(indexes == null) {
			indexes = engine.mem.getTriIndexes(this.triCount() * 3);
		}
		engine.renderInstanced(indexes,this.commands);
	}
	,__class__: h3d_prim_Instanced
});
var h3d_prim_Plane2D = function() {
	h3d_prim_Primitive.call(this);
};
$hxClasses["h3d.prim.Plane2D"] = h3d_prim_Plane2D;
h3d_prim_Plane2D.__name__ = "h3d.prim.Plane2D";
h3d_prim_Plane2D.get = function() {
	var engine = h3d_Engine.CURRENT;
	var inst = engine.resCache.h[h3d_prim_Plane2D.__id__];
	if(inst == null) {
		inst = new h3d_prim_Plane2D();
		engine.resCache.set(h3d_prim_Plane2D,inst);
	}
	return inst;
};
h3d_prim_Plane2D.__super__ = h3d_prim_Primitive;
h3d_prim_Plane2D.prototype = $extend(h3d_prim_Primitive.prototype,{
	triCount: function() {
		return 2;
	}
	,alloc: function(engine) {
		var v = hxd__$FloatBuffer_Float32Expand._new(0);
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = -1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = -1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 0;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = -1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 0;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 0;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = -1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 1;
		if(v.pos == v.array.length) {
			var newSize = v.array.length << 1;
			if(newSize < 128) {
				newSize = 128;
			}
			var newArray = new Float32Array(newSize);
			newArray.set(v.array);
			v.array = newArray;
		}
		v.array[v.pos++] = 0;
		this.buffer = h3d_Buffer.ofFloats(v,hxd_BufferFormat.get_XY_UV());
	}
	,render: function(engine) {
		if(this.buffer == null || this.buffer.vbuf == null) {
			this.alloc(engine);
		}
		var b = this.buffer;
		engine.renderBuffer(b,engine.mem.getQuadIndexes(b.vertices),2,0,-1);
	}
	,__class__: h3d_prim_Plane2D
});
var h3d_prim_RawPrimitive = function(inf,persist) {
	if(persist == null) {
		persist = false;
	}
	h3d_prim_Primitive.call(this);
	this.onContextLost = function() {
		return inf;
	};
	this.bounds = inf.bounds;
	this.alloc(null);
	if(!persist) {
		this.onContextLost = null;
	}
};
$hxClasses["h3d.prim.RawPrimitive"] = h3d_prim_RawPrimitive;
h3d_prim_RawPrimitive.__name__ = "h3d.prim.RawPrimitive";
h3d_prim_RawPrimitive.__super__ = h3d_prim_Primitive;
h3d_prim_RawPrimitive.prototype = $extend(h3d_prim_Primitive.prototype,{
	vcount: null
	,tcount: null
	,bounds: null
	,onContextLost: null
	,alloc: function(engine) {
		if(this.onContextLost == null) {
			throw haxe_Exception.thrown("Cannot realloc " + Std.string(this));
		}
		var inf = this.onContextLost();
		this.buffer = h3d_Buffer.ofFloats(inf.vbuf,inf.format);
		this.vcount = this.buffer.vertices;
		this.tcount = inf.ibuf != null ? inf.ibuf.length / 3 | 0 : this.vcount / 3 | 0;
		if(inf.ibuf != null) {
			this.indexes = h3d_Indexes.alloc(inf.ibuf);
		} else if(this.indexes != null) {
			this.indexes.dispose();
			this.indexes = null;
		}
	}
	,getBounds: function() {
		if(this.bounds == null) {
			throw haxe_Exception.thrown("Bounds not defined for " + Std.string(this));
		}
		return this.bounds;
	}
	,triCount: function() {
		return this.tcount;
	}
	,__class__: h3d_prim_RawPrimitive
});
var h3d_scene_Mesh = function(primitive,material,parent) {
	h3d_scene_Object.call(this,parent);
	this.set_primitive(primitive);
	if(material == null) {
		material = h3d_mat_MaterialSetup.current.createMaterial();
		material.set_props(material.getDefaultProps());
	}
	this.material = material;
};
$hxClasses["h3d.scene.Mesh"] = h3d_scene_Mesh;
h3d_scene_Mesh.__name__ = "h3d.scene.Mesh";
h3d_scene_Mesh.__super__ = h3d_scene_Object;
h3d_scene_Mesh.prototype = $extend(h3d_scene_Object.prototype,{
	primitive: null
	,material: null
	,draw: function(ctx) {
		this.primitive.render(ctx.engine);
	}
	,emit: function(ctx) {
		var p = this.material.passes;
		while(p != null) {
			if(!p.culled) {
				ctx.emitPass(p,this).index = 0;
			}
			p = p.nextPass;
		}
	}
	,onAdd: function() {
		h3d_scene_Object.prototype.onAdd.call(this);
		if(this.primitive != null) {
			this.primitive.incref();
		}
	}
	,onRemove: function() {
		if(this.primitive != null) {
			this.primitive.decref();
		}
		h3d_scene_Object.prototype.onRemove.call(this);
	}
	,set_primitive: function(prim) {
		if(prim != this.primitive && (this.flags & 32) != 0) {
			if(this.primitive != null) {
				this.primitive.decref();
			}
			if(prim != null) {
				prim.incref();
			}
		}
		return this.primitive = prim;
	}
	,__class__: h3d_scene_Mesh
	,__properties__: $extend(h3d_scene_Object.prototype.__properties__,{set_primitive:"set_primitive"})
});
var h3d_scene_Interactive = function(shape,parent) {
	this.hitPoint = new h3d_Vector();
	this.lastClickFrame = -1;
	this.mouseDownButton = -1;
	this.isAbsoluteShape = false;
	this.allowMultiClick = false;
	this.enableRightButton = false;
	this.propagateEvents = false;
	this.cancelEvents = false;
	h3d_scene_Object.call(this,parent);
	this.shape = shape;
	this.set_cursor(hxd_Cursor.Button);
};
$hxClasses["h3d.scene.Interactive"] = h3d_scene_Interactive;
h3d_scene_Interactive.__name__ = "h3d.scene.Interactive";
h3d_scene_Interactive.__interfaces__ = [hxd_Interactive];
h3d_scene_Interactive.__super__ = h3d_scene_Object;
h3d_scene_Interactive.prototype = $extend(h3d_scene_Object.prototype,{
	shape: null
	,preciseShape: null
	,priority: null
	,cursor: null
	,cancelEvents: null
	,propagateEvents: null
	,enableRightButton: null
	,allowMultiClick: null
	,bestMatch: null
	,isAbsoluteShape: null
	,scene: null
	,mouseDownButton: null
	,lastClickFrame: null
	,hitPoint: null
	,onAdd: function() {
		this.scene = this.getScene();
		if(this.scene != null) {
			this.scene.addEventTarget(this);
		}
		h3d_scene_Object.prototype.onAdd.call(this);
	}
	,onRemove: function() {
		if(this.scene != null) {
			this.scene.removeEventTarget(this);
			this.scene = null;
		}
		h3d_scene_Object.prototype.onRemove.call(this);
	}
	,getInteractiveScene: function() {
		return this.scene;
	}
	,handleEvent: function(e) {
		if(this.propagateEvents) {
			e.propagate = true;
		}
		if(this.cancelEvents) {
			e.cancel = true;
		}
		switch(e.kind._hx_index) {
		case 0:
			if(this.enableRightButton || e.button == 0) {
				this.mouseDownButton = e.button;
				this.onPush(e);
				if(e.cancel) {
					this.mouseDownButton = -1;
				}
			}
			break;
		case 1:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				var frame = hxd_Timer.frameCount;
				if(this.mouseDownButton == e.button && (this.lastClickFrame != frame || this.allowMultiClick)) {
					this.onClick(e);
					this.lastClickFrame = frame;
				}
			}
			this.mouseDownButton = -1;
			break;
		case 2:
			this.onMove(e);
			break;
		case 3:
			this.onOver(e);
			break;
		case 4:
			this.onOut(e);
			break;
		case 5:
			this.onWheel(e);
			break;
		case 6:
			this.onFocus(e);
			break;
		case 7:
			this.onFocusLost(e);
			break;
		case 8:
			this.onKeyDown(e);
			break;
		case 9:
			this.onKeyUp(e);
			break;
		case 10:
			if(this.enableRightButton || e.button == 0) {
				this.onRelease(e);
				if(this.mouseDownButton == e.button) {
					this.onReleaseOutside(e);
				}
			}
			this.mouseDownButton = -1;
			break;
		case 11:
			this.onTextInput(e);
			break;
		case 12:
			this.onCheck(e);
			break;
		}
	}
	,set_cursor: function(c) {
		this.cursor = c;
		if(this.scene != null && this.scene.events != null) {
			this.scene.events.updateCursor(this);
		}
		return c;
	}
	,onOver: function(e) {
	}
	,onOut: function(e) {
	}
	,onPush: function(e) {
	}
	,onRelease: function(e) {
	}
	,onReleaseOutside: function(e) {
	}
	,onClick: function(e) {
	}
	,onMove: function(e) {
	}
	,onWheel: function(e) {
	}
	,onFocus: function(e) {
	}
	,onFocusLost: function(e) {
	}
	,onKeyUp: function(e) {
	}
	,onKeyDown: function(e) {
	}
	,onCheck: function(e) {
	}
	,onTextInput: function(e) {
	}
	,__class__: h3d_scene_Interactive
	,__properties__: $extend(h3d_scene_Object.prototype.__properties__,{set_cursor:"set_cursor"})
});
var h3d_scene_Light = function(shader,parent) {
	h3d_scene_Object.call(this,parent);
	this.shader = shader;
};
$hxClasses["h3d.scene.Light"] = h3d_scene_Light;
h3d_scene_Light.__name__ = "h3d.scene.Light";
h3d_scene_Light.__super__ = h3d_scene_Object;
h3d_scene_Light.prototype = $extend(h3d_scene_Object.prototype,{
	shader: null
	,next: null
	,emit: function(ctx) {
		ctx.emitLight(this);
	}
	,getShadowDirection: function() {
		return null;
	}
	,__class__: h3d_scene_Light
});
var h3d_scene_LightSystem = function() {
};
$hxClasses["h3d.scene.LightSystem"] = h3d_scene_LightSystem;
h3d_scene_LightSystem.__name__ = "h3d.scene.LightSystem";
h3d_scene_LightSystem.prototype = {
	shadowLight: null
	,ctx: null
	,initGlobals: function(globals) {
	}
	,initLights: function(ctx) {
		this.ctx = ctx;
		if(this.shadowLight == null || (this.shadowLight.flags & 32) == 0) {
			var l = ctx.lights;
			while(l != null) {
				var dir = l.getShadowDirection();
				if(dir != null) {
					this.shadowLight = l;
					break;
				}
				l = l.next;
			}
		}
	}
	,computeLight: function(obj,shaders) {
		return shaders;
	}
	,__class__: h3d_scene_LightSystem
};
var h3d_scene__$RenderContext_SharedGlobal = function(gid,value) {
	this.gid = gid;
	this.value = value;
};
$hxClasses["h3d.scene._RenderContext.SharedGlobal"] = h3d_scene__$RenderContext_SharedGlobal;
h3d_scene__$RenderContext_SharedGlobal.__name__ = "h3d.scene._RenderContext.SharedGlobal";
h3d_scene__$RenderContext_SharedGlobal.prototype = {
	gid: null
	,value: null
	,__class__: h3d_scene__$RenderContext_SharedGlobal
};
var h3d_scene_RenderContext = function() {
	h3d_impl_RenderContext.call(this);
	this.cachedShaderList = [];
	this.cachedPassObjects = [];
};
$hxClasses["h3d.scene.RenderContext"] = h3d_scene_RenderContext;
h3d_scene_RenderContext.__name__ = "h3d.scene.RenderContext";
h3d_scene_RenderContext.__super__ = h3d_impl_RenderContext;
h3d_scene_RenderContext.prototype = $extend(h3d_impl_RenderContext.prototype,{
	camera: null
	,scene: null
	,drawPass: null
	,computingStatic: null
	,sharedGlobals: null
	,lightSystem: null
	,extraShaders: null
	,visibleFlag: null
	,wasContextLost: null
	,shaderBuffers: null
	,cullingCollider: null
	,allocPool: null
	,allocFirst: null
	,cachedShaderList: null
	,cachedPassObjects: null
	,cachedPos: null
	,passes: null
	,lights: null
	,currentManager: null
	,start: function() {
		this.sharedGlobals = [];
		this.lights = null;
		this.drawPass = null;
		this.passes = [];
		this.lights = null;
		this.cachedPos = 0;
		this.visibleFlag = true;
		this.time += this.elapsedTime;
		this.frame++;
	}
	,setGlobalID: function(gid,value) {
		var _g = 0;
		var _g1 = this.sharedGlobals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.gid == gid) {
				g.value = value;
				return;
			}
		}
		this.sharedGlobals.push(new h3d_scene__$RenderContext_SharedGlobal(gid,value));
	}
	,emitPass: function(pass,obj) {
		if((pass.rendererFlags & 1) == 0) {
			this.scene.renderer.setPassFlags(pass);
		}
		var o = this.allocPool;
		if(o == null) {
			o = new h3d_pass_PassObject();
			o.nextAlloc = this.allocFirst;
			this.allocFirst = o;
		} else {
			this.allocPool = o.nextAlloc;
		}
		o.pass = pass;
		o.obj = obj;
		if(this.passes.length <= pass.passId) {
			this.passes.length = pass.passId;
		}
		o.next = this.passes[pass.passId];
		this.passes[pass.passId] = o;
		return o;
	}
	,allocShaderList: function(s,next) {
		var sl = this.cachedShaderList[this.cachedPos++];
		if(sl == null) {
			sl = new hxsl_ShaderList(null);
			this.cachedShaderList[this.cachedPos - 1] = sl;
		}
		sl.s = s;
		sl.next = next;
		return sl;
	}
	,emitLight: function(l) {
		l.next = this.lights;
		this.lights = l;
	}
	,done: function() {
		this.drawPass = null;
		var p = this.allocFirst;
		while(p != null && p != this.allocPool) {
			p.obj = null;
			p.pass = null;
			p.shader = null;
			p.shaders = null;
			p.next = null;
			p.index = 0;
			p.texture = 0;
			p = p.nextAlloc;
		}
		if(this.allocPool != null) {
			this.allocFirst = this.allocFirst.nextAlloc;
		}
		this.allocPool = this.allocFirst;
		var _g = 0;
		var _g1 = this.cachedShaderList;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.s = null;
			c.next = null;
		}
		this.passes = [];
		this.lights = null;
	}
	,__class__: h3d_scene_RenderContext
});
var h3d_scene_PassObjects = function() {
	this.passes = new h3d_pass_PassList();
};
$hxClasses["h3d.scene.PassObjects"] = h3d_scene_PassObjects;
h3d_scene_PassObjects.__name__ = "h3d.scene.PassObjects";
h3d_scene_PassObjects.prototype = {
	name: null
	,passes: null
	,rendered: null
	,__class__: h3d_scene_PassObjects
};
var h3d_scene_Renderer = function() {
	this.hasSetTarget = false;
	this.emptyPasses = new h3d_pass_PassList();
	this.allPasses = [];
	this.passObjects = new haxe_ds_StringMap();
	this.set_props(this.getDefaultProps());
	var _g = this;
	var frontToBack = true;
	this.frontToBack = function(passes) {
		_g.depthSort(frontToBack,passes);
	};
	var _g1 = this;
	var frontToBack1 = false;
	this.backToFront = function(passes) {
		_g1.depthSort(frontToBack1,passes);
	};
};
$hxClasses["h3d.scene.Renderer"] = h3d_scene_Renderer;
h3d_scene_Renderer.__name__ = "h3d.scene.Renderer";
h3d_scene_Renderer.__super__ = hxd_impl_AnyProps;
h3d_scene_Renderer.prototype = $extend(hxd_impl_AnyProps.prototype,{
	defaultPass: null
	,passObjects: null
	,allPasses: null
	,emptyPasses: null
	,ctx: null
	,hasSetTarget: null
	,frontToBack: null
	,backToFront: null
	,depthSort: function(frontToBack,passes) {
		var cam = this.ctx.camera.m;
		var _g_o = passes.current;
		while(_g_o != null) {
			var tmp = _g_o;
			_g_o = _g_o.next;
			var p = tmp;
			var z = p.obj.absPos._41 * cam._13 + p.obj.absPos._42 * cam._23 + p.obj.absPos._43 * cam._33 + cam._43;
			var w = p.obj.absPos._41 * cam._14 + p.obj.absPos._42 * cam._24 + p.obj.absPos._43 * cam._34 + cam._44;
			p.depth = z / w;
		}
		if(frontToBack) {
			var list = passes.current;
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g = 0;
						var _g1 = insize;
						while(_g < _g1) {
							var i = _g++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || (p.pass.layer == q.pass.layer ? p.depth > q.depth ? 1 : -1 : p.pass.layer - q.pass.layer) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			passes.current = tmp;
		} else {
			var list = passes.current;
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g = 0;
						var _g1 = insize;
						while(_g < _g1) {
							var i = _g++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || (p.pass.layer == q.pass.layer ? p.depth > q.depth ? -1 : 1 : p.pass.layer - q.pass.layer) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			passes.current = tmp;
		}
	}
	,resetTarget: function() {
		if(this.hasSetTarget) {
			this.ctx.engine.popTarget();
			this.hasSetTarget = false;
		}
	}
	,has: function(name) {
		return this.passObjects.h[name] != null;
	}
	,setPassFlags: function(pass) {
		pass.rendererFlags |= 1;
	}
	,get: function(name) {
		var p = this.passObjects.h[name];
		if(p == null) {
			return this.emptyPasses;
		}
		p.rendered = true;
		return p.passes;
	}
	,render: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,computeStatic: function() {
		throw haxe_Exception.thrown("Not implemented");
	}
	,start: function() {
	}
	,process: function(passes) {
		this.hasSetTarget = false;
		var _g = 0;
		var _g1 = this.allPasses;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.setContext(this.ctx);
		}
		var _g = 0;
		while(_g < passes.length) {
			var p = passes[_g];
			++_g;
			this.passObjects.h[p.name] = p;
		}
		this.ctx.textures.begin();
		if(this.ctx.computingStatic) {
			this.computeStatic();
		} else {
			this.render();
		}
		this.resetTarget();
		var _g = 0;
		while(_g < passes.length) {
			var p = passes[_g];
			++_g;
			this.passObjects.h[p.name] = null;
		}
	}
	,__class__: h3d_scene_Renderer
});
var h3d_scene_Scene = function(createRenderer,createLightSystem) {
	if(createLightSystem == null) {
		createLightSystem = true;
	}
	if(createRenderer == null) {
		createRenderer = true;
	}
	h3d_scene_Object.call(this,null);
	this.window = hxd_Window.getInstance();
	this.eventListeners = [];
	this.hitInteractives = [];
	this.interactives = [];
	this.camera = new h3d_Camera();
	var engine = h3d_Engine.CURRENT;
	if(engine != null) {
		this.camera.screenRatio = engine.width / engine.height;
	}
	this.ctx = new h3d_scene_RenderContext();
	if(createRenderer) {
		this.set_renderer(h3d_mat_MaterialSetup.current.createRenderer());
	}
	if(createLightSystem) {
		this.lightSystem = h3d_mat_MaterialSetup.current.createLightSystem();
	}
};
$hxClasses["h3d.scene.Scene"] = h3d_scene_Scene;
h3d_scene_Scene.__name__ = "h3d.scene.Scene";
h3d_scene_Scene.__interfaces__ = [hxd_InteractiveScene,h3d_IDrawable];
h3d_scene_Scene.__super__ = h3d_scene_Object;
h3d_scene_Scene.prototype = $extend(h3d_scene_Object.prototype,{
	camera: null
	,lightSystem: null
	,renderer: null
	,ctx: null
	,interactives: null
	,events: null
	,hitInteractives: null
	,eventListeners: null
	,window: null
	,setEvents: function(events) {
		this.events = events;
	}
	,dispatchListeners: function(event) {
		var _g = 0;
		var _g1 = this.eventListeners;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			l(event);
			if(!event.propagate) {
				break;
			}
		}
	}
	,set_renderer: function(r) {
		this.renderer = r;
		if(r != null) {
			r.ctx = this.ctx;
		}
		return r;
	}
	,sortHitPointByCameraDistance: function(i1,i2) {
		var z1 = i1.hitPoint.w;
		var z2 = i2.hitPoint.w;
		if(z1 > z2) {
			return -1;
		}
		return 1;
	}
	,dispatchEvent: function(event,to) {
		var i = to;
		i.handleEvent(event);
	}
	,isInteractiveVisible: function(i) {
		var o = i;
		while(o != this) {
			if(o == null || (o.flags & 2) == 0) {
				return false;
			}
			o = o.parent;
		}
		return true;
	}
	,handleEvent: function(event,last) {
		if(this.interactives.length == 0) {
			return null;
		}
		if(this.hitInteractives.length == 0) {
			var screenX = (event.relX / this.window.get_width() - 0.5) * 2;
			var screenY = -(event.relY / this.window.get_height() - 0.5) * 2;
			var p0 = this.camera.unproject(screenX,screenY,0);
			var p1 = this.camera.unproject(screenX,screenY,1);
			var x = p0.x;
			var y = p0.y;
			var z = p0.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var p1_x = x;
			var p1_y = y;
			var p1_z = z;
			var x = p1.x;
			var y = p1.y;
			var z = p1.z;
			if(z == null) {
				z = 0.;
			}
			if(y == null) {
				y = 0.;
			}
			if(x == null) {
				x = 0.;
			}
			var p2_x = x;
			var p2_y = y;
			var p2_z = z;
			var r = new h3d_col_Ray();
			r.px = p1_x;
			r.py = p1_y;
			r.pz = p1_z;
			r.lx = p2_x - p1_x;
			r.ly = p2_y - p1_y;
			r.lz = p2_z - p1_z;
			r.normalize();
			var r1 = r;
			var saveR_px = r1.px;
			var saveR_py = r1.py;
			var saveR_pz = r1.pz;
			var saveR_lx = r1.lx;
			var saveR_ly = r1.ly;
			var saveR_lz = r1.lz;
			var priority = -2147483648;
			var _g = 0;
			var _g1 = this.interactives;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i.priority < priority) {
					continue;
				}
				var p = i;
				while(p != null && (p.flags & 2) != 0) p = p.parent;
				if(p != null) {
					continue;
				}
				if(!i.isAbsoluteShape) {
					var minv = i.getInvPos();
					var x = r1.px;
					var y = r1.py;
					var z = r1.pz;
					if(z == null) {
						z = 0.;
					}
					if(y == null) {
						y = 0.;
					}
					if(x == null) {
						x = 0.;
					}
					var p_x = x;
					var p_y = y;
					var p_z = z;
					var p_w = 1.;
					var px = p_x * minv._11 + p_y * minv._21 + p_z * minv._31 + p_w * minv._41;
					var py = p_x * minv._12 + p_y * minv._22 + p_z * minv._32 + p_w * minv._42;
					var pz = p_x * minv._13 + p_y * minv._23 + p_z * minv._33 + p_w * minv._43;
					p_x = px;
					p_y = py;
					p_z = pz;
					r1.px = p_x;
					r1.py = p_y;
					r1.pz = p_z;
					var x1 = r1.lx;
					var y1 = r1.ly;
					var z1 = r1.lz;
					if(z1 == null) {
						z1 = 0.;
					}
					if(y1 == null) {
						y1 = 0.;
					}
					if(x1 == null) {
						x1 = 0.;
					}
					var l_x = x1;
					var l_y = y1;
					var l_z = z1;
					var l_w = 1.;
					var px1 = l_x * minv._11 + l_y * minv._21 + l_z * minv._31;
					var py1 = l_x * minv._12 + l_y * minv._22 + l_z * minv._32;
					var pz1 = l_x * minv._13 + l_y * minv._23 + l_z * minv._33;
					l_x = px1;
					l_y = py1;
					l_z = pz1;
					r1.lx = l_x;
					r1.ly = l_y;
					r1.lz = l_z;
					r1.normalize();
				}
				if(r1.lx != r1.lx) {
					r1.px = saveR_px;
					r1.py = saveR_py;
					r1.pz = saveR_pz;
					r1.lx = saveR_lx;
					r1.ly = saveR_ly;
					r1.lz = saveR_lz;
					continue;
				}
				var hit = i.shape.rayIntersection(r1,i.bestMatch);
				if(hit < 0) {
					r1.px = saveR_px;
					r1.py = saveR_py;
					r1.pz = saveR_pz;
					r1.lx = saveR_lx;
					r1.ly = saveR_ly;
					r1.lz = saveR_lz;
					continue;
				}
				var x2 = r1.px + hit * r1.lx;
				var y2 = r1.py + hit * r1.ly;
				var z2 = r1.pz + hit * r1.lz;
				if(z2 == null) {
					z2 = 0.;
				}
				if(y2 == null) {
					y2 = 0.;
				}
				if(x2 == null) {
					x2 = 0.;
				}
				var hitPoint_x = x2;
				var hitPoint_y = y2;
				var hitPoint_z = z2;
				r1.px = saveR_px;
				r1.py = saveR_py;
				r1.pz = saveR_pz;
				r1.lx = saveR_lx;
				r1.ly = saveR_ly;
				r1.lz = saveR_lz;
				i.hitPoint.x = hitPoint_x;
				i.hitPoint.y = hitPoint_y;
				i.hitPoint.z = hitPoint_z;
				if(i.priority > priority) {
					while(this.hitInteractives.length > 0) this.hitInteractives.pop();
					priority = i.priority;
				}
				this.hitInteractives.push(i);
			}
			if(this.hitInteractives.length == 0) {
				return null;
			}
			if(this.hitInteractives.length > 1) {
				var _g = 0;
				var _g1 = this.hitInteractives;
				while(_g < _g1.length) {
					var i = _g1[_g];
					++_g;
					var m = i.invPos;
					var wfactor = 0.;
					if(i.preciseShape != null) {
						var x = r1.px;
						var y = r1.py;
						var z = r1.pz;
						if(z == null) {
							z = 0.;
						}
						if(y == null) {
							y = 0.;
						}
						if(x == null) {
							x = 0.;
						}
						var p_x = x;
						var p_y = y;
						var p_z = z;
						var p_w = 1.;
						var px = p_x * m._11 + p_y * m._21 + p_z * m._31 + p_w * m._41;
						var py = p_x * m._12 + p_y * m._22 + p_z * m._32 + p_w * m._42;
						var pz = p_x * m._13 + p_y * m._23 + p_z * m._33 + p_w * m._43;
						p_x = px;
						p_y = py;
						p_z = pz;
						r1.px = p_x;
						r1.py = p_y;
						r1.pz = p_z;
						var x1 = r1.lx;
						var y1 = r1.ly;
						var z1 = r1.lz;
						if(z1 == null) {
							z1 = 0.;
						}
						if(y1 == null) {
							y1 = 0.;
						}
						if(x1 == null) {
							x1 = 0.;
						}
						var l_x = x1;
						var l_y = y1;
						var l_z = z1;
						var l_w = 1.;
						var px1 = l_x * m._11 + l_y * m._21 + l_z * m._31;
						var py1 = l_x * m._12 + l_y * m._22 + l_z * m._32;
						var pz1 = l_x * m._13 + l_y * m._23 + l_z * m._33;
						l_x = px1;
						l_y = py1;
						l_z = pz1;
						r1.lx = l_x;
						r1.ly = l_y;
						r1.lz = l_z;
						r1.normalize();
						var hit = i.preciseShape.rayIntersection(r1,i.bestMatch);
						if(hit > 0) {
							var x2 = r1.px + hit * r1.lx;
							var y2 = r1.py + hit * r1.ly;
							var z2 = r1.pz + hit * r1.lz;
							if(z2 == null) {
								z2 = 0.;
							}
							if(y2 == null) {
								y2 = 0.;
							}
							if(x2 == null) {
								x2 = 0.;
							}
							var hitPoint_x = x2;
							var hitPoint_y = y2;
							var hitPoint_z = z2;
							i.hitPoint.x = hitPoint_x;
							i.hitPoint.y = hitPoint_y;
							i.hitPoint.z = hitPoint_z;
						} else {
							wfactor = 1.;
						}
						r1.px = saveR_px;
						r1.py = saveR_py;
						r1.pz = saveR_pz;
						r1.lx = saveR_lx;
						r1.ly = saveR_ly;
						r1.lz = saveR_lz;
					}
					var _this = i.hitPoint;
					var x3 = _this.x;
					var y3 = _this.y;
					var z3 = _this.z;
					var w = _this.w;
					if(w == null) {
						w = 1.;
					}
					if(z3 == null) {
						z3 = 0.;
					}
					if(y3 == null) {
						y3 = 0.;
					}
					if(x3 == null) {
						x3 = 0.;
					}
					var p_x1 = x3;
					var p_y1 = y3;
					var p_z1 = z3;
					var p_w1 = w;
					p_w1 = 1;
					var m1 = i.absPos;
					var px2 = p_x1 * m1._11 + p_y1 * m1._21 + p_z1 * m1._31 + p_w1 * m1._41;
					var py2 = p_x1 * m1._12 + p_y1 * m1._22 + p_z1 * m1._32 + p_w1 * m1._42;
					var pz2 = p_x1 * m1._13 + p_y1 * m1._23 + p_z1 * m1._33 + p_w1 * m1._43;
					p_x1 = px2;
					p_y1 = py2;
					p_z1 = pz2;
					var m2 = this.camera.m;
					var px3 = p_x1 * m2._11 + p_y1 * m2._21 + p_z1 * m2._31 + p_w1 * m2._41;
					var py3 = p_x1 * m2._12 + p_y1 * m2._22 + p_z1 * m2._32 + p_w1 * m2._42;
					var pz3 = p_x1 * m2._13 + p_y1 * m2._23 + p_z1 * m2._33 + p_w1 * m2._43;
					var iw = 1 / (p_x1 * m2._14 + p_y1 * m2._24 + p_z1 * m2._34 + p_w1 * m2._44);
					p_x1 = px3 * iw;
					p_y1 = py3 * iw;
					p_z1 = pz3 * iw;
					p_w1 = 1;
					i.hitPoint.w = p_z1 + wfactor;
				}
				this.hitInteractives.sort($bind(this,this.sortHitPointByCameraDistance));
			}
			this.hitInteractives.unshift(null);
		}
		while(this.hitInteractives.length > 0) {
			var i = this.hitInteractives.pop();
			if(i == null) {
				return null;
			}
			event.relX = i.hitPoint.x;
			event.relY = i.hitPoint.y;
			event.relZ = i.hitPoint.z;
			i.handleEvent(event);
			if(event.cancel) {
				event.cancel = false;
				event.propagate = false;
				continue;
			}
			if(!event.propagate) {
				while(this.hitInteractives.length > 0) this.hitInteractives.pop();
			}
			return i;
		}
		return null;
	}
	,addEventTarget: function(i) {
		if(this.interactives.indexOf(i) >= 0) {
			throw haxe_Exception.thrown("assert");
		}
		this.interactives.push(i);
	}
	,removeEventTarget: function(i) {
		if(HxOverrides.remove(this.interactives,i)) {
			if(this.events != null) {
				this.events.onRemove(i);
			}
			HxOverrides.remove(this.hitInteractives,i);
		}
	}
	,setElapsedTime: function(elapsedTime) {
		this.ctx.elapsedTime = elapsedTime;
	}
	,onContextLost: function() {
		this.ctx.wasContextLost = true;
	}
	,render: function(engine) {
		if((this.flags & 32) == 0) {
			this.onAdd();
		}
		var t = engine.getCurrentTarget();
		if(t == null) {
			this.camera.screenRatio = engine.width / engine.height;
		} else {
			this.camera.screenRatio = t.width / t.height;
		}
		this.camera.update();
		if(this.camera.rightHanded) {
			engine.driver.setRenderFlag(h3d_impl_RenderFlag.CameraHandness,1);
		}
		this.ctx.camera = this.camera;
		this.ctx.engine = engine;
		this.ctx.scene = this;
		this.ctx.start();
		this.renderer.start();
		this.syncRec(this.ctx);
		this.emitRec(this.ctx);
		var passes = [];
		var passIndex = -1;
		var _g = 0;
		var _g1 = this.ctx.passes.length;
		while(_g < _g1) {
			var passId = _g++;
			var curPass = this.ctx.passes[passId];
			if(curPass == null) {
				continue;
			}
			var pobjs = this.ctx.cachedPassObjects[++passIndex];
			if(pobjs == null) {
				pobjs = new h3d_scene_PassObjects();
				this.ctx.cachedPassObjects[passIndex] = pobjs;
			}
			pobjs.name = curPass.pass.name;
			var _this = pobjs.passes;
			_this.current = curPass;
			_this.discarded = _this.lastDisc = null;
			passes.push(pobjs);
		}
		if(this.lightSystem != null) {
			this.ctx.lightSystem = this.lightSystem;
			this.lightSystem.initLights(this.ctx);
		}
		this.renderer.process(passes);
		if(this.camera.rightHanded) {
			engine.driver.setRenderFlag(h3d_impl_RenderFlag.CameraHandness,0);
		}
		this.ctx.done();
		this.ctx.wasContextLost = false;
		this.ctx.scene = null;
		this.ctx.camera = null;
		this.ctx.engine = null;
		var _g = 0;
		var _g1 = passIndex;
		while(_g < _g1) {
			var i = _g++;
			var p = this.ctx.cachedPassObjects[i];
			p.name = null;
			var _this = p.passes;
			_this.current = null;
			_this.discarded = _this.lastDisc = null;
		}
	}
	,__class__: h3d_scene_Scene
	,__properties__: $extend(h3d_scene_Object.prototype.__properties__,{set_renderer:"set_renderer"})
});
var h3d_scene_fwd_Light = function(shader,parent) {
	this.priority = 0;
	this.cullingDistance = -1;
	h3d_scene_Light.call(this,shader,parent);
};
$hxClasses["h3d.scene.fwd.Light"] = h3d_scene_fwd_Light;
h3d_scene_fwd_Light.__name__ = "h3d.scene.fwd.Light";
h3d_scene_fwd_Light.__super__ = h3d_scene_Light;
h3d_scene_fwd_Light.prototype = $extend(h3d_scene_Light.prototype,{
	objectDistance: null
	,cullingDistance: null
	,priority: null
	,__class__: h3d_scene_fwd_Light
});
var h3d_scene_fwd_LightSystem = function() {
	this.perPixelLighting = true;
	this.maxLightsPerObject = 6;
	h3d_scene_LightSystem.call(this);
	this.ambientLight = new h3d_Vector(0.5,0.5,0.5);
	this.ambientShader = new h3d_shader_AmbientLight();
	this.set_additiveLighting(true);
};
$hxClasses["h3d.scene.fwd.LightSystem"] = h3d_scene_fwd_LightSystem;
h3d_scene_fwd_LightSystem.__name__ = "h3d.scene.fwd.LightSystem";
h3d_scene_fwd_LightSystem.__super__ = h3d_scene_LightSystem;
h3d_scene_fwd_LightSystem.prototype = $extend(h3d_scene_LightSystem.prototype,{
	maxLightsPerObject: null
	,ambientShader: null
	,lightCount: null
	,perPixelLighting: null
	,ambientLight: null
	,set_additiveLighting: function(b) {
		var value = this.ambientShader;
		var _this = ((value) instanceof h3d_shader_AmbientLight) ? value : null;
		_this.constModified = true;
		return _this.additive__ = b;
	}
	,initLights: function(ctx) {
		this.lightCount = 0;
		this.ctx = ctx;
		this.cullLights();
		h3d_scene_LightSystem.prototype.initLights.call(this,ctx);
		if(this.lightCount <= this.maxLightsPerObject) {
			var list = ctx.lights;
			var cmp = $bind(this,this.sortLight);
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g = 0;
						var _g1 = insize;
						while(_g < _g1) {
							var i = _g++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || cmp(p,q) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			ctx.lights = tmp;
		}
	}
	,initGlobals: function(globals) {
		globals.set("global.ambientLight",this.ambientLight);
		globals.set("global.perPixelLighting",this.perPixelLighting);
	}
	,cullLights: function() {
		var ll = this.ctx.lights;
		var prev = null;
		var s = new h3d_col_Sphere();
		while(ll != null) {
			var l = ((ll) instanceof h3d_scene_fwd_Light) ? ll : null;
			if(l != null) {
				s.x = l.absPos._41;
				s.y = l.absPos._42;
				s.z = l.absPos._43;
				s.r = l.cullingDistance;
			}
			if(l == null || l.cullingDistance > 0 && !this.ctx.computingStatic && !this.ctx.camera.frustum.hasSphere(s)) {
				if(prev == null) {
					this.ctx.lights = ll.next;
				} else {
					prev.next = ll.next;
				}
				ll = ll.next;
				continue;
			}
			this.lightCount++;
			l.objectDistance = 0.;
			prev = ll;
			ll = ll.next;
		}
	}
	,sortLight: function(l1,l2) {
		var p = l1.priority - l2.priority;
		if(p != 0) {
			return -p;
		}
		if(l1.objectDistance < l2.objectDistance) {
			return -1;
		} else {
			return 1;
		}
	}
	,computeLight: function(obj,shaders) {
		var _gthis = this;
		if(this.lightCount > this.maxLightsPerObject) {
			var ll = this.ctx.lights;
			while(ll != null) {
				var l = ((ll) instanceof h3d_scene_fwd_Light) ? ll : null;
				if((obj.flags & 16) != 0) {
					var dx = l.absPos._41 - this.ctx.camera.target.x;
					var dy = l.absPos._42 - this.ctx.camera.target.y;
					var dz = l.absPos._43 - this.ctx.camera.target.z;
					if(dz == null) {
						dz = 0.;
					}
					l.objectDistance = dx * dx + dy * dy + dz * dz;
				} else {
					var dx1 = l.absPos._41 - obj.absPos._41;
					var dy1 = l.absPos._42 - obj.absPos._42;
					var dz1 = l.absPos._43 - obj.absPos._43;
					if(dz1 == null) {
						dz1 = 0.;
					}
					l.objectDistance = dx1 * dx1 + dy1 * dy1 + dz1 * dz1;
				}
				ll = ll.next;
			}
			var list = this.ctx.lights;
			var cmp = $bind(this,this.sortLight);
			var tmp;
			if(list == null) {
				tmp = null;
			} else {
				var insize = 1;
				var nmerges;
				var psize = 0;
				var qsize = 0;
				var p;
				var q;
				var e;
				var tail;
				while(true) {
					p = list;
					list = null;
					tail = null;
					nmerges = 0;
					while(p != null) {
						++nmerges;
						q = p;
						psize = 0;
						var _g = 0;
						var _g1 = insize;
						while(_g < _g1) {
							var i = _g++;
							++psize;
							q = q.next;
							if(q == null) {
								break;
							}
						}
						qsize = insize;
						while(psize > 0 || qsize > 0 && q != null) {
							if(psize == 0) {
								e = q;
								q = q.next;
								--qsize;
							} else if(qsize == 0 || q == null || cmp(p,q) <= 0) {
								e = p;
								p = p.next;
								--psize;
							} else {
								e = q;
								q = q.next;
								--qsize;
							}
							if(tail != null) {
								tail.next = e;
							} else {
								list = e;
							}
							tail = e;
						}
						p = q;
					}
					tail.next = null;
					if(nmerges <= 1) {
						break;
					}
					insize *= 2;
				}
				tmp = list;
			}
			this.ctx.lights = tmp;
		}
		shaders = _gthis.ctx.allocShaderList(this.ambientShader,shaders);
		var l = this.ctx.lights;
		var i = 0;
		while(l != null) {
			if(i++ == this.maxLightsPerObject) {
				break;
			}
			shaders = _gthis.ctx.allocShaderList(l.shader,shaders);
			l = l.next;
		}
		return shaders;
	}
	,__class__: h3d_scene_fwd_LightSystem
	,__properties__: {set_additiveLighting:"set_additiveLighting"}
});
var h3d_scene_fwd_DepthPass = function() {
	this.enableSky = false;
	h3d_pass_Default.call(this,"depth");
	this.depthMapId = hxsl_Globals.allocID("depthMap");
};
$hxClasses["h3d.scene.fwd.DepthPass"] = h3d_scene_fwd_DepthPass;
h3d_scene_fwd_DepthPass.__name__ = "h3d.scene.fwd.DepthPass";
h3d_scene_fwd_DepthPass.__super__ = h3d_pass_Default;
h3d_scene_fwd_DepthPass.prototype = $extend(h3d_pass_Default.prototype,{
	depthMapId: null
	,enableSky: null
	,getOutputs: function() {
		return [hxsl_Output.PackFloat(hxsl_Output.Value("output.depth"))];
	}
	,draw: function(passes,sort) {
		var texture = this.ctx.textures.allocTarget("depthMap",this.ctx.engine.width,this.ctx.engine.height,true);
		this.ctx.engine.pushTarget(texture);
		this.ctx.engine.clear(this.enableSky ? 0 : 16711680,1);
		h3d_pass_Default.prototype.draw.call(this,passes,sort);
		this.ctx.engine.popTarget();
		this.ctx.setGlobalID(this.depthMapId,{ texture : texture});
	}
	,__class__: h3d_scene_fwd_DepthPass
});
var h3d_scene_fwd_NormalPass = function() {
	h3d_pass_Default.call(this,"normal");
	this.normalMapId = hxsl_Globals.allocID("normalMap");
};
$hxClasses["h3d.scene.fwd.NormalPass"] = h3d_scene_fwd_NormalPass;
h3d_scene_fwd_NormalPass.__name__ = "h3d.scene.fwd.NormalPass";
h3d_scene_fwd_NormalPass.__super__ = h3d_pass_Default;
h3d_scene_fwd_NormalPass.prototype = $extend(h3d_pass_Default.prototype,{
	normalMapId: null
	,getOutputs: function() {
		return [hxsl_Output.PackNormal(hxsl_Output.Value("output.normal"))];
	}
	,draw: function(passes,sort) {
		var texture = this.ctx.textures.allocTarget("normalMap",this.ctx.engine.width,this.ctx.engine.height);
		this.ctx.engine.pushTarget(texture);
		this.ctx.engine.clear(8421504,1);
		h3d_pass_Default.prototype.draw.call(this,passes,sort);
		this.ctx.engine.popTarget();
		this.ctx.setGlobalID(this.normalMapId,texture);
	}
	,__class__: h3d_scene_fwd_NormalPass
});
var h3d_scene_fwd_Renderer = function() {
	this.shadow = new h3d_pass_DefaultShadowMap(1024);
	this.normal = new h3d_scene_fwd_NormalPass();
	this.depth = new h3d_scene_fwd_DepthPass();
	h3d_scene_Renderer.call(this);
	this.defaultPass = new h3d_pass_Default("default");
	this.allPasses = [this.defaultPass,this.depth,this.normal,this.shadow];
};
$hxClasses["h3d.scene.fwd.Renderer"] = h3d_scene_fwd_Renderer;
h3d_scene_fwd_Renderer.__name__ = "h3d.scene.fwd.Renderer";
h3d_scene_fwd_Renderer.__super__ = h3d_scene_Renderer;
h3d_scene_fwd_Renderer.prototype = $extend(h3d_scene_Renderer.prototype,{
	depth: null
	,normal: null
	,shadow: null
	,renderPass: function(p,passes,sort) {
		p.draw(passes,sort);
	}
	,render: function() {
		if(this.has("shadow")) {
			this.renderPass(this.shadow,this.get("shadow"));
		}
		if(this.has("depth")) {
			this.renderPass(this.depth,this.get("depth"));
		}
		if(this.has("normal")) {
			this.renderPass(this.normal,this.get("normal"));
		}
		this.renderPass(this.defaultPass,this.get("default"));
		this.renderPass(this.defaultPass,this.get("alpha"),this.backToFront);
		this.renderPass(this.defaultPass,this.get("additive"));
	}
	,__class__: h3d_scene_fwd_Renderer
});
var h3d_shader_AmbientLight = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.AmbientLight"] = h3d_shader_AmbientLight;
h3d_shader_AmbientLight.__name__ = "h3d.shader.AmbientLight";
h3d_shader_AmbientLight.__super__ = hxsl_Shader;
h3d_shader_AmbientLight.prototype = $extend(hxsl_Shader.prototype,{
	additive__: null
	,get_additive: function() {
		return this.additive__;
	}
	,set_additive: function(_v) {
		this.constModified = true;
		return this.additive__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 2;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.additive__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_AmbientLight
	,__properties__: {set_additive:"set_additive",get_additive:"get_additive"}
});
var h3d_shader_Base2d = function() {
	this.viewportB__ = new h3d_Vector();
	this.viewportA__ = new h3d_Vector();
	this.halfPixelInverse__ = new h3d_Vector();
	this.uvPos__ = new h3d_Vector();
	this.filterMatrixB__ = new h3d_Vector();
	this.filterMatrixA__ = new h3d_Vector();
	this.absoluteMatrixB__ = new h3d_Vector();
	this.absoluteMatrixA__ = new h3d_Vector();
	this.color__ = new h3d_Vector();
	this.zValue__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.Base2d"] = h3d_shader_Base2d;
h3d_shader_Base2d.__name__ = "h3d.shader.Base2d";
h3d_shader_Base2d.__super__ = hxsl_Shader;
h3d_shader_Base2d.prototype = $extend(hxsl_Shader.prototype,{
	zValue__: null
	,get_zValue: function() {
		return this.zValue__;
	}
	,set_zValue: function(_v) {
		return this.zValue__ = _v;
	}
	,texture__: null
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,isRelative__: null
	,get_isRelative: function() {
		return this.isRelative__;
	}
	,set_isRelative: function(_v) {
		this.constModified = true;
		return this.isRelative__ = _v;
	}
	,color__: null
	,get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,absoluteMatrixA__: null
	,get_absoluteMatrixA: function() {
		return this.absoluteMatrixA__;
	}
	,set_absoluteMatrixA: function(_v) {
		return this.absoluteMatrixA__ = _v;
	}
	,absoluteMatrixB__: null
	,get_absoluteMatrixB: function() {
		return this.absoluteMatrixB__;
	}
	,set_absoluteMatrixB: function(_v) {
		return this.absoluteMatrixB__ = _v;
	}
	,filterMatrixA__: null
	,get_filterMatrixA: function() {
		return this.filterMatrixA__;
	}
	,set_filterMatrixA: function(_v) {
		return this.filterMatrixA__ = _v;
	}
	,filterMatrixB__: null
	,get_filterMatrixB: function() {
		return this.filterMatrixB__;
	}
	,set_filterMatrixB: function(_v) {
		return this.filterMatrixB__ = _v;
	}
	,hasUVPos__: null
	,get_hasUVPos: function() {
		return this.hasUVPos__;
	}
	,set_hasUVPos: function(_v) {
		this.constModified = true;
		return this.hasUVPos__ = _v;
	}
	,uvPos__: null
	,get_uvPos: function() {
		return this.uvPos__;
	}
	,set_uvPos: function(_v) {
		return this.uvPos__ = _v;
	}
	,killAlpha__: null
	,get_killAlpha: function() {
		return this.killAlpha__;
	}
	,set_killAlpha: function(_v) {
		this.constModified = true;
		return this.killAlpha__ = _v;
	}
	,pixelAlign__: null
	,get_pixelAlign: function() {
		return this.pixelAlign__;
	}
	,set_pixelAlign: function(_v) {
		this.constModified = true;
		return this.pixelAlign__ = _v;
	}
	,halfPixelInverse__: null
	,get_halfPixelInverse: function() {
		return this.halfPixelInverse__;
	}
	,set_halfPixelInverse: function(_v) {
		return this.halfPixelInverse__ = _v;
	}
	,viewportA__: null
	,get_viewportA: function() {
		return this.viewportA__;
	}
	,set_viewportA: function(_v) {
		return this.viewportA__ = _v;
	}
	,viewportB__: null
	,get_viewportB: function() {
		return this.viewportB__;
	}
	,set_viewportB: function(_v) {
		return this.viewportB__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.isRelative__) {
			this.constBits |= 1;
		}
		if(this.hasUVPos__) {
			this.constBits |= 2;
		}
		if(this.killAlpha__) {
			this.constBits |= 4;
		}
		if(this.pixelAlign__) {
			this.constBits |= 8;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.zValue__;
		case 1:
			return this.texture__;
		case 2:
			return this.isRelative__;
		case 3:
			return this.color__;
		case 4:
			return this.absoluteMatrixA__;
		case 5:
			return this.absoluteMatrixB__;
		case 6:
			return this.filterMatrixA__;
		case 7:
			return this.filterMatrixB__;
		case 8:
			return this.hasUVPos__;
		case 9:
			return this.uvPos__;
		case 10:
			return this.killAlpha__;
		case 11:
			return this.pixelAlign__;
		case 12:
			return this.halfPixelInverse__;
		case 13:
			return this.viewportA__;
		case 14:
			return this.viewportB__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.zValue__;
		}
		return 0.;
	}
	,__class__: h3d_shader_Base2d
	,__properties__: {set_viewportB:"set_viewportB",get_viewportB:"get_viewportB",set_viewportA:"set_viewportA",get_viewportA:"get_viewportA",set_halfPixelInverse:"set_halfPixelInverse",get_halfPixelInverse:"get_halfPixelInverse",set_pixelAlign:"set_pixelAlign",get_pixelAlign:"get_pixelAlign",set_killAlpha:"set_killAlpha",get_killAlpha:"get_killAlpha",set_uvPos:"set_uvPos",get_uvPos:"get_uvPos",set_hasUVPos:"set_hasUVPos",get_hasUVPos:"get_hasUVPos",set_filterMatrixB:"set_filterMatrixB",get_filterMatrixB:"get_filterMatrixB",set_filterMatrixA:"set_filterMatrixA",get_filterMatrixA:"get_filterMatrixA",set_absoluteMatrixB:"set_absoluteMatrixB",get_absoluteMatrixB:"get_absoluteMatrixB",set_absoluteMatrixA:"set_absoluteMatrixA",get_absoluteMatrixA:"get_absoluteMatrixA",set_color:"set_color",get_color:"get_color",set_isRelative:"set_isRelative",get_isRelative:"get_isRelative",set_texture:"set_texture",get_texture:"get_texture",set_zValue:"set_zValue",get_zValue:"get_zValue"}
});
var h3d_shader_BaseMesh = function() {
	this.specularColor__ = new h3d_Vector();
	this.specularAmount__ = 0;
	this.specularPower__ = 0;
	this.color__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.color__;
	var x = 1;
	var y = 1;
	var z = 1;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	var _this = this.specularColor__;
	var x = 1;
	var y = 1;
	var z = 1;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	this.specularPower__ = 50;
	this.specularAmount__ = 1;
};
$hxClasses["h3d.shader.BaseMesh"] = h3d_shader_BaseMesh;
h3d_shader_BaseMesh.__name__ = "h3d.shader.BaseMesh";
h3d_shader_BaseMesh.__super__ = hxsl_Shader;
h3d_shader_BaseMesh.prototype = $extend(hxsl_Shader.prototype,{
	color__: null
	,get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,specularPower__: null
	,get_specularPower: function() {
		return this.specularPower__;
	}
	,set_specularPower: function(_v) {
		return this.specularPower__ = _v;
	}
	,specularAmount__: null
	,get_specularAmount: function() {
		return this.specularAmount__;
	}
	,set_specularAmount: function(_v) {
		return this.specularAmount__ = _v;
	}
	,specularColor__: null
	,get_specularColor: function() {
		return this.specularColor__;
	}
	,set_specularColor: function(_v) {
		return this.specularColor__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.color__;
		case 1:
			return this.specularPower__;
		case 2:
			return this.specularAmount__;
		case 3:
			return this.specularColor__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 1:
			return this.specularPower__;
		case 2:
			return this.specularAmount__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_shader_BaseMesh
	,__properties__: {set_specularColor:"set_specularColor",get_specularColor:"get_specularColor",set_specularAmount:"set_specularAmount",get_specularAmount:"get_specularAmount",set_specularPower:"set_specularPower",get_specularPower:"get_specularPower",set_color:"set_color",get_color:"get_color"}
});
var h3d_shader_Blur = function() {
	this.cubeDir__ = new h3d_Matrix();
	this.fixedColor__ = new h3d_Vector();
	this.pixel__ = new h3d_Vector();
	this.offsets__ = [];
	this.values__ = [];
	this.Quality__ = 0;
	this.cameraInverseViewProj__ = new h3d_Matrix();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.Blur"] = h3d_shader_Blur;
h3d_shader_Blur.__name__ = "h3d.shader.Blur";
h3d_shader_Blur.__super__ = h3d_shader_ScreenShader;
h3d_shader_Blur.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	cameraInverseViewProj__: null
	,get_cameraInverseViewProj: function() {
		return this.cameraInverseViewProj__;
	}
	,set_cameraInverseViewProj: function(_v) {
		return this.cameraInverseViewProj__ = _v;
	}
	,texture__: null
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,depthTexture__: null
	,get_depthTexture: function() {
		return this.depthTexture__;
	}
	,set_depthTexture: function(_v) {
		return this.depthTexture__ = _v;
	}
	,Quality__: null
	,get_Quality: function() {
		return this.Quality__;
	}
	,set_Quality: function(_v) {
		this.constModified = true;
		return this.Quality__ = _v;
	}
	,isDepth__: null
	,get_isDepth: function() {
		return this.isDepth__;
	}
	,set_isDepth: function(_v) {
		this.constModified = true;
		return this.isDepth__ = _v;
	}
	,values__: null
	,get_values: function() {
		return this.values__;
	}
	,set_values: function(_v) {
		return this.values__ = _v;
	}
	,offsets__: null
	,get_offsets: function() {
		return this.offsets__;
	}
	,set_offsets: function(_v) {
		return this.offsets__ = _v;
	}
	,pixel__: null
	,get_pixel: function() {
		return this.pixel__;
	}
	,set_pixel: function(_v) {
		return this.pixel__ = _v;
	}
	,hasFixedColor__: null
	,get_hasFixedColor: function() {
		return this.hasFixedColor__;
	}
	,set_hasFixedColor: function(_v) {
		this.constModified = true;
		return this.hasFixedColor__ = _v;
	}
	,smoothFixedColor__: null
	,get_smoothFixedColor: function() {
		return this.smoothFixedColor__;
	}
	,set_smoothFixedColor: function(_v) {
		this.constModified = true;
		return this.smoothFixedColor__ = _v;
	}
	,fixedColor__: null
	,get_fixedColor: function() {
		return this.fixedColor__;
	}
	,set_fixedColor: function(_v) {
		return this.fixedColor__ = _v;
	}
	,isDepthDependant__: null
	,get_isDepthDependant: function() {
		return this.isDepthDependant__;
	}
	,set_isDepthDependant: function(_v) {
		this.constModified = true;
		return this.isDepthDependant__ = _v;
	}
	,hasNormal__: null
	,get_hasNormal: function() {
		return this.hasNormal__;
	}
	,set_hasNormal: function(_v) {
		this.constModified = true;
		return this.hasNormal__ = _v;
	}
	,normalTexture__: null
	,get_normalTexture: function() {
		return this.normalTexture__;
	}
	,set_normalTexture: function(_v) {
		return this.normalTexture__ = _v;
	}
	,isCube__: null
	,get_isCube: function() {
		return this.isCube__;
	}
	,set_isCube: function(_v) {
		this.constModified = true;
		return this.isCube__ = _v;
	}
	,cubeTexture__: null
	,get_cubeTexture: function() {
		return this.cubeTexture__;
	}
	,set_cubeTexture: function(_v) {
		return this.cubeTexture__ = _v;
	}
	,cubeDir__: null
	,get_cubeDir: function() {
		return this.cubeDir__;
	}
	,set_cubeDir: function(_v) {
		return this.cubeDir__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.Quality__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("Quality" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		if(this.isDepth__) {
			this.constBits |= 256;
		}
		if(this.hasFixedColor__) {
			this.constBits |= 512;
		}
		if(this.smoothFixedColor__) {
			this.constBits |= 1024;
		}
		if(this.isDepthDependant__) {
			this.constBits |= 2048;
		}
		if(this.hasNormal__) {
			this.constBits |= 4096;
		}
		if(this.isCube__) {
			this.constBits |= 8192;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.cameraInverseViewProj__;
		case 2:
			return this.texture__;
		case 3:
			return this.depthTexture__;
		case 4:
			return this.Quality__;
		case 5:
			return this.isDepth__;
		case 6:
			return this.values__;
		case 7:
			return this.offsets__;
		case 8:
			return this.pixel__;
		case 9:
			return this.hasFixedColor__;
		case 10:
			return this.smoothFixedColor__;
		case 11:
			return this.fixedColor__;
		case 12:
			return this.isDepthDependant__;
		case 13:
			return this.hasNormal__;
		case 14:
			return this.normalTexture__;
		case 15:
			return this.isCube__;
		case 16:
			return this.cubeTexture__;
		case 17:
			return this.cubeDir__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_Blur
	,__properties__: $extend(h3d_shader_ScreenShader.prototype.__properties__,{set_cubeDir:"set_cubeDir",get_cubeDir:"get_cubeDir",set_cubeTexture:"set_cubeTexture",get_cubeTexture:"get_cubeTexture",set_isCube:"set_isCube",get_isCube:"get_isCube",set_normalTexture:"set_normalTexture",get_normalTexture:"get_normalTexture",set_hasNormal:"set_hasNormal",get_hasNormal:"get_hasNormal",set_isDepthDependant:"set_isDepthDependant",get_isDepthDependant:"get_isDepthDependant",set_fixedColor:"set_fixedColor",get_fixedColor:"get_fixedColor",set_smoothFixedColor:"set_smoothFixedColor",get_smoothFixedColor:"get_smoothFixedColor",set_hasFixedColor:"set_hasFixedColor",get_hasFixedColor:"get_hasFixedColor",set_pixel:"set_pixel",get_pixel:"get_pixel",set_offsets:"set_offsets",get_offsets:"get_offsets",set_values:"set_values",get_values:"get_values",set_isDepth:"set_isDepth",get_isDepth:"get_isDepth",set_Quality:"set_Quality",get_Quality:"get_Quality",set_depthTexture:"set_depthTexture",get_depthTexture:"get_depthTexture",set_texture:"set_texture",get_texture:"get_texture",set_cameraInverseViewProj:"set_cameraInverseViewProj",get_cameraInverseViewProj:"get_cameraInverseViewProj"})
});
var h3d_shader_ShaderBuffers = function(s) {
	this.globals = new Float32Array(s.globalsSize << 2);
	this.params = new Float32Array(s.paramsSize << 2);
	this.tex = new Array(s.texturesCount);
	this.buffers = s.bufferCount > 0 ? new Array(s.bufferCount) : null;
};
$hxClasses["h3d.shader.ShaderBuffers"] = h3d_shader_ShaderBuffers;
h3d_shader_ShaderBuffers.__name__ = "h3d.shader.ShaderBuffers";
h3d_shader_ShaderBuffers.prototype = {
	globals: null
	,params: null
	,tex: null
	,buffers: null
	,grow: function(s) {
		var ng = s.globalsSize << 2;
		var np = s.paramsSize << 2;
		var nt = s.texturesCount;
		var nb = s.bufferCount;
		if(this.globals.length < ng) {
			this.globals = new Float32Array(ng);
		}
		if(this.params.length < np) {
			this.params = new Float32Array(np);
		}
		if(this.tex.length < nt) {
			this.tex = new Array(nt);
		}
		if(nb > 0 && (this.buffers == null || this.buffers.length < nb)) {
			this.buffers = new Array(nb);
		}
	}
	,__class__: h3d_shader_ShaderBuffers
};
var h3d_shader_Buffers = function(s) {
	this.vertex = new h3d_shader_ShaderBuffers(s.vertex);
	this.fragment = new h3d_shader_ShaderBuffers(s.fragment);
};
$hxClasses["h3d.shader.Buffers"] = h3d_shader_Buffers;
h3d_shader_Buffers.__name__ = "h3d.shader.Buffers";
h3d_shader_Buffers.prototype = {
	vertex: null
	,fragment: null
	,__class__: h3d_shader_Buffers
};
var h3d_shader_ColorAdd = function(color) {
	if(color == null) {
		color = 0;
	}
	this.color__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.color__;
	_this.x = (color >> 16 & 255) / 255;
	_this.y = (color >> 8 & 255) / 255;
	_this.z = (color & 255) / 255;
	_this.w = (color >>> 24) / 255;
};
$hxClasses["h3d.shader.ColorAdd"] = h3d_shader_ColorAdd;
h3d_shader_ColorAdd.__name__ = "h3d.shader.ColorAdd";
h3d_shader_ColorAdd.__super__ = hxsl_Shader;
h3d_shader_ColorAdd.prototype = $extend(hxsl_Shader.prototype,{
	color__: null
	,get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.color__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_ColorAdd
	,__properties__: {set_color:"set_color",get_color:"get_color"}
});
var h3d_shader_ColorKey = function(v) {
	if(v == null) {
		v = 0;
	}
	this.colorKey__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.colorKey__;
	_this.x = (v >> 16 & 255) / 255;
	_this.y = (v >> 8 & 255) / 255;
	_this.z = (v & 255) / 255;
	_this.w = (v >>> 24) / 255;
};
$hxClasses["h3d.shader.ColorKey"] = h3d_shader_ColorKey;
h3d_shader_ColorKey.__name__ = "h3d.shader.ColorKey";
h3d_shader_ColorKey.__super__ = hxsl_Shader;
h3d_shader_ColorKey.prototype = $extend(hxsl_Shader.prototype,{
	colorKey__: null
	,get_colorKey: function() {
		return this.colorKey__;
	}
	,set_colorKey: function(_v) {
		return this.colorKey__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.colorKey__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_ColorKey
	,__properties__: {set_colorKey:"set_colorKey",get_colorKey:"get_colorKey"}
});
var h3d_shader_ColorMatrix = function(m) {
	this.enabled__ = true;
	this.matrix__ = new h3d_Matrix();
	hxsl_Shader.call(this);
	if(m != null) {
		this.matrix__.loadValues(m);
	} else {
		this.matrix__.identity();
	}
};
$hxClasses["h3d.shader.ColorMatrix"] = h3d_shader_ColorMatrix;
h3d_shader_ColorMatrix.__name__ = "h3d.shader.ColorMatrix";
h3d_shader_ColorMatrix.__super__ = hxsl_Shader;
h3d_shader_ColorMatrix.prototype = $extend(hxsl_Shader.prototype,{
	matrix__: null
	,get_matrix: function() {
		return this.matrix__;
	}
	,set_matrix: function(_v) {
		return this.matrix__ = _v;
	}
	,enabled__: null
	,get_enabled: function() {
		return this.enabled__;
	}
	,set_enabled: function(_v) {
		this.constModified = true;
		return this.enabled__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.enabled__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.matrix__;
		case 1:
			return this.enabled__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_ColorMatrix
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled",set_matrix:"set_matrix",get_matrix:"get_matrix"}
});
var h3d_shader_DirShadow = function() {
	this.poissonDisk__ = [];
	this.shadowBias__ = 0;
	this.shadowProj__ = new h3d_Matrix();
	this.shadowMapChannel__ = hxsl_Channel.Unknown;
	this.shadowRes__ = new h3d_Vector();
	this.pcfScale__ = 0;
	this.PCF_SAMPLES__ = 0;
	this.shadowPower__ = 0;
	hxsl_Shader.call(this);
	this.set_pcfQuality(1);
};
$hxClasses["h3d.shader.DirShadow"] = h3d_shader_DirShadow;
h3d_shader_DirShadow.__name__ = "h3d.shader.DirShadow";
h3d_shader_DirShadow.__super__ = hxsl_Shader;
h3d_shader_DirShadow.prototype = $extend(hxsl_Shader.prototype,{
	set_pcfQuality: function(q) {
		var _v;
		switch(q) {
		case 2:
			_v = [new h3d_Vector(-0.326,-0.406),new h3d_Vector(-0.840,-0.074),new h3d_Vector(-0.696,0.457),new h3d_Vector(-0.203,0.621),new h3d_Vector(0.962,-0.195),new h3d_Vector(0.473,-0.480),new h3d_Vector(0.519,0.767),new h3d_Vector(0.185,-0.893),new h3d_Vector(0.507,0.064),new h3d_Vector(0.896,0.412),new h3d_Vector(-0.322,-0.933),new h3d_Vector(-0.792,-0.598)];
			break;
		case 3:
			_v = [new h3d_Vector(-0.613392,0.617481),new h3d_Vector(0.170019,-0.040254),new h3d_Vector(-0.299417,0.791925),new h3d_Vector(0.645680,0.493210),new h3d_Vector(-0.651784,0.717887),new h3d_Vector(0.421003,0.027070),new h3d_Vector(-0.817194,-0.271096),new h3d_Vector(-0.705374,-0.668203),new h3d_Vector(0.977050,-0.108615),new h3d_Vector(0.063326,0.142369),new h3d_Vector(0.203528,0.214331),new h3d_Vector(-0.667531,0.326090),new h3d_Vector(-0.098422,-0.295755),new h3d_Vector(-0.885922,0.215369),new h3d_Vector(0.566637,0.605213),new h3d_Vector(0.039766,-0.396100),new h3d_Vector(0.751946,0.453352),new h3d_Vector(0.078707,-0.715323),new h3d_Vector(-0.075838,-0.529344),new h3d_Vector(0.724479,-0.580798),new h3d_Vector(0.222999,-0.215125),new h3d_Vector(-0.467574,-0.405438),new h3d_Vector(-0.248268,-0.814753),new h3d_Vector(0.354411,-0.887570),new h3d_Vector(0.175817,0.382366),new h3d_Vector(0.487472,-0.063082),new h3d_Vector(-0.084078,0.898312),new h3d_Vector(0.488876,-0.783441),new h3d_Vector(0.470016,0.217933),new h3d_Vector(-0.696890,-0.549791),new h3d_Vector(-0.149693,0.605762),new h3d_Vector(0.034211,0.979980),new h3d_Vector(0.503098,-0.308878),new h3d_Vector(-0.016205,-0.872921),new h3d_Vector(0.385784,-0.393902),new h3d_Vector(-0.146886,-0.859249),new h3d_Vector(0.643361,0.164098),new h3d_Vector(0.634388,-0.049471),new h3d_Vector(-0.688894,0.007843),new h3d_Vector(0.464034,-0.188818),new h3d_Vector(-0.440840,0.137486),new h3d_Vector(0.364483,0.511704),new h3d_Vector(0.034028,0.325968),new h3d_Vector(0.099094,-0.308023),new h3d_Vector(0.693960,-0.366253),new h3d_Vector(0.678884,-0.204688),new h3d_Vector(0.001801,0.780328),new h3d_Vector(0.145177,-0.898984),new h3d_Vector(0.062655,-0.611866),new h3d_Vector(0.315226,-0.604297),new h3d_Vector(-0.780145,0.486251),new h3d_Vector(-0.371868,0.882138),new h3d_Vector(0.200476,0.494430),new h3d_Vector(-0.494552,-0.711051),new h3d_Vector(0.612476,0.705252),new h3d_Vector(-0.578845,-0.768792),new h3d_Vector(-0.772454,-0.090976),new h3d_Vector(0.504440,0.372295),new h3d_Vector(0.155736,0.065157),new h3d_Vector(0.391522,0.849605),new h3d_Vector(-0.620106,-0.328104),new h3d_Vector(0.789239,-0.419965),new h3d_Vector(-0.545396,0.538133),new h3d_Vector(-0.178564,-0.596057)];
			break;
		default:
			_v = [new h3d_Vector(-0.942,-0.399),new h3d_Vector(0.945,-0.768),new h3d_Vector(-0.094,-0.929),new h3d_Vector(0.344,0.293)];
		}
		this.poissonDisk__ = _v;
		this.constModified = true;
		this.PCF_SAMPLES__ = this.poissonDisk__.length;
		return q;
	}
	,enable__: null
	,get_enable: function() {
		return this.enable__;
	}
	,set_enable: function(_v) {
		this.constModified = true;
		return this.enable__ = _v;
	}
	,USE_ESM__: null
	,get_USE_ESM: function() {
		return this.USE_ESM__;
	}
	,set_USE_ESM: function(_v) {
		this.constModified = true;
		return this.USE_ESM__ = _v;
	}
	,shadowPower__: null
	,get_shadowPower: function() {
		return this.shadowPower__;
	}
	,set_shadowPower: function(_v) {
		return this.shadowPower__ = _v;
	}
	,USE_PCF__: null
	,get_USE_PCF: function() {
		return this.USE_PCF__;
	}
	,set_USE_PCF: function(_v) {
		this.constModified = true;
		return this.USE_PCF__ = _v;
	}
	,PCF_SAMPLES__: null
	,get_PCF_SAMPLES: function() {
		return this.PCF_SAMPLES__;
	}
	,set_PCF_SAMPLES: function(_v) {
		this.constModified = true;
		return this.PCF_SAMPLES__ = _v;
	}
	,pcfScale__: null
	,get_pcfScale: function() {
		return this.pcfScale__;
	}
	,set_pcfScale: function(_v) {
		return this.pcfScale__ = _v;
	}
	,shadowRes__: null
	,get_shadowRes: function() {
		return this.shadowRes__;
	}
	,set_shadowRes: function(_v) {
		return this.shadowRes__ = _v;
	}
	,shadowMap__: null
	,get_shadowMap: function() {
		return this.shadowMap__;
	}
	,set_shadowMap: function(_v) {
		this.constModified = true;
		return this.shadowMap__ = _v;
	}
	,shadowMapChannel__: null
	,shadowProj__: null
	,get_shadowProj: function() {
		return this.shadowProj__;
	}
	,set_shadowProj: function(_v) {
		return this.shadowProj__ = _v;
	}
	,shadowBias__: null
	,get_shadowBias: function() {
		return this.shadowBias__;
	}
	,set_shadowBias: function(_v) {
		return this.shadowBias__ = _v;
	}
	,poissonDisk__: null
	,get_poissonDisk: function() {
		return this.poissonDisk__;
	}
	,set_poissonDisk: function(_v) {
		return this.poissonDisk__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.enable__) {
			this.constBits |= 1;
		}
		if(this.USE_ESM__) {
			this.constBits |= 2;
		}
		if(this.USE_PCF__) {
			this.constBits |= 4;
		}
		var v = this.PCF_SAMPLES__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("PCF_SAMPLES" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v << 3;
		if(this.shadowMap__ == null) {
			this.shadowMapChannel__ = hxsl_Channel.Unknown;
		} else if(this.shadowMapChannel__ == hxsl_Channel.Unknown) {
			if(this.shadowMap__.format == h3d_mat_Texture.nativeFormat) {
				this.shadowMapChannel__ = hxsl_Channel.PackedFloat;
			} else {
				throw haxe_Exception.thrown("shadowMap" + "Channel is not set");
			}
		}
		this.constBits |= (globals.allocChannelID(this.shadowMap__) << 3 | this.shadowMapChannel__._hx_index) << 11;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.enable__;
		case 1:
			return this.USE_ESM__;
		case 2:
			return this.shadowPower__;
		case 3:
			return this.USE_PCF__;
		case 4:
			return this.PCF_SAMPLES__;
		case 5:
			return this.pcfScale__;
		case 6:
			return this.shadowRes__;
		case 7:
			return this.shadowMap__;
		case 8:
			return this.shadowProj__;
		case 9:
			return this.shadowBias__;
		case 10:
			return this.poissonDisk__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 2:
			return this.shadowPower__;
		case 5:
			return this.pcfScale__;
		case 9:
			return this.shadowBias__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_shader_DirShadow
	,__properties__: {set_poissonDisk:"set_poissonDisk",get_poissonDisk:"get_poissonDisk",set_shadowBias:"set_shadowBias",get_shadowBias:"get_shadowBias",set_shadowProj:"set_shadowProj",get_shadowProj:"get_shadowProj",set_shadowMap:"set_shadowMap",get_shadowMap:"get_shadowMap",set_shadowRes:"set_shadowRes",get_shadowRes:"get_shadowRes",set_pcfScale:"set_pcfScale",get_pcfScale:"get_pcfScale",set_PCF_SAMPLES:"set_PCF_SAMPLES",get_PCF_SAMPLES:"get_PCF_SAMPLES",set_USE_PCF:"set_USE_PCF",get_USE_PCF:"get_USE_PCF",set_shadowPower:"set_shadowPower",get_shadowPower:"get_shadowPower",set_USE_ESM:"set_USE_ESM",get_USE_ESM:"get_USE_ESM",set_enable:"set_enable",get_enable:"get_enable",set_pcfQuality:"set_pcfQuality"}
});
var h3d_shader_GenTexture = function() {
	this.color__ = new h3d_Vector();
	this.mode__ = 0;
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.GenTexture"] = h3d_shader_GenTexture;
h3d_shader_GenTexture.__name__ = "h3d.shader.GenTexture";
h3d_shader_GenTexture.__super__ = h3d_shader_ScreenShader;
h3d_shader_GenTexture.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	mode__: null
	,get_mode: function() {
		return this.mode__;
	}
	,set_mode: function(_v) {
		this.constModified = true;
		return this.mode__ = _v;
	}
	,color__: null
	,get_color: function() {
		return this.color__;
	}
	,set_color: function(_v) {
		return this.color__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.mode__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("mode" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.mode__;
		case 2:
			return this.color__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_GenTexture
	,__properties__: $extend(h3d_shader_ScreenShader.prototype.__properties__,{set_color:"set_color",get_color:"get_color",set_mode:"set_mode",get_mode:"get_mode"})
});
var h3d_shader_LineShader = function(width,lengthScale) {
	if(lengthScale == null) {
		lengthScale = 1.;
	}
	if(width == null) {
		width = 1.5;
	}
	this.width__ = 0;
	this.lengthScale__ = 0;
	hxsl_Shader.call(this);
	this.width__ = width;
	this.lengthScale__ = lengthScale;
};
$hxClasses["h3d.shader.LineShader"] = h3d_shader_LineShader;
h3d_shader_LineShader.__name__ = "h3d.shader.LineShader";
h3d_shader_LineShader.__super__ = hxsl_Shader;
h3d_shader_LineShader.prototype = $extend(hxsl_Shader.prototype,{
	lengthScale__: null
	,get_lengthScale: function() {
		return this.lengthScale__;
	}
	,set_lengthScale: function(_v) {
		return this.lengthScale__ = _v;
	}
	,width__: null
	,get_width: function() {
		return this.width__;
	}
	,set_width: function(_v) {
		return this.width__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.lengthScale__;
		case 1:
			return this.width__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 0:
			return this.lengthScale__;
		case 1:
			return this.width__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_shader_LineShader
	,__properties__: {set_width:"set_width",get_width:"get_width",set_lengthScale:"set_lengthScale",get_lengthScale:"get_lengthScale"}
});
var h3d_shader_MinMaxShader = function() {
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.MinMaxShader"] = h3d_shader_MinMaxShader;
h3d_shader_MinMaxShader.__name__ = "h3d.shader.MinMaxShader";
h3d_shader_MinMaxShader.__super__ = h3d_shader_ScreenShader;
h3d_shader_MinMaxShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	texA__: null
	,get_texA: function() {
		return this.texA__;
	}
	,set_texA: function(_v) {
		return this.texA__ = _v;
	}
	,texB__: null
	,get_texB: function() {
		return this.texB__;
	}
	,set_texB: function(_v) {
		return this.texB__ = _v;
	}
	,isMax__: null
	,get_isMax: function() {
		return this.isMax__;
	}
	,set_isMax: function(_v) {
		this.constModified = true;
		return this.isMax__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.isMax__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texA__;
		case 2:
			return this.texB__;
		case 3:
			return this.isMax__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_MinMaxShader
	,__properties__: $extend(h3d_shader_ScreenShader.prototype.__properties__,{set_isMax:"set_isMax",get_isMax:"get_isMax",set_texB:"set_texB",get_texB:"get_texB",set_texA:"set_texA",get_texA:"get_texA"})
});
var h3d_shader_CubeMinMaxShader = function() {
	this.mat__ = new h3d_Matrix();
	h3d_shader_ScreenShader.call(this);
};
$hxClasses["h3d.shader.CubeMinMaxShader"] = h3d_shader_CubeMinMaxShader;
h3d_shader_CubeMinMaxShader.__name__ = "h3d.shader.CubeMinMaxShader";
h3d_shader_CubeMinMaxShader.__super__ = h3d_shader_ScreenShader;
h3d_shader_CubeMinMaxShader.prototype = $extend(h3d_shader_ScreenShader.prototype,{
	texA__: null
	,get_texA: function() {
		return this.texA__;
	}
	,set_texA: function(_v) {
		return this.texA__ = _v;
	}
	,texB__: null
	,get_texB: function() {
		return this.texB__;
	}
	,set_texB: function(_v) {
		return this.texB__ = _v;
	}
	,isMax__: null
	,get_isMax: function() {
		return this.isMax__;
	}
	,set_isMax: function(_v) {
		this.constModified = true;
		return this.isMax__ = _v;
	}
	,mat__: null
	,get_mat: function() {
		return this.mat__;
	}
	,set_mat: function(_v) {
		return this.mat__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.isMax__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.flipY__;
		case 1:
			return this.texA__;
		case 2:
			return this.texB__;
		case 3:
			return this.isMax__;
		case 4:
			return this.mat__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 0) {
			return this.flipY__;
		}
		return 0.;
	}
	,__class__: h3d_shader_CubeMinMaxShader
	,__properties__: $extend(h3d_shader_ScreenShader.prototype.__properties__,{set_mat:"set_mat",get_mat:"get_mat",set_isMax:"set_isMax",get_isMax:"get_isMax",set_texB:"set_texB",get_texB:"get_texB",set_texA:"set_texA",get_texA:"get_texA"})
});
var h3d_shader_NormalMap = function(texture) {
	hxsl_Shader.call(this);
	this.texture__ = texture;
};
$hxClasses["h3d.shader.NormalMap"] = h3d_shader_NormalMap;
h3d_shader_NormalMap.__name__ = "h3d.shader.NormalMap";
h3d_shader_NormalMap.__super__ = hxsl_Shader;
h3d_shader_NormalMap.prototype = $extend(hxsl_Shader.prototype,{
	texture__: null
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.texture__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_NormalMap
	,__properties__: {set_texture:"set_texture",get_texture:"get_texture"}
});
var h3d_shader_Shadow = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.Shadow"] = h3d_shader_Shadow;
h3d_shader_Shadow.__name__ = "h3d.shader.Shadow";
h3d_shader_Shadow.__super__ = hxsl_Shader;
h3d_shader_Shadow.prototype = $extend(hxsl_Shader.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_Shadow
});
var h3d_shader_SignedDistanceField = function() {
	this.smoothing__ = 0.041666666666666664;
	this.alphaCutoff__ = 0.5;
	this.autoSmoothing__ = false;
	this.channel__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.SignedDistanceField"] = h3d_shader_SignedDistanceField;
h3d_shader_SignedDistanceField.__name__ = "h3d.shader.SignedDistanceField";
h3d_shader_SignedDistanceField.__super__ = hxsl_Shader;
h3d_shader_SignedDistanceField.prototype = $extend(hxsl_Shader.prototype,{
	channel__: null
	,get_channel: function() {
		return this.channel__;
	}
	,set_channel: function(_v) {
		this.constModified = true;
		return this.channel__ = _v;
	}
	,autoSmoothing__: null
	,get_autoSmoothing: function() {
		return this.autoSmoothing__;
	}
	,set_autoSmoothing: function(_v) {
		this.constModified = true;
		return this.autoSmoothing__ = _v;
	}
	,alphaCutoff__: null
	,get_alphaCutoff: function() {
		return this.alphaCutoff__;
	}
	,set_alphaCutoff: function(_v) {
		return this.alphaCutoff__ = _v;
	}
	,smoothing__: null
	,get_smoothing: function() {
		return this.smoothing__;
	}
	,set_smoothing: function(_v) {
		return this.smoothing__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.channel__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("channel" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		if(this.autoSmoothing__) {
			this.constBits |= 256;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.channel__;
		case 1:
			return this.autoSmoothing__;
		case 2:
			return this.alphaCutoff__;
		case 3:
			return this.smoothing__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		switch(index) {
		case 2:
			return this.alphaCutoff__;
		case 3:
			return this.smoothing__;
		default:
		}
		return 0.;
	}
	,__class__: h3d_shader_SignedDistanceField
	,__properties__: {set_smoothing:"set_smoothing",get_smoothing:"get_smoothing",set_alphaCutoff:"set_alphaCutoff",get_alphaCutoff:"get_alphaCutoff",set_autoSmoothing:"set_autoSmoothing",get_autoSmoothing:"get_autoSmoothing",set_channel:"set_channel",get_channel:"get_channel"}
});
var h3d_shader_SkinBase = function() {
	this.bonesMatrixes__ = [];
	this.fourBonesByVertex__ = false;
	this.MaxBones__ = 0;
	hxsl_Shader.call(this);
	this.constModified = true;
	this.MaxBones__ = 34;
};
$hxClasses["h3d.shader.SkinBase"] = h3d_shader_SkinBase;
h3d_shader_SkinBase.__name__ = "h3d.shader.SkinBase";
h3d_shader_SkinBase.__super__ = hxsl_Shader;
h3d_shader_SkinBase.prototype = $extend(hxsl_Shader.prototype,{
	MaxBones__: null
	,get_MaxBones: function() {
		return this.MaxBones__;
	}
	,set_MaxBones: function(_v) {
		this.constModified = true;
		return this.MaxBones__ = _v;
	}
	,fourBonesByVertex__: null
	,get_fourBonesByVertex: function() {
		return this.fourBonesByVertex__;
	}
	,set_fourBonesByVertex: function(_v) {
		this.constModified = true;
		return this.fourBonesByVertex__ = _v;
	}
	,bonesMatrixes__: null
	,get_bonesMatrixes: function() {
		return this.bonesMatrixes__;
	}
	,set_bonesMatrixes: function(_v) {
		return this.bonesMatrixes__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.MaxBones__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("MaxBones" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		if(this.fourBonesByVertex__) {
			this.constBits |= 256;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.MaxBones__;
		case 1:
			return this.fourBonesByVertex__;
		case 2:
			return this.bonesMatrixes__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_SkinBase
	,__properties__: {set_bonesMatrixes:"set_bonesMatrixes",get_bonesMatrixes:"get_bonesMatrixes",set_fourBonesByVertex:"set_fourBonesByVertex",get_fourBonesByVertex:"get_fourBonesByVertex",set_MaxBones:"set_MaxBones",get_MaxBones:"get_MaxBones"}
});
var h3d_shader_Skin = function() {
	h3d_shader_SkinBase.call(this);
};
$hxClasses["h3d.shader.Skin"] = h3d_shader_Skin;
h3d_shader_Skin.__name__ = "h3d.shader.Skin";
h3d_shader_Skin.__super__ = h3d_shader_SkinBase;
h3d_shader_Skin.prototype = $extend(h3d_shader_SkinBase.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.MaxBones__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("MaxBones" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		if(this.fourBonesByVertex__) {
			this.constBits |= 256;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.MaxBones__;
		case 1:
			return this.fourBonesByVertex__;
		case 2:
			return this.bonesMatrixes__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_Skin
});
var h3d_shader_SkinTangent = function() {
	h3d_shader_SkinBase.call(this);
};
$hxClasses["h3d.shader.SkinTangent"] = h3d_shader_SkinTangent;
h3d_shader_SkinTangent.__name__ = "h3d.shader.SkinTangent";
h3d_shader_SkinTangent.__super__ = h3d_shader_SkinBase;
h3d_shader_SkinTangent.prototype = $extend(h3d_shader_SkinBase.prototype,{
	updateConstants: function(globals) {
		this.constBits = 0;
		var v = this.MaxBones__;
		if(v >>> 8 != 0) {
			throw haxe_Exception.thrown("MaxBones" + " is out of range " + v + ">" + 255);
		}
		this.constBits |= v;
		if(this.fourBonesByVertex__) {
			this.constBits |= 256;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.MaxBones__;
		case 1:
			return this.fourBonesByVertex__;
		case 2:
			return this.bonesMatrixes__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_SkinTangent
});
var h3d_shader_SpecularTexture = function(tex) {
	hxsl_Shader.call(this);
	this.texture__ = tex;
};
$hxClasses["h3d.shader.SpecularTexture"] = h3d_shader_SpecularTexture;
h3d_shader_SpecularTexture.__name__ = "h3d.shader.SpecularTexture";
h3d_shader_SpecularTexture.__super__ = hxsl_Shader;
h3d_shader_SpecularTexture.prototype = $extend(hxsl_Shader.prototype,{
	texture__: null
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.texture__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_SpecularTexture
	,__properties__: {set_texture:"set_texture",get_texture:"get_texture"}
});
var h3d_shader_Texture = function(tex) {
	this.killAlphaThreshold__ = 0;
	hxsl_Shader.call(this);
	this.texture__ = tex;
	this.killAlphaThreshold__ = h3d_mat_Defaults.defaultKillAlphaThreshold;
};
$hxClasses["h3d.shader.Texture"] = h3d_shader_Texture;
h3d_shader_Texture.__name__ = "h3d.shader.Texture";
h3d_shader_Texture.__super__ = hxsl_Shader;
h3d_shader_Texture.prototype = $extend(hxsl_Shader.prototype,{
	additive__: null
	,get_additive: function() {
		return this.additive__;
	}
	,set_additive: function(_v) {
		this.constModified = true;
		return this.additive__ = _v;
	}
	,killAlpha__: null
	,get_killAlpha: function() {
		return this.killAlpha__;
	}
	,set_killAlpha: function(_v) {
		this.constModified = true;
		return this.killAlpha__ = _v;
	}
	,specularAlpha__: null
	,get_specularAlpha: function() {
		return this.specularAlpha__;
	}
	,set_specularAlpha: function(_v) {
		this.constModified = true;
		return this.specularAlpha__ = _v;
	}
	,killAlphaThreshold__: null
	,get_killAlphaThreshold: function() {
		return this.killAlphaThreshold__;
	}
	,set_killAlphaThreshold: function(_v) {
		return this.killAlphaThreshold__ = _v;
	}
	,texture__: null
	,get_texture: function() {
		return this.texture__;
	}
	,set_texture: function(_v) {
		return this.texture__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 1;
		}
		if(this.killAlpha__) {
			this.constBits |= 2;
		}
		if(this.specularAlpha__) {
			this.constBits |= 4;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.additive__;
		case 1:
			return this.killAlpha__;
		case 2:
			return this.specularAlpha__;
		case 3:
			return this.killAlphaThreshold__;
		case 4:
			return this.texture__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		if(index == 3) {
			return this.killAlphaThreshold__;
		}
		return 0.;
	}
	,__class__: h3d_shader_Texture
	,__properties__: {set_texture:"set_texture",get_texture:"get_texture",set_killAlphaThreshold:"set_killAlphaThreshold",get_killAlphaThreshold:"get_killAlphaThreshold",set_specularAlpha:"set_specularAlpha",get_specularAlpha:"get_specularAlpha",set_killAlpha:"set_killAlpha",get_killAlpha:"get_killAlpha",set_additive:"set_additive",get_additive:"get_additive"}
});
var h3d_shader_UVDelta = function(dx,dy,sx,sy) {
	if(sy == null) {
		sy = 1.;
	}
	if(sx == null) {
		sx = 1.;
	}
	if(dy == null) {
		dy = 0.;
	}
	if(dx == null) {
		dx = 0.;
	}
	this.uvScale__ = new h3d_Vector();
	this.uvDelta__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.uvDelta__;
	var x = dx;
	var y = dy;
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = 0.;
	_this.w = 1.;
	var _this = this.uvScale__;
	var x = sx;
	var y = sy;
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = 0.;
	_this.w = 1.;
};
$hxClasses["h3d.shader.UVDelta"] = h3d_shader_UVDelta;
h3d_shader_UVDelta.__name__ = "h3d.shader.UVDelta";
h3d_shader_UVDelta.__super__ = hxsl_Shader;
h3d_shader_UVDelta.prototype = $extend(hxsl_Shader.prototype,{
	uvDelta__: null
	,get_uvDelta: function() {
		return this.uvDelta__;
	}
	,set_uvDelta: function(_v) {
		return this.uvDelta__ = _v;
	}
	,uvScale__: null
	,get_uvScale: function() {
		return this.uvScale__;
	}
	,set_uvScale: function(_v) {
		return this.uvScale__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.uvDelta__;
		case 1:
			return this.uvScale__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_UVDelta
	,__properties__: {set_uvScale:"set_uvScale",get_uvScale:"get_uvScale",set_uvDelta:"set_uvDelta",get_uvDelta:"get_uvDelta"}
});
var h3d_shader_VertexColorAlpha = function() {
	hxsl_Shader.call(this);
};
$hxClasses["h3d.shader.VertexColorAlpha"] = h3d_shader_VertexColorAlpha;
h3d_shader_VertexColorAlpha.__name__ = "h3d.shader.VertexColorAlpha";
h3d_shader_VertexColorAlpha.__super__ = hxsl_Shader;
h3d_shader_VertexColorAlpha.prototype = $extend(hxsl_Shader.prototype,{
	additive__: null
	,get_additive: function() {
		return this.additive__;
	}
	,set_additive: function(_v) {
		this.constModified = true;
		return this.additive__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.additive__) {
			this.constBits |= 1;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		if(index == 0) {
			return this.additive__;
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_VertexColorAlpha
	,__properties__: {set_additive:"set_additive",get_additive:"get_additive"}
});
var h3d_shader_VolumeDecal = function(objectWidth,objectHeight) {
	this.isCentered__ = true;
	this.tangent__ = new h3d_Vector();
	this.normal__ = new h3d_Vector();
	this.scale__ = new h3d_Vector();
	hxsl_Shader.call(this);
	var _this = this.normal__;
	var x = 0;
	var y = 0;
	var z = 1;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	var _this = this.tangent__;
	var x = 1;
	var y = 0;
	var z = 0;
	if(z == null) {
		z = 0.;
	}
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = z;
	_this.w = 1.;
	var _this = this.scale__;
	var x = 1 / objectWidth;
	var y = 1 / objectHeight;
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	_this.x = x;
	_this.y = y;
	_this.z = 0.;
	_this.w = 1.;
};
$hxClasses["h3d.shader.VolumeDecal"] = h3d_shader_VolumeDecal;
h3d_shader_VolumeDecal.__name__ = "h3d.shader.VolumeDecal";
h3d_shader_VolumeDecal.__super__ = hxsl_Shader;
h3d_shader_VolumeDecal.prototype = $extend(hxsl_Shader.prototype,{
	scale__: null
	,get_scale: function() {
		return this.scale__;
	}
	,set_scale: function(_v) {
		return this.scale__ = _v;
	}
	,normal__: null
	,get_normal: function() {
		return this.normal__;
	}
	,set_normal: function(_v) {
		return this.normal__ = _v;
	}
	,tangent__: null
	,get_tangent: function() {
		return this.tangent__;
	}
	,set_tangent: function(_v) {
		return this.tangent__ = _v;
	}
	,isCentered__: null
	,get_isCentered: function() {
		return this.isCentered__;
	}
	,set_isCentered: function(_v) {
		this.constModified = true;
		return this.isCentered__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.isCentered__) {
			this.constBits |= 64;
		}
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.scale__;
		case 1:
			return this.normal__;
		case 2:
			return this.tangent__;
		case 3:
			return this.isCentered__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: h3d_shader_VolumeDecal
	,__properties__: {set_isCentered:"set_isCentered",get_isCentered:"get_isCentered",set_tangent:"set_tangent",get_tangent:"get_tangent",set_normal:"set_normal",get_normal:"get_normal",set_scale:"set_scale",get_scale:"get_scale"}
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
var haxe_EntryPoint = function() { };
$hxClasses["haxe.EntryPoint"] = haxe_EntryPoint;
haxe_EntryPoint.__name__ = "haxe.EntryPoint";
haxe_EntryPoint.processEvents = function() {
	while(true) {
		var f = haxe_EntryPoint.pending.shift();
		if(f == null) {
			break;
		}
		f();
	}
	var time = haxe_MainLoop.tick();
	if(!haxe_MainLoop.hasEvents() && haxe_EntryPoint.threadCount == 0) {
		return -1;
	}
	return time;
};
haxe_EntryPoint.run = function() {
	var nextTick = haxe_EntryPoint.processEvents();
	if(typeof(window) != "undefined") {
		var $window = window;
		var rqf = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame || $window.mozRequestAnimationFrame;
		if(rqf != null) {
			rqf(haxe_EntryPoint.run);
		} else if(nextTick >= 0) {
			setTimeout(haxe_EntryPoint.run,nextTick * 1000);
		}
	} else if(nextTick >= 0) {
		setTimeout(haxe_EntryPoint.run,nextTick * 1000);
	}
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,get_message: function() {
		return this.message;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_message:"get_message"}
});
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_MainEvent = function(f,p) {
	this.isBlocking = true;
	this.f = f;
	this.priority = p;
	this.nextRun = -Infinity;
};
$hxClasses["haxe.MainEvent"] = haxe_MainEvent;
haxe_MainEvent.__name__ = "haxe.MainEvent";
haxe_MainEvent.prototype = {
	f: null
	,prev: null
	,next: null
	,isBlocking: null
	,nextRun: null
	,priority: null
	,__class__: haxe_MainEvent
};
var haxe_MainLoop = function() { };
$hxClasses["haxe.MainLoop"] = haxe_MainLoop;
haxe_MainLoop.__name__ = "haxe.MainLoop";
haxe_MainLoop.hasEvents = function() {
	var p = haxe_MainLoop.pending;
	while(p != null) {
		if(p.isBlocking) {
			return true;
		}
		p = p.next;
	}
	return false;
};
haxe_MainLoop.add = function(f,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(f == null) {
		throw haxe_Exception.thrown("Event function is null");
	}
	var e = new haxe_MainEvent(f,priority);
	var head = haxe_MainLoop.pending;
	if(head != null) {
		head.prev = e;
	}
	e.next = head;
	haxe_MainLoop.pending = e;
	return e;
};
haxe_MainLoop.sortEvents = function() {
	var list = haxe_MainLoop.pending;
	if(list == null) {
		return;
	}
	var insize = 1;
	var nmerges;
	var psize = 0;
	var qsize = 0;
	var p;
	var q;
	var e;
	var tail;
	while(true) {
		p = list;
		list = null;
		tail = null;
		nmerges = 0;
		while(p != null) {
			++nmerges;
			q = p;
			psize = 0;
			var _g = 0;
			var _g1 = insize;
			while(_g < _g1) {
				var i = _g++;
				++psize;
				q = q.next;
				if(q == null) {
					break;
				}
			}
			qsize = insize;
			while(psize > 0 || qsize > 0 && q != null) {
				if(psize == 0) {
					e = q;
					q = q.next;
					--qsize;
				} else if(qsize == 0 || q == null || (p.priority > q.priority || p.priority == q.priority && p.nextRun <= q.nextRun)) {
					e = p;
					p = p.next;
					--psize;
				} else {
					e = q;
					q = q.next;
					--qsize;
				}
				if(tail != null) {
					tail.next = e;
				} else {
					list = e;
				}
				e.prev = tail;
				tail = e;
			}
			p = q;
		}
		tail.next = null;
		if(nmerges <= 1) {
			break;
		}
		insize *= 2;
	}
	list.prev = null;
	haxe_MainLoop.pending = list;
};
haxe_MainLoop.tick = function() {
	haxe_MainLoop.sortEvents();
	var e = haxe_MainLoop.pending;
	var now = HxOverrides.now() / 1000;
	var wait = 1e9;
	while(e != null) {
		var next = e.next;
		var wt = e.nextRun - now;
		if(wt <= 0) {
			wait = 0;
			if(e.f != null) {
				e.f();
			}
		} else if(wait > wt) {
			wait = wt;
		}
		e = next;
	}
	return wait;
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = "haxe.Serializer";
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	buf: null
	,cache: null
	,shash: null
	,scount: null
	,useCache: null
	,useEnumIndex: null
	,toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.h[s];
		if(x != null) {
			this.buf.b += "R";
			this.buf.b += x == null ? "null" : "" + x;
			return;
		}
		this.shash.h[s] = this.scount++;
		this.buf.b += "y";
		s = encodeURIComponent(s);
		this.buf.b += Std.string(s.length);
		this.buf.b += ":";
		this.buf.b += s == null ? "null" : "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g = 0;
		var _g1 = this.cache.length;
		while(_g < _g1) {
			var i = _g++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				this.buf.b += i == null ? "null" : "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		var _g = Type.typeof(v);
		switch(_g._hx_index) {
		case 0:
			this.buf.b += "n";
			break;
		case 1:
			var v1 = v;
			if(v1 == 0) {
				this.buf.b += "z";
				return;
			}
			this.buf.b += "i";
			this.buf.b += v1 == null ? "null" : "" + v1;
			break;
		case 2:
			var v1 = v;
			if(isNaN(v1)) {
				this.buf.b += "k";
			} else if(!isFinite(v1)) {
				this.buf.b += v1 < 0 ? "m" : "p";
			} else {
				this.buf.b += "d";
				this.buf.b += v1 == null ? "null" : "" + v1;
			}
			break;
		case 3:
			this.buf.b += v ? "t" : "f";
			break;
		case 4:
			if(js_Boot.__instanceof(v,Class)) {
				var className = v.__name__;
				this.buf.b += "A";
				this.serializeString(className);
			} else if(js_Boot.__instanceof(v,Enum)) {
				this.buf.b += "B";
				this.serializeString(v.__ename__);
			} else {
				if(this.useCache && this.serializeRef(v)) {
					return;
				}
				this.buf.b += "o";
				this.serializeFields(v);
			}
			break;
		case 5:
			throw haxe_Exception.thrown("Cannot serialize function");
		case 6:
			var c = _g.c;
			if(c == String) {
				this.serializeString(v);
				return;
			}
			if(this.useCache && this.serializeRef(v)) {
				return;
			}
			switch(c) {
			case Array:
				var ucount = 0;
				this.buf.b += "a";
				var l = v["length"];
				var _g1 = 0;
				var _g2 = l;
				while(_g1 < _g2) {
					var i = _g1++;
					if(v[i] == null) {
						++ucount;
					} else {
						if(ucount > 0) {
							if(ucount == 1) {
								this.buf.b += "n";
							} else {
								this.buf.b += "u";
								this.buf.b += ucount == null ? "null" : "" + ucount;
							}
							ucount = 0;
						}
						this.serialize(v[i]);
					}
				}
				if(ucount > 0) {
					if(ucount == 1) {
						this.buf.b += "n";
					} else {
						this.buf.b += "u";
						this.buf.b += ucount == null ? "null" : "" + ucount;
					}
				}
				this.buf.b += "h";
				break;
			case Date:
				var d = v;
				this.buf.b += "v";
				this.buf.b += Std.string(d.getTime());
				break;
			case haxe_ds_IntMap:
				this.buf.b += "q";
				var v1 = v;
				var k = v1.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					this.buf.b += ":";
					this.buf.b += k1 == null ? "null" : "" + k1;
					this.serialize(v1.h[k1]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_List:
				this.buf.b += "l";
				var v1 = v;
				var _g_head = v1.h;
				while(_g_head != null) {
					var val = _g_head.item;
					_g_head = _g_head.next;
					var i = val;
					this.serialize(i);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_ObjectMap:
				this.buf.b += "M";
				var v1 = v;
				var k = v1.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					var id = Reflect.field(k1,"__id__");
					Reflect.deleteField(k1,"__id__");
					this.serialize(k1);
					k1["__id__"] = id;
					this.serialize(v1.h[k1.__id__]);
				}
				this.buf.b += "h";
				break;
			case haxe_ds_StringMap:
				this.buf.b += "b";
				var v1 = v;
				var h = v1.h;
				var _g_h = h;
				var _g_keys = Object.keys(h);
				var _g_length = _g_keys.length;
				var _g_current = 0;
				while(_g_current < _g_length) {
					var k = _g_keys[_g_current++];
					this.serializeString(k);
					this.serialize(v1.h[k]);
				}
				this.buf.b += "h";
				break;
			case haxe_io_Bytes:
				var v1 = v;
				this.buf.b += "s";
				this.buf.b += Std.string(Math.ceil(v1.length * 8 / 6));
				this.buf.b += ":";
				var i = 0;
				var max = v1.length - 2;
				var b64 = haxe_Serializer.BASE64_CODES;
				if(b64 == null) {
					b64 = new Array(haxe_Serializer.BASE64.length);
					var _g1 = 0;
					var _g2 = haxe_Serializer.BASE64.length;
					while(_g1 < _g2) {
						var i1 = _g1++;
						b64[i1] = HxOverrides.cca(haxe_Serializer.BASE64,i1);
					}
					haxe_Serializer.BASE64_CODES = b64;
				}
				while(i < max) {
					var b1 = v1.b[i++];
					var b2 = v1.b[i++];
					var b3 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[(b2 << 2 | b3 >> 6) & 63]);
					this.buf.b += String.fromCodePoint(b64[b3 & 63]);
				}
				if(i == max) {
					var b1 = v1.b[i++];
					var b2 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[(b1 << 4 | b2 >> 4) & 63]);
					this.buf.b += String.fromCodePoint(b64[b2 << 2 & 63]);
				} else if(i == max + 1) {
					var b1 = v1.b[i++];
					this.buf.b += String.fromCodePoint(b64[b1 >> 2]);
					this.buf.b += String.fromCodePoint(b64[b1 << 4 & 63]);
				}
				break;
			default:
				if(this.useCache) {
					this.cache.pop();
				}
				if(v.hxSerialize != null) {
					this.buf.b += "C";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					v.hxSerialize(this);
					this.buf.b += "g";
				} else {
					this.buf.b += "c";
					this.serializeString(c.__name__);
					if(this.useCache) {
						this.cache.push(v);
					}
					this.serializeFields(v);
				}
			}
			break;
		case 7:
			var e = _g.e;
			if(this.useCache) {
				if(this.serializeRef(v)) {
					return;
				}
				this.cache.pop();
			}
			this.buf.b += Std.string(this.useEnumIndex ? "j" : "w");
			this.serializeString(e.__ename__);
			if(this.useEnumIndex) {
				this.buf.b += ":";
				this.buf.b += Std.string(v._hx_index);
			} else {
				var e = v;
				this.serializeString($hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name);
			}
			this.buf.b += ":";
			var params = Type.enumParameters(v);
			this.buf.b += Std.string(params.length);
			var _g = 0;
			while(_g < params.length) {
				var p = params[_g];
				++_g;
				this.serialize(p);
			}
			if(this.useCache) {
				this.cache.push(v);
			}
			break;
		default:
			throw haxe_Exception.thrown("Cannot serialize " + Std.string(v));
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = this.buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var _this = edecl.__constructs__;
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = _this[i]._hx_name;
			}
			var tag = result[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = "haxe.crypto.Adler32";
haxe_crypto_Adler32.read = function(i) {
	var a = new haxe_crypto_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	var a1a = i.readByte();
	var a1b = i.readByte();
	a.a1 = a1a << 8 | a1b;
	a.a2 = a2a << 8 | a2b;
	return a;
};
haxe_crypto_Adler32.prototype = {
	a1: null
	,a2: null
	,update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g = pos;
		var _g1 = pos + len;
		while(_g < _g1) {
			var p = _g++;
			var c = b.b[p];
			a1 = (a1 + c) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		if(a.a1 == this.a1) {
			return a.a2 == this.a2;
		} else {
			return false;
		}
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.b.byteLength) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,fill: function(pos,len,value) {
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			this.b[pos++] = value;
		}
	}
	,getFloat: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getFloat32(pos,true);
	}
	,setFloat: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setFloat32(pos,v,true);
	}
	,getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:"haxe.io.Encoding",__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
haxe_io_Encoding.__empty_constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.encode = function(bytes,complement) {
	if(complement == null) {
		complement = true;
	}
	var str = new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).encodeBytes(bytes).toString();
	if(complement) {
		switch(bytes.length % 3) {
		case 1:
			str += "==";
			break;
		case 2:
			str += "=";
			break;
		default:
		}
	}
	return str;
};
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,encodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		var size = b.length * 8 / nbits | 0;
		var out = new haxe_io_Bytes(new ArrayBuffer(size + (b.length * 8 % nbits == 0 ? 0 : 1)));
		var buf = 0;
		var curbits = 0;
		var mask = (1 << nbits) - 1;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < nbits) {
				curbits += 8;
				buf <<= 8;
				buf |= b.b[pin++];
			}
			curbits -= nbits;
			out.b[pout++] = base.b[buf >> curbits & mask];
		}
		if(curbits > 0) {
			out.b[pout++] = base.b[buf << nbits - curbits & mask];
		}
		return out;
	}
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Crc32 = function() { };
$hxClasses["haxe.crypto.Crc32"] = haxe_crypto_Crc32;
haxe_crypto_Crc32.__name__ = "haxe.crypto.Crc32";
haxe_crypto_Crc32.make = function(data) {
	var c_crc = -1;
	var b = data.b.bufferValue;
	var _g = 0;
	var _g1 = data.length;
	while(_g < _g1) {
		var i = _g++;
		var tmp = (c_crc ^ b.bytes[i]) & 255;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		tmp = tmp >>> 1 ^ -(tmp & 1) & -306674912;
		c_crc = c_crc >>> 8 ^ tmp;
	}
	return c_crc ^ -1;
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = "haxe.crypto.Md5";
haxe_crypto_Md5.encode = function(s) {
	var m = new haxe_crypto_Md5();
	var h = m.doEncode(haxe_crypto_Md5.str2blks(s));
	return m.hex(h);
};
haxe_crypto_Md5.str2blks = function(str) {
	var str1 = haxe_io_Bytes.ofString(str);
	var nblk = (str1.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g = 0;
	var _g1 = blksSize;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var i = 0;
	var max = str1.length;
	var l = max * 8;
	while(i < max) {
		blks[i >> 2] |= str1.b[i] << (l + i) % 4 * 8;
		++i;
	}
	blks[i >> 2] |= 128 << (l + i) % 4 * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,hex: function(a) {
		var str = "";
		var hex_chr = "0123456789abcdef";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			str += hex_chr.charAt(num >> 4 & 15) + hex_chr.charAt(num & 15);
			str += hex_chr.charAt(num >> 12 & 15) + hex_chr.charAt(num >> 8 & 15);
			str += hex_chr.charAt(num >> 20 & 15) + hex_chr.charAt(num >> 16 & 15);
			str += hex_chr.charAt(num >> 28 & 15) + hex_chr.charAt(num >> 24 & 15);
		}
		return str;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_crypto_Sha1 = function() {
};
$hxClasses["haxe.crypto.Sha1"] = haxe_crypto_Sha1;
haxe_crypto_Sha1.__name__ = "haxe.crypto.Sha1";
haxe_crypto_Sha1.encode = function(s) {
	var sh = new haxe_crypto_Sha1();
	var h = sh.doEncode(haxe_crypto_Sha1.str2blks(s));
	return sh.hex(h);
};
haxe_crypto_Sha1.str2blks = function(s) {
	var s1 = haxe_io_Bytes.ofString(s);
	var nblk = (s1.length + 8 >> 6) + 1;
	var blks = [];
	var _g = 0;
	var _g1 = nblk * 16;
	while(_g < _g1) {
		var i = _g++;
		blks[i] = 0;
	}
	var _g = 0;
	var _g1 = s1.length;
	while(_g < _g1) {
		var i = _g++;
		var p = i >> 2;
		blks[p] |= s1.b[i] << 24 - ((i & 3) << 3);
	}
	var i = s1.length;
	var p = i >> 2;
	blks[p] |= 128 << 24 - ((i & 3) << 3);
	blks[nblk * 16 - 1] = s1.length * 8;
	return blks;
};
haxe_crypto_Sha1.prototype = {
	doEncode: function(x) {
		var w = [];
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var e = -1009589776;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			var olde = e;
			var j = 0;
			while(j < 80) {
				if(j < 16) {
					w[j] = x[i + j];
				} else {
					var num = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];
					w[j] = num << 1 | num >>> 31;
				}
				var t = (a << 5 | a >>> 27) + this.ft(j,b,c,d) + e + w[j] + this.kt(j);
				e = d;
				d = c;
				c = b << 30 | b >>> 2;
				b = a;
				a = t;
				++j;
			}
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			e += olde;
			i += 16;
		}
		return [a,b,c,d,e];
	}
	,ft: function(t,b,c,d) {
		if(t < 20) {
			return b & c | ~b & d;
		}
		if(t < 40) {
			return b ^ c ^ d;
		}
		if(t < 60) {
			return b & c | b & d | c & d;
		}
		return b ^ c ^ d;
	}
	,kt: function(t) {
		if(t < 20) {
			return 1518500249;
		}
		if(t < 40) {
			return 1859775393;
		}
		if(t < 60) {
			return -1894007588;
		}
		return -899497514;
	}
	,hex: function(a) {
		var str = "";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			str += StringTools.hex(num,8);
		}
		return str.toLowerCase();
	}
	,__class__: haxe_crypto_Sha1
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		var _g1 = to;
		while(_g < _g1) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	var new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
haxe_ds_BalancedTree.prototype = {
	root: null
	,set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this = r.right;
			var _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this = this.left;
			tmp = _this == null ? 0 : _this._height;
		} else {
			var _this = this.right;
			tmp = _this == null ? 0 : _this._height;
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
haxe_ds_TreeNode.prototype = {
	left: null
	,right: null
	,key: null
	,value: null
	,_height: null
	,__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		var p1 = Type.enumParameters(k1);
		var p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g = 0;
		var _g1 = a1.length;
		while(_g < _g1) {
			var i = _g++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(+key);
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	posInfos: null
	,toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = "haxe.io.BytesBuffer";
haxe_io_BytesBuffer.prototype = {
	buffer: null
	,view: null
	,u8: null
	,pos: null
	,size: null
	,addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,add: function(src) {
		if(this.pos + src.length > this.size) {
			this.grow(src.length);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset,src.length);
		this.u8.set(sub,this.pos);
		this.pos += src.length;
	}
	,addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.pos + len > this.size) {
			this.grow(len);
		}
		if(this.size == 0) {
			return;
		}
		var sub = new Uint8Array(src.b.buffer,src.b.byteOffset + pos,len);
		this.u8.set(sub,this.pos);
		this.pos += len;
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = "haxe.io.Input";
haxe_io_Input.prototype = {
	bigEndian: null
	,readByte: function() {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Input.hx", lineNumber : 53, className : "haxe.io.Input", methodName : "readByte"});
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( _g ) {
			if(!((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				throw _g;
			}
		}
		return len - k;
	}
	,set_bigEndian: function(b) {
		this.bigEndian = b;
		return b;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readUntil: function(end) {
		var buf = new haxe_io_BytesBuffer();
		var last;
		while(true) {
			last = this.readByte();
			if(!(last != end)) {
				break;
			}
			buf.addByte(last);
		}
		return buf.getBytes().toString();
	}
	,readLine: function() {
		var buf = new haxe_io_BytesBuffer();
		var last;
		var s;
		try {
			while(true) {
				last = this.readByte();
				if(!(last != 10)) {
					break;
				}
				buf.addByte(last);
			}
			s = buf.getBytes().toString();
			if(HxOverrides.cca(s,s.length - 1) == 13) {
				s = HxOverrides.substr(s,0,-1);
			}
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof haxe_io_Eof)) {
				var e = _g1;
				s = buf.getBytes().toString();
				if(s.length == 0) {
					throw haxe_Exception.thrown(e);
				}
			} else {
				throw _g;
			}
		}
		return s;
	}
	,readDouble: function() {
		var i1 = this.readInt32();
		var i2 = this.readInt32();
		if(this.bigEndian) {
			return haxe_io_FPHelper.i64ToDouble(i2,i1);
		} else {
			return haxe_io_FPHelper.i64ToDouble(i1,i2);
		}
	}
	,readInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var n = this.bigEndian ? ch2 | ch1 << 8 : ch1 | ch2 << 8;
		if((n & 32768) != 0) {
			return n - 65536;
		}
		return n;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) {
			return ch2 | ch1 << 8;
		} else {
			return ch1 | ch2 << 8;
		}
	}
	,readUInt24: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		if(this.bigEndian) {
			return ch3 | ch2 << 8 | ch1 << 16;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16;
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
	,__properties__: {set_bigEndian:"set_bigEndian"}
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = "haxe.io.BytesInput";
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	b: null
	,pos: null
	,len: null
	,totlen: null
	,set_position: function(p) {
		if(p < 0) {
			p = 0;
		} else if(p > this.totlen) {
			p = this.totlen;
		}
		this.len = this.totlen - p;
		return this.pos = p;
	}
	,readByte: function() {
		if(this.len == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
	,__properties__: $extend(haxe_io_Input.prototype.__properties__,{set_position:"set_position"})
});
var haxe_io_Output = function() { };
$hxClasses["haxe.io.Output"] = haxe_io_Output;
haxe_io_Output.__name__ = "haxe.io.Output";
haxe_io_Output.prototype = {
	bigEndian: null
	,writeByte: function(c) {
		throw new haxe_exceptions_NotImplementedException(null,null,{ fileName : "haxe/io/Output.hx", lineNumber : 47, className : "haxe.io.Output", methodName : "writeByte"});
	}
	,writeBytes: function(s,pos,len) {
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		var b = s.b;
		var k = len;
		while(k > 0) {
			this.writeByte(b[pos]);
			++pos;
			--k;
		}
		return len;
	}
	,flush: function() {
	}
	,close: function() {
	}
	,write: function(s) {
		var l = s.length;
		var p = 0;
		while(l > 0) {
			var k = this.writeBytes(s,p,l);
			if(k == 0) {
				throw haxe_Exception.thrown(haxe_io_Error.Blocked);
			}
			p += k;
			l -= k;
		}
	}
	,writeFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.writeBytes(s,pos,len);
			pos += k;
			len -= k;
		}
	}
	,writeUInt16: function(x) {
		if(x < 0 || x >= 65536) {
			throw haxe_Exception.thrown(haxe_io_Error.Overflow);
		}
		if(this.bigEndian) {
			this.writeByte(x >> 8);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8);
		}
	}
	,writeInt32: function(x) {
		if(this.bigEndian) {
			this.writeByte(x >>> 24);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x & 255);
		} else {
			this.writeByte(x & 255);
			this.writeByte(x >> 8 & 255);
			this.writeByte(x >> 16 & 255);
			this.writeByte(x >>> 24);
		}
	}
	,writeString: function(s,encoding) {
		var b = haxe_io_Bytes.ofString(s,encoding);
		this.writeFullBytes(b,0,b.length);
	}
	,__class__: haxe_io_Output
};
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
$hxClasses["haxe.io.BytesOutput"] = haxe_io_BytesOutput;
haxe_io_BytesOutput.__name__ = "haxe.io.BytesOutput";
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	b: null
	,writeByte: function(c) {
		this.b.addByte(c);
	}
	,writeBytes: function(buf,pos,len) {
		this.b.addBytes(buf,pos,len);
		return len;
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = "haxe.io.Eof";
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:"haxe.io.Error",__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
haxe_io_Error.__empty_constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds];
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = "haxe.io.FPHelper";
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	haxe_io_FPHelper.helper.setInt32(0,low,true);
	haxe_io_FPHelper.helper.setInt32(4,high,true);
	return haxe_io_FPHelper.helper.getFloat64(0,true);
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = "haxe.io.Path";
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) {
		return "";
	}
	return s.dir;
};
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) {
		return "";
	}
	return s.ext;
};
haxe_io_Path.withExtension = function(path,ext) {
	var s = new haxe_io_Path(path);
	s.ext = ext;
	return s.toString();
};
haxe_io_Path.join = function(paths) {
	var _g = [];
	var _g1 = 0;
	var _g2 = paths;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		if(v != null && v != "") {
			_g.push(v);
		}
	}
	var paths = _g;
	if(paths.length == 0) {
		return "";
	}
	var path = paths[0];
	var _g = 1;
	var _g1 = paths.length;
	while(_g < _g1) {
		var i = _g++;
		path = haxe_io_Path.addTrailingSlash(path);
		path += paths[i];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token == "") {
			if(target.length > 0 || HxOverrides.cca(path,0) == 47) {
				target.push(token);
			}
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g_offset = 0;
	var _g_s = tmp;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var c2 = c1;
		switch(c2) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i = c2;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCodePoint(i);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i1 = c2;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCodePoint(i1);
		}
	}
	return acc_b;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) {
		return "/";
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) {
			return path + "\\";
		} else {
			return path;
		}
	} else if(c1 != path.length - 1) {
		return path + "/";
	} else {
		return path;
	}
};
haxe_io_Path.prototype = {
	dir: null
	,file: null
	,ext: null
	,backslash: null
	,toString: function() {
		return (this.dir == null ? "" : this.dir + (this.backslash ? "\\" : "/")) + this.file + (this.ext == null ? "" : "." + this.ext);
	}
	,__class__: haxe_io_Path
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_macro_Binop = $hxEnums["haxe.macro.Binop"] = { __ename__:"haxe.macro.Binop",__constructs__:null
	,OpAdd: {_hx_name:"OpAdd",_hx_index:0,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMult: {_hx_name:"OpMult",_hx_index:1,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpDiv: {_hx_name:"OpDiv",_hx_index:2,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpSub: {_hx_name:"OpSub",_hx_index:3,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssign: {_hx_name:"OpAssign",_hx_index:4,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpEq: {_hx_name:"OpEq",_hx_index:5,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpNotEq: {_hx_name:"OpNotEq",_hx_index:6,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGt: {_hx_name:"OpGt",_hx_index:7,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpGte: {_hx_name:"OpGte",_hx_index:8,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLt: {_hx_name:"OpLt",_hx_index:9,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpLte: {_hx_name:"OpLte",_hx_index:10,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAnd: {_hx_name:"OpAnd",_hx_index:11,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpOr: {_hx_name:"OpOr",_hx_index:12,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpXor: {_hx_name:"OpXor",_hx_index:13,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolAnd: {_hx_name:"OpBoolAnd",_hx_index:14,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpBoolOr: {_hx_name:"OpBoolOr",_hx_index:15,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShl: {_hx_name:"OpShl",_hx_index:16,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpShr: {_hx_name:"OpShr",_hx_index:17,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpUShr: {_hx_name:"OpUShr",_hx_index:18,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpMod: {_hx_name:"OpMod",_hx_index:19,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpAssignOp: ($_=function(op) { return {_hx_index:20,op:op,__enum__:"haxe.macro.Binop",toString:$estr}; },$_._hx_name="OpAssignOp",$_.__params__ = ["op"],$_)
	,OpInterval: {_hx_name:"OpInterval",_hx_index:21,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpArrow: {_hx_name:"OpArrow",_hx_index:22,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpIn: {_hx_name:"OpIn",_hx_index:23,__enum__:"haxe.macro.Binop",toString:$estr}
	,OpNullCoal: {_hx_name:"OpNullCoal",_hx_index:24,__enum__:"haxe.macro.Binop",toString:$estr}
};
haxe_macro_Binop.__constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpAssignOp,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow,haxe_macro_Binop.OpIn,haxe_macro_Binop.OpNullCoal];
haxe_macro_Binop.__empty_constructs__ = [haxe_macro_Binop.OpAdd,haxe_macro_Binop.OpMult,haxe_macro_Binop.OpDiv,haxe_macro_Binop.OpSub,haxe_macro_Binop.OpAssign,haxe_macro_Binop.OpEq,haxe_macro_Binop.OpNotEq,haxe_macro_Binop.OpGt,haxe_macro_Binop.OpGte,haxe_macro_Binop.OpLt,haxe_macro_Binop.OpLte,haxe_macro_Binop.OpAnd,haxe_macro_Binop.OpOr,haxe_macro_Binop.OpXor,haxe_macro_Binop.OpBoolAnd,haxe_macro_Binop.OpBoolOr,haxe_macro_Binop.OpShl,haxe_macro_Binop.OpShr,haxe_macro_Binop.OpUShr,haxe_macro_Binop.OpMod,haxe_macro_Binop.OpInterval,haxe_macro_Binop.OpArrow,haxe_macro_Binop.OpIn,haxe_macro_Binop.OpNullCoal];
var haxe_macro_Unop = $hxEnums["haxe.macro.Unop"] = { __ename__:"haxe.macro.Unop",__constructs__:null
	,OpIncrement: {_hx_name:"OpIncrement",_hx_index:0,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpDecrement: {_hx_name:"OpDecrement",_hx_index:1,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNot: {_hx_name:"OpNot",_hx_index:2,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNeg: {_hx_name:"OpNeg",_hx_index:3,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpNegBits: {_hx_name:"OpNegBits",_hx_index:4,__enum__:"haxe.macro.Unop",toString:$estr}
	,OpSpread: {_hx_name:"OpSpread",_hx_index:5,__enum__:"haxe.macro.Unop",toString:$estr}
};
haxe_macro_Unop.__constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits,haxe_macro_Unop.OpSpread];
haxe_macro_Unop.__empty_constructs__ = [haxe_macro_Unop.OpIncrement,haxe_macro_Unop.OpDecrement,haxe_macro_Unop.OpNot,haxe_macro_Unop.OpNeg,haxe_macro_Unop.OpNegBits,haxe_macro_Unop.OpSpread];
var haxe_ui_backend_BackendImpl = function() { };
$hxClasses["haxe.ui.backend.BackendImpl"] = haxe_ui_backend_BackendImpl;
haxe_ui_backend_BackendImpl.__name__ = "haxe.ui.backend.BackendImpl";
haxe_ui_backend_BackendImpl.update = function() {
	haxe_ui_backend_TimerImpl.update();
};
var haxe_ui_Backend = function() { };
$hxClasses["haxe.ui.Backend"] = haxe_ui_Backend;
haxe_ui_Backend.__name__ = "haxe.ui.Backend";
haxe_ui_Backend.__properties__ = {get_id:"get_id"};
haxe_ui_Backend.get_id = function() {
	return haxe_ui_backend_BackendImpl.id;
};
haxe_ui_Backend.__super__ = haxe_ui_backend_BackendImpl;
haxe_ui_Backend.prototype = $extend(haxe_ui_backend_BackendImpl.prototype,{
	__class__: haxe_ui_Backend
});
var haxe_ui_backend_CallLaterImpl = function(fn) {
	haxe_ui_util_Timer.delay(fn,0);
};
$hxClasses["haxe.ui.backend.CallLaterImpl"] = haxe_ui_backend_CallLaterImpl;
haxe_ui_backend_CallLaterImpl.__name__ = "haxe.ui.backend.CallLaterImpl";
haxe_ui_backend_CallLaterImpl.prototype = {
	__class__: haxe_ui_backend_CallLaterImpl
};
var haxe_ui_CallLater = function(fn) {
	haxe_ui_backend_CallLaterImpl.call(this,fn);
};
$hxClasses["haxe.ui.CallLater"] = haxe_ui_CallLater;
haxe_ui_CallLater.__name__ = "haxe.ui.CallLater";
haxe_ui_CallLater.__super__ = haxe_ui_backend_CallLaterImpl;
haxe_ui_CallLater.prototype = $extend(haxe_ui_backend_CallLaterImpl.prototype,{
	__class__: haxe_ui_CallLater
});
var haxe_ui_core_IClonable = function() { };
$hxClasses["haxe.ui.core.IClonable"] = haxe_ui_core_IClonable;
haxe_ui_core_IClonable.__name__ = "haxe.ui.core.IClonable";
haxe_ui_core_IClonable.__isInterface__ = true;
var haxe_ui_backend_ComponentBase = function() {
	this._nativeClassName = null;
	this._nodeName = null;
	this._className = null;
	this._depth = -1;
	this._invalidateCount = 0;
	this._isDisposed = false;
	this._isInitialized = false;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._delayedInvalidationFlags = new haxe_ds_StringMap();
	this._invalidationFlags = new haxe_ds_StringMap();
	this._style = null;
	this._componentClipRect = null;
	this._top = 0;
	this._left = 0;
	this._hasScreen = null;
	this._layoutLocked = false;
	this._layout = null;
	this._interactivityDisabledCounter = 0;
	this._interactivityDisabled = false;
	this._internalEventsClass = null;
	this._internalEvents = null;
	this.parentComponent = null;
	this._id = null;
	this._componentReady = false;
	h2d_Object.call(this);
	this.behaviours = new haxe_ui_behaviours_Behaviours(js_Boot.__cast(this , haxe_ui_core_Component));
};
$hxClasses["haxe.ui.backend.ComponentBase"] = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentBase.__name__ = "haxe.ui.backend.ComponentBase";
haxe_ui_backend_ComponentBase.__interfaces__ = [haxe_ui_core_IClonable];
haxe_ui_backend_ComponentBase.__super__ = h2d_Object;
haxe_ui_backend_ComponentBase.prototype = $extend(h2d_Object.prototype,{
	behaviours: null
	,registerBehaviours: function() {
		this.behaviours.register("text",haxe_ui_backend_ComponentTextBehaviour);
		this.behaviours.register("value",haxe_ui_backend_ComponentValueBehaviour);
		this.behaviours.register("disabled",haxe_ui_backend_ComponentDisabledBehaviour);
		this.behaviours.register("tooltip",haxe_ui_backend_ComponentToolTipBehaviour,null);
		this.behaviours.register("tooltipRenderer",haxe_ui_backend_ComponentToolTipRendererBehaviour,null);
	}
	,_componentReady: null
	,isReady: null
	,get_isReady: function() {
		return this._componentReady;
	}
	,_id: null
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		if(this._id != value) {
			this._id = value;
		}
		return this._id;
	}
	,parentComponent: null
	,_children: null
	,addComponent: function(child) {
		return null;
	}
	,postCloneComponent: function(c) {
	}
	,_internalEvents: null
	,_internalEventsClass: null
	,registerInternalEvents: function(eventsClass,reregister) {
		if(reregister == null) {
			reregister = false;
		}
		if(this._internalEvents == null && eventsClass != null) {
			this._internalEvents = Type.createInstance(eventsClass,[this]);
			this._internalEvents.register();
		}
		if(reregister == true && this._internalEvents != null) {
			this._internalEvents.register();
		}
	}
	,unregisterInternalEvents: function() {
		if(this._internalEvents == null) {
			return;
		}
		this._internalEvents.unregister();
		this._internalEvents = null;
	}
	,__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if((js_Boot.__cast(this , haxe_ui_core_Component)).classes.indexOf(":mobile") != -1 && (type == "mouseover" || type == "mouseout")) {
			return;
		}
		if(this.get_disabled() == true && this.isInteractiveEvent(type) == true) {
			if(this._disabledEvents == null) {
				this._disabledEvents = new haxe_ui_util_EventMap();
			}
			this._disabledEvents.add(type,listener,priority);
			return;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		if(this.__events.add(type,listener,priority) == true) {
			this.mapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._disabledEvents != null && !this._interactivityDisabled) {
			this._disabledEvents.remove(type,listener);
		}
		if(this.__events != null) {
			if(this.__events.remove(type,listener) == true) {
				this.unmapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,dispatch: function(event) {
		if(event != null) {
			if(this.__events != null) {
				this.__events.invoke(event.type,event,js_Boot.__cast(this , haxe_ui_core_Component));
			}
			if(event.bubble == true && event.canceled == false && this.parentComponent != null) {
				this.parentComponent.dispatch(event);
			}
		}
	}
	,dispatchRecursively: function(event) {
		this.dispatch(event);
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.dispatchRecursively(event);
		}
	}
	,_onMappedEvent: function(event) {
		this.dispatch(event);
	}
	,_disabledEvents: null
	,isInteractiveEvent: function(type) {
		return haxe_ui_backend_ComponentBase.INTERACTIVE_EVENTS.indexOf(type) != -1;
	}
	,disableInteractiveEvents: function(disable) {
		if(disable == true) {
			if(this.__events != null) {
				var eventType = this.__events.keys();
				while(eventType.hasNext()) {
					var eventType1 = eventType.next();
					if(!this.isInteractiveEvent(eventType1)) {
						continue;
					}
					var listeners = this.__events.listeners(eventType1);
					if(listeners != null) {
						var listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							var listener1 = listener.next();
							if(this._disabledEvents == null) {
								this._disabledEvents = new haxe_ui_util_EventMap();
							}
							this._disabledEvents.add(eventType1,haxe_ui_util_Listener.toFunc(listener1));
							this.unregisterEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
						}
					}
				}
			}
		} else if(this._disabledEvents != null) {
			var eventType = this._disabledEvents.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				var listeners = this._disabledEvents.listeners(eventType1);
				if(listeners != null) {
					var listener = listeners.copy().iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						this.registerEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
					}
				}
			}
			this._disabledEvents = null;
		}
	}
	,_interactivityDisabled: null
	,_interactivityDisabledCounter: null
	,disableInteractivity: function(disable,recursive,updateStyle,force) {
		if(force == null) {
			force = false;
		}
		if(updateStyle == null) {
			updateStyle = false;
		}
		if(recursive == null) {
			recursive = true;
		}
		if(force == true) {
			this._interactivityDisabledCounter = 0;
		}
		if(disable == true) {
			this._interactivityDisabledCounter++;
		} else {
			this._interactivityDisabledCounter--;
		}
		if(this._interactivityDisabledCounter > 0 && this._interactivityDisabled == false) {
			this._interactivityDisabled = true;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).swapClass(":disabled",":hover");
			}
			this.handleDisabled(true);
			this.disableInteractiveEvents(true);
			this.dispatch(new haxe_ui_events_UIEvent("disabled"));
		} else if(this._interactivityDisabledCounter < 1 && this._interactivityDisabled == true) {
			this._interactivityDisabled = false;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).removeClass(":disabled");
			}
			this.handleDisabled(false);
			this.disableInteractiveEvents(false);
			this.dispatch(new haxe_ui_events_UIEvent("enabled"));
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.disableInteractivity(disable,recursive,updateStyle);
			}
		}
	}
	,unregisterEvents: function() {
		if(this.__events != null) {
			var copy = [];
			var eventType = this.__events.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				copy.push(eventType1);
			}
			var _g = 0;
			while(_g < copy.length) {
				var eventType = copy[_g];
				++_g;
				var listeners = this.__events.listeners(eventType);
				if(listeners != null) {
					var listener = listeners.iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						if(listener1 != null) {
							if(this.__events.remove(eventType,haxe_ui_util_Listener.toFunc(listener1)) == true) {
								this.unmapEvent(eventType,$bind(this,this._onMappedEvent));
							}
						}
					}
				}
			}
		}
	}
	,_layout: null
	,_layoutLocked: null
	,autoWidth: null
	,get_autoWidth: function() {
		if(this._percentWidth != null || this._width != null) {
			return false;
		}
		if(this.get_style() == null) {
			return true;
		}
		if(this.get_style().autoWidth == null) {
			return false;
		}
		return this.get_style().autoWidth;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(this._percentHeight != null || this._height != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoHeight == null) {
			return false;
		}
		return this.get_style().autoHeight;
	}
	,resizeComponent: function(w,h) {
		var invalidate = false;
		if(w != null && this._componentWidth != w) {
			this._componentWidth = w;
			invalidate = true;
		}
		if(h != null && this._componentHeight != h) {
			this._componentHeight = h;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("layout") == false) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,actualComponentWidth: null
	,get_actualComponentWidth: function() {
		return this.get_componentWidth() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualComponentHeight: null
	,get_actualComponentHeight: function() {
		return this.get_componentHeight() * haxe_ui_Toolkit.get_scaleY();
	}
	,_componentWidth: null
	,get_componentWidth: function() {
		if(this._componentWidth == null) {
			return 0;
		}
		return this._componentWidth;
	}
	,set_componentWidth: function(value) {
		this.resizeComponent(value,null);
		return value;
	}
	,_componentHeight: null
	,get_componentHeight: function() {
		if(this._componentHeight == null) {
			return 0;
		}
		return this._componentHeight;
	}
	,set_componentHeight: function(value) {
		this.resizeComponent(null,value);
		return value;
	}
	,_percentWidth: null
	,get_percentWidth: function() {
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(this._percentWidth == value) {
			return value;
		}
		this._percentWidth = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_percentHeight: null
	,get_percentHeight: function() {
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(this._percentHeight == value) {
			return value;
		}
		this._percentHeight = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_width: null
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.set_componentWidth(value);
		return value;
	}
	,get_width: function() {
		var f = this.get_componentWidth();
		return f;
	}
	,_height: null
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.set_componentHeight(value);
		return value;
	}
	,get_height: function() {
		var f = this.get_componentHeight();
		return f;
	}
	,_actualWidth: null
	,_actualHeight: null
	,_hasScreen: null
	,hasScreen: null
	,get_hasScreen: function() {
		var p = this;
		while(p != null) {
			if(p._hasScreen == false) {
				return false;
			}
			p = p.parentComponent;
		}
		return true;
	}
	,hitTest: function(left,top,allowZeroSized) {
		if(allowZeroSized == null) {
			allowZeroSized = false;
		}
		if(this.get_hasScreen() == false) {
			return false;
		}
		left *= haxe_ui_Toolkit.get_scale();
		top *= haxe_ui_Toolkit.get_scale();
		var b = false;
		var sx = this.get_screenLeft();
		var sy = this.get_screenTop();
		var cx = 0;
		if(this.get_componentWidth() != null) {
			cx = this.get_actualComponentWidth();
		}
		var cy = 0;
		if(this.get_componentHeight() != null) {
			cy = this.get_actualComponentHeight();
		}
		if(allowZeroSized == true) {
			if(this.get_width() <= 0 || this.get_height() <= 0) {
				return true;
			}
		}
		if(left >= sx && left < sx + cx && top >= sy && top < sy + cy) {
			b = true;
		}
		return b;
	}
	,autoSize: function() {
		if(this._componentReady == false || this._layout == null) {
			return false;
		}
		return this._layout.autoSize();
	}
	,moveComponent: function(left,top) {
		var invalidate = false;
		if(left != null && this._left != left) {
			this._left = left;
			invalidate = true;
		}
		if(top != null && this._top != top) {
			this._top = top;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("position") == false) {
			this.invalidateComponent("position",false);
		}
	}
	,_left: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		this.moveComponent(value,null);
		return value;
	}
	,_top: null
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		this.moveComponent(null,value);
		return value;
	}
	,screenLeft: null
	,get_screenLeft: function() {
		var c = this;
		var xpos = 0;
		while(c != null) {
			var l = c.get_left();
			if(c.parentComponent != null) {
				l *= haxe_ui_Toolkit.get_scale();
			}
			xpos += l;
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left * haxe_ui_Toolkit.get_scaleX();
			}
			c = c.parentComponent;
		}
		return xpos;
	}
	,screenTop: null
	,get_screenTop: function() {
		var c = this;
		var ypos = 0;
		while(c != null) {
			var t = c.get_top();
			if(c.parentComponent != null) {
				t *= haxe_ui_Toolkit.get_scale();
			}
			ypos += t;
			if(c.get_componentClipRect() != null) {
				ypos -= c.get_componentClipRect().top * haxe_ui_Toolkit.get_scaleY();
			}
			c = c.parentComponent;
		}
		return ypos;
	}
	,_componentClipRect: null
	,get_componentClipRect: function() {
		if(this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			return new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight());
		}
		return this._componentClipRect;
	}
	,set_componentClipRect: function(value) {
		this._componentClipRect = value;
		this.invalidateComponent("display",false);
		return value;
	}
	,_style: null
	,get_style: function() {
		return this._style;
	}
	,_invalidationFlags: null
	,_delayedInvalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,_isInitialized: null
	,_isDisposed: null
	,_invalidateCount: null
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(flag == null) {
			flag = "all";
		}
		if(this._componentReady == false) {
			return;
		}
		var isAlreadyInvalid = this.isComponentInvalid(flag);
		var isAlreadyDelayedInvalid = false;
		if(this._isValidating == true) {
			var h = this._delayedInvalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				isAlreadyDelayedInvalid = true;
				break;
			}
		}
		if(flag == "all") {
			if(this._isValidating == true) {
				this._delayedInvalidationFlags.h["all"] = true;
			} else {
				this._isAllInvalid = true;
			}
		} else if(this._isValidating == true) {
			this._delayedInvalidationFlags.h[flag] = true;
		} else if(flag != "all" && !Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
		}
		if(this._isValidating == true) {
			if(isAlreadyDelayedInvalid == true) {
				return;
			}
			this._invalidateCount++;
			if(this._invalidateCount >= 10) {
				throw haxe_Exception.thrown("The validation queue returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
			haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		} else if(isAlreadyInvalid == true) {
			if(recursive == true) {
				var _g = 0;
				var _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.invalidateComponent(flag,recursive);
				}
			}
			return;
		}
		this._invalidateCount = 0;
		haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.invalidateComponent(flag,recursive);
			}
		}
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._componentReady == false || this._isDisposed == true || this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		var isInitialized = this._isInitialized;
		if(isInitialized == false) {
			this.initializeComponent();
		}
		this._isValidating = true;
		this.validateComponentInternal(nextFrame);
		this.validateInitialSize(isInitialized);
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		var h = this._delayedInvalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			if(flag == "all") {
				this._isAllInvalid = true;
			} else {
				this._invalidationFlags.h[flag] = true;
			}
		}
		this._delayedInvalidationFlags.h = Object.create(null);
		this._isValidating = false;
	}
	,validateNow: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.validateNow();
		}
		this.invalidateComponent();
		this.syncComponentValidation(false);
	}
	,syncComponentValidation: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var count = 0;
		while(this.isComponentInvalid()) {
			this.validateComponent(nextFrame);
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.syncComponentValidation(nextFrame);
			}
			if(++count >= 10) {
				if(this._isDisposed) {
					var c = js_Boot.getClass(this);
					throw haxe_Exception.thrown("There was a problem validating this component as it has already been destroyed (" + c.__name__ + "#" + this.get_id() + ")");
				} else {
					var c1 = js_Boot.getClass(this);
					throw haxe_Exception.thrown("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation (" + c1.__name__ + "#" + this.get_id() + ").");
				}
			}
		}
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var textDisplayInvalid = this.isComponentInvalid("textDisplay") && this.hasTextDisplay();
		var textInputInvalid = this.isComponentInvalid("textInput") && this.hasTextInput();
		var imageDisplayInvalid = this.isComponentInvalid("imageDisplay") && this.hasImageDisplay();
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var layoutInvalid = this.isComponentInvalid("layout") && this._layoutLocked == false;
		if(dataInvalid) {
			this.validateComponentData();
		}
		if(styleInvalid) {
			this.validateComponentStyle();
		}
		if(textDisplayInvalid) {
			this.getTextDisplay().validateComponent();
		}
		if(textInputInvalid) {
			this.getTextInput().validateComponent();
		}
		if(imageDisplayInvalid) {
			this.getImageDisplay().validateComponent();
		}
		if(positionInvalid) {
			this.validateComponentPosition();
		}
		if(layoutInvalid) {
			if(this.validateComponentLayout()) {
				displayInvalid = true;
			}
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(js_Boot.__cast(this , haxe_ui_core_Component),nextFrame);
		}
	}
	,initializeComponent: function() {
	}
	,validateInitialSize: function(isInitialized) {
	}
	,validateComponentData: function() {
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentStyle: function() {
	}
	,validateComponentPosition: function() {
	}
	,handleCreate: function(native) {
	}
	,handlePreReposition: function() {
	}
	,handlePostReposition: function() {
	}
	,handleReady: function() {
	}
	,handleDisabled: function(show) {
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,isNativeScroller: null
	,get_isNativeScroller: function() {
		return false;
	}
	,handleFrameworkProperty: function(id,value) {
	}
	,_textDisplay: null
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			this._textDisplay = new haxe_ui_core_TextDisplay();
			this._textDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textDisplay.set_text(text);
		}
		return this._textDisplay;
	}
	,getTextDisplay: function() {
		return this.createTextDisplay();
	}
	,hasTextDisplay: function() {
		return this._textDisplay != null;
	}
	,_textInput: null
	,createTextInput: function(text) {
		if(this._textInput == null) {
			this._textInput = new haxe_ui_core_TextInput();
			this._textInput.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textInput.set_text(text);
		}
		return this._textInput;
	}
	,getTextInput: function() {
		return this.createTextInput();
	}
	,hasTextInput: function() {
		return this._textInput != null;
	}
	,_imageDisplay: null
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			this._imageDisplay = new haxe_ui_core_ImageDisplay();
			this._imageDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		return this._imageDisplay;
	}
	,getImageDisplay: function() {
		return this.createImageDisplay();
	}
	,hasImageDisplay: function() {
		return this._imageDisplay != null;
	}
	,_hasNativeEntry: null
	,hasNativeEntry: null
	,get_hasNativeEntry: function() {
		if(this._hasNativeEntry == null) {
			this._hasNativeEntry = this.getNativeConfigProperty(".@id") != null;
		}
		return this._hasNativeEntry;
	}
	,getNativeConfigProperty: function(query,defaultValue) {
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.query(query,defaultValue,this);
	}
	,getNativeConfigPropertyBool: function(query,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryBool(query,defaultValue,this);
	}
	,getNativeConfigProperties: function(query) {
		if(query == null) {
			query = "";
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryValues(query,this);
	}
	,_className: null
	,className: null
	,get_className: function() {
		if(this._className != null) {
			return this._className;
		}
		var c = js_Boot.getClass(this);
		this._className = c.__name__;
		return this._className;
	}
	,_nodeName: null
	,nodeName: null
	,get_nodeName: function() {
		if(this._nodeName != null) {
			return this._nodeName;
		}
		this._nodeName = this.get_className().split(".").pop().toLowerCase();
		return this._nodeName;
	}
	,_nativeClassName: null
	,nativeClassName: null
	,get_nativeClassName: function() {
		if(this._nativeClassName != null) {
			return this._nativeClassName;
		}
		var r = js_Boot.getClass(this);
		while(r != null) {
			var c = r.__name__;
			var t = haxe_ui_Toolkit.nativeConfig.query("component[id=" + c + "].@class",null,this);
			if(t != null) {
				this._nativeClassName = c;
				break;
			}
			r = r.__super__;
			if(r == haxe_ui_core_Component) {
				break;
			}
		}
		if(this._nativeClassName == null) {
			this._nativeClassName = this.get_className();
		}
		return this._nativeClassName;
	}
	,get_text: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("text"));
	}
	,set_text: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"text",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("text",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"text"));
		return value;
	}
	,get_value: function() {
		return this.behaviours.getDynamic("value");
	}
	,set_value: function(value) {
		this.behaviours.setDynamic("value",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_disabled: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("disabled"));
	}
	,set_disabled: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("disabled",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"disabled"));
		return value;
	}
	,get_tooltip: function() {
		return this.behaviours.getDynamic("tooltip");
	}
	,set_tooltip: function(value) {
		this.behaviours.setDynamic("tooltip",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tooltip"));
		return value;
	}
	,get_tooltipRenderer: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("tooltipRenderer"));
	}
	,set_tooltipRenderer: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("tooltipRenderer",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tooltipRenderer"));
		return value;
	}
	,cloneComponent: function() {
		var c = this.self();
		if(this.get_id() != null) {
			c.set_id(this.get_id());
		}
		if(this.get_componentWidth() != null) {
			c.set_componentWidth(this.get_componentWidth());
		}
		if(this.get_componentHeight() != null) {
			c.set_componentHeight(this.get_componentHeight());
		}
		if(this.get_percentWidth() != null) {
			c.set_percentWidth(this.get_percentWidth());
		}
		if(this.get_percentHeight() != null) {
			c.set_percentHeight(this.get_percentHeight());
		}
		if(this.get_text() != null) {
			c.set_text(this.get_text());
		}
		if(this.get_value() != null) {
			c.set_value(this.get_value());
		}
		c.set_disabled(this.get_disabled());
		if(this.get_tooltip() != null) {
			c.set_tooltip(this.get_tooltip());
		}
		if(this.get_tooltipRenderer() != null) {
			c.set_tooltipRenderer(this.get_tooltipRenderer());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentBase();
	}
	,__class__: haxe_ui_backend_ComponentBase
	,__properties__: $extend(h2d_Object.prototype.__properties__,{set_tooltipRenderer:"set_tooltipRenderer",get_tooltipRenderer:"get_tooltipRenderer",set_tooltip:"set_tooltip",get_tooltip:"get_tooltip",set_disabled:"set_disabled",get_disabled:"get_disabled",set_value:"set_value",get_value:"get_value",set_text:"set_text",get_text:"get_text",get_nativeClassName:"get_nativeClassName",get_nodeName:"get_nodeName",get_className:"get_className",get_hasNativeEntry:"get_hasNativeEntry",get_isNativeScroller:"get_isNativeScroller",set_depth:"set_depth",get_depth:"get_depth",get_style:"get_style",set_componentClipRect:"set_componentClipRect",get_componentClipRect:"get_componentClipRect",get_screenTop:"get_screenTop",get_screenLeft:"get_screenLeft",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",get_hasScreen:"get_hasScreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",set_componentHeight:"set_componentHeight",get_componentHeight:"get_componentHeight",set_componentWidth:"set_componentWidth",get_componentWidth:"get_componentWidth",get_actualComponentHeight:"get_actualComponentHeight",get_actualComponentWidth:"get_actualComponentWidth",get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth",set_id:"set_id",get_id:"get_id",get_isReady:"get_isReady"})
});
var haxe_ui_backend_ComponentImpl = function() {
	this._mouseDownButton = -1;
	this._mouseDownFlag = false;
	this._mouseOverFlag = false;
	this._lastClickY = -1;
	this._lastClickX = -1;
	this._lastClickTimeDiff = 2147483647;
	this._lastClickTime = 0;
	this.lastMouseY = -1;
	this.lastMouseX = -1;
	this._cachedRootComponent = null;
	this._cachedClipComponentNone = null;
	this._cachedClipComponent = null;
	this._cachedScreenY = null;
	this._cachedScreenX = null;
	this._disposed = false;
	this._deallocate = false;
	this._mask = null;
	this.styleable = true;
	haxe_ui_backend_ComponentBase.call(this);
	this._eventMap = new haxe_ds_StringMap();
	this.addChild(new h2d_Object());
};
$hxClasses["haxe.ui.backend.ComponentImpl"] = haxe_ui_backend_ComponentImpl;
haxe_ui_backend_ComponentImpl.__name__ = "haxe.ui.backend.ComponentImpl";
haxe_ui_backend_ComponentImpl.__super__ = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentImpl.prototype = $extend(haxe_ui_backend_ComponentBase.prototype,{
	styleable: null
	,_eventMap: null
	,handlePosition: function(left,top,style) {
		if(left == null || top == null || left < 0 || top < 0) {
			return;
		}
		left = left | 0;
		top = top | 0;
		if(this._mask == null) {
			if(this.x != left) {
				this.posChanged = true;
				this.x = left;
			}
			if(this.y != top) {
				this.posChanged = true;
				this.y = top;
			}
		} else {
			if(this._mask.x != left) {
				var _this = this._mask;
				_this.posChanged = true;
				_this.x = left;
			}
			if(this._mask.y != top) {
				var _this = this._mask;
				_this.posChanged = true;
				_this.y = top;
			}
		}
	}
	,handleSize: function(w,h,style) {
		if(h == null || w == null || w <= 0 || h <= 0) {
			return;
		}
		if(this.styleable) {
			haxe_ui_backend_heaps_StyleHelper.apply(this,style,w,h);
		}
	}
	,handleVisibility: function(show) {
		haxe_ui_backend_ComponentBase.prototype.set_visible.call(this,show);
	}
	,_mask: null
	,handleClipRect: function(value) {
		if(value != null) {
			if(this._mask == null) {
				this._mask = new h2d_Mask(value.width * haxe_ui_Toolkit.get_scaleX() | 0,value.height * haxe_ui_Toolkit.get_scaleY() | 0,this.parentComponent);
				this._mask.addChild(this);
			}
			value.toInts();
			this.posChanged = true;
			this.x = -value.left;
			this.posChanged = true;
			this.y = -value.top;
			var _this = this._mask;
			var v = this.get_left();
			_this.posChanged = true;
			_this.x = v;
			var _this = this._mask;
			var v = this.get_top();
			_this.posChanged = true;
			_this.y = v;
			this._mask.width = value.width | 0;
			this._mask.height = value.height | 0;
			var hasFilter = this.hasFilter();
			if(hasFilter) {
				this.posChanged = true;
				this.x += 1;
				this.posChanged = true;
				this.y -= 4;
				var fh = this._mask;
				fh.posChanged = true;
				fh.y += 4;
				this._mask.width += 3;
			}
		} else if(this._mask != null) {
			this._mask = null;
		}
	}
	,hasFilter: function() {
		var p = this;
		while(p != null) {
			if(p.get_style().filter != null) {
				return true;
			}
			p = p.parentComponent;
		}
		return false;
	}
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextDisplay.call(this,text);
			this.addChild(this._textDisplay.sprite);
		}
		return this._textDisplay;
	}
	,createTextInput: function(text) {
		if(this._textInput == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextInput.call(this,text);
			this.addChild(this._textInput.sprite);
		}
		return this._textInput;
	}
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createImageDisplay.call(this);
			this.addChild(this._imageDisplay.sprite);
		}
		return this._imageDisplay;
	}
	,removeImageDisplay: function() {
		if(this._imageDisplay != null) {
			this.removeChild(this._imageDisplay.sprite);
			this._imageDisplay.dispose();
			this._imageDisplay = null;
		}
	}
	,handleReady: function() {
		haxe_ui_backend_ComponentBase.prototype.handleReady.call(this);
		haxe_ui_core_Screen.get_instance().addUpdateCallback();
	}
	,handleSetComponentIndex: function(child,index) {
		this.addChildAt(child,index + 1);
	}
	,handleAddComponent: function(child) {
		this.addChild(child);
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		this.addChildAt(child,index + 1);
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this.removeChild(child);
		if(dispose == true) {
			child.dispose();
		}
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var child = this._children[index];
		if(child != null) {
			this.removeChild(child);
			if(dispose == true) {
				child.dispose();
			}
		}
		return child;
	}
	,_deallocate: null
	,deallocate: null
	,set_deallocate: function(value) {
		this._deallocate = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.set_deallocate(value);
		}
		return value;
	}
	,_disposed: null
	,dispose: function() {
		if(this._disposed == true) {
			return;
		}
		this.set_deallocate(true);
		this.removeChildren();
		this._mask = null;
		if(this.parent != null) {
			this.parent.removeChild(this);
		}
	}
	,applyStyle: function(style) {
		if(style.filter != null && style.filter.length > 0) {
			this.set_filter(haxe_ui_backend_heaps_FilterConverter.convertFilter(style.filter[0]));
		} else {
			this.set_filter(null);
		}
		if(style.hidden != null) {
			this.set_visible(!style.hidden);
		}
		if(style.opacity != null) {
			this.alpha = style.opacity;
		}
	}
	,mapEvent: function(type,listener) {
		switch(type) {
		case "click":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"click") == false) {
				this._eventMap.h["click"] = listener;
				if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousedown") == false) {
					haxe_ui_backend_heaps_MouseHelper.notify("mousedown",$bind(this,this.__onMouseDown));
					this._eventMap.h["mousedown"] = null;
					haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
					this._eventMap.h["mouseup"] = null;
				}
				if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseup") == false) {
					haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
					this._eventMap.h["mouseup"] = null;
				}
			}
			break;
		case "doubleclick":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"doubleclick") == false) {
				this._eventMap.h["doubleclick"] = listener;
				if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseup") == false) {
					haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onDoubleClick));
					this._eventMap.h["mouseup"] = listener;
				}
			}
			break;
		case "mousedown":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousedown") == false) {
				haxe_ui_backend_heaps_MouseHelper.notify("mousedown",$bind(this,this.__onMouseDown));
				haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
				this._eventMap.h["mousedown"] = listener;
			}
			break;
		case "mousemove":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousemove") == false) {
				haxe_ui_backend_heaps_MouseHelper.notify("mousemove",$bind(this,this.__onMouseMove));
				this._eventMap.h["mousemove"] = listener;
			}
			break;
		case "mouseout":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseout") == false) {
				this._eventMap.h["mouseout"] = listener;
			}
			break;
		case "mouseover":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseover") == false) {
				haxe_ui_backend_heaps_MouseHelper.notify("mousemove",$bind(this,this.__onMouseMove));
				this._eventMap.h["mouseover"] = listener;
			}
			break;
		case "mouseup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseup") == false) {
				haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
				this._eventMap.h["mouseup"] = listener;
			}
			break;
		case "mousewheel":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousewheel") == false) {
				haxe_ui_backend_heaps_MouseHelper.notify("mousemove",$bind(this,this.__onMouseMove));
				haxe_ui_backend_heaps_MouseHelper.notify("mousewheel",$bind(this,this.__onMouseWheel));
				this._eventMap.h["mousewheel"] = listener;
			}
			break;
		case "rightclick":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightclick") == false) {
				this._eventMap.h["rightclick"] = listener;
				if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightmousedown") == false) {
					haxe_ui_backend_heaps_MouseHelper.notify("mousedown",$bind(this,this.__onMouseDown));
					haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
					this._eventMap.h["rightmousedown"] = listener;
				}
				if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightmouseup") == false) {
					haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
					this._eventMap.h["rightmouseup"] = listener;
				}
			}
			break;
		case "rightmousedown":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightmousedown") == false) {
				haxe_ui_backend_heaps_MouseHelper.notify("mousedown",$bind(this,this.__onMouseDown));
				haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
				this._eventMap.h["rightmousedown"] = listener;
			}
			break;
		case "rightmouseup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightmouseup") == false) {
				haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
				this._eventMap.h["rightmouseup"] = listener;
			}
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		switch(type) {
		case "click":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			break;
		case "doubleclick":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			haxe_ui_backend_heaps_MouseHelper.remove("mouseup",$bind(this,this.__onDoubleClick));
			break;
		case "mousedown":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousedown") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightmousedown") == false) {
				haxe_ui_backend_heaps_MouseHelper.remove("mousedown",$bind(this,this.__onMouseDown));
			}
			break;
		case "mousemove":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousemove") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseover") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousewheel") == false) {
				haxe_ui_backend_heaps_MouseHelper.remove("mousemove",$bind(this,this.__onMouseMove));
			}
			break;
		case "mouseout":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			break;
		case "mouseover":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousemove") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseover") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousewheel") == false) {
				haxe_ui_backend_heaps_MouseHelper.remove("mousemove",$bind(this,this.__onMouseMove));
			}
			break;
		case "mouseup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseup") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightmouseup") == false) {
				haxe_ui_backend_heaps_MouseHelper.remove("mouseup",$bind(this,this.__onMouseUp));
			}
			break;
		case "mousewheel":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			haxe_ui_backend_heaps_MouseHelper.remove("mousewheel",$bind(this,this.__onMouseWheel));
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousemove") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseover") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousewheel") == false) {
				haxe_ui_backend_heaps_MouseHelper.remove("mousemove",$bind(this,this.__onMouseMove));
			}
			break;
		case "rightclick":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			break;
		case "rightmousedown":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mousedown") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightmousedown") == false) {
				haxe_ui_backend_heaps_MouseHelper.remove("mousedown",$bind(this,this.__onMouseDown));
			}
			break;
		case "rightmouseup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,"mouseup") == false && Object.prototype.hasOwnProperty.call(this._eventMap.h,"rightmouseup") == false) {
				haxe_ui_backend_heaps_MouseHelper.remove("mouseup",$bind(this,this.__onMouseUp));
			}
			break;
		}
	}
	,_cachedScreenX: null
	,_cachedScreenY: null
	,_cachedClipComponent: null
	,_cachedClipComponentNone: null
	,_cachedRootComponent: null
	,clearCaches: function() {
		this._cachedScreenX = null;
		this._cachedScreenY = null;
		this._cachedClipComponent = null;
		this._cachedClipComponentNone = null;
		this._cachedRootComponent = null;
	}
	,cacheScreenPos: function() {
		if(this._cachedScreenX != null && this._cachedScreenY != null) {
			return;
		}
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var last = null;
		var xpos = 0;
		var ypos = 0;
		while(c != null) {
			xpos += c.get_left();
			ypos += c.get_top();
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left;
				ypos -= c.get_componentClipRect().top;
			}
			last = c;
			c = c.parentComponent;
		}
		if(last != null && last.parent != null) {
			var o = last.parent;
			while(o != null) {
				xpos += o.x;
				ypos += o.y;
				o = o.parent;
			}
		}
		xpos *= haxe_ui_Toolkit.get_scaleX();
		ypos *= haxe_ui_Toolkit.get_scaleY();
		if(haxe_ui_Toolkit.get_scaleX() != 1) {
			xpos -= last.get_left();
		}
		if(haxe_ui_Toolkit.get_scaleY() != 1) {
			ypos -= last.get_top();
		}
		this._cachedScreenX = xpos;
		this._cachedScreenY = ypos;
	}
	,screenX: null
	,get_screenX: function() {
		this.cacheScreenPos();
		return this._cachedScreenX;
	}
	,screenY: null
	,get_screenY: function() {
		this.cacheScreenPos();
		return this._cachedScreenY;
	}
	,findClipComponent: function() {
		if(this._cachedClipComponent != null) {
			return this._cachedClipComponent;
		} else if(this._cachedClipComponentNone == true) {
			return null;
		}
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var clip = null;
		while(c != null) {
			if(c.get_componentClipRect() != null) {
				clip = c;
				break;
			}
			c = c.parentComponent;
		}
		this._cachedClipComponent = clip;
		if(clip == null) {
			this._cachedClipComponentNone = true;
		}
		return clip;
	}
	,inBounds: function(x,y) {
		if((js_Boot.__cast(this , haxe_ui_core_Component)).get_hidden() == true) {
			return false;
		}
		if(this.isOnScreen() == false) {
			return false;
		}
		x *= haxe_ui_Toolkit.get_scaleX();
		y *= haxe_ui_Toolkit.get_scaleY();
		var b = false;
		var sx = this.get_screenX();
		var sy = this.get_screenY();
		var cx = this.get_width() * haxe_ui_Toolkit.get_scaleX();
		var cy = this.get_height() * haxe_ui_Toolkit.get_scaleY();
		if(x >= sx && y >= sy && x <= sx + cx && y <= sy + cy) {
			b = true;
		}
		if(b == true) {
			var clip = this.findClipComponent();
			if(clip != null) {
				b = false;
				var sx = clip.get_screenX() + clip.get_componentClipRect().left * haxe_ui_Toolkit.get_scaleX();
				var sy = clip.get_screenY() + clip.get_componentClipRect().top * haxe_ui_Toolkit.get_scaleY();
				var cx = clip.get_componentClipRect().width * haxe_ui_Toolkit.get_scaleX();
				var cy = clip.get_componentClipRect().height * haxe_ui_Toolkit.get_scaleY();
				if(x >= sx && y >= sy && x <= sx + cx && y <= sy + cy) {
					b = true;
				}
			}
		}
		return b;
	}
	,isEventRelevant: function(children,eventType) {
		var relevant = false;
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c == this) {
				relevant = true;
			}
			if(c.parentComponent == null) {
				break;
			}
		}
		return relevant;
	}
	,getComponentsAtPoint: function(x,y,reverse) {
		if(reverse == null) {
			reverse = false;
		}
		var array = [];
		var _g = 0;
		var _g1 = haxe_ui_core_Screen.get_instance().rootComponents;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			this.findChildrenAtPoint(r,x,y,array);
		}
		if(reverse == true) {
			array.reverse();
		}
		return array;
	}
	,findChildrenAtPoint: function(child,x,y,array) {
		if(child.inBounds(x,y) == true) {
			array.push(child);
		}
		var _g = 0;
		var _g1 = child._children == null ? [] : child._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.findChildrenAtPoint(c,x,y,array);
		}
	}
	,sync: function(ctx) {
		var changed = this.posChanged;
		if(changed == true && this.isComponentInvalid("position") == false && this._mask == null) {
			if(this.x != this.get_left()) {
				this.set_left(this.x);
			}
			if(this.y != this.get_top()) {
				this.set_top(this.y);
			}
		}
		haxe_ui_backend_ComponentBase.prototype.sync.call(this,ctx);
		this.clearCaches();
	}
	,onAdd: function() {
		haxe_ui_backend_ComponentBase.prototype.onAdd.call(this);
		if(this.parentComponent == null && haxe_ui_core_Screen.get_instance().rootComponents.indexOf(this) == -1) {
			haxe_ui_core_Screen.get_instance().addComponent(this);
		}
		(js_Boot.__cast(this , haxe_ui_core_Component)).ready();
	}
	,onRemove: function() {
		if(this._deallocate == true) {
			this._disposed = true;
			haxe_ui_backend_ComponentBase.prototype.onRemove.call(this);
		}
		if(this.parentComponent == null && haxe_ui_core_Screen.get_instance().rootComponents.indexOf(this) != -1) {
			haxe_ui_core_Screen.get_instance().removeComponent(this,this._deallocate);
		}
	}
	,lastMouseX: null
	,lastMouseY: null
	,_lastClickTime: null
	,_lastClickTimeDiff: null
	,_lastClickX: null
	,_lastClickY: null
	,calcCursor: function() {
		var c = null;
		var p = this;
		while(p != null) {
			if(p.get_style() != null && p.get_style().cursor != null) {
				c = p.get_style().cursor;
				break;
			}
			p = p.parentComponent;
		}
		return c;
	}
	,_mouseOverFlag: null
	,__onMouseMove: function(event) {
		var x = event.screenX;
		var y = event.screenY;
		this.lastMouseX = x;
		this.lastMouseY = y;
		var i = this.inBounds(x,y);
		if(i == false && this._mouseOverFlag == true) {
			this._mouseOverFlag = false;
			haxe_ui_core_Screen.get_instance().setCursor("default");
			var fn = this._eventMap.h["mouseout"];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent("mouseout");
				mouseEvent.screenX = x;
				mouseEvent.screenY = y;
				fn(mouseEvent);
				event.canceled = mouseEvent.canceled;
			}
			return;
		}
		if(i == true) {
			if(this.isEventRelevant(this.getComponentsAtPoint(x,y,true),"mouseover")) {
				if(this.isInteractiveAbove(x,y)) {
					return;
				}
			}
			if(this.get_style() != null) {
				haxe_ui_core_Screen.get_instance().setCursor(this.calcCursor());
			}
			var fn = this._eventMap.h["mousemove"];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent("mousemove");
				mouseEvent.screenX = x;
				mouseEvent.screenY = y;
				fn(mouseEvent);
				event.canceled = mouseEvent.canceled;
			}
		}
		if(i == true && this._mouseOverFlag == false) {
			if(this.isEventRelevant(this.getComponentsAtPoint(x,y,true),"mouseover")) {
				this._mouseOverFlag = true;
				var fn = this._eventMap.h["mouseover"];
				if(fn != null) {
					var mouseEvent = new haxe_ui_events_MouseEvent("mouseover");
					mouseEvent.screenX = x;
					mouseEvent.screenY = y;
					fn(mouseEvent);
					event.canceled = mouseEvent.canceled;
				}
			}
		} else if(i == false && this._mouseOverFlag == true) {
			this._mouseOverFlag = false;
			haxe_ui_core_Screen.get_instance().setCursor("default");
			var fn = this._eventMap.h["mouseout"];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent("mouseout");
				mouseEvent.screenX = x;
				mouseEvent.screenY = y;
				fn(mouseEvent);
				event.canceled = mouseEvent.canceled;
			}
		}
	}
	,_mouseDownFlag: null
	,_mouseDownButton: null
	,__onMouseDown: function(event) {
		var button = event.data;
		var x = event.screenX;
		var y = event.screenY;
		this.lastMouseX = x;
		this.lastMouseY = y;
		var i = this.inBounds(x,y);
		if(i == true && this._mouseDownFlag == false) {
			if(this.isEventRelevant(this.getComponentsAtPoint(x,y,true),"mousedown")) {
				if(this.isInteractiveAbove(x,y)) {
					return;
				}
				this._mouseDownFlag = true;
				if(this.get_style() != null && (this.get_style().cursor == "row-resize" || this.get_style().cursor == "col-resize")) {
					haxe_ui_core_Screen.get_instance().lockCursor();
				}
				this._mouseDownButton = button;
				var type = button == 0 ? "mousedown" : "rightmousedown";
				var fn = this._eventMap.h[type];
				if(fn != null) {
					var mouseEvent = new haxe_ui_events_MouseEvent(type);
					mouseEvent.screenX = x;
					mouseEvent.screenY = y;
					fn(mouseEvent);
					event.canceled = mouseEvent.canceled;
				}
			}
		}
	}
	,__onMouseUp: function(event) {
		var button = this._mouseDownButton;
		var x = event.screenX;
		var y = event.screenY;
		this.lastMouseX = x;
		this.lastMouseY = y;
		var i = this.inBounds(x,y);
		if(i == true) {
			if(this._mouseDownFlag == true) {
				var type = button == 0 ? "click" : "rightclick";
				var fn = this._eventMap.h[type];
				if(fn != null) {
					var mouseEvent = new haxe_ui_events_MouseEvent(type);
					mouseEvent.screenX = x;
					mouseEvent.screenY = y;
					haxe_ui_Toolkit.callLater(function() {
						fn(mouseEvent);
						event.canceled = mouseEvent.canceled;
					});
				}
				if(type == "click") {
					this._lastClickTimeDiff = HxOverrides.now() / 1000 - this._lastClickTime;
					this._lastClickTime = HxOverrides.now() / 1000;
					if(this._lastClickTimeDiff >= 0.5) {
						this._lastClickX = x;
						this._lastClickY = y;
					}
				}
			}
			if(this._mouseDownFlag && this.get_style() != null) {
				haxe_ui_core_Screen.get_instance().unlockCursor();
				haxe_ui_core_Screen.get_instance().setCursor(this.calcCursor());
			}
			this._mouseDownFlag = false;
			var type = button == 0 ? "mouseup" : "rightmouseup";
			var fn1 = this._eventMap.h[type];
			if(fn1 != null) {
				var mouseEvent1 = new haxe_ui_events_MouseEvent(type);
				mouseEvent1.screenX = x;
				mouseEvent1.screenY = y;
				fn1(mouseEvent1);
				event.canceled = mouseEvent1.canceled;
			}
		} else if(this._mouseDownFlag) {
			haxe_ui_core_Screen.get_instance().unlockCursor();
			haxe_ui_core_Screen.get_instance().setCursor("default");
		}
		this._mouseDownFlag = false;
	}
	,__onDoubleClick: function(event) {
		var button = this._mouseDownButton;
		var x = event.screenX;
		var y = event.screenY;
		this.lastMouseX = x;
		this.lastMouseY = y;
		var i = this.inBounds(x,y);
		if(i == true && button == 0) {
			this._mouseDownFlag = false;
			var x2 = this._lastClickX;
			var y2 = this._lastClickY;
			var mouseDelta = Math.sqrt((x - x2) * (x - x2) + (y - y2) * (y - y2));
			if(this._lastClickTimeDiff < 0.5 && mouseDelta < 5) {
				var type = "doubleclick";
				var fn = this._eventMap.h[type];
				if(fn != null) {
					var mouseEvent = new haxe_ui_events_MouseEvent(type);
					mouseEvent.screenX = x;
					mouseEvent.screenY = y;
					fn(mouseEvent);
					event.canceled = mouseEvent.canceled;
				}
			}
		}
		this._mouseDownFlag = false;
	}
	,__onMouseWheel: function(event) {
		var delta = event.delta;
		var fn = this._eventMap.h["mousewheel"];
		if(fn == null) {
			return;
		}
		if(!this.inBounds(this.lastMouseX,this.lastMouseY)) {
			return;
		}
		if(this.isInteractiveAbove(this.lastMouseX,this.lastMouseY)) {
			return;
		}
		var mouseEvent = new haxe_ui_events_MouseEvent("mousewheel");
		mouseEvent.screenX = this.lastMouseX;
		mouseEvent.screenY = this.lastMouseY;
		mouseEvent.delta = Math.max(-1,Math.min(1,-delta));
		fn(mouseEvent);
		event.canceled = mouseEvent.canceled;
	}
	,set_visible: function(value) {
		if(value == this.visible) {
			return value;
		}
		haxe_ui_backend_ComponentBase.prototype.set_visible.call(this,value);
		(js_Boot.__cast(this , haxe_ui_core_Component)).set_hidden(!value);
		return value;
	}
	,calcObjectIndex: function(obj) {
		var n = 0;
		while(obj.parent != null) {
			++n;
			if(obj.parent == obj.getScene()) {
				break;
			}
			obj = obj.parent;
		}
		return obj.getScene().getChildIndex(obj);
	}
	,isOnScreen: function() {
		var obj = this;
		while(obj.parent != null) {
			if(obj.visible == false) {
				return false;
			}
			obj = obj.parent;
			if(obj == obj.getScene()) {
				break;
			}
		}
		return true;
	}
	,isInteractiveAbove: function(x,y) {
		var scene = this.getScene();
		if(scene != null) {
			var interactive = scene.getInteractive(x,y);
			if(interactive != null) {
				var n1 = this.calcObjectIndex(interactive);
				var n2 = this.calcObjectIndex(this);
				if(n1 > n2) {
					hxd_System.setNativeCursor(interactive.cursor);
					return true;
				}
			}
		}
		return false;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentImpl();
	}
	,__class__: haxe_ui_backend_ComponentImpl
	,__properties__: $extend(haxe_ui_backend_ComponentBase.prototype.__properties__,{get_screenY:"get_screenY",get_screenX:"get_screenX",set_deallocate:"set_deallocate"})
});
var haxe_ui_validation_IValidating = function() { };
$hxClasses["haxe.ui.validation.IValidating"] = haxe_ui_validation_IValidating;
haxe_ui_validation_IValidating.__name__ = "haxe.ui.validation.IValidating";
haxe_ui_validation_IValidating.__isInterface__ = true;
haxe_ui_validation_IValidating.prototype = {
	get_depth: null
	,validateComponent: null
	,__class__: haxe_ui_validation_IValidating
	,__properties__: {get_depth:"get_depth"}
};
var haxe_ui_core_Component = function() {
	this._pauseAnimationStyleChanges = false;
	this._initialSizeApplied = false;
	this._scriptAccess = true;
	this._includeInLayout = true;
	this._styleSheet = null;
	this._cachedStyleSheetRef = null;
	this._useCachedStyleSheetRef = false;
	this._styleNamesList = null;
	this._styleNames = null;
	this.cascadeActive = false;
	this.classes = [];
	this._customStyle = null;
	this._hidden = false;
	this._invalidateRecursivelyOnShow = true;
	this.bindingRoot = false;
	this._animatable = true;
	this._native = null;
	this._defaultLayoutClass = null;
	this.componentTabIndex = 0;
	haxe_ui_backend_ComponentImpl.call(this);
	this.addClass(haxe_ui_Backend.get_id(),false);
	var c = js_Boot.getClass(this);
	while(c != null) {
		var css = c.__name__;
		var className = css.split(".").pop();
		this.addClass(className.toLowerCase(),false);
		this.addClass(haxe_ui_util_StringUtil.toDashes(className),false);
		if(className.toLowerCase() == "component") {
			break;
		}
		c = c.__super__;
	}
	var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
	if(s.native != null && this.get_hasNativeEntry() == true) {
		this.set_native(s.native);
	} else {
		this.create();
	}
	if(haxe_ui_Toolkit.get_initialized() == false) {
		haxe_Log.trace("WARNING: You are trying to create a component before the toolkit has been initialized. This could have undefined results.",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 80, className : "haxe.ui.core.Component", methodName : "new"});
	}
};
$hxClasses["haxe.ui.core.Component"] = haxe_ui_core_Component;
haxe_ui_core_Component.__name__ = "haxe.ui.core.Component";
haxe_ui_core_Component.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_Component.addNamedComponentsFrom = function(parent,list) {
	if(parent == null) {
		return;
	}
	if(parent.get_id() != null) {
		list.push(parent);
	}
	var _g = 0;
	var _g1 = parent._children == null ? [] : parent._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_core_Component.addNamedComponentsFrom(child,list);
	}
};
haxe_ui_core_Component.__super__ = haxe_ui_backend_ComponentImpl;
haxe_ui_core_Component.prototype = $extend(haxe_ui_backend_ComponentImpl.prototype,{
	componentTabIndex: null
	,_defaultLayoutClass: null
	,create: function() {
		if(this.get_native() == false || this.get_native() == null) {
			this.registerComposite();
		}
		this.createDefaults();
		this.handleCreate(this.get_native());
		this.destroyChildren();
		this.registerBehaviours();
		this.behaviours.replaceNative();
		if(this.get_native() == false || this.get_native() == null) {
			if(this._compositeBuilderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance(this._compositeBuilderClass,[this]);
				}
				this._compositeBuilder.create();
			}
			this.createChildren();
			if(this._internalEventsClass != null && this._internalEvents == null) {
				this.registerInternalEvents(this._internalEventsClass);
			}
		} else {
			var builderClass = this.getNativeConfigProperty(".builder.@class");
			if(builderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance($hxClasses[builderClass],[this]);
				}
				this._compositeBuilder.create();
			}
		}
		this.behaviours.applyDefaults();
	}
	,_compositeBuilderClass: null
	,_compositeBuilder: null
	,registerComposite: function() {
	}
	,createDefaults: function() {
	}
	,createChildren: function() {
	}
	,destroyChildren: function() {
		this.unregisterInternalEvents();
	}
	,createLayout: function() {
		var l = null;
		if(this.get_native() == true) {
			var sizeProps = this.getNativeConfigProperties(".size");
			if(sizeProps != null && Object.prototype.hasOwnProperty.call(sizeProps.h,"class")) {
				var name = sizeProps.h["class"];
				var size = Type.createInstance($hxClasses[name],[]);
				size.config = sizeProps;
				l = new haxe_ui_layouts_DelegateLayout(size);
			} else {
				var layoutProps = this.getNativeConfigProperties(".layout");
				if(layoutProps != null && Object.prototype.hasOwnProperty.call(layoutProps.h,"class")) {
					var name = layoutProps.h["class"];
					l = Type.createInstance($hxClasses[name],[]);
				}
			}
		}
		if(l == null) {
			if(this._defaultLayoutClass != null) {
				l = Type.createInstance(this._defaultLayoutClass,[]);
			} else {
				l = new haxe_ui_layouts_DefaultLayout();
			}
		}
		return l;
	}
	,_native: null
	,get_native: function() {
		if(this._native == null) {
			return false;
		}
		if(this.get_hasNativeEntry() == false) {
			return false;
		}
		return this._native;
	}
	,set_native: function(value) {
		if(this.get_hasNativeEntry() == false) {
			return value;
		}
		if(this._native == value) {
			return value;
		}
		this._native = value;
		this.get_customStyle().native = value;
		if(this._native == true && this.get_hasNativeEntry()) {
			this.addClass(":native");
		} else {
			this.removeClass(":native");
		}
		this.behaviours.cache();
		this.behaviours.detatch();
		this.create();
		if(this.get_layout() != null) {
			this.set_layout(this.createLayout());
		}
		this.behaviours.restore();
		return value;
	}
	,_animatable: null
	,get_animatable: function() {
		return this._animatable;
	}
	,_componentAnimation: null
	,get_componentAnimation: function() {
		return this._componentAnimation;
	}
	,set_componentAnimation: function(value) {
		if(this._componentAnimation != value && this._animatable == true) {
			if(this._componentAnimation != null) {
				this._componentAnimation.stop();
			}
			this._componentAnimation = value;
		}
		return value;
	}
	,screen: null
	,get_screen: function() {
		return haxe_ui_Toolkit.get_screen();
	}
	,bindingRoot: null
	,get_rootComponent: function() {
		var r = this;
		while(r.parentComponent != null) r = r.parentComponent;
		return r;
	}
	,get_numComponents: function() {
		var n = 0;
		if(this._compositeBuilder != null) {
			var builderCount = this._compositeBuilder.get_numComponents();
			if(builderCount != null) {
				n = builderCount;
			} else if(this._children != null) {
				n = this._children.length;
			}
		} else if(this._children != null) {
			n = this._children.length;
		}
		return n;
	}
	,addComponent: function(child) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponent(child);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.push(child);
		this.handleAddComponent(child);
		if(this._componentReady) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		var event = new haxe_ui_events_UIEvent("componentadded");
		event.relatedComponent = child;
		this.dispatch(event);
		child.dispatch(new haxe_ui_events_UIEvent("componentaddedtoparent"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,addComponentAt: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponentAt(child,index);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.splice(index,0,child);
		this.handleAddComponentAt(child,index);
		if(this._componentReady) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentadded"));
		child.dispatch(new haxe_ui_events_UIEvent("componentaddedtoparent"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,onComponentAdded: function(child) {
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child == null) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponent(child,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		if(this._children != null) {
			if(this._children.indexOf(child) == -1) {
				var childId = child.get_className();
				if(child.get_id() != null) {
					childId += "#" + child.get_id();
				}
				var thisId = this.get_className();
				if(this.get_id() != null) {
					thisId += "#" + this.get_id();
				}
				haxe_Log.trace("WARNING: trying to remove a child (" + childId + ") that is not a child of this component (" + thisId + ")",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 538, className : "haxe.ui.core.Component", methodName : "removeComponent"});
				return child;
			}
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(dispose == true) {
				child.disposeComponent();
			} else {
				child.dispatch(new haxe_ui_events_UIEvent("hidden"));
				child.removeClass(":hover",false,true);
			}
		}
		this.handleRemoveComponent(child,dispose);
		this.assignPositionClasses(invalidate);
		if(this._children != null && invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		var event = new haxe_ui_events_UIEvent("componentremoved");
		event.relatedComponent = child;
		this.dispatch(event);
		child.dispatch(new haxe_ui_events_UIEvent("componentremovedfromparent"));
		return child;
	}
	,disposeComponent: function() {
		this._isDisposed = true;
		this.removeAllComponents(true);
		this.destroyComponent();
		this.unregisterEvents();
		if(this.hasTextDisplay()) {
			this.getTextDisplay().dispose();
		}
		if(this.hasTextInput()) {
			this.getTextInput().dispose();
		}
		if(this.hasImageDisplay()) {
			this.getImageDisplay().dispose();
		}
		if(this.behaviours != null) {
			this.behaviours.dispose();
			this.behaviours = null;
		}
		if(this._layout != null) {
			this._layout.set_component(null);
			this._layout = null;
		}
		if(this._internalEvents != null) {
			this._internalEvents._target = null;
			this._internalEvents = null;
		}
		this.parentComponent = null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(this._children == null) {
			return null;
		}
		var childCount = this._children.length;
		if(this._compositeBuilder != null) {
			var compositeChildCount = this._compositeBuilder.get_numComponents();
			if(compositeChildCount != null) {
				childCount = compositeChildCount;
			}
		}
		if(index < 0 || index > childCount - 1) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponentAt(index,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		var child = this._children[index];
		if(child == null) {
			return null;
		}
		if(dispose == true) {
			child._isDisposed = true;
			child.removeAllComponents(true);
		} else {
			child.dispatch(new haxe_ui_events_UIEvent("hidden"));
			child.removeClass(":hover",false,true);
		}
		this.handleRemoveComponentAt(index,dispose);
		if(HxOverrides.remove(this._children,child)) {
			child.parentComponent = null;
			child.set_depth(-1);
		}
		if(dispose == true) {
			child.destroyComponent();
			child.unregisterEvents();
		}
		this.assignPositionClasses(invalidate);
		if(invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentremoved"));
		child.dispatch(new haxe_ui_events_UIEvent("componentremovedfromparent"));
		return child;
	}
	,onComponentRemoved: function(child) {
	}
	,assignPositionClasses: function(invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if((this._children == null ? [] : this._children).length == 1) {
			(this._children == null ? [] : this._children)[0].addClasses(["first","last"],invalidate);
			return;
		}
		var _g = 0;
		var _g1 = (this._children == null ? [] : this._children).length;
		while(_g < _g1) {
			var i = _g++;
			var c = (this._children == null ? [] : this._children)[i];
			if(i == 0) {
				c.swapClass("first","last",invalidate);
			} else if((this._children == null ? [] : this._children).length > 1 && i == (this._children == null ? [] : this._children).length - 1) {
				c.swapClass("last","first",invalidate);
			} else {
				c.removeClasses(["first","last"],invalidate);
			}
		}
	}
	,destroyComponent: function() {
		if(this._compositeBuilder != null) {
			this._compositeBuilder.destroy();
		}
		haxe_ui_locale_LocaleManager.get_instance().unregisterComponent(this);
		this.onDestroy();
	}
	,onDestroy: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.onDestroy();
		}
		this.dispatch(new haxe_ui_events_UIEvent("hidden"));
		this.dispatch(new haxe_ui_events_UIEvent("destroy"));
	}
	,walkComponents: function(callback) {
		if(callback(this) == false) {
			return;
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var cont = [true];
			child.walkComponents((function(cont) {
				return function(c) {
					cont[0] = callback(c);
					return cont[0];
				};
			})(cont));
			if(cont[0] == false) {
				break;
			}
		}
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this._compositeBuilder != null) {
			var b = this._compositeBuilder.removeAllComponents(dispose);
			if(b == true) {
				return;
			}
		}
		if(this._children != null) {
			while(this._children.length > 0) {
				if(dispose) {
					this._children[0].removeAllComponents(dispose);
				}
				this.removeComponent(this._children[0],dispose,false);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,matchesSearch: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(criteria != null) {
			if(searchType == "id" && this.get_id() == criteria || searchType == "css" && this.classes.indexOf(criteria) != -1 == true) {
				if(type != null) {
					return js_Boot.__instanceof(this,type);
				}
				return true;
			}
		} else if(type != null) {
			return js_Boot.__instanceof(this,type);
		}
		return false;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(recursive == null && criteria != null && searchType == "id") {
			recursive = true;
		}
		var match = null;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.matchesSearch(criteria,type,searchType)) {
				match = child;
				break;
			}
		}
		if(match == null && recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				var temp = child.findComponent(criteria,type,recursive,searchType);
				if(temp != null) {
					match = temp;
					break;
				}
			}
			if(match == null && this._compositeBuilder != null) {
				match = this._compositeBuilder.findComponent(criteria,type,recursive,searchType);
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(maxDepth == -1) {
			maxDepth = 100;
		}
		if(maxDepth <= 0) {
			return [];
		}
		--maxDepth;
		var r = [];
		if(this._compositeBuilder != null) {
			var childArray = this._compositeBuilder.findComponents(styleName,type,maxDepth);
			if(childArray != null) {
				var _g = 0;
				while(_g < childArray.length) {
					var c = childArray[_g];
					++_g;
					r.push(c);
				}
			}
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && child.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(child,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(child);
			} else {
				var childArray = child.findComponents(styleName,type,maxDepth);
				var _g2 = 0;
				while(_g2 < childArray.length) {
					var c = childArray[_g2];
					++_g2;
					r.push(c);
				}
			}
		}
		return r;
	}
	,findAncestor: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		var match = null;
		var p = this.parentComponent;
		while(p != null) if(p.matchesSearch(criteria,type,searchType)) {
			match = p;
			break;
		} else {
			p = p.parentComponent;
		}
		return match;
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var c = [];
		if(this.hitTest(screenX,screenY,false)) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,false)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == true) {
						c.push(child);
					}
					c = c.concat(child.findComponentsUnderPoint(screenX,screenY,type));
				}
			}
		}
		return c;
	}
	,getComponentIndex: function(child) {
		if(this._compositeBuilder != null) {
			var index = this._compositeBuilder.getComponentIndex(child);
			if(index != -2147483648) {
				return index;
			}
		}
		var index = -1;
		if(this._children != null && child != null) {
			index = this._children.indexOf(child);
		}
		return index;
	}
	,setComponentIndex: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.setComponentIndex(child,index);
			if(v != null) {
				return v;
			}
		}
		if(index >= 0 && index <= this._children.length && child.parentComponent == this) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this._children,child);
			this._children.splice(index,0,child);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return child;
	}
	,getComponentAt: function(index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.getComponentAt(index);
			if(v != null) {
				return v;
			}
		}
		if(this._children == null) {
			return null;
		}
		return this._children[index];
	}
	,hide: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
		}
	}
	,_invalidateRecursivelyOnShow: null
	,show: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			var recursive = this._invalidateRecursivelyOnShow;
			if(recursive == null) {
				recursive = false;
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",recursive);
			}
			this._invalidateRecursivelyOnShow = false;
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
		}
	}
	,fadeIn: function(onEnd,show) {
		if(show == null) {
			show = true;
		}
		var _gthis = this;
		if(onEnd != null || show == true) {
			var prevStart = this.onAnimationStart;
			var prevEnd = this.onAnimationEnd;
			if(show == true) {
				prevStart = this.onAnimationStart;
				this.set_onAnimationStart(function(e) {
					_gthis.show();
					_gthis.set_onAnimationStart(prevStart);
				});
			}
			this.set_onAnimationEnd(function(e) {
				if(onEnd != null) {
					onEnd();
				}
				_gthis.removeClass("fade-in");
				_gthis.set_onAnimationEnd(prevEnd);
			});
		}
		this.swapClass("fade-in","fade-out");
	}
	,fadeOut: function(onEnd,hide) {
		if(hide == null) {
			hide = true;
		}
		var _gthis = this;
		if(onEnd != null || hide == true) {
			var prevEnd = this.onAnimationEnd;
			this.set_onAnimationEnd(function(e) {
				if(hide == true) {
					_gthis.hide();
				}
				if(onEnd != null) {
					onEnd();
				}
				_gthis.set_onAnimationEnd(prevEnd);
				_gthis.removeClass("fade-out");
			});
		}
		this.swapClass("fade-out","fade-in");
	}
	,_hidden: null
	,get_hidden: function() {
		if(this._hidden == true) {
			return true;
		}
		if(this.parentComponent != null) {
			return this.parentComponent.get_hidden();
		}
		return false;
	}
	,set_hidden: function(value) {
		if(value == this._hidden) {
			return value;
		}
		if(value == true) {
			this.hide();
		} else {
			this.show();
		}
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hidden"));
		return value;
	}
	,_customStyle: null
	,get_customStyle: function() {
		if(this._customStyle == null) {
			this._customStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		return this._customStyle;
	}
	,set_customStyle: function(value) {
		if(value != this._customStyle) {
			this.invalidateComponent("style",false);
		}
		this._customStyle = value;
		return value;
	}
	,classes: null
	,cascadeActive: null
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) == -1) {
			this.classes.push(name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true || this.cascadeActive == true && name == ":active") {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(name,invalidate,recursive);
			}
		}
	}
	,addClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) == -1) {
				this.classes.push(name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClasses(names,invalidate,recursive);
			}
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) != -1) {
			HxOverrides.remove(this.classes,name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true || this.cascadeActive == true && name == ":active") {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(name,invalidate,recursive);
			}
		}
	}
	,removeClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) != -1) {
				HxOverrides.remove(this.classes,name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClasses(names,invalidate,recursive);
			}
		}
	}
	,swapClass: function(classToAdd,classToRemove,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		if(classToAdd != null && this.classes.indexOf(classToAdd) == -1) {
			this.classes.push(classToAdd);
			needsInvalidate = true;
		}
		if(classToRemove != null && this.classes.indexOf(classToRemove) != -1) {
			HxOverrides.remove(this.classes,classToRemove);
			needsInvalidate = true;
		}
		if(invalidate == true && needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.swapClass(classToAdd,classToRemove,invalidate,recursive);
			}
		}
	}
	,_styleNames: null
	,_styleNamesList: null
	,get_styleNames: function() {
		return this._styleNames;
	}
	,set_styleNames: function(value) {
		if(value == this._styleNames) {
			return value;
		}
		if(value == null) {
			value = "";
		}
		this._styleNames = value;
		var newStyleNamesList = [];
		var classesToAdd = [];
		var requiresInvalidation = false;
		var _g = 0;
		var _g1 = value.split(" ");
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			x = StringTools.trim(x);
			if(x.length == 0) {
				continue;
			}
			newStyleNamesList.push(x);
			if(this._styleNamesList != null) {
				if(this._styleNamesList.indexOf(x) == -1) {
					classesToAdd.push(x);
					requiresInvalidation = true;
				}
			} else {
				classesToAdd.push(x);
				requiresInvalidation = true;
			}
		}
		var classesToRemove = [];
		if(this._styleNamesList != null) {
			var _g = 0;
			var _g1 = this._styleNamesList;
			while(_g < _g1.length) {
				var x = _g1[_g];
				++_g;
				if(newStyleNamesList.indexOf(x) == -1) {
					classesToRemove.push(x);
					requiresInvalidation = true;
				}
			}
		}
		this._styleNamesList = newStyleNamesList;
		if(requiresInvalidation) {
			var _g = 0;
			while(_g < classesToAdd.length) {
				var x = classesToAdd[_g];
				++_g;
				this.addClass(x,false,false);
			}
			var _g = 0;
			while(_g < classesToRemove.length) {
				var x = classesToRemove[_g];
				++_g;
				this.removeClass(x,false,false);
			}
			this.invalidateComponent("all",true);
		}
		return value;
	}
	,_styleString: null
	,get_styleString: function() {
		return this._styleString;
	}
	,set_styleString: function(value) {
		if(value == null || value == this._styleString) {
			return value;
		}
		var cssString = StringTools.trim(value);
		if(cssString.length == 0) {
			return value;
		}
		if(StringTools.endsWith(cssString,";") == false) {
			cssString += ";";
		}
		cssString = "_ { " + cssString + "}";
		var s = new haxe_ui_styles_Parser().parse(cssString);
		this.get_customStyle().mergeDirectives(s.get_rules()[0].directives);
		this._styleString = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,_useCachedStyleSheetRef: null
	,_cachedStyleSheetRef: null
	,_styleSheet: null
	,get_styleSheet: function() {
		if(this._useCachedStyleSheetRef == true) {
			return this._cachedStyleSheetRef;
		}
		var s = null;
		var ref = this;
		while(ref != null) {
			if(ref._styleSheet != null) {
				s = ref._styleSheet;
				break;
			}
			ref = ref.parentComponent;
		}
		this._useCachedStyleSheetRef = true;
		this._cachedStyleSheetRef = s;
		return s;
	}
	,_includeInLayout: null
	,get_includeInLayout: function() {
		if(this._hidden == true) {
			return false;
		}
		return this._includeInLayout;
	}
	,set_includeInLayout: function(value) {
		this._includeInLayout = value;
		return value;
	}
	,get_layout: function() {
		return this._layout;
	}
	,set_layout: function(value) {
		if(value == null) {
			return value;
		}
		var tmp;
		if(this._layout != null) {
			var c = js_Boot.getClass(value);
			var tmp1 = c.__name__;
			var c = js_Boot.getClass(this._layout);
			tmp = tmp1 == c.__name__;
		} else {
			tmp = false;
		}
		if(tmp) {
			return value;
		}
		this._layout = value;
		this._layout.set_component(this);
		return value;
	}
	,ready: function() {
		var _gthis = this;
		this.set_depth(haxe_ui_util_ComponentUtil.getDepth(this));
		if(this.isComponentInvalid()) {
			this._invalidateCount = 0;
			haxe_ui_validation_ValidationManager.get_instance().add(this);
		}
		if(this._componentReady == false) {
			this._componentReady = true;
			this.handleReady();
			if((this._children == null ? [] : this._children) != null) {
				var _g = 0;
				var _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.ready();
				}
			}
			this.invalidateComponent();
			this.behaviours.ready();
			this.behaviours.update();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.invalidateComponent("data",false);
				_gthis.invalidateComponent("style",false);
				if(_gthis._compositeBuilder != null) {
					_gthis._compositeBuilder.onReady();
				}
				_gthis.onReady();
				_gthis.dispatch(new haxe_ui_events_UIEvent("ready"));
				if(_gthis._hidden == false) {
					_gthis.dispatch(new haxe_ui_events_UIEvent("shown"));
				}
			});
		}
	}
	,onReady: function() {
	}
	,onInitialize: function() {
	}
	,onResized: function() {
	}
	,onMoved: function() {
	}
	,_scriptAccess: null
	,get_scriptAccess: function() {
		return this._scriptAccess;
	}
	,set_scriptAccess: function(value) {
		if(value == this._scriptAccess) {
			return value;
		}
		this._scriptAccess = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_scriptAccess(value);
		}
		return value;
	}
	,namedComponents: null
	,get_namedComponents: function() {
		var list = [];
		haxe_ui_core_Component.addNamedComponentsFrom(this,list);
		return list;
	}
	,onThemeChanged: function() {
	}
	,initializeComponent: function() {
		if(this._isInitialized == true) {
			return;
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onInitialize();
		}
		this.onInitialize();
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		this._isInitialized = true;
		if(this.hasEvent("initialize")) {
			this.dispatch(new haxe_ui_events_UIEvent("initialize"));
		}
	}
	,_initialSizeApplied: null
	,validateInitialSize: function(isInitialized) {
		if(isInitialized == false && this._style != null && this._initialSizeApplied == false) {
			if((this._style.initialWidth != null || this._style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(this._style.initialWidth != null) {
					this.set_width(this._style.initialWidth);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentWidth != null) {
					this.set_percentWidth(this._style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((this._style.initialHeight != null || this._style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(this._style.initialHeight != null) {
					this.set_height(this._style.initialHeight);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentHeight != null) {
					this.set_percentHeight(this._style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
	}
	,validateComponentData: function() {
		this.behaviours.validateData();
		if(this._compositeBuilder != null) {
			this._compositeBuilder.validateComponentData();
		}
	}
	,validateComponentLayout: function() {
		this.get_layout().refresh();
		while(this.validateComponentAutoSize()) this.get_layout().refresh();
		var sizeChanged = false;
		if(this._componentWidth != this._actualWidth || this._componentHeight != this._actualHeight) {
			this._actualWidth = this._componentWidth;
			this._actualHeight = this._componentHeight;
			this.enforceSizeConstraints();
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.onResized();
			this.dispatch(new haxe_ui_events_UIEvent("resize"));
			sizeChanged = true;
		}
		if(this._compositeBuilder != null) {
			if(this._compositeBuilder.validateComponentLayout()) {
				sizeChanged = true;
			}
		}
		return sizeChanged;
	}
	,enforceSizeConstraints: function() {
		if(this.get_style() != null) {
			if(this.get_style().minWidth != null && this._componentWidth < this.get_style().minWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().minWidth;
			}
			if(this.get_style().maxWidth != null && this.get_style().maxPercentWidth == null && this._componentWidth > this.get_style().maxWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().maxWidth;
			} else if(this.get_style().maxWidth == null && this.get_style().maxPercentWidth != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentWidth == null) {
						max += p.get_width();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingLeft + p.get_style().paddingRight;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentWidth / 100;
				if(max > 0 && this._componentWidth > max) {
					this._componentWidth = this._actualWidth = this._width = max;
				}
			}
			if(this.get_style().minHeight != null && this._componentHeight < this.get_style().minHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().minHeight;
			}
			if(this.get_style().maxHeight != null && this.get_style().maxPercentHeight == null && this._componentHeight > this.get_style().maxHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().maxHeight;
			} else if(this.get_style().maxHeight == null && this.get_style().maxPercentHeight != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentHeight == null) {
						max += p.get_height();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingTop + p.get_style().paddingBottom;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentHeight / 100;
				if(max > 0 && this._componentHeight > max) {
					this._componentHeight = this._actualHeight = this._height = max;
				}
			}
		}
	}
	,validateComponentStyle: function() {
		var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
		if(this.get_styleSheet() != null) {
			var localStyle = this.get_styleSheet().buildStyleFor(this);
			s.apply(localStyle);
		}
		s.apply(this.get_customStyle());
		if(this._style == null || this._style.equalTo(s) == false) {
			var marginsChanged = false;
			if(this.parentComponent != null && this._style != null) {
				marginsChanged = this._style.marginLeft != s.marginLeft || this._style.marginRight != s.marginRight || this._style.marginTop != s.marginTop || this._style.marginBottom != s.marginBottom;
			}
			var bordersChanged = false;
			if(this._style != null && this._style.get_fullBorderSize() != s.get_fullBorderSize()) {
				bordersChanged = true;
			}
			this._style = s;
			this.applyStyle(s);
			if(bordersChanged == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout",false);
				}
			}
			if(marginsChanged == true) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
	}
	,validateComponentPosition: function() {
		this.handlePosition(this._left,this._top,this._style);
		this.onMoved();
		this.dispatch(new haxe_ui_events_UIEvent("move"));
	}
	,updateComponentDisplay: function() {
		if(this.get_componentWidth() == null || this.get_componentHeight() == null) {
			return;
		}
		this.handleSize(this.get_componentWidth(),this.get_componentHeight(),this._style);
		if(this._componentClipRect != null || this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			this.handleClipRect(this._componentClipRect != null ? this._componentClipRect : new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight()));
		}
	}
	,validateComponentAutoSize: function() {
		var invalidate = false;
		if(this.get_autoWidth() == true || this.get_autoHeight() == true) {
			var s = this.get_layout().calcAutoSize();
			if(this.get_autoWidth() == true) {
				if(s.width != this._componentWidth) {
					this._componentWidth = s.width;
					invalidate = true;
				}
			}
			if(this.get_autoHeight() == true) {
				if(s.height != this._componentHeight) {
					this._componentHeight = s.height;
					invalidate = true;
				}
			}
		}
		return invalidate;
	}
	,_pauseAnimationStyleChanges: null
	,applyStyle: function(style) {
		haxe_ui_backend_ComponentImpl.prototype.applyStyle.call(this,style);
		if(style != null && this._initialSizeApplied == false) {
			if((style.initialWidth != null || style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(style.initialWidth != null) {
					this.set_width(style.initialWidth);
					this._initialSizeApplied = true;
				} else if(style.initialPercentWidth != null) {
					this.set_percentWidth(style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((style.initialHeight != null || style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(style.initialHeight != null) {
					this.set_height(style.initialHeight);
					this._initialSizeApplied = true;
				} else if(style.initialPercentHeight != null) {
					this.set_percentHeight(style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
		if(style.left != null) {
			this.set_left(style.left);
		}
		if(style.top != null) {
			this.set_top(style.top);
		}
		if(style.percentWidth != null) {
			this._width = null;
			this.set_componentWidth(null);
			this.set_percentWidth(style.percentWidth);
		}
		if(style.percentHeight != null) {
			this._height = null;
			this.set_componentHeight(null);
			this.set_percentHeight(style.percentHeight);
		}
		if(style.width != null) {
			this.set_percentWidth(null);
			this.set_width(style.width);
		}
		if(style.height != null) {
			this.set_percentHeight(null);
			this.set_height(style.height);
		}
		if(style.native != null) {
			this.set_native(style.native);
		}
		if(style.hidden != null) {
			this.set_hidden(style.hidden);
		}
		if(this._pauseAnimationStyleChanges == false) {
			if(style.animationName != null) {
				var animationKeyFrames = haxe_ui_Toolkit.styleSheet.get_animations().h[style.animationName];
				this.applyAnimationKeyFrame(animationKeyFrames,style.animationOptions);
			} else if(this.get_componentAnimation() != null) {
				this.set_componentAnimation(null);
			}
		}
		if(style.pointerEvents != null && style.pointerEvents != "none") {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == false) {
				if(style.cursor == null) {
					this.get_customStyle().cursor = "pointer";
				}
				this.registerEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == false) {
				this.registerEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == false) {
				this.registerEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == false) {
				this.registerEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",true);
		} else if(style.pointerEvents != null) {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == true) {
				this.get_customStyle().cursor = null;
				this.unregisterEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == true) {
				this.unregisterEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == true) {
				this.unregisterEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == true) {
				this.unregisterEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",false);
		}
		if(style.includeInLayout != null) {
			this.set_includeInLayout(style.includeInLayout);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.applyStyle(style);
		}
	}
	,onPointerEventsMouseOver: function(e) {
		this.addClass(":hover",true,true);
	}
	,onPointerEventsMouseOut: function(e) {
		this.removeClass(":hover",true,true);
	}
	,onPointerEventsMouseDown: function(e) {
		this.addClass(":down",true,true);
	}
	,onPointerEventsMouseUp: function(e) {
		this.removeClass(":down",true,true);
	}
	,applyAnimationKeyFrame: function(animationKeyFrames,options) {
		var _gthis = this;
		if(this._animatable == false || options == null || options.duration == 0 || this._componentAnimation != null && this._componentAnimation.name == animationKeyFrames.id && options.compareToAnimation(this._componentAnimation) == true) {
			return;
		}
		if(this.hasEvent("animationstart")) {
			this.dispatch(new haxe_ui_events_AnimationEvent("animationstart"));
		}
		this.set_componentAnimation(haxe_ui_styles_animation_Animation.createWithKeyFrames(animationKeyFrames,this,options));
		this.get_componentAnimation().run(function() {
			if(_gthis.hasEvent("animationend")) {
				_gthis.dispatch(new haxe_ui_events_AnimationEvent("animationend"));
			}
		});
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentImpl.prototype.cloneComponent.call(this);
		if(this.get_styleNames() != null) {
			c.set_styleNames(this.get_styleNames());
		}
		if(this.get_styleString() != null) {
			c.set_styleString(this.get_styleString());
		}
		var tmp = this._componentReady == false;
		if(this.get_layout() != null) {
			c.set_layout(this.get_layout().cloneLayout());
		}
		if(this._hidden == true) {
			c.hide();
		}
		if(this.get_autoWidth() == false && this.get_width() > 0) {
			c.set_width(this.get_width());
		}
		if(this.get_autoHeight() == false && this.get_height() > 0) {
			c.set_height(this.get_height());
		}
		if(this.get_customStyle() != null) {
			if(c.get_customStyle() == null) {
				c.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			}
			c.get_customStyle().apply(this.get_customStyle());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,cssName: null
	,get_cssName: function() {
		var cssName = null;
		if(this._compositeBuilder != null) {
			cssName = this._compositeBuilder.get_cssName();
		}
		if(cssName == null) {
			var c = js_Boot.getClass(this);
			cssName = c.__name__.split(".").pop().toLowerCase();
		}
		return cssName;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentImpl.prototype.registerBehaviours.call(this);
	}
	,set_backgroundColor: function(value) {
		if(this.get_customStyle().backgroundColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundColor = null;
		} else {
			this.get_customStyle().backgroundColor = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingLeft: function() {
		if(this.get_customStyle().paddingLeft != null) {
			return this.get_customStyle().paddingLeft;
		}
		if(this.get_style() == null || this.get_style().paddingLeft == null) {
			return null;
		}
		return this.get_style().paddingLeft;
	}
	,get_paddingRight: function() {
		if(this.get_customStyle().paddingRight != null) {
			return this.get_customStyle().paddingRight;
		}
		if(this.get_style() == null || this.get_style().paddingRight == null) {
			return null;
		}
		return this.get_style().paddingRight;
	}
	,get_paddingTop: function() {
		if(this.get_customStyle().paddingTop != null) {
			return this.get_customStyle().paddingTop;
		}
		if(this.get_style() == null || this.get_style().paddingTop == null) {
			return null;
		}
		return this.get_style().paddingTop;
	}
	,get_paddingBottom: function() {
		if(this.get_customStyle().paddingBottom != null) {
			return this.get_customStyle().paddingBottom;
		}
		if(this.get_style() == null || this.get_style().paddingBottom == null) {
			return null;
		}
		return this.get_style().paddingBottom;
	}
	,get_marginLeft: function() {
		if(this.get_customStyle().marginLeft != null) {
			return this.get_customStyle().marginLeft;
		}
		if(this.get_style() == null || this.get_style().marginLeft == null) {
			return null;
		}
		return this.get_style().marginLeft;
	}
	,get_marginTop: function() {
		if(this.get_customStyle().marginTop != null) {
			return this.get_customStyle().marginTop;
		}
		if(this.get_style() == null || this.get_style().marginTop == null) {
			return null;
		}
		return this.get_style().marginTop;
	}
	,set_opacity: function(value) {
		if(this.get_customStyle().opacity == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().opacity = null;
		} else {
			this.get_customStyle().opacity = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,set_horizontalAlign: function(value) {
		if(this.get_customStyle().horizontalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().horizontalAlign = null;
		} else {
			this.get_customStyle().horizontalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,set_verticalAlign: function(value) {
		if(this.get_customStyle().verticalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().verticalAlign = null;
		} else {
			this.get_customStyle().verticalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,self: function() {
		return new haxe_ui_core_Component();
	}
	,_internal__onAnimationStart: null
	,onAnimationStart: null
	,set_onAnimationStart: function(value) {
		if(this._internal__onAnimationStart != null) {
			this.unregisterEvent("animationstart",this._internal__onAnimationStart);
			this._internal__onAnimationStart = null;
		}
		if(value != null) {
			this._internal__onAnimationStart = value;
			this.registerEvent("animationstart",value);
		}
		return value;
	}
	,_internal__onAnimationEnd: null
	,onAnimationEnd: null
	,set_onAnimationEnd: function(value) {
		if(this._internal__onAnimationEnd != null) {
			this.unregisterEvent("animationend",this._internal__onAnimationEnd);
			this._internal__onAnimationEnd = null;
		}
		if(value != null) {
			this._internal__onAnimationEnd = value;
			this.registerEvent("animationend",value);
		}
		return value;
	}
	,_internal__onClick: null
	,onClick: null
	,set_onClick: function(value) {
		if(this._internal__onClick != null) {
			this.unregisterEvent("click",this._internal__onClick);
			this._internal__onClick = null;
		}
		if(value != null) {
			this._internal__onClick = value;
			this.registerEvent("click",value);
		}
		return value;
	}
	,_internal__onChange: null
	,onChange: null
	,set_onChange: function(value) {
		if(this._internal__onChange != null) {
			this.unregisterEvent("change",this._internal__onChange);
			this._internal__onChange = null;
		}
		if(value != null) {
			this._internal__onChange = value;
			this.registerEvent("change",value);
		}
		return value;
	}
	,__class__: haxe_ui_core_Component
	,__properties__: $extend(haxe_ui_backend_ComponentImpl.prototype.__properties__,{set_onChange:"set_onChange",set_onClick:"set_onClick",set_onAnimationEnd:"set_onAnimationEnd",set_onAnimationStart:"set_onAnimationStart",set_verticalAlign:"set_verticalAlign",set_horizontalAlign:"set_horizontalAlign",set_opacity:"set_opacity",get_marginTop:"get_marginTop",get_marginLeft:"get_marginLeft",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingRight:"get_paddingRight",get_paddingLeft:"get_paddingLeft",set_backgroundColor:"set_backgroundColor",get_cssName:"get_cssName",get_namedComponents:"get_namedComponents",set_scriptAccess:"set_scriptAccess",get_scriptAccess:"get_scriptAccess",set_layout:"set_layout",get_layout:"get_layout",set_includeInLayout:"set_includeInLayout",get_includeInLayout:"get_includeInLayout",get_styleSheet:"get_styleSheet",set_styleString:"set_styleString",get_styleString:"get_styleString",set_styleNames:"set_styleNames",get_styleNames:"get_styleNames",set_customStyle:"set_customStyle",get_customStyle:"get_customStyle",set_hidden:"set_hidden",get_hidden:"get_hidden",get_numComponents:"get_numComponents",get_rootComponent:"get_rootComponent",get_screen:"get_screen",set_componentAnimation:"set_componentAnimation",get_componentAnimation:"get_componentAnimation",get_animatable:"get_animatable",set_native:"set_native",get_native:"get_native"})
});
var haxe_ui_containers_Box = function() {
	this._direction = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.Box"] = haxe_ui_containers_Box;
haxe_ui_containers_Box.__name__ = "haxe.ui.containers.Box";
haxe_ui_containers_Box.__super__ = haxe_ui_core_Component;
haxe_ui_containers_Box.prototype = $extend(haxe_ui_core_Component.prototype,{
	_layoutName: null
	,get_layoutName: function() {
		return this._layoutName;
	}
	,set_layoutName: function(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		var l = haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName());
		if(l != null) {
			this.set_layout(l);
		}
		return value;
	}
	,createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		if(this._defaultLayoutClass == null) {
			this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
		}
	}
	,_direction: null
	,applyStyle: function(style) {
		haxe_ui_core_Component.prototype.applyStyle.call(this,style);
		if(style.direction != null && style.direction != this._direction) {
			this._direction = style.direction;
			this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this._direction));
		}
		if(style.layout != null) {
			this.set_layoutName(style.layout);
		}
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("icon",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("icon");
	}
	,set_icon: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_layoutName() != null) {
			c.set_layoutName(this.get_layoutName());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Box();
	}
	,__class__: haxe_ui_containers_Box
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_layoutName:"set_layoutName",get_layoutName:"get_layoutName"})
});
var haxe_ui_util_GenericConfig = function() {
	this.values = new haxe_ds_StringMap();
	this.sections = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.GenericConfig"] = haxe_ui_util_GenericConfig;
haxe_ui_util_GenericConfig.__name__ = "haxe.ui.util.GenericConfig";
haxe_ui_util_GenericConfig.prototype = {
	values: null
	,sections: null
	,findBy: function(section,field,value) {
		var array = this.sections.h[section];
		if(array == null) {
			return null;
		}
		if(field == null && value == null) {
			return array[0];
		}
		var r = null;
		var _g = 0;
		while(_g < array.length) {
			var item = array[_g];
			++_g;
			var h = item.values.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(key == field && (item.values.h[key] == value || item.values.h[key].toLowerCase() == value.toLowerCase())) {
					r = item;
					break;
				}
			}
			if(r != null) {
				break;
			}
		}
		return r;
	}
	,queryBool: function(q,defaultValue,conditionRef) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var r = this.query(q,null,conditionRef);
		if(r == null) {
			return defaultValue;
		}
		return r == "true";
	}
	,query: function(q,defaultValue,conditionRef) {
		if(Object.prototype.hasOwnProperty.call(haxe_ui_util_GenericConfig.cache.h,q)) {
			if(defaultValue != null && haxe_ui_util_GenericConfig.cache.h[q] == null) {
				return defaultValue;
			}
			return haxe_ui_util_GenericConfig.cache.h[q];
		}
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var value = null;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			} else if(f.indexOf("@") != -1) {
				var v = HxOverrides.substr(f,1,f.length);
				value = ref.values.h[v];
				break;
			}
			if(ref == null) {
				haxe_ui_util_GenericConfig.cache.h[q] = defaultValue;
				return defaultValue;
			}
		}
		if(value == null) {
			value = defaultValue;
		}
		if(value != null) {
			haxe_ui_util_GenericConfig.cache.h[q] = value;
		}
		return value;
	}
	,queryValues: function(q,conditionRef) {
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			}
			if(ref == null) {
				return null;
			}
		}
		return ref.values;
	}
	,__class__: haxe_ui_util_GenericConfig
};
var haxe_ui_styles_CompositeStyleSheet = function() {
	this._animations = null;
	this._styleSheets = [];
};
$hxClasses["haxe.ui.styles.CompositeStyleSheet"] = haxe_ui_styles_CompositeStyleSheet;
haxe_ui_styles_CompositeStyleSheet.__name__ = "haxe.ui.styles.CompositeStyleSheet";
haxe_ui_styles_CompositeStyleSheet.prototype = {
	_styleSheets: null
	,_animations: null
	,get_animations: function() {
		if(this._animations != null) {
			return this._animations;
		}
		this._animations = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var h = s.get_animations().h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				var a = s.get_animations().h[key];
				this._animations.h[key] = a;
			}
		}
		return this._animations;
	}
	,parse: function(css,styleSheetName,invalidateAll) {
		if(invalidateAll == null) {
			invalidateAll = false;
		}
		if(styleSheetName == null) {
			styleSheetName = "default";
		}
		var s = this.findStyleSheet(styleSheetName);
		if(s == null) {
			s = new haxe_ui_styles_StyleSheet();
			s.name = styleSheetName;
			this._styleSheets.push(s);
		}
		s.parse(css);
		this._animations = null;
		if(invalidateAll == true) {
			haxe_ui_core_Screen.get_instance().invalidateAll();
		}
	}
	,findStyleSheet: function(styleSheetName) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.name == styleSheetName) {
				return s;
			}
		}
		return null;
	}
	,buildStyleFor: function(c) {
		var style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			style = s.buildStyleFor(c,style);
		}
		return style;
	}
	,clear: function(styleSheetName) {
		var s = this.findStyleSheet(styleSheetName);
		if(s != null) {
			s.clear();
			this._animations = null;
		}
	}
	,__class__: haxe_ui_styles_CompositeStyleSheet
	,__properties__: {get_animations:"get_animations"}
};
var haxe_ui_Toolkit = function() { };
$hxClasses["haxe.ui.Toolkit"] = haxe_ui_Toolkit;
haxe_ui_Toolkit.__name__ = "haxe.ui.Toolkit";
haxe_ui_Toolkit.__properties__ = {get_scale:"get_scale",get_scaleY:"get_scaleY",get_scaleX:"get_scaleX",get_autoScaleDPIThreshold:"get_autoScaleDPIThreshold",get_screen:"get_screen",get_assets:"get_assets",get_initialized:"get_initialized",set_theme:"set_theme"};
haxe_ui_Toolkit.set_theme = function(value) {
	if(haxe_ui_Toolkit._theme == value) {
		return value;
	}
	haxe_ui_Toolkit._theme = value;
	if(haxe_ui_Toolkit._initialized == true) {
		haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
		haxe_ui_core_Screen.get_instance().onThemeChanged();
		haxe_ui_core_Screen.get_instance().invalidateAll();
	}
	return value;
};
haxe_ui_Toolkit.build = function() {
	if(haxe_ui_Toolkit._built == true) {
		return;
	}
	haxe_ui_themes_ThemeManager.get_instance().getTheme("native").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","haxeui-core/styles/native/main.css",-3.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-core/styles/global.css",-4.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/main.css",-3.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/buttons.css",-2.99,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dialogs.css",-2.9800000000000004,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/windows.css",-2.9700000000000006,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/textinputs.css",-2.9600000000000009,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollbars.css",-2.9500000000000011,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollview.css",-2.9400000000000013,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/checkboxes.css",-2.9300000000000015,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/optionboxes.css",-2.9200000000000017,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/ranges.css",-2.9100000000000019,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/progressbars.css",-2.9000000000000021,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sliders.css",-2.8900000000000023,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/steppers.css",-2.8800000000000026,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tabs.css",-2.8700000000000028,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/listview.css",-2.860000000000003,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dropdowns.css",-2.8500000000000032,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tableview.css",-2.8400000000000034,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/switches.css",-2.8300000000000036,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/calendars.css",-2.8200000000000038,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/menus.css",-2.8100000000000041,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/accordion.css",-2.8000000000000043,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/propertygrids.css",-2.7900000000000045,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/frames.css",-2.7800000000000047,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/splitters.css",-2.7700000000000049,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tooltips.css",-2.7600000000000051,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/rules.css",-2.7500000000000053,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sidebars.css",-2.7400000000000055,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/cards.css",-2.7300000000000058,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/treeviews.css",-2.720000000000006,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/colorpickers.css",-2.7100000000000062,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/notifications.css",-2.7000000000000064,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/pickers.css",-2.6900000000000066,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/last.css",-2.6800000000000068,null);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-large","haxeui-core/styles/shared/warning-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-border-color","#ffd83f");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-background-color-start","#fffbeb");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-background-color-end","#fff8df");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tooltip-background-color","#fffff8");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tertiary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","success-border-color","#53df9e");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","success-background-color-start","#e9fbf3");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","success-background-color-end","#dcf8ec");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-desc","haxeui-core/styles/shared/sortable-desc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-asc","haxeui-core/styles/shared/sortable-asc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-hover","#fcfcfc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-down","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-disabled","#fefefe");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-alt","#fafafa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-text-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color-hover","#d9e5f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color","#b4cbe4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","secondary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","search","haxeui-core/styles/shared/search.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-button-color","#d6d6d6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-background-color","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","restore-hover","haxeui-core/styles/shared/restore-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","restore","haxeui-core/styles/shared/restore-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","question-large","haxeui-core/styles/shared/help-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","option-selected","haxeui-core/styles/shared/option-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-text-color","#666666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-inner-shadow","drop-shadow(1, 45, #888888, 0.1, 1, 1, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-color","#d2d2d2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","modal-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","minimize-hover","haxeui-core/styles/shared/minimize-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","minimize","haxeui-core/styles/shared/minimize-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","menu-shadow","drop-shadow(2, 45, #888888, 0.1, 4, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","maximize-hover","haxeui-core/styles/shared/maximize-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","maximize","haxeui-core/styles/shared/maximize-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","lighter-text-color","#a0a0a0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","info-large","haxeui-core/styles/shared/info-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-border-color","#c0c0c0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-start","#f2f2f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-end","#e1e1e1");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-vertical","haxeui-core/styles/shared/gripper-vertical.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-horizontal","haxeui-core/styles/shared/gripper-horizontal.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expanded","haxeui-core/styles/shared/collapsed-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expand-hover","haxeui-core/styles/shared/window-expand-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expand","haxeui-core/styles/shared/window-expand-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-large","haxeui-core/styles/shared/error-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-border-color","#f6a7a2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-background-color-start","#fde9e8");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-background-color-end","#fbdcda");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-border-color","#b3b3b3");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-start","#e6e6e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-end","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-text-color","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-border-color","#e4e4e4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-shadow","drop-shadow(1, 45, #888888, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","default-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","contrast-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapsed","haxeui-core/styles/shared/expanded-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapse-hover","haxeui-core/styles/shared/window-collapse-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapse","haxeui-core/styles/shared/window-collapse-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close-hover","haxeui-core/styles/shared/close-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close","haxeui-core/styles/shared/close-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","check-selected","haxeui-core/styles/shared/check-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","blank","haxeui-core/styles/shared/blank.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up-down","haxeui-core/styles/shared/sortable-arrows-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up","haxeui-core/styles/shared/up-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right-square","haxeui-core/styles/shared/right-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right","haxeui-core/styles/shared/right-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-left","haxeui-core/styles/shared/left-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down-square","haxeui-core/styles/shared/down-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down","haxeui-core/styles/shared/down-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-start","#98c4e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-end","#549bde");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-lighter","#ecf2f9");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color","#83aad4");
	haxe_ui_themes_ThemeManager.get_instance().getTheme("dark").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/scrollbars.css",-2.,null);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","warning-border-color","#807100");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","warning-background-color-start","#4d4400");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","warning-background-color-end","#473f00");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tooltip-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tertiary-background-color","#313435");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","success-border-color","#146c43");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","success-background-color-start","#0c4129");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","success-background-color-end","#093421");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-hover","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-down","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-disabled","#2f3132");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-alt","#2d2e2f");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-text-color","#d4d4d4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color-hover","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color","#415982");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","secondary-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-button-color","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-text-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-inner-shadow","drop-shadow(1, 45, #000000, 0.2, 2, 2, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-start","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-end","#36383a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","modal-background-color","#181a1b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","menu-shadow","drop-shadow(2, 45, #000000, 0.15, 6, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","lighter-text-color","#737373");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-text-color","#bbbbbb");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-start","#434647");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-end","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-border-color","#8b160e");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-background-color-start","#4a1721");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-background-color-end","#3a121a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-text-color","#999999");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-start","#393c3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-text-color","#595959");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-border-color","#26292b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-start","#36393a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-shadow","drop-shadow(1, 45, #000000, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","default-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","contrast-background-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-start","#334666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-end","#2f3746");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-lighter","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color","#3c5177");
	haxe_ui_layouts_LayoutFactory.register("Absolute","haxe.ui.layouts.AbsoluteLayout");
	haxe_ui_layouts_LayoutFactory.register("Default","haxe.ui.layouts.DefaultLayout");
	haxe_ui_layouts_LayoutFactory.register("Delegate","haxe.ui.layouts.DelegateLayout");
	haxe_ui_layouts_LayoutFactory.register("HorizontalContinuous","haxe.ui.layouts.HorizontalContinuousLayout");
	haxe_ui_layouts_LayoutFactory.register("horizontal continuous","haxe.ui.layouts.HorizontalContinuousLayout");
	haxe_ui_layouts_LayoutFactory.register("horizontal-continuous","haxe.ui.layouts.HorizontalContinuousLayout");
	haxe_ui_layouts_LayoutFactory.register("continuous horizontal","haxe.ui.layouts.HorizontalContinuousLayout");
	haxe_ui_layouts_LayoutFactory.register("continuous-horizontal","haxe.ui.layouts.HorizontalContinuousLayout");
	haxe_ui_layouts_LayoutFactory.register("HorizontalGrid","haxe.ui.layouts.HorizontalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("horizontal grid","haxe.ui.layouts.HorizontalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("horizontal-grid","haxe.ui.layouts.HorizontalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("grid horizontal","haxe.ui.layouts.HorizontalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("grid-horizontal","haxe.ui.layouts.HorizontalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("Horizontal","haxe.ui.layouts.HorizontalLayout");
	haxe_ui_layouts_LayoutFactory.register("ScrollView","haxe.ui.layouts.ScrollViewLayout");
	haxe_ui_layouts_LayoutFactory.register("scroll view","haxe.ui.layouts.ScrollViewLayout");
	haxe_ui_layouts_LayoutFactory.register("scroll-view","haxe.ui.layouts.ScrollViewLayout");
	haxe_ui_layouts_LayoutFactory.register("view scroll","haxe.ui.layouts.ScrollViewLayout");
	haxe_ui_layouts_LayoutFactory.register("view-scroll","haxe.ui.layouts.ScrollViewLayout");
	haxe_ui_layouts_LayoutFactory.register("VerticalGrid","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("vertical grid","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("vertical-grid","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("grid vertical","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("grid-vertical","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("grid","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("grid","haxe.ui.layouts.VerticalGridLayout");
	haxe_ui_layouts_LayoutFactory.register("Vertical","haxe.ui.layouts.VerticalLayout");
	haxe_ui_layouts_LayoutFactory.register("VerticalVirtual","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_layouts_LayoutFactory.register("vertical virtual","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_layouts_LayoutFactory.register("vertical-virtual","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_layouts_LayoutFactory.register("virtual vertical","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_layouts_LayoutFactory.register("virtual-vertical","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_layouts_LayoutFactory.register("virtual","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_layouts_LayoutFactory.register("virtual","haxe.ui.layouts.VerticalVirtualLayout");
	haxe_ui_layouts_LayoutFactory.register("Virtual","haxe.ui.layouts.VirtualLayout");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en_US","haxeui-core/locale/en_US/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/formats.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("ru","haxeui-core/locale/ru/expression-replacements.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("ru","haxeui-core/locale/ru/std-strings.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("ru","haxeui-core/locale/ru/formats.properties");
	haxe_ui_validators_ValidatorManager.get_instance().registerValidator("required",function() {
		return new haxe_ui_validators_RequiredValidator();
	},null);
	haxe_ui_validators_ValidatorManager.get_instance().registerValidator("pattern",function() {
		return new haxe_ui_validators_PatternValidator();
	},null);
	haxe_ui_validators_ValidatorManager.get_instance().registerValidator("email",function() {
		return new haxe_ui_validators_EmailValidator();
	},null);
	haxe_ui_actions_ActionManager.get_instance().registerInputSource(new haxe_ui_actions_KeyboardActionInputSource());
	haxe_ui_loaders_image_ImageLoader.get_instance().register("asset",function() {
		return new haxe_ui_loaders_image_AssetImageLoader();
	},true,true);
	haxe_ui_loaders_image_ImageLoader.get_instance().register("file",function() {
		return new haxe_ui_loaders_image_FileImageLoader();
	},false,true);
	haxe_ui_loaders_image_ImageLoader.get_instance().register("http",function() {
		return new haxe_ui_loaders_image_HttpImageLoader();
	},false,false);
	haxe_ui_loaders_image_ImageLoader.get_instance().register("https",function() {
		return new haxe_ui_loaders_image_HttpImageLoader();
	},false,false);
	haxe_ui_styles_CssFunctions.registerCssFunction("calc",haxe_ui_styles_CssFunctions.calc);
	haxe_ui_styles_CssFunctions.registerCssFunction("min",haxe_ui_styles_CssFunctions.min);
	haxe_ui_styles_CssFunctions.registerCssFunction("max",haxe_ui_styles_CssFunctions.max);
	haxe_ui_styles_CssFunctions.registerCssFunction("clamp",haxe_ui_styles_CssFunctions.clamp);
	haxe_ui_styles_CssFunctions.registerCssFunction("platform-color",haxe_ui_styles_CssFunctions.platformColor);
	haxe_ui_styles_CssFunctions.registerCssFunction("theme-icon",haxe_ui_styles_CssFunctions.themeIcon);
	haxe_ui_styles_CssFunctions.registerCssFunction("theme-image",haxe_ui_styles_CssFunctions.themeIcon);
	haxe_ui_styles_CssFunctions.registerCssFunction("rgb",haxe_ui_styles_CssFunctions.rgb);
	haxe_ui_styles_CssFunctions.registerCssFunction("lookup",haxe_ui_styles_CssFunctions.lookup);
	haxe_ui_styles_CssFilters.registerCssFilter("blur",function() {
		return new haxe_ui_filters_Blur();
	});
	haxe_ui_styles_CssFilters.registerCssFilter("box-shadow",function() {
		return new haxe_ui_filters_BoxShadow();
	});
	haxe_ui_styles_CssFilters.registerCssFilter("drop-shadow",function() {
		return new haxe_ui_filters_DropShadow();
	});
	haxe_ui_styles_CssFilters.registerCssFilter("grayscale",function() {
		return new haxe_ui_filters_Grayscale();
	});
	haxe_ui_styles_CssFilters.registerCssFilter("outline",function() {
		return new haxe_ui_filters_Outline();
	});
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-heaps/styles/main.css",-2,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-heaps/styles/default/main.css",-1,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-heaps/styles/dark/main.css",-1,null);
	haxe_ui_core_ComponentClassMap.register("verticalsplitter","haxe.ui.containers.VerticalSplitter");
	haxe_ui_core_ComponentClassMap.register("verticalscroll","haxe.ui.components.VerticalScroll");
	haxe_ui_core_ComponentClassMap.register("vbox","haxe.ui.containers.VBox");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/vslider","haxe.ui.components.VerticalSlider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/verticalslider","haxe.ui.components.VerticalSlider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/vbox","haxe.ui.containers.VBox");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/textfield","haxe.ui.components.TextField");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/stack","haxe.ui.containers.Stack");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/spacer","haxe.ui.components.Spacer");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/slider","haxe.ui.components.Slider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/label","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/image","haxe.ui.components.Image");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/hsvcolorpickerimpl","haxe.ui.components._ColorPicker.HSVColorPickerImpl");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/hslider","haxe.ui.components.HorizontalSlider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/horizontalslider","haxe.ui.components.HorizontalSlider");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/hbox","haxe.ui.containers.HBox");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/grid","haxe.ui.containers.Grid");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/canvas","haxe.ui.components.Canvas");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/box","haxe.ui.containers.Box");
	haxe_ui_core_ComponentClassMap.register("urn::haxeui::org/absolute","haxe.ui.containers.Absolute");
	haxe_ui_core_ComponentClassMap.register("treeviewnode","haxe.ui.containers.TreeViewNode");
	haxe_ui_core_ComponentClassMap.register("treeview","haxe.ui.containers.TreeView");
	haxe_ui_core_ComponentClassMap.register("tooltip","haxe.ui.tooltips.ToolTip");
	haxe_ui_core_ComponentClassMap.register("textfield","haxe.ui.components.TextField");
	haxe_ui_core_ComponentClassMap.register("textarea","haxe.ui.components.TextArea");
	haxe_ui_core_ComponentClassMap.register("tabview","haxe.ui.containers.TabView");
	haxe_ui_core_ComponentClassMap.register("tabbarbutton","haxe.ui.components._TabBar.TabBarButton");
	haxe_ui_core_ComponentClassMap.register("tabbar","haxe.ui.components.TabBar");
	haxe_ui_core_ComponentClassMap.register("stepper","haxe.ui.components.Stepper");
	haxe_ui_core_ComponentClassMap.register("stack","haxe.ui.containers.Stack");
	haxe_ui_core_ComponentClassMap.register("splitter","haxe.ui.containers.Splitter");
	haxe_ui_core_ComponentClassMap.register("spacer","haxe.ui.components.Spacer");
	haxe_ui_core_ComponentClassMap.register("slider","haxe.ui.components.Slider");
	haxe_ui_core_ComponentClassMap.register("sizergripper","haxe.ui.containers._Splitter.SizerGripper");
	haxe_ui_core_ComponentClassMap.register("scrollview","haxe.ui.containers.ScrollView");
	haxe_ui_core_ComponentClassMap.register("scroll","haxe.ui.components.Scroll");
	haxe_ui_core_ComponentClassMap.register("range","haxe.ui.components.Range");
	haxe_ui_core_ComponentClassMap.register("preloader","haxe.ui.Preloader");
	haxe_ui_core_ComponentClassMap.register("menuseparator","haxe.ui.containers.menus.MenuSeparator");
	haxe_ui_core_ComponentClassMap.register("menuitem","haxe.ui.containers.menus.MenuItem");
	haxe_ui_core_ComponentClassMap.register("menubar","haxe.ui.containers.menus.MenuBar");
	haxe_ui_core_ComponentClassMap.register("menu","haxe.ui.containers.menus.Menu");
	haxe_ui_core_ComponentClassMap.register("listview","haxe.ui.containers.ListView");
	haxe_ui_core_ComponentClassMap.register("label","haxe.ui.components.Label");
	haxe_ui_core_ComponentClassMap.register("itemrenderer","haxe.ui.core.ItemRenderer");
	haxe_ui_core_ComponentClassMap.register("interactivecomponent","haxe.ui.core.InteractiveComponent");
	haxe_ui_core_ComponentClassMap.register("image","haxe.ui.components.Image");
	haxe_ui_core_ComponentClassMap.register("hsvcolorpickerimpl","haxe.ui.components._ColorPicker.HSVColorPickerImpl");
	haxe_ui_core_ComponentClassMap.register("horizontalsplitter","haxe.ui.containers.HorizontalSplitter");
	haxe_ui_core_ComponentClassMap.register("horizontalslider","haxe.ui.components.HorizontalSlider");
	haxe_ui_core_ComponentClassMap.register("horizontalscroll","haxe.ui.components.HorizontalScroll");
	haxe_ui_core_ComponentClassMap.register("hbox","haxe.ui.containers.HBox");
	haxe_ui_core_ComponentClassMap.register("grid","haxe.ui.containers.Grid");
	haxe_ui_core_ComponentClassMap.register("dropdown","haxe.ui.components.DropDown");
	haxe_ui_core_ComponentClassMap.register("decorator","haxe.ui.components.Decorator");
	haxe_ui_core_ComponentClassMap.register("componentimpl","haxe.ui.backend.ComponentImpl");
	haxe_ui_core_ComponentClassMap.register("componentbase","haxe.ui.backend.ComponentBase");
	haxe_ui_core_ComponentClassMap.register("component","haxe.ui.core.Component");
	haxe_ui_core_ComponentClassMap.register("colorpickerimpl","haxe.ui.components._ColorPicker.ColorPickerImpl");
	haxe_ui_core_ComponentClassMap.register("colorpicker","haxe.ui.components.ColorPicker");
	haxe_ui_core_ComponentClassMap.register("checkboxvalue","haxe.ui.components.CheckBoxValue");
	haxe_ui_core_ComponentClassMap.register("checkbox","haxe.ui.components.CheckBox");
	haxe_ui_core_ComponentClassMap.register("canvas","haxe.ui.components.Canvas");
	haxe_ui_core_ComponentClassMap.register("calendarview","haxe.ui.containers.CalendarView");
	haxe_ui_core_ComponentClassMap.register("calendar","haxe.ui.components.Calendar");
	haxe_ui_core_ComponentClassMap.register("button","haxe.ui.components.Button");
	haxe_ui_core_ComponentClassMap.register("box","haxe.ui.containers.Box");
	haxe_ui_core_ComponentClassMap.register("basicitemrenderer","haxe.ui.core.BasicItemRenderer");
	haxe_ui_core_ComponentClassMap.register("absolute","haxe.ui.containers.Absolute");
	haxe_ui_Toolkit.buildBackend();
	haxe_ui_Toolkit._built = true;
};
haxe_ui_Toolkit.buildBackend = function() {
	if(haxe_ui_Toolkit._backendBuilt == true) {
		return;
	}
	haxe_ui_util_Defines.set("windows","1");
	haxe_ui_util_Defines.set("utf16","1");
	haxe_ui_util_Defines.set("true","1");
	haxe_ui_util_Defines.set("target.utf16","1");
	haxe_ui_util_Defines.set("target.unicode","1");
	haxe_ui_util_Defines.set("target.name","js");
	haxe_ui_util_Defines.set("target.atomics","1");
	haxe_ui_util_Defines.set("source_header","Generated by Haxe 4.3.2");
	haxe_ui_util_Defines.set("source-header","Generated by Haxe 4.3.2");
	haxe_ui_util_Defines.set("nofilters","1");
	haxe_ui_util_Defines.set("js_es5","1");
	haxe_ui_util_Defines.set("js_es","5");
	haxe_ui_util_Defines.set("js-es5","1");
	haxe_ui_util_Defines.set("js-es","5");
	haxe_ui_util_Defines.set("js","1");
	haxe_ui_util_Defines.set("heaps","1.10.0");
	haxe_ui_util_Defines.set("haxeui_nofilters","1");
	haxe_ui_util_Defines.set("haxeui_heaps","1.6.0");
	haxe_ui_util_Defines.set("haxeui_core","1.6.0");
	haxe_ui_util_Defines.set("haxeui-nofilters","1");
	haxe_ui_util_Defines.set("haxeui-heaps","1.6.0");
	haxe_ui_util_Defines.set("haxeui-core","1.6.0");
	haxe_ui_util_Defines.set("haxeui","1");
	haxe_ui_util_Defines.set("haxe_ver","4.302");
	haxe_ui_util_Defines.set("haxe4","1");
	haxe_ui_util_Defines.set("haxe3","1");
	haxe_ui_util_Defines.set("haxe-ver","4.302");
	haxe_ui_util_Defines.set("haxe","4.3.2");
	haxe_ui_util_Defines.set("format","3.6.0");
	haxe_ui_util_Defines.set("dce","full");
	haxe_ui_util_Defines.set("core","1.6.0");
	haxe_ui_util_Defines.set("backend","heaps");
	haxe_ui_Toolkit._backendBuilt = true;
};
haxe_ui_Toolkit.get_initialized = function() {
	return haxe_ui_Toolkit._initialized;
};
haxe_ui_Toolkit.init = function(options) {
	haxe_ui_Toolkit.build();
	haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
	if(options != null) {
		haxe_ui_Toolkit.get_screen().set_options(options);
		haxe_ui_ToolkitAssets.get_instance().options = options;
	}
	haxe_ui_Toolkit.get_screen().registerEvent("keydown",haxe_ui_Toolkit.onKeyDown);
	haxe_ui_Toolkit._initialized = true;
};
haxe_ui_Toolkit.onKeyDown = function(event) {
	if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("tab")) {
		if(event.shiftKey == false) {
			haxe_ui_focus_FocusManager.get_instance().focusNext();
		} else {
			haxe_ui_focus_FocusManager.get_instance().focusPrev();
		}
	}
};
haxe_ui_Toolkit.get_assets = function() {
	return haxe_ui_ToolkitAssets.get_instance();
};
haxe_ui_Toolkit.get_screen = function() {
	return haxe_ui_core_Screen.get_instance();
};
haxe_ui_Toolkit.get_autoScaleDPIThreshold = function() {
	if(haxe_ui_core_Screen.get_instance().get_isRetina() == true) {
		return 192;
	}
	return 120;
};
haxe_ui_Toolkit.get_scaleX = function() {
	if(haxe_ui_Toolkit._scaleX == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleX = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleX = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleX = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleX = 1;
		}
	}
	return haxe_ui_Toolkit._scaleX;
};
haxe_ui_Toolkit.get_scaleY = function() {
	if(haxe_ui_Toolkit._scaleY == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleY = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleY = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleY = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleY = 1;
		}
	}
	return haxe_ui_Toolkit._scaleY;
};
haxe_ui_Toolkit.get_scale = function() {
	return Math.max(haxe_ui_Toolkit.get_scaleX(),haxe_ui_Toolkit.get_scaleY());
};
haxe_ui_Toolkit.callLater = function(fn) {
	new haxe_ui_CallLater(fn);
};
var haxe_ui_backend_AssetsBase = function() {
};
$hxClasses["haxe.ui.backend.AssetsBase"] = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsBase.__name__ = "haxe.ui.backend.AssetsBase";
haxe_ui_backend_AssetsBase.prototype = {
	getTextDelegate: function(resourceId) {
		return null;
	}
	,imageFromFile: function(filename,callback) {
		haxe_Log.trace("WARNING: cant load from file system on non-sys targets [" + filename + "]",{ fileName : "haxe/ui/backend/AssetsBase.hx", lineNumber : 50, className : "haxe.ui.backend.AssetsBase", methodName : "imageFromFile"});
		callback(null);
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,__class__: haxe_ui_backend_AssetsBase
};
var haxe_ui_backend_AssetsImpl = function() {
	haxe_ui_backend_AssetsBase.call(this);
};
$hxClasses["haxe.ui.backend.AssetsImpl"] = haxe_ui_backend_AssetsImpl;
haxe_ui_backend_AssetsImpl.__name__ = "haxe.ui.backend.AssetsImpl";
haxe_ui_backend_AssetsImpl.__super__ = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsImpl.prototype = $extend(haxe_ui_backend_AssetsBase.prototype,{
	getImageInternal: function(resourceId,callback) {
		try {
			var loader = hxd_Res.get_loader();
			if(loader != null) {
				if(loader.exists(resourceId)) {
					var image = loader.load(resourceId).toImage();
					var size = image.getInfo();
					var imageInfo = { width : size.width, height : size.height, data : image.toBitmap()};
					callback(imageInfo);
				} else {
					callback(null);
				}
			} else {
				callback(null);
			}
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(e,{ fileName : "haxe/ui/backend/AssetsImpl.hx", lineNumber : 34, className : "haxe.ui.backend.AssetsImpl", methodName : "getImageInternal"});
			callback(null);
		}
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		this.imageFromBytes(bytes,function(imageInfo) {
			callback(resourceId,imageInfo);
		});
	}
	,imageFromBytes: function(bytes,callback) {
		if(bytes == null) {
			callback(null);
			return;
		}
		try {
			var entry = new hxd_fs_BytesFileEntry("",bytes);
			var image = new hxd_res_Image(entry);
			var size = image.getInfo();
			var imageInfo = { width : size.width, height : size.height, data : image.toBitmap()};
			callback(imageInfo);
		} catch( _g ) {
			callback(null);
		}
	}
	,imageInfoFromImageData: function(imageData) {
		var imageInfo = { width : imageData.ctx.canvas.width, height : imageData.ctx.canvas.height, data : imageData};
		return imageInfo;
	}
	,getFontInternal: function(resourceId,callback) {
		try {
			var font = hxd_Res.get_loader().loadCache(resourceId,hxd_res_BitmapFont);
			callback({ name : resourceId, data : font});
		} catch( _g ) {
			callback(null);
		}
	}
	,__class__: haxe_ui_backend_AssetsImpl
});
var haxe_ui_ToolkitAssets = function() {
	this.options = null;
	haxe_ui_backend_AssetsImpl.call(this);
};
$hxClasses["haxe.ui.ToolkitAssets"] = haxe_ui_ToolkitAssets;
haxe_ui_ToolkitAssets.__name__ = "haxe.ui.ToolkitAssets";
haxe_ui_ToolkitAssets.__properties__ = {get_instance:"get_instance"};
haxe_ui_ToolkitAssets.get_instance = function() {
	if(haxe_ui_ToolkitAssets._instance == null) {
		haxe_ui_ToolkitAssets._instance = new haxe_ui_ToolkitAssets();
	}
	return haxe_ui_ToolkitAssets._instance;
};
haxe_ui_ToolkitAssets.__super__ = haxe_ui_backend_AssetsImpl;
haxe_ui_ToolkitAssets.prototype = $extend(haxe_ui_backend_AssetsImpl.prototype,{
	options: null
	,_fontCache: null
	,_fontCallbacks: null
	,_imageCache: null
	,_imageCallbacks: null
	,getFont: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		if(this._fontCache != null && this._fontCache.h[resourceId] != null && useCache == true) {
			callback(this._fontCache.h[resourceId]);
		} else {
			if(this._fontCallbacks == null) {
				this._fontCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._fontCallbacks.add(resourceId,callback);
			if(this._fontCallbacks.count(resourceId) == 1) {
				this.getFontInternal(resourceId,function(font) {
					if(font != null) {
						_gthis._onFontLoaded(resourceId,font);
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getFontFromHaxeResource(resourceId,$bind(_gthis,_gthis._onFontLoaded));
					} else {
						_gthis._fontCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onFontLoaded: function(resourceId,font) {
		if(this._fontCache == null) {
			this._fontCache = new haxe_ds_StringMap();
		}
		this._fontCache.h[resourceId] = font;
		this._fontCallbacks.invokeAndRemove(resourceId,font);
	}
	,cacheImage: function(resourceId,imageInfo) {
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		if(imageInfo == null || resourceId == null) {
			return;
		}
		this._imageCache.h[resourceId] = imageInfo;
	}
	,getCachedImage: function(resourceId) {
		if(this._imageCache == null) {
			return null;
		}
		return this._imageCache.h[resourceId];
	}
	,getImage: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var orginalResourceId = resourceId;
		resourceId = this.runPlugins(resourceId);
		if(this._imageCache != null && this._imageCache.h[resourceId] != null && useCache == true) {
			callback(this._imageCache.h[resourceId]);
		} else {
			if(this._imageCallbacks == null) {
				this._imageCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._imageCallbacks.add(resourceId,callback);
			if(this._imageCallbacks.count(resourceId) == 1) {
				this.getImageInternal(resourceId,function(imageInfo) {
					if(imageInfo != null) {
						_gthis._onImageLoaded(resourceId,imageInfo);
					} else if(haxe_Resource.listNames().indexOf(orginalResourceId) != -1) {
						_gthis._imageCallbacks.remove(resourceId,callback);
						_gthis._imageCallbacks.add(orginalResourceId,callback);
						_gthis.getImageFromHaxeResource(orginalResourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getImageFromHaxeResource(resourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else {
						_gthis._imageCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onImageLoaded: function(resourceId,imageInfo) {
		if(imageInfo != null && (imageInfo.width == -1 || imageInfo.width == -1)) {
			haxe_Log.trace("WARNING: imageData.originalWidth == -1 || imageData.originalHeight == -1",{ fileName : "haxe/ui/ToolkitAssets.hx", lineNumber : 123, className : "haxe.ui.ToolkitAssets", methodName : "_onImageLoaded"});
		}
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		this._imageCache.h[resourceId] = imageInfo;
		this._imageCallbacks.invokeAndRemove(resourceId,imageInfo);
	}
	,getText: function(resourceId) {
		var s = this.getTextDelegate(resourceId);
		if(s == null) {
			s = haxe_Resource.getString(resourceId);
		}
		return s;
	}
	,_plugins: null
	,runPlugins: function(asset) {
		if(this._plugins == null) {
			return asset;
		}
		var _g = 0;
		var _g1 = this._plugins;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			asset = p.invoke(asset);
		}
		return asset;
	}
	,__class__: haxe_ui_ToolkitAssets
});
var haxe_ui_actions_ActionManager = function() {
	this._repeatActions = new haxe_ds_StringMap();
	this._inputSources = [];
	this._events = null;
};
$hxClasses["haxe.ui.actions.ActionManager"] = haxe_ui_actions_ActionManager;
haxe_ui_actions_ActionManager.__name__ = "haxe.ui.actions.ActionManager";
haxe_ui_actions_ActionManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_actions_ActionManager.get_instance = function() {
	if(haxe_ui_actions_ActionManager._instance == null) {
		haxe_ui_actions_ActionManager._instance = new haxe_ui_actions_ActionManager();
	}
	return haxe_ui_actions_ActionManager._instance;
};
haxe_ui_actions_ActionManager.prototype = {
	_events: null
	,_inputSources: null
	,_repeatActions: null
	,dispatch: function(event) {
		if(this._events == null) {
			return;
		}
		this._events.invoke(event.type,event);
	}
	,registerInputSource: function(source) {
		source.start();
		this._inputSources.push(source);
	}
	,actionStart: function(action,source) {
		var _gthis = this;
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			return;
		}
		var actionEvent = new haxe_ui_events_ActionEvent("actionstart",action);
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.dispatch(actionEvent);
		if(actionEvent.canceled == false) {
			var c1 = js_Boot.getClass(source);
			this.dispatch(new haxe_ui_events_ActionEvent("actionstart",action,false,c1.__name__));
		}
		if(actionEvent.repeater == true && Object.prototype.hasOwnProperty.call(this._repeatActions.h,action) == false) {
			var this1 = this._repeatActions;
			var value = { type : action, timer : new haxe_ui_util_Timer(c.actionRepeatInterval,function() {
				_gthis.actionStart(action,source);
			})};
			this1.h[action] = value;
		}
	}
	,actionEnd: function(action,source) {
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			return;
		}
		var actionEvent = new haxe_ui_events_ActionEvent("actionend",action);
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.dispatch(actionEvent);
		if(actionEvent.canceled == false) {
			var c = js_Boot.getClass(source);
			this.dispatch(new haxe_ui_events_ActionEvent("actionend",action,false,c.__name__));
		}
		if(Object.prototype.hasOwnProperty.call(this._repeatActions.h,action)) {
			var info = this._repeatActions.h[action];
			info.timer.stop();
			var _this = this._repeatActions;
			var key = action;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,__class__: haxe_ui_actions_ActionManager
};
var haxe_ui_actions_IActionInputSource = function() { };
$hxClasses["haxe.ui.actions.IActionInputSource"] = haxe_ui_actions_IActionInputSource;
haxe_ui_actions_IActionInputSource.__name__ = "haxe.ui.actions.IActionInputSource";
haxe_ui_actions_IActionInputSource.__isInterface__ = true;
haxe_ui_actions_IActionInputSource.prototype = {
	start: null
	,__class__: haxe_ui_actions_IActionInputSource
};
var haxe_ui_actions_KeyboardActionInputSource = function() {
	this._downKeys = new haxe_ds_IntMap();
	this._started = false;
};
$hxClasses["haxe.ui.actions.KeyboardActionInputSource"] = haxe_ui_actions_KeyboardActionInputSource;
haxe_ui_actions_KeyboardActionInputSource.__name__ = "haxe.ui.actions.KeyboardActionInputSource";
haxe_ui_actions_KeyboardActionInputSource.__interfaces__ = [haxe_ui_actions_IActionInputSource];
haxe_ui_actions_KeyboardActionInputSource.prototype = {
	_started: null
	,start: function() {
		if(this._started == true) {
			return;
		}
		this._started = true;
		haxe_ui_core_Screen.get_instance().registerEvent("keydown",$bind(this,this.onKeyDown));
		haxe_ui_core_Screen.get_instance().registerEvent("keyup",$bind(this,this.onKeyUp));
	}
	,_downKeys: null
	,onKeyDown: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode)) {
			return;
		}
		this._downKeys.h[keyCode] = true;
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionPress",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionLeft",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionRight",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionUp",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionDown",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("escape")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionBack",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionConfirm",this);
		}
	}
	,onKeyUp: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode) == false) {
			return;
		}
		this._downKeys.remove(keyCode);
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionPress",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionLeft",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionRight",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionUp",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionDown",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("escape")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionBack",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionConfirm",this);
		}
	}
	,__class__: haxe_ui_actions_KeyboardActionInputSource
};
var haxe_ui_assets_AssetPlugin = function() {
};
$hxClasses["haxe.ui.assets.AssetPlugin"] = haxe_ui_assets_AssetPlugin;
haxe_ui_assets_AssetPlugin.__name__ = "haxe.ui.assets.AssetPlugin";
haxe_ui_assets_AssetPlugin.prototype = {
	invoke: function(asset) {
		return asset;
	}
	,__class__: haxe_ui_assets_AssetPlugin
};
var haxe_ui_behaviours_Behaviour = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviour"] = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_Behaviour.__name__ = "haxe.ui.behaviours.Behaviour";
haxe_ui_behaviours_Behaviour.prototype = {
	config: null
	,_component: null
	,id: null
	,set: function(value) {
	}
	,setDynamic: function(value) {
		this.set(haxe_ui_util_Variant.fromDynamic(value));
	}
	,detatch: function() {
	}
	,get: function() {
		return null;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this.get());
	}
	,update: function() {
	}
	,call: function(param) {
		return null;
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,__class__: haxe_ui_behaviours_Behaviour
};
var haxe_ui_behaviours_DefaultBehaviour = function(component) {
	this._value = null;
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DefaultBehaviour"] = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_behaviours_DefaultBehaviour.__name__ = "haxe.ui.behaviours.DefaultBehaviour";
haxe_ui_behaviours_DefaultBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DefaultBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_Behaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_behaviours_DefaultBehaviour
});
var haxe_ui_backend_ComponentTextBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.ComponentTextBehaviour"] = haxe_ui_backend_ComponentTextBehaviour;
haxe_ui_backend_ComponentTextBehaviour.__name__ = "haxe.ui.backend.ComponentTextBehaviour";
haxe_ui_backend_ComponentTextBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_backend_ComponentTextBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_backend_ComponentTextBehaviour
});
var haxe_ui_backend_ComponentDisabledBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
	this._value = haxe_ui_util_Variant.fromBool(false);
};
$hxClasses["haxe.ui.backend.ComponentDisabledBehaviour"] = haxe_ui_backend_ComponentDisabledBehaviour;
haxe_ui_backend_ComponentDisabledBehaviour.__name__ = "haxe.ui.backend.ComponentDisabledBehaviour";
haxe_ui_backend_ComponentDisabledBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_backend_ComponentDisabledBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		if(value != null && haxe_ui_util_Variant.get_isNull(value) == false) {
			this._component.disableInteractivity(haxe_ui_util_Variant.toBool(value),true,true);
		}
	}
	,get: function() {
		return haxe_ui_util_Variant.fromBool(this._component.classes.indexOf(":disabled") != -1);
	}
	,__class__: haxe_ui_backend_ComponentDisabledBehaviour
});
var haxe_ui_behaviours_ValueBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.ValueBehaviour"] = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_ValueBehaviour.__name__ = "haxe.ui.behaviours.ValueBehaviour";
haxe_ui_behaviours_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_ValueBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_previousValue: null
	,_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._previousValue = this._value;
		this._value = value;
	}
	,__class__: haxe_ui_behaviours_ValueBehaviour
});
var haxe_ui_backend_ComponentValueBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.ComponentValueBehaviour"] = haxe_ui_backend_ComponentValueBehaviour;
haxe_ui_backend_ComponentValueBehaviour.__name__ = "haxe.ui.backend.ComponentValueBehaviour";
haxe_ui_backend_ComponentValueBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_backend_ComponentValueBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		this._component.set_text(haxe_ui_util_Variant.toString(value));
	}
	,get: function() {
		return this._value;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this._value);
	}
	,__class__: haxe_ui_backend_ComponentValueBehaviour
});
var haxe_ui_behaviours_IValidatingBehaviour = function() { };
$hxClasses["haxe.ui.behaviours.IValidatingBehaviour"] = haxe_ui_behaviours_IValidatingBehaviour;
haxe_ui_behaviours_IValidatingBehaviour.__name__ = "haxe.ui.behaviours.IValidatingBehaviour";
haxe_ui_behaviours_IValidatingBehaviour.__isInterface__ = true;
haxe_ui_behaviours_IValidatingBehaviour.prototype = {
	validate: null
	,__class__: haxe_ui_behaviours_IValidatingBehaviour
};
var haxe_ui_behaviours_DataBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DataBehaviour"] = haxe_ui_behaviours_DataBehaviour;
haxe_ui_behaviours_DataBehaviour.__name__ = "haxe.ui.behaviours.DataBehaviour";
haxe_ui_behaviours_DataBehaviour.__interfaces__ = [haxe_ui_behaviours_IValidatingBehaviour];
haxe_ui_behaviours_DataBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_DataBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	_dataInvalid: null
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._previousValue = this._value;
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data",false);
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DataBehaviour
});
var haxe_ui_backend_ComponentToolTipBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.ComponentToolTipBehaviour"] = haxe_ui_backend_ComponentToolTipBehaviour;
haxe_ui_backend_ComponentToolTipBehaviour.__name__ = "haxe.ui.backend.ComponentToolTipBehaviour";
haxe_ui_backend_ComponentToolTipBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_backend_ComponentToolTipBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : haxe_ui_util_Variant.toDynamic(this._value), renderer : this._component.get_tooltipRenderer()});
		}
	}
	,setDynamic: function(value) {
		haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		if(value != null) {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : value, renderer : this._component.get_tooltipRenderer()});
		}
	}
	,getDynamic: function() {
		var options = haxe_ui_tooltips_ToolTipManager.get_instance().getTooltipOptions(this._component);
		if(options == null) {
			return null;
		}
		return options.tipData;
	}
	,__class__: haxe_ui_backend_ComponentToolTipBehaviour
});
var haxe_ui_backend_ComponentToolTipRendererBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.backend.ComponentToolTipRendererBehaviour"] = haxe_ui_backend_ComponentToolTipRendererBehaviour;
haxe_ui_backend_ComponentToolTipRendererBehaviour.__name__ = "haxe.ui.backend.ComponentToolTipRendererBehaviour";
haxe_ui_backend_ComponentToolTipRendererBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_backend_ComponentToolTipRendererBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,null);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,haxe_ui_util_Variant.toComponent(this._value));
		}
	}
	,__class__: haxe_ui_backend_ComponentToolTipRendererBehaviour
});
var haxe_ui_backend_ComponentGraphicsBase = function(component) {
	this._drawCommands = [];
	this._component = component;
};
$hxClasses["haxe.ui.backend.ComponentGraphicsBase"] = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_ComponentGraphicsBase.__name__ = "haxe.ui.backend.ComponentGraphicsBase";
haxe_ui_backend_ComponentGraphicsBase.prototype = {
	_component: null
	,_drawCommands: null
	,clear: function() {
		this._drawCommands = [];
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Clear);
	}
	,setPixel: function(x,y,color) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.SetPixel(x,y,color));
	}
	,setPixels: function(pixels) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.SetPixels(pixels));
	}
	,moveTo: function(x,y) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.MoveTo(x,y));
	}
	,lineTo: function(x,y) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.LineTo(x,y));
	}
	,strokeStyle: function(color,thickness,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(thickness == null) {
			thickness = 1;
		}
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.StrokeStyle(color,thickness,alpha));
	}
	,circle: function(x,y,radius) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Circle(x,y,radius));
	}
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.FillStyle(color,alpha));
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.CurveTo(controlX,controlY,anchorX,anchorY));
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.CubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY));
	}
	,rectangle: function(x,y,width,height) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Rectangle(x,y,width,height));
	}
	,image: function(resource,x,y,width,height) {
		this._drawCommands.push(haxe_ui_graphics_DrawCommand.Image(resource,x,y,width,height));
	}
	,setProperty: function(name,value) {
	}
	,replayDrawCommands: function() {
		var commands = this._drawCommands.slice();
		this._drawCommands = [];
		var _g = 0;
		while(_g < commands.length) {
			var c = commands[_g];
			++_g;
			switch(c._hx_index) {
			case 0:
				this.clear();
				break;
			case 1:
				var x = c.x;
				var y = c.y;
				var color = c.color;
				this.setPixel(x,y,color);
				break;
			case 2:
				var pixels = c.pixels;
				this.setPixels(pixels);
				break;
			case 3:
				var x1 = c.x;
				var y1 = c.y;
				this.moveTo(x1,y1);
				break;
			case 4:
				var x2 = c.x;
				var y2 = c.y;
				this.lineTo(x2,y2);
				break;
			case 5:
				var color1 = c.color;
				var thickness = c.thickness;
				var alpha = c.alpha;
				this.strokeStyle(color1,thickness,alpha);
				break;
			case 6:
				var x3 = c.x;
				var y3 = c.y;
				var radius = c.radius;
				this.circle(x3,y3,radius);
				break;
			case 7:
				var color2 = c.color;
				var alpha1 = c.alpha;
				this.fillStyle(color2,alpha1);
				break;
			case 8:
				var controlX = c.controlX;
				var controlY = c.controlY;
				var anchorX = c.anchorX;
				var anchorY = c.anchorY;
				this.curveTo(controlX,controlY,anchorX,anchorY);
				break;
			case 9:
				var controlX1 = c.controlX1;
				var controlY1 = c.controlY1;
				var controlX2 = c.controlX2;
				var controlY2 = c.controlY2;
				var anchorX1 = c.anchorX;
				var anchorY1 = c.anchorY;
				this.cubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX1,anchorY1);
				break;
			case 10:
				var x4 = c.x;
				var y4 = c.y;
				var width = c.width;
				var height = c.height;
				this.rectangle(x4,y4,width,height);
				break;
			case 11:
				var resource = c.resource;
				var x5 = c.x;
				var y5 = c.y;
				var width1 = c.width;
				var height1 = c.height;
				this.image(resource,x5,y5,width1,height1);
				break;
			}
		}
	}
	,__class__: haxe_ui_backend_ComponentGraphicsBase
};
var haxe_ui_backend_ComponentGraphicsImpl = function(component) {
	this._texture = null;
	this._bitmap = null;
	this._hasSize = false;
	this._styleGraphics = null;
	haxe_ui_backend_ComponentGraphicsBase.call(this,component);
	component.styleable = false;
	this.createGraphics();
};
$hxClasses["haxe.ui.backend.ComponentGraphicsImpl"] = haxe_ui_backend_ComponentGraphicsImpl;
haxe_ui_backend_ComponentGraphicsImpl.__name__ = "haxe.ui.backend.ComponentGraphicsImpl";
haxe_ui_backend_ComponentGraphicsImpl.__super__ = haxe_ui_backend_ComponentGraphicsBase;
haxe_ui_backend_ComponentGraphicsImpl.prototype = $extend(haxe_ui_backend_ComponentGraphicsBase.prototype,{
	_styleGraphics: null
	,_hasSize: null
	,clear: function() {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.clear.call(this);
			return;
		}
		this._styleGraphics.clear();
	}
	,setPixel: function(x,y,color) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.setPixel.call(this,x,y,color);
			return;
		}
	}
	,_bitmap: null
	,_texture: null
	,setPixels: function(pixels) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.setPixels.call(this,pixels);
			return;
		}
		if(this._bitmap == null) {
			this._bitmap = new h2d_Bitmap();
			this._component.addChild(this._bitmap);
		}
		var p = new hxd_Pixels(this._component.get_width() | 0,this._component.get_height() | 0,pixels,hxd_PixelFormat.RGBA);
		if(this._texture == null) {
			this._texture = h3d_mat_Texture.fromPixels(p);
			this._bitmap.set_tile(h2d_Tile.fromTexture(this._texture));
		} else {
			if(this._texture.width != this._component.get_width() || this._texture.height != this._component.get_height()) {
				this._texture.resize(this._component.get_width() | 0,this._component.get_height() | 0);
				this._bitmap.set_tile(h2d_Tile.fromTexture(this._texture));
			}
			this._texture.uploadPixels(p);
		}
	}
	,moveTo: function(x,y) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.moveTo.call(this,x,y);
			return;
		}
		var _this = this._styleGraphics;
		_this.flush();
		_this.addVertex(x,y,_this.curR,_this.curG,_this.curB,_this.curA,x * _this.ma + y * _this.mc + _this.mx,x * _this.mb + y * _this.md + _this.my);
	}
	,lineTo: function(x,y) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.lineTo.call(this,x,y);
			return;
		}
		var _this = this._styleGraphics;
		_this.addVertex(x,y,_this.curR,_this.curG,_this.curB,_this.curA,x * _this.ma + y * _this.mc + _this.mx,x * _this.mb + y * _this.md + _this.my);
	}
	,strokeStyle: function(color,thickness,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(thickness == null) {
			thickness = 1;
		}
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.strokeStyle.call(this,color,thickness,alpha);
			return;
		}
		this._styleGraphics.lineStyle(thickness,haxe_ui_util_Color.toInt(color),alpha);
	}
	,circle: function(x,y,radius) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.circle.call(this,x,y,radius);
			return;
		}
		this._styleGraphics.drawCircle(x,y,radius,radius * 10 | 0);
	}
	,fillStyle: function(color,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.fillStyle.call(this,color,alpha);
			return;
		}
		if(color == null) {
			this._styleGraphics.endFill();
			return;
		}
		this._styleGraphics.beginFill(haxe_ui_util_Color.toInt(color),alpha);
	}
	,curveTo: function(controlX,controlY,anchorX,anchorY) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.curveTo.call(this,controlX,controlY,anchorX,anchorY);
			return;
		}
		this._styleGraphics.curveTo(controlX,controlY,anchorX,anchorY);
	}
	,cubicCurveTo: function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.cubicCurveTo.call(this,controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
			return;
		}
		this._styleGraphics.cubicCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
	}
	,rectangle: function(x,y,width,height) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.rectangle.call(this,x,y,width,height);
			return;
		}
		this._styleGraphics.drawRect(x,y,width,height);
	}
	,image: function(resource,x,y,width,height) {
		if(this._hasSize == false) {
			haxe_ui_backend_ComponentGraphicsBase.prototype.image.call(this,resource,x,y,width,height);
			return;
		}
	}
	,createGraphics: function() {
		var container = this._component.getChildAt(0);
		if(container == null) {
			return;
		}
		if(container.children.length == 0) {
			this._styleGraphics = new h2d_Graphics();
			container.addChildAt(this._styleGraphics,0);
		} else {
			this._styleGraphics = js_Boot.__cast(container.getChildAt(0) , h2d_Graphics);
		}
	}
	,resize: function(width,height) {
		if(width > 0 && height > 0) {
			if(this._hasSize == false) {
				this._hasSize = true;
				this.replayDrawCommands();
			}
		}
	}
	,__class__: haxe_ui_backend_ComponentGraphicsImpl
});
var haxe_ui_backend_EventBase = function() { };
$hxClasses["haxe.ui.backend.EventBase"] = haxe_ui_backend_EventBase;
haxe_ui_backend_EventBase.__name__ = "haxe.ui.backend.EventBase";
var haxe_ui_backend_EventImpl = function() { };
$hxClasses["haxe.ui.backend.EventImpl"] = haxe_ui_backend_EventImpl;
haxe_ui_backend_EventImpl.__name__ = "haxe.ui.backend.EventImpl";
haxe_ui_backend_EventImpl.__super__ = haxe_ui_backend_EventBase;
haxe_ui_backend_EventImpl.prototype = $extend(haxe_ui_backend_EventBase.prototype,{
	_originalEvent: null
	,cancel: function() {
		if(this._originalEvent != null) {
			this._originalEvent.cancel = true;
			this._originalEvent.propagate = false;
		}
	}
	,postClone: function(event) {
		event._originalEvent = this._originalEvent;
	}
	,__class__: haxe_ui_backend_EventImpl
});
var haxe_ui_backend_FocusManagerBase = function() {
};
$hxClasses["haxe.ui.backend.FocusManagerBase"] = haxe_ui_backend_FocusManagerBase;
haxe_ui_backend_FocusManagerBase.__name__ = "haxe.ui.backend.FocusManagerBase";
haxe_ui_backend_FocusManagerBase.prototype = {
	applyFocus: function(c) {
	}
	,__class__: haxe_ui_backend_FocusManagerBase
};
var haxe_ui_backend_FocusManagerImpl = function() {
	haxe_ui_backend_FocusManagerBase.call(this);
};
$hxClasses["haxe.ui.backend.FocusManagerImpl"] = haxe_ui_backend_FocusManagerImpl;
haxe_ui_backend_FocusManagerImpl.__name__ = "haxe.ui.backend.FocusManagerImpl";
haxe_ui_backend_FocusManagerImpl.__super__ = haxe_ui_backend_FocusManagerBase;
haxe_ui_backend_FocusManagerImpl.prototype = $extend(haxe_ui_backend_FocusManagerBase.prototype,{
	applyFocus: function(c) {
		haxe_ui_backend_FocusManagerBase.prototype.applyFocus.call(this,c);
	}
	,unapplyFocus: function(c) {
		haxe_ui_backend_FocusManagerBase.prototype.applyFocus.call(this,c);
	}
	,__class__: haxe_ui_backend_FocusManagerImpl
});
var haxe_ui_backend_ImageBase = function(tile,parent) {
	this._imageHeight = 0;
	this._imageWidth = 0;
	this._top = 0;
	this._left = 0;
	h2d_Bitmap.call(this,tile,parent);
};
$hxClasses["haxe.ui.backend.ImageBase"] = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageBase.__name__ = "haxe.ui.backend.ImageBase";
haxe_ui_backend_ImageBase.__super__ = h2d_Bitmap;
haxe_ui_backend_ImageBase.prototype = $extend(h2d_Bitmap.prototype,{
	parentComponent: null
	,_left: null
	,_top: null
	,_imageWidth: null
	,_imageHeight: null
	,_imageInfo: null
	,_imageClipRect: null
	,__class__: haxe_ui_backend_ImageBase
});
var haxe_ui_backend_ImageDisplayImpl = function() {
	haxe_ui_backend_ImageBase.call(this);
	this.sprite = new h2d_Bitmap();
};
$hxClasses["haxe.ui.backend.ImageDisplayImpl"] = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_backend_ImageDisplayImpl.__name__ = "haxe.ui.backend.ImageDisplayImpl";
haxe_ui_backend_ImageDisplayImpl.__super__ = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageDisplayImpl.prototype = $extend(haxe_ui_backend_ImageBase.prototype,{
	sprite: null
	,validateData: function() {
		if(this._imageInfo != null) {
			this.sprite.set_tile(h2d_Tile.fromBitmap(this._imageInfo.data));
		} else {
			this.sprite.tile.dispose();
			this.sprite.set_tile(null);
		}
	}
	,validatePosition: function() {
		if(this.sprite.x != this._left) {
			var _this = this.sprite;
			_this.posChanged = true;
			_this.x = this._left;
		}
		if(this.sprite.y != this._top) {
			var _this = this.sprite;
			_this.posChanged = true;
			_this.y = this._top;
		}
	}
	,validateDisplay: function() {
		if(this.sprite.tile != null) {
			var scaleX = this._imageWidth / this.sprite.tile.width;
			if(this.sprite.scaleX != scaleX) {
				var _this = this.sprite;
				_this.posChanged = true;
				_this.scaleX = scaleX;
			}
			var scaleY = this._imageHeight / this.sprite.tile.height;
			if(this.sprite.scaleY != scaleY) {
				var _this = this.sprite;
				_this.posChanged = true;
				_this.scaleY = scaleY;
			}
			this.sprite.smooth = false;
		}
	}
	,dispose: function() {
		if(this.sprite.tile != null) {
			this.sprite.tile.dispose();
			this.sprite.set_tile(null);
		}
	}
	,__class__: haxe_ui_backend_ImageDisplayImpl
});
var haxe_ui_backend_PlatformBase = function() {
};
$hxClasses["haxe.ui.backend.PlatformBase"] = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformBase.__name__ = "haxe.ui.backend.PlatformBase";
haxe_ui_backend_PlatformBase.prototype = {
	isWindows: null
	,get_isWindows: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("windows") != -1;
	}
	,isLinux: null
	,get_isLinux: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("linux") != -1;
	}
	,isMac: null
	,get_isMac: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("mac") != -1;
	}
	,getMetric: function(id) {
		return 0;
	}
	,getColor: function(id) {
		return null;
	}
	,getKeyCode: function(keyId) {
		switch(keyId) {
		case "down":
			return 40;
		case "enter":
			return 13;
		case "escape":
			return 27;
		case "left":
			return 37;
		case "right":
			return 39;
		case "space":
			return 32;
		case "tab":
			return 9;
		case "up":
			return 38;
		default:
			return HxOverrides.cca(keyId,0);
		}
	}
	,__class__: haxe_ui_backend_PlatformBase
	,__properties__: {get_isMac:"get_isMac",get_isLinux:"get_isLinux",get_isWindows:"get_isWindows"}
};
var haxe_ui_backend_PlatformImpl = function() {
	haxe_ui_backend_PlatformBase.call(this);
};
$hxClasses["haxe.ui.backend.PlatformImpl"] = haxe_ui_backend_PlatformImpl;
haxe_ui_backend_PlatformImpl.__name__ = "haxe.ui.backend.PlatformImpl";
haxe_ui_backend_PlatformImpl.__super__ = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformImpl.prototype = $extend(haxe_ui_backend_PlatformBase.prototype,{
	__class__: haxe_ui_backend_PlatformImpl
});
var haxe_ui_backend_ScreenBase = function() {
	this.rootComponents = [];
};
$hxClasses["haxe.ui.backend.ScreenBase"] = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenBase.__name__ = "haxe.ui.backend.ScreenBase";
haxe_ui_backend_ScreenBase.prototype = {
	rootComponents: null
	,_options: null
	,get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		return value;
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,actualWidth: null
	,get_actualWidth: function() {
		return this.get_width() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualHeight: null
	,get_actualHeight: function() {
		return this.get_height() * haxe_ui_Toolkit.get_scaleY();
	}
	,topComponent: null
	,get_topComponent: function() {
		if(this.rootComponents.length == 0) {
			return null;
		}
		var n = this.rootComponents.length - 1;
		var c = null;
		while(n >= 0) {
			c = this.rootComponents[n];
			if(c.get_style() == null) {
				break;
			}
			if(c.get_style().pointerEvents != "none") {
				break;
			}
			--n;
		}
		return c;
	}
	,resizeComponent: function(c) {
		var cx = null;
		var cy = null;
		if(c.get_percentWidth() > 0) {
			cx = this.get_width() * c.get_percentWidth() / 100;
		}
		if(c.get_percentHeight() > 0) {
			cy = this.get_height() * c.get_percentHeight() / 100;
		}
		c.resizeComponent(cx,cy);
	}
	,resizeRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this.resizeComponent(component);
		}
	}
	,_refreshStyleComponent: function(component) {
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.invalidateComponent("style",false);
			child.invalidateComponent("display",false);
			this._refreshStyleComponent(child);
		}
	}
	,_onRootComponentResize: function(e) {
		this._refreshStyleComponent(e.target);
	}
	,invalidateAll: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.invalidateChildren(c,flag);
		}
	}
	,invalidateChildren: function(c,flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.invalidateChildren(child,flag);
		}
		c.invalidateComponent(flag);
	}
	,unmapEvent: function(type,listener) {
	}
	,__class__: haxe_ui_backend_ScreenBase
	,__properties__: {get_topComponent:"get_topComponent",get_actualHeight:"get_actualHeight",get_actualWidth:"get_actualWidth",get_height:"get_height",get_width:"get_width",set_options:"set_options",get_options:"get_options"}
};
var haxe_ui_backend_ScreenImpl = function() {
	this._removedComponents = [];
	this.cursorLocked = false;
	this._root = null;
	this._updateCallbackAdded = false;
	this._resizeListenerAdded = false;
	haxe_ui_backend_ScreenBase.call(this);
	this._mapping = new haxe_ds_StringMap();
	this.addResizeListener();
};
$hxClasses["haxe.ui.backend.ScreenImpl"] = haxe_ui_backend_ScreenImpl;
haxe_ui_backend_ScreenImpl.__name__ = "haxe.ui.backend.ScreenImpl";
haxe_ui_backend_ScreenImpl.__super__ = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenImpl.prototype = $extend(haxe_ui_backend_ScreenBase.prototype,{
	_mapping: null
	,_resizeListenerAdded: null
	,addResizeListener: function() {
		if(this._resizeListenerAdded == true) {
			return;
		}
		this._resizeListenerAdded = true;
		if(hxd_Window.getInstance() != null) {
			hxd_Window.getInstance().addResizeEvent($bind(this,this.onWindowResize));
		}
	}
	,_updateCallbackAdded: null
	,addUpdateCallback: function() {
		if(this._updateCallbackAdded == true) {
			return;
		}
		if(this.get_options() == null || this.get_options().manualUpdate == null || this.get_options().manualUpdate == false) {
			this._updateCallbackAdded = true;
			haxe_MainLoop.add(haxe_ui_backend_BackendImpl.update);
		}
	}
	,onWindowResize: function() {
		this.resizeRootComponents();
	}
	,_root: null
	,get_root: function() {
		if(this._root != null) {
			return this._root;
		}
		if(this.get_options() == null) {
			return null;
		}
		return this.get_options().root;
	}
	,set_root: function(value) {
		this._root = value;
		return value;
	}
	,set_options: function(value) {
		haxe_ui_backend_ScreenBase.prototype.set_options.call(this,value);
		this.addUpdateCallback();
		return value;
	}
	,get_width: function() {
		return hxd_Window.getInstance().get_width() / haxe_ui_Toolkit.get_scaleX();
	}
	,get_height: function() {
		return hxd_Window.getInstance().get_height() / haxe_ui_Toolkit.get_scaleY();
	}
	,get_dpi: function() {
		return haxe_ui_backend_heaps_ScreenUtils.get_dpi();
	}
	,get_isRetina: function() {
		return haxe_ui_backend_heaps_ScreenUtils.isRetinaDisplay();
	}
	,cursorLocked: null
	,setCursor: function(cursor,lock) {
		if(lock == null) {
			lock = false;
		}
		if(this.cursorLocked) {
			return;
		}
		this.cursorLocked = lock;
		if(cursor == "pointer") {
			hxd_System.setNativeCursor(hxd_Cursor.Button);
		} else if(cursor == "text") {
			hxd_System.setNativeCursor(hxd_Cursor.TextInput);
		} else if(cursor == "col-resize") {
			hxd_System.setNativeCursor(hxd_Cursor.Move);
		} else if(cursor == "row-resize") {
			hxd_System.setNativeCursor(hxd_Cursor.Move);
		} else {
			hxd_System.setNativeCursor(hxd_Cursor.Default);
		}
	}
	,lockCursor: function() {
		this.cursorLocked = true;
	}
	,unlockCursor: function() {
		this.cursorLocked = false;
	}
	,addComponent: function(component) {
		this.rootComponents.push(component);
		var v = haxe_ui_Toolkit.get_scaleX();
		component.posChanged = true;
		component.scaleX = v;
		var v = haxe_ui_Toolkit.get_scaleY();
		component.posChanged = true;
		component.scaleY = v;
		if(component.parent == null || component.parent == this.get_root()) {
			if(this._removedComponents.indexOf(component) != -1) {
				if(this.get_root() == null) {
					haxe_Log.trace("WARNING: trying to add a component to a null root. Either set Screen.instance.root or specify one in Toolkit.init",{ fileName : "haxe/ui/backend/ScreenImpl.hx", lineNumber : 134, className : "haxe.ui.backend.ScreenImpl", methodName : "addComponent"});
					return component;
				}
				HxOverrides.remove(this._removedComponents,component);
				component.set_visible(true);
			} else {
				if(this.get_root() == null) {
					haxe_Log.trace("WARNING: trying to add a component to a null root. Either set Screen.instance.root or specify one in Toolkit.init",{ fileName : "haxe/ui/backend/ScreenImpl.hx", lineNumber : 142, className : "haxe.ui.backend.ScreenImpl", methodName : "addComponent"});
					return component;
				}
				this.get_root().addChild(component);
			}
		}
		this.resizeComponent(component);
		return component;
	}
	,_removedComponents: null
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		HxOverrides.remove(this.rootComponents,component);
		if(this._removedComponents.indexOf(component) == -1) {
			if(this.get_root() == null) {
				haxe_Log.trace("WARNING: trying to remove a component to a null root. Either set Screen.instance.root or specify one in Toolkit.init",{ fileName : "haxe/ui/backend/ScreenImpl.hx", lineNumber : 157, className : "haxe.ui.backend.ScreenImpl", methodName : "removeComponent"});
				return component;
			}
			this._removedComponents.push(component);
			component.set_visible(false);
			if(dispose == true && this.get_root() != null) {
				this.get_root().removeChild(component);
			}
			if(component.inBounds(haxe_ui_backend_heaps_MouseHelper.currentMouseX,haxe_ui_backend_heaps_MouseHelper.currentMouseY)) {
				this.setCursor(null);
			}
		}
		return component;
	}
	,handleSetComponentIndex: function(component,index) {
		if(this.get_root() == null) {
			haxe_Log.trace("WARNING: trying to set a component index in a null root. Either set Screen.instance.root or specify one in Toolkit.init",{ fileName : "haxe/ui/backend/ScreenImpl.hx", lineNumber : 176, className : "haxe.ui.backend.ScreenImpl", methodName : "handleSetComponentIndex"});
			return;
		}
		this.get_root().addChildAt(component,index);
		this.resizeComponent(component);
	}
	,supportsEvent: function(type) {
		return haxe_ui_backend_heaps_EventMapper.HAXEUI_TO_HEAPS.h[type] != null;
	}
	,mapEvent: function(type,listener) {
		switch(type) {
		case "keydown":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				haxe_ui_backend_heaps_KeyboardHelper.notify("keydown",$bind(this,this.__onKeyDown));
			}
			break;
		case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				haxe_ui_backend_heaps_KeyboardHelper.notify("keyup",$bind(this,this.__onKeyUp));
			}
			break;
		case "mousedown":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				haxe_ui_backend_heaps_MouseHelper.notify("mousedown",$bind(this,this.__onMouseDown));
			}
			break;
		case "mousemove":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				haxe_ui_backend_heaps_MouseHelper.notify("mousemove",$bind(this,this.__onMouseMove));
			}
			break;
		case "mouseup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				haxe_ui_backend_heaps_MouseHelper.notify("mouseup",$bind(this,this.__onMouseUp));
			}
			break;
		}
	}
	,__onMouseMove: function(event) {
		var fn = this._mapping.h["mousemove"];
		if(fn != null) {
			var mouseEvent = new haxe_ui_events_MouseEvent("mousemove");
			mouseEvent.screenX = event.screenX;
			mouseEvent.screenY = event.screenY;
			mouseEvent.buttonDown = event.data;
			fn(mouseEvent);
		}
	}
	,__onMouseDown: function(event) {
		var fn = this._mapping.h["mousedown"];
		if(fn != null) {
			var mouseEvent = new haxe_ui_events_MouseEvent("mousedown");
			mouseEvent.screenX = event.screenX;
			mouseEvent.screenY = event.screenY;
			mouseEvent.buttonDown = event.data;
			fn(mouseEvent);
		}
	}
	,__onMouseUp: function(event) {
		var fn = this._mapping.h["mouseup"];
		if(fn != null) {
			var mouseEvent = new haxe_ui_events_MouseEvent("mouseup");
			mouseEvent.screenX = event.screenX;
			mouseEvent.screenY = event.screenY;
			mouseEvent.buttonDown = event.data;
			fn(mouseEvent);
		}
	}
	,__onKeyDown: function(event) {
		var fn = this._mapping.h["keydown"];
		if(fn != null) {
			var keyboardEvent = new haxe_ui_events_KeyboardEvent("keydown");
			keyboardEvent.keyCode = event.keyCode;
			keyboardEvent.shiftKey = event.shiftKey;
			keyboardEvent.ctrlKey = event.ctrlKey;
			keyboardEvent.altKey = event.altKey;
			fn(keyboardEvent);
		}
	}
	,__onKeyUp: function(event) {
		var fn = this._mapping.h["keyup"];
		if(fn != null) {
			var keyboardEvent = new haxe_ui_events_KeyboardEvent("keyup");
			keyboardEvent.keyCode = event.keyCode;
			keyboardEvent.shiftKey = event.shiftKey;
			keyboardEvent.ctrlKey = event.ctrlKey;
			keyboardEvent.altKey = event.altKey;
			fn(keyboardEvent);
		}
	}
	,__class__: haxe_ui_backend_ScreenImpl
	,__properties__: $extend(haxe_ui_backend_ScreenBase.prototype.__properties__,{set_root:"set_root",get_root:"get_root"})
});
var haxe_ui_backend_TextBase = function() {
	this._textHeight = 0;
	this._textWidth = 0;
	this._height = 0;
	this._width = 0;
	this._top = 0;
	this._left = 0;
	this._htmlText = null;
	this._inputData = new haxe_ui_core_TextInputData();
	this._displayData = new haxe_ui_core_TextDisplayData();
};
$hxClasses["haxe.ui.backend.TextBase"] = haxe_ui_backend_TextBase;
haxe_ui_backend_TextBase.__name__ = "haxe.ui.backend.TextBase";
haxe_ui_backend_TextBase.prototype = {
	parentComponent: null
	,_displayData: null
	,_inputData: null
	,_text: null
	,_htmlText: null
	,_left: null
	,_top: null
	,_width: null
	,_height: null
	,_textWidth: null
	,_textHeight: null
	,_textStyle: null
	,_fontInfo: null
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,_dataSource: null
	,set_dataSource: function(value) {
		this._dataSource = value;
		return value;
	}
	,supportsHtml: null
	,get_supportsHtml: function() {
		return false;
	}
	,get_caretIndex: function() {
		return 0;
	}
	,set_caretIndex: function(value) {
		return value;
	}
	,get_selectionStartIndex: function() {
		return 0;
	}
	,set_selectionStartIndex: function(value) {
		return value;
	}
	,get_selectionEndIndex: function() {
		return 0;
	}
	,set_selectionEndIndex: function(value) {
		return value;
	}
	,measureTextWidth: function() {
		var textDisplay = new haxe_ui_core_TextDisplay();
		textDisplay._textStyle = this._textStyle;
		textDisplay._fontInfo = this._fontInfo;
		textDisplay.validateStyle();
		textDisplay._text = this._text;
		textDisplay.validateData();
		textDisplay.measureText();
		return textDisplay._textWidth;
	}
	,__class__: haxe_ui_backend_TextBase
	,__properties__: {set_selectionEndIndex:"set_selectionEndIndex",get_selectionEndIndex:"get_selectionEndIndex",set_selectionStartIndex:"set_selectionStartIndex",get_selectionStartIndex:"get_selectionStartIndex",set_caretIndex:"set_caretIndex",get_caretIndex:"get_caretIndex",get_supportsHtml:"get_supportsHtml",set_dataSource:"set_dataSource"}
};
var haxe_ui_backend_TextDisplayImpl = function() {
	this._currentFontData = null;
	this.isDefaultFont = true;
	var _gthis = this;
	haxe_ui_backend_TextBase.call(this);
	this.sprite = this.createText();
	this.sprite.set_visible(false);
	haxe_ui_Toolkit.callLater(function() {
		_gthis.sprite.set_visible(true);
	});
};
$hxClasses["haxe.ui.backend.TextDisplayImpl"] = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextDisplayImpl.__name__ = "haxe.ui.backend.TextDisplayImpl";
haxe_ui_backend_TextDisplayImpl.__super__ = haxe_ui_backend_TextBase;
haxe_ui_backend_TextDisplayImpl.prototype = $extend(haxe_ui_backend_TextBase.prototype,{
	sprite: null
	,isDefaultFont: null
	,validateData: function() {
		if(this._text != null) {
			this.sprite.set_text(this.normalizeText(this._text));
		} else if(this._htmlText != null) {
			this.sprite.set_text(this.normalizeText(this._htmlText));
		}
	}
	,_currentFontData: null
	,validateStyle: function() {
		var measureTextRequired = false;
		var isBitmap = false;
		if(this._fontInfo != null && this._fontInfo.data != null) {
			if(this._fontInfo.data != this._currentFontData) {
				this._currentFontData = this._fontInfo.data;
				var font = null;
				var sdfDetails = haxe_ui_backend_heaps_SDFFonts.get(this._fontInfo.name);
				if(sdfDetails != null) {
					font = this._currentFontData.toSdfFont(haxe_ui_backend_TextDisplayImpl.defaultFontSize,sdfDetails.channel,sdfDetails.alphaCutoff,sdfDetails.smoothing).clone();
				} else {
					font = this._currentFontData.toFont().clone();
					isBitmap = true;
				}
				if(this.sprite.font != font) {
					this.sprite.set_font(font);
					measureTextRequired = true;
				}
				this.isDefaultFont = false;
			}
		}
		if(this._textStyle != null) {
			var fontSizeValue = this._textStyle.fontSize | 0;
			if(fontSizeValue <= 0) {
				fontSizeValue = haxe_ui_backend_TextDisplayImpl.defaultFontSize | 0;
			}
			var currentFontSize = this.sprite.font.size;
			if(currentFontSize < 0) {
				currentFontSize = -currentFontSize;
			}
			if(currentFontSize != fontSizeValue) {
				this.resizeFont(fontSizeValue,isBitmap);
				measureTextRequired = true;
			}
			if(this._displayData.wordWrap != this.sprite.lineBreak) {
				this.sprite.set_lineBreak(this._displayData.wordWrap);
				measureTextRequired = true;
			}
			var textAlign = this.getAlign(this._textStyle.textAlign);
			if(this.sprite.textAlign != textAlign) {
				this.sprite.set_textAlign(textAlign);
				measureTextRequired = true;
			}
			if(this.sprite.textColor != this._textStyle.color) {
				this.sprite.set_textColor(this._textStyle.color);
			}
		}
		return measureTextRequired;
	}
	,resizeFont: function(fontSizeValue,isBitmap) {
		var temp = this.sprite.font.clone();
		this.sprite.set_font(null);
		if(isBitmap) {
			temp.resizeTo(-fontSizeValue);
		} else {
			if(temp == hxd_res_DefaultFont.get()) {
				temp = hxd_res_DefaultFont.get().clone();
			}
			temp.resizeTo(fontSizeValue);
		}
		this.sprite.set_font(temp);
		temp = null;
	}
	,validatePosition: function() {
		if(this.get_autoWidth() == true && this.sprite.textAlign == h2d_Align.Center) {
			var _this = this.sprite;
			_this.posChanged = true;
			_this.x = this._left + this._width / 2;
		} else {
			var _this = this.sprite;
			_this.posChanged = true;
			_this.x = this._left;
		}
		var offset = 0;
		if(!this.isDefaultFont) {
			var currentFontSize = this.sprite.font.size;
			if(currentFontSize < 0) {
				currentFontSize = -currentFontSize;
			}
			offset = (currentFontSize - this.sprite.font.baseLine) / 2;
		}
		var _this = this.sprite;
		_this.posChanged = true;
		_this.y = this._top + offset;
	}
	,validateDisplay: function() {
		if(this.get_autoWidth() == false) {
			this.sprite.set_maxWidth(this._width != 0 ? this._width : this._textWidth);
		} else if(this.sprite.textAlign == h2d_Align.Center) {
			var _this = this.sprite;
			_this.posChanged = true;
			_this.x = this._left + this._width / 2;
		}
	}
	,autoWidth: null
	,get_autoWidth: function() {
		return this.parentComponent.get_autoWidth();
	}
	,measureText: function() {
		this._textWidth = this.sprite.get_textWidth();
		this._textHeight = this.sprite.get_textHeight();
		this._textWidth = Math.round(this._textWidth);
		this._textHeight = Math.round(this._textHeight);
		if(this._textWidth % 2 != 0) {
			this._textWidth++;
		}
		if(this._textHeight % 2 == 0) {
			this._textHeight++;
		}
	}
	,createText: function() {
		var text = new h2d_Text(hxd_res_DefaultFont.get(),this.parentComponent);
		text.set_lineBreak(false);
		return text;
	}
	,getAlign: function(align) {
		switch(align) {
		case "center":
			return h2d_Align.Center;
		case "left":
			return h2d_Align.Left;
		case "right":
			return h2d_Align.Right;
		default:
			return h2d_Align.Left;
		}
	}
	,normalizeText: function(text) {
		if(text == null) {
			return "";
		}
		text = StringTools.replace(text,"\\n","\n");
		return text;
	}
	,__class__: haxe_ui_backend_TextDisplayImpl
	,__properties__: $extend(haxe_ui_backend_TextBase.prototype.__properties__,{get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_TextInputImpl = function() {
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.backend.TextInputImpl"] = haxe_ui_backend_TextInputImpl;
haxe_ui_backend_TextInputImpl.__name__ = "haxe.ui.backend.TextInputImpl";
haxe_ui_backend_TextInputImpl.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextInputImpl.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	textInput: null
	,createText: function() {
		var _gthis = this;
		this.textInput = new h2d_TextInput(hxd_res_DefaultFont.get());
		this.textInput.set_lineBreak(false);
		this.textInput.onChange = $bind(this,this.onChange);
		this.textInput.onClick = function(e) {
			(js_Boot.__cast(_gthis.parentComponent , haxe_ui_core_InteractiveComponent)).set_focus(true);
		};
		return this.textInput;
	}
	,focus: function() {
		var _gthis = this;
		haxe_ui_Toolkit.callLater(function() {
			_gthis.textInput.focus();
		});
	}
	,blur: function() {
		this.textInput.interactive.blur();
	}
	,onChange: function() {
		this._text = this.textInput.text;
		this._htmlText = this.textInput.text;
		this.measureText();
		if(this._inputData.onChangedCallback != null) {
			this._inputData.onChangedCallback();
		}
		if(this.parentComponent != null) {
			this.parentComponent.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,validateDisplay: function() {
		haxe_ui_backend_TextDisplayImpl.prototype.validateDisplay.call(this);
		this.textInput.inputWidth = Math.round(this.textInput.maxWidth);
	}
	,resizeFont: function(fontSizeValue,isBitmap) {
		var temp = this.sprite.font.clone();
		if(isBitmap) {
			temp.resizeTo(-fontSizeValue);
		} else {
			if(temp == hxd_res_DefaultFont.get()) {
				temp = hxd_res_DefaultFont.get().clone();
			}
			temp.resizeTo(fontSizeValue);
		}
		this.sprite.set_font(temp);
		temp = null;
	}
	,validateStyle: function() {
		var measureTextRequired = haxe_ui_backend_TextDisplayImpl.prototype.validateStyle.call(this);
		if(this._inputData.password) {
			haxe_Log.trace("TextInput password mode isn't supported in Heaps.",{ fileName : "haxe/ui/backend/TextInputImpl.hx", lineNumber : 75, className : "haxe.ui.backend.TextInputImpl", methodName : "validateStyle"});
			this._inputData.password = false;
		}
		if(this.parentComponent.get_disabled()) {
			this.textInput.canEdit = false;
		} else {
			this.textInput.canEdit = true;
		}
		return measureTextRequired;
	}
	,__class__: haxe_ui_backend_TextInputImpl
});
var haxe_ui_backend_TimerImpl = function(delay,callback) {
	this.callback = callback;
	this._delay = delay / 1000;
	this._end = hxd_Timer.lastTimeStamp + this._delay;
	haxe_ui_backend_TimerImpl.__timers.push(this);
};
$hxClasses["haxe.ui.backend.TimerImpl"] = haxe_ui_backend_TimerImpl;
haxe_ui_backend_TimerImpl.__name__ = "haxe.ui.backend.TimerImpl";
haxe_ui_backend_TimerImpl.update = function() {
	var currentTime = hxd_Timer.lastTimeStamp;
	var count = haxe_ui_backend_TimerImpl.__timers.length;
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		var timer = haxe_ui_backend_TimerImpl.__timers[i];
		if(!timer._stopped && currentTime > timer._end) {
			timer._end = currentTime + timer._delay;
			timer.callback();
		}
	}
	while(--count >= 0) {
		var timer = haxe_ui_backend_TimerImpl.__timers[count];
		if(timer._stopped) {
			HxOverrides.remove(haxe_ui_backend_TimerImpl.__timers,timer);
		}
	}
};
haxe_ui_backend_TimerImpl.prototype = {
	callback: null
	,_end: null
	,_delay: null
	,_stopped: null
	,stop: function() {
		this._stopped = true;
	}
	,__class__: haxe_ui_backend_TimerImpl
};
var haxe_ui_backend_heaps_EventMapper = function() { };
$hxClasses["haxe.ui.backend.heaps.EventMapper"] = haxe_ui_backend_heaps_EventMapper;
haxe_ui_backend_heaps_EventMapper.__name__ = "haxe.ui.backend.heaps.EventMapper";
var haxe_ui_backend_heaps_FilterConverter = function() { };
$hxClasses["haxe.ui.backend.heaps.FilterConverter"] = haxe_ui_backend_heaps_FilterConverter;
haxe_ui_backend_heaps_FilterConverter.__name__ = "haxe.ui.backend.heaps.FilterConverter";
haxe_ui_backend_heaps_FilterConverter.convertFilter = function(input) {
	if(input == null) {
		return null;
	}
	var output = null;
	if(((input) instanceof haxe_ui_filters_DropShadow)) {
		var inputDropShadow = js_Boot.__cast(input , haxe_ui_filters_DropShadow);
		var dropShadow = new h2d_filter_DropShadow(inputDropShadow.distance,0.785,inputDropShadow.color,inputDropShadow.alpha * 2,1,1,1,true);
		output = dropShadow;
	}
	return output;
};
var haxe_ui_backend_heaps_KeyboardHelper = function() { };
$hxClasses["haxe.ui.backend.heaps.KeyboardHelper"] = haxe_ui_backend_heaps_KeyboardHelper;
haxe_ui_backend_heaps_KeyboardHelper.__name__ = "haxe.ui.backend.heaps.KeyboardHelper";
haxe_ui_backend_heaps_KeyboardHelper.notify = function(event,callback) {
	switch(event) {
	case "keydown":
		if(haxe_ui_backend_heaps_KeyboardHelper._hasOnEvent == false) {
			hxd_Window.getInstance().addEventTarget(haxe_ui_backend_heaps_KeyboardHelper.onEvent);
			haxe_ui_backend_heaps_KeyboardHelper._hasOnEvent = true;
		}
		break;
	case "keypress":
		if(haxe_ui_backend_heaps_KeyboardHelper._hasOnEvent == false) {
			hxd_Window.getInstance().addEventTarget(haxe_ui_backend_heaps_KeyboardHelper.onEvent);
			haxe_ui_backend_heaps_KeyboardHelper._hasOnEvent = true;
		}
		break;
	case "keyup":
		if(haxe_ui_backend_heaps_KeyboardHelper._hasOnEvent == false) {
			hxd_Window.getInstance().addEventTarget(haxe_ui_backend_heaps_KeyboardHelper.onEvent);
			haxe_ui_backend_heaps_KeyboardHelper._hasOnEvent = true;
		}
		break;
	}
	var list = haxe_ui_backend_heaps_KeyboardHelper._callbacks.h[event];
	if(list == null) {
		list = [];
		haxe_ui_backend_heaps_KeyboardHelper._callbacks.h[event] = list;
	}
	list.push(callback);
};
haxe_ui_backend_heaps_KeyboardHelper.onEvent = function(e) {
	switch(e.kind._hx_index) {
	case 8:
		haxe_ui_backend_heaps_KeyboardHelper.onKeyDown(e);
		break;
	case 9:
		haxe_ui_backend_heaps_KeyboardHelper.onKeyUp(e);
		break;
	default:
	}
};
haxe_ui_backend_heaps_KeyboardHelper.onKeyDown = function(e) {
	var list = haxe_ui_backend_heaps_KeyboardHelper._callbacks.h["keydown"];
	if(list == null || list.length == 0) {
		return;
	}
	switch(e.keyCode) {
	case 16:
		haxe_ui_backend_heaps_KeyboardHelper._shiftDown = true;
		break;
	case 17:
		haxe_ui_backend_heaps_KeyboardHelper._ctrlDown = true;
		break;
	case 18:
		haxe_ui_backend_heaps_KeyboardHelper._altDown = true;
		break;
	}
	list = list.slice();
	var event = new haxe_ui_events_KeyboardEvent("keydown");
	event.shiftKey = haxe_ui_backend_heaps_KeyboardHelper._shiftDown;
	event.ctrlKey = haxe_ui_backend_heaps_KeyboardHelper._ctrlDown;
	event.altKey = haxe_ui_backend_heaps_KeyboardHelper._altDown;
	event._originalEvent = e;
	event.keyCode = e.keyCode;
	var _g = 0;
	while(_g < list.length) {
		var l = list[_g];
		++_g;
		l(event);
	}
};
haxe_ui_backend_heaps_KeyboardHelper.onKeyUp = function(e) {
	var list = haxe_ui_backend_heaps_KeyboardHelper._callbacks.h["keyup"];
	if(list == null || list.length == 0) {
		return;
	}
	switch(e.keyCode) {
	case 16:
		haxe_ui_backend_heaps_KeyboardHelper._shiftDown = false;
		break;
	case 17:
		haxe_ui_backend_heaps_KeyboardHelper._ctrlDown = false;
		break;
	case 18:
		haxe_ui_backend_heaps_KeyboardHelper._altDown = false;
		break;
	}
	list = list.slice();
	var event = new haxe_ui_events_KeyboardEvent("keyup");
	event.shiftKey = haxe_ui_backend_heaps_KeyboardHelper._shiftDown;
	event.ctrlKey = haxe_ui_backend_heaps_KeyboardHelper._ctrlDown;
	event.altKey = haxe_ui_backend_heaps_KeyboardHelper._altDown;
	event._originalEvent = e;
	event.keyCode = e.keyCode;
	var _g = 0;
	while(_g < list.length) {
		var l = list[_g];
		++_g;
		l(event);
	}
};
var haxe_ui_backend_heaps_MouseHelper = function() { };
$hxClasses["haxe.ui.backend.heaps.MouseHelper"] = haxe_ui_backend_heaps_MouseHelper;
haxe_ui_backend_heaps_MouseHelper.__name__ = "haxe.ui.backend.heaps.MouseHelper";
haxe_ui_backend_heaps_MouseHelper.notify = function(event,callback) {
	switch(event) {
	case "mousedown":
		if(haxe_ui_backend_heaps_MouseHelper._hasOnEvent == false) {
			hxd_Window.getInstance().addEventTarget(haxe_ui_backend_heaps_MouseHelper.onEvent);
			haxe_ui_backend_heaps_MouseHelper._hasOnEvent = true;
		}
		break;
	case "mousemove":
		if(haxe_ui_backend_heaps_MouseHelper._hasOnEvent == false) {
			hxd_Window.getInstance().addEventTarget(haxe_ui_backend_heaps_MouseHelper.onEvent);
			haxe_ui_backend_heaps_MouseHelper._hasOnEvent = true;
		}
		break;
	case "mouseup":
		if(haxe_ui_backend_heaps_MouseHelper._hasOnEvent == false) {
			hxd_Window.getInstance().addEventTarget(haxe_ui_backend_heaps_MouseHelper.onEvent);
			haxe_ui_backend_heaps_MouseHelper._hasOnEvent = true;
		}
		break;
	case "mousewheel":
		if(haxe_ui_backend_heaps_MouseHelper._hasOnEvent == false) {
			hxd_Window.getInstance().addEventTarget(haxe_ui_backend_heaps_MouseHelper.onEvent);
			haxe_ui_backend_heaps_MouseHelper._hasOnEvent = true;
		}
		break;
	}
	var list = haxe_ui_backend_heaps_MouseHelper._callbacks.h[event];
	if(list == null) {
		list = [];
		haxe_ui_backend_heaps_MouseHelper._callbacks.h[event] = list;
	}
	list.push(callback);
};
haxe_ui_backend_heaps_MouseHelper.remove = function(event,callback) {
	var list = haxe_ui_backend_heaps_MouseHelper._callbacks.h[event];
	if(list != null) {
		HxOverrides.remove(list,callback);
		if(list.length == 0) {
			var _this = haxe_ui_backend_heaps_MouseHelper._callbacks;
			if(Object.prototype.hasOwnProperty.call(_this.h,event)) {
				delete(_this.h[event]);
			}
		}
	}
};
haxe_ui_backend_heaps_MouseHelper.onEvent = function(e) {
	switch(e.kind._hx_index) {
	case 0:
		haxe_ui_backend_heaps_MouseHelper.onMouseDown(e);
		break;
	case 2:
		haxe_ui_backend_heaps_MouseHelper.onMouseMove(e);
		break;
	case 5:
		haxe_ui_backend_heaps_MouseHelper.onMouseWheel(e);
		break;
	case 1:case 10:
		haxe_ui_backend_heaps_MouseHelper.onMouseUp(e);
		break;
	default:
	}
};
haxe_ui_backend_heaps_MouseHelper.onMouseMove = function(e) {
	haxe_ui_backend_heaps_MouseHelper.currentMouseX = e.relX / haxe_ui_Toolkit.get_scaleX();
	haxe_ui_backend_heaps_MouseHelper.currentMouseY = e.relY / haxe_ui_Toolkit.get_scaleY();
	var list = haxe_ui_backend_heaps_MouseHelper._callbacks.h["mousemove"];
	if(list == null || list.length == 0) {
		return;
	}
	list = list.slice();
	list.reverse();
	var event = new haxe_ui_events_MouseEvent("mousemove");
	event._originalEvent = e;
	event.screenX = e.relX / haxe_ui_Toolkit.get_scaleX();
	event.screenY = e.relY / haxe_ui_Toolkit.get_scaleY();
	var _g = 0;
	while(_g < list.length) {
		var l = list[_g];
		++_g;
		l(event);
		if(event.canceled) {
			break;
		}
	}
};
haxe_ui_backend_heaps_MouseHelper.onMouseDown = function(e) {
	var list = haxe_ui_backend_heaps_MouseHelper._callbacks.h["mousedown"];
	if(list == null || list.length == 0) {
		return;
	}
	list = list.slice();
	list.reverse();
	var event = new haxe_ui_events_MouseEvent("mousedown");
	event._originalEvent = e;
	event.screenX = e.relX / haxe_ui_Toolkit.get_scaleX();
	event.screenY = e.relY / haxe_ui_Toolkit.get_scaleY();
	event.data = e.button;
	var _g = 0;
	while(_g < list.length) {
		var l = list[_g];
		++_g;
		l(event);
		if(event.canceled) {
			break;
		}
	}
};
haxe_ui_backend_heaps_MouseHelper.onMouseUp = function(e) {
	var list = haxe_ui_backend_heaps_MouseHelper._callbacks.h["mouseup"];
	if(list == null || list.length == 0) {
		return;
	}
	list = list.slice();
	list.reverse();
	var event = new haxe_ui_events_MouseEvent("mouseup");
	event._originalEvent = e;
	event.screenX = e.relX / haxe_ui_Toolkit.get_scaleX();
	event.screenY = e.relY / haxe_ui_Toolkit.get_scaleY();
	event.data = e.button;
	var _g = 0;
	while(_g < list.length) {
		var l = list[_g];
		++_g;
		l(event);
		if(event.canceled) {
			break;
		}
	}
};
haxe_ui_backend_heaps_MouseHelper.onMouseWheel = function(e) {
	var list = haxe_ui_backend_heaps_MouseHelper._callbacks.h["mousewheel"];
	if(list == null || list.length == 0) {
		return;
	}
	list = list.slice();
	list.reverse();
	var event = new haxe_ui_events_MouseEvent("mousewheel");
	event._originalEvent = e;
	event.delta = e.wheelDelta;
	var _g = 0;
	while(_g < list.length) {
		var l = list[_g];
		++_g;
		l(event);
		if(event.canceled) {
			break;
		}
	}
};
var haxe_ui_backend_heaps_SDFFonts = function() { };
$hxClasses["haxe.ui.backend.heaps.SDFFonts"] = haxe_ui_backend_heaps_SDFFonts;
haxe_ui_backend_heaps_SDFFonts.__name__ = "haxe.ui.backend.heaps.SDFFonts";
haxe_ui_backend_heaps_SDFFonts.get = function(name) {
	return haxe_ui_backend_heaps_SDFFonts._sdfFonts.h[name];
};
var haxe_ui_backend_heaps_ScreenUtils = function() { };
$hxClasses["haxe.ui.backend.heaps.ScreenUtils"] = haxe_ui_backend_heaps_ScreenUtils;
haxe_ui_backend_heaps_ScreenUtils.__name__ = "haxe.ui.backend.heaps.ScreenUtils";
haxe_ui_backend_heaps_ScreenUtils.__properties__ = {get_dpi:"get_dpi"};
haxe_ui_backend_heaps_ScreenUtils.get_dpi = function() {
	if(haxe_ui_backend_heaps_ScreenUtils._dpi != 0) {
		return haxe_ui_backend_heaps_ScreenUtils._dpi;
	}
	var div = window.document.createElement("div");
	div.style.width = "1in";
	div.style.height = "1in";
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	window.document.body.appendChild(div);
	var devicePixelRatio = window.devicePixelRatio;
	if(devicePixelRatio == null) {
		devicePixelRatio = 1;
	}
	haxe_ui_backend_heaps_ScreenUtils._dpi = div.offsetWidth * devicePixelRatio;
	haxe_ui_backend_heaps_ScreenUtils.removeElement(div);
	return haxe_ui_backend_heaps_ScreenUtils._dpi;
};
haxe_ui_backend_heaps_ScreenUtils.isRetinaDisplay = function() {
	if(haxe_ui_backend_heaps_ScreenUtils._isRetina == null) {
		var query = "(-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 192dpi)";
		if(window.matchMedia(query).matches) {
			haxe_ui_backend_heaps_ScreenUtils._isRetina = true;
		} else {
			haxe_ui_backend_heaps_ScreenUtils._isRetina = false;
		}
	}
	return haxe_ui_backend_heaps_ScreenUtils._isRetina;
};
haxe_ui_backend_heaps_ScreenUtils.removeElement = function(el) {
	if(el != null && el.parentElement != null) {
		el.parentElement.removeChild(el);
	}
};
var haxe_ui_backend_heaps_StyleHelper = function() { };
$hxClasses["haxe.ui.backend.heaps.StyleHelper"] = haxe_ui_backend_heaps_StyleHelper;
haxe_ui_backend_heaps_StyleHelper.__name__ = "haxe.ui.backend.heaps.StyleHelper";
haxe_ui_backend_heaps_StyleHelper.apply = function(c,style,w,h) {
	if(w <= 0 || h <= 0) {
		return;
	}
	var container = c.getChildAt(0);
	if(container == null) {
		return;
	}
	var borderSize = new haxe_ui_geom_Rectangle();
	borderSize.left = style.borderLeftSize;
	borderSize.top = style.borderTopSize;
	borderSize.set_right(style.borderRightSize);
	borderSize.set_bottom(style.borderBottomSize);
	var borderColor = new hxd_clipper_Rect();
	borderColor.left = style.borderLeftColor;
	borderColor.top = style.borderTopColor;
	borderColor.right = style.borderRightColor;
	borderColor.bottom = style.borderBottomColor;
	var backgroundAlpha = 1;
	if(style.backgroundOpacity != null) {
		backgroundAlpha = style.backgroundOpacity;
	}
	var borderAlpha = 1;
	if(style.borderOpacity != null) {
		borderAlpha = style.borderOpacity;
	}
	var styleGraphics = null;
	if(container.children.length == 0) {
		styleGraphics = new h2d_Graphics();
		container.addChildAt(styleGraphics,0);
	} else {
		styleGraphics = js_Boot.__cast(container.getChildAt(0) , h2d_Graphics);
	}
	styleGraphics.clear();
	var borderRadius = 0;
	if(style.borderRadius != null && style.borderRadius > 0) {
		borderRadius = style.borderRadius + 1;
	}
	if(style.backgroundColor != null && backgroundAlpha > 0) {
		if(style.backgroundColorEnd != null && style.backgroundColor != style.backgroundColorEnd) {
			var gradientType = "vertical";
			if(style.backgroundGradientStyle != null) {
				gradientType = style.backgroundGradientStyle;
			}
			var gradientSize = 256;
			if(borderRadius == 0) {
				if(gradientType == "vertical" || gradientType == "horizontal") {
					var width = w - borderSize.get_right() - borderSize.left;
					var height = h - borderSize.get_bottom() - borderSize.top;
					var tile = haxe_ui_backend_heaps_TileCache.getGradient(gradientType,style.backgroundColor,style.backgroundColorEnd,gradientSize,backgroundAlpha * 255 | 0);
					styleGraphics.beginTileFill(borderSize.left,borderSize.top,width / gradientSize,height / gradientSize,tile);
					styleGraphics.drawRect(borderSize.left,borderSize.top,width,height);
					styleGraphics.endFill();
				}
			} else {
				var width = w - borderSize.get_right() - borderSize.left;
				var height = h - borderSize.get_bottom() - borderSize.top;
				var tile = haxe_ui_backend_heaps_TileCache.getGradient(gradientType,style.backgroundColor,style.backgroundColorEnd,gradientSize,backgroundAlpha * 255 | 0);
				styleGraphics.beginTileFill(borderSize.left,borderSize.top,width / gradientSize,height / gradientSize,tile);
				haxe_ui_backend_heaps_StyleHelper.drawRoundedBackground(styleGraphics,w,h,borderSize,borderRadius);
				styleGraphics.endFill();
			}
		} else if(borderRadius == 0) {
			styleGraphics.beginFill(style.backgroundColor,backgroundAlpha);
			styleGraphics.drawRect(borderSize.left,borderSize.top,w - borderSize.get_right() - borderSize.left,h - borderSize.get_bottom() - borderSize.top);
			styleGraphics.endFill();
		} else {
			styleGraphics.beginFill(style.backgroundColor,backgroundAlpha);
			haxe_ui_backend_heaps_StyleHelper.drawRoundedBackground(styleGraphics,w,h,borderSize,borderRadius);
			styleGraphics.endFill();
		}
	}
	if(style.backgroundImage != null) {
		haxe_ui_Toolkit.get_assets().getImage(haxe_ui_util_Variant.toString(style.backgroundImage),function(imageInfo) {
			var bgImageGraphics = null;
			if(container.children.length == 1) {
				bgImageGraphics = new h2d_Graphics();
				container.addChildAt(bgImageGraphics,1);
			} else {
				bgImageGraphics = js_Boot.__cast(container.getChildAt(1) , h2d_Graphics);
			}
			bgImageGraphics.clear();
			var tile = haxe_ui_backend_heaps_TileCache.get(haxe_ui_util_Variant.toString(style.backgroundImage));
			if(tile == null) {
				tile = haxe_ui_backend_heaps_TileCache.set(haxe_ui_util_Variant.toString(style.backgroundImage),h2d_Tile.fromBitmap(imageInfo.data));
			}
			var trc = new haxe_ui_geom_Rectangle(0,0,imageInfo.width,imageInfo.height);
			if(style.backgroundImageClipTop != null && style.backgroundImageClipLeft != null && style.backgroundImageClipBottom != null && style.backgroundImageClipRight != null) {
				trc = new haxe_ui_geom_Rectangle(style.backgroundImageClipLeft,style.backgroundImageClipTop,style.backgroundImageClipRight - style.backgroundImageClipLeft,style.backgroundImageClipBottom - style.backgroundImageClipTop);
			}
			var slice = null;
			if(style.backgroundImageSliceTop != null && style.backgroundImageSliceLeft != null && style.backgroundImageSliceBottom != null && style.backgroundImageSliceRight != null) {
				slice = new haxe_ui_geom_Rectangle(style.backgroundImageSliceLeft,style.backgroundImageSliceTop,style.backgroundImageSliceRight - style.backgroundImageSliceLeft,style.backgroundImageSliceBottom - style.backgroundImageSliceTop);
			}
			if(trc != null) {
				tile = tile.sub(trc.left,trc.top,trc.width,trc.height);
			}
			if(slice != null) {
				var rects = haxe_ui_geom_Slice9.buildRects(w,h,trc.width,trc.height,slice);
				var srcRects = rects.src;
				var dstRects = rects.dst;
				if(style.backgroundImageRepeat == "repeat") {
					var scaleX = dstRects[4].width / (srcRects[4].width * Math.ceil(dstRects[4].width / srcRects[4].width));
					var scaleY = dstRects[4].height / (srcRects[4].height * Math.ceil(dstRects[4].height / srcRects[4].height));
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[0],dstRects[0]);
					haxe_ui_backend_heaps_StyleHelper.paintTileRepeat(bgImageGraphics,tile,srcRects[1],scaleX,1,dstRects[1]);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[2],dstRects[2]);
					var fh = srcRects[3];
					fh.set_bottom(fh.get_bottom() - 1);
					haxe_ui_backend_heaps_StyleHelper.paintTileRepeat(bgImageGraphics,tile,srcRects[3],1,scaleY,dstRects[3]);
					var fh = srcRects[4];
					fh.set_bottom(fh.get_bottom() - 1);
					haxe_ui_backend_heaps_StyleHelper.paintTileRepeat(bgImageGraphics,tile,srcRects[4],scaleX,scaleY,dstRects[4]);
					var fh = srcRects[5];
					fh.set_bottom(fh.get_bottom() - 1);
					haxe_ui_backend_heaps_StyleHelper.paintTileRepeat(bgImageGraphics,tile,srcRects[5],1,scaleY,dstRects[5]);
					var fh = dstRects[6];
					fh.set_bottom(fh.get_bottom() + 1);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[6],dstRects[6]);
					var fh = dstRects[7];
					fh.set_bottom(fh.get_bottom() + 1);
					haxe_ui_backend_heaps_StyleHelper.paintTileRepeat(bgImageGraphics,tile,srcRects[7],scaleX,1,dstRects[7]);
					var fh = dstRects[8];
					fh.set_bottom(fh.get_bottom() + 1);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[8],dstRects[8]);
				} else {
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[0],dstRects[0]);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[1],dstRects[1]);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[2],dstRects[2]);
					var fh = srcRects[3];
					fh.set_bottom(fh.get_bottom() - 1);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[3],dstRects[3]);
					var fh = srcRects[4];
					fh.set_bottom(fh.get_bottom() - 1);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[4],dstRects[4]);
					var fh = srcRects[5];
					fh.set_bottom(fh.get_bottom() - 1);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[5],dstRects[5]);
					var fh = dstRects[6];
					fh.set_bottom(fh.get_bottom() + 1);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[6],dstRects[6]);
					var fh = dstRects[7];
					fh.set_bottom(fh.get_bottom() + 1);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[7],dstRects[7]);
					var fh = dstRects[8];
					fh.set_bottom(fh.get_bottom() + 1);
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,srcRects[8],dstRects[8]);
				}
			} else {
				var scaleX = 1;
				var scaleY = 1;
				if(style.backgroundImageRepeat == null || style.backgroundImageRepeat == "stretch") {
					scaleX = w / trc.width;
					scaleY = h / trc.height;
				} else {
					if(style.backgroundWidth != null) {
						scaleX = style.backgroundWidth / trc.width;
					} else if(style.backgroundWidthPercent != null) {
						scaleX = w / trc.width * style.backgroundWidthPercent / 100;
					}
					if(style.backgroundHeight != null) {
						scaleY = style.backgroundHeight / trc.height;
					} else if(style.backgroundHeightPercent != null) {
						scaleY = h / trc.height * style.backgroundHeightPercent / 100;
					}
				}
				if(style.backgroundImageRepeat == "repeat") {
					haxe_ui_backend_heaps_StyleHelper.paintTileRepeat(bgImageGraphics,tile,trc,scaleX,scaleY,new haxe_ui_geom_Rectangle(0,0,w,h));
				} else {
					haxe_ui_backend_heaps_StyleHelper.paintTile(bgImageGraphics,tile,trc,new haxe_ui_geom_Rectangle(0,0,trc.width * scaleX,trc.height * scaleY));
				}
			}
		});
	}
	if(borderAlpha > 0) {
		if(borderRadius == 0) {
			if(style.borderLeftSize != null && style.borderLeftSize > 0) {
				styleGraphics.lineStyle();
				styleGraphics.beginFill(borderColor.left,borderAlpha);
				styleGraphics.addVertex(0,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
				var x = borderSize.left;
				var y = borderSize.top;
				styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
				var x = borderSize.left;
				var y = h - borderSize.get_bottom();
				styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
				styleGraphics.addVertex(0,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
				styleGraphics.endFill();
			}
			if(style.borderRightSize != null && style.borderRightSize > 0) {
				styleGraphics.lineStyle();
				styleGraphics.beginFill(borderColor.right,borderAlpha);
				styleGraphics.addVertex(w,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
				styleGraphics.addVertex(w,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
				var x = w - borderSize.get_right();
				var y = h - borderSize.get_bottom();
				styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
				var x = w - borderSize.get_right();
				var y = borderSize.top;
				styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
				styleGraphics.endFill();
			}
			if(style.borderTopSize != null && style.borderTopSize > 0) {
				styleGraphics.lineStyle();
				styleGraphics.beginFill(borderColor.top,borderAlpha);
				styleGraphics.addVertex(0,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
				styleGraphics.addVertex(w,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
				var x = w - borderSize.get_right();
				var y = borderSize.top;
				styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
				var x = borderSize.left;
				var y = borderSize.top;
				styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
				styleGraphics.endFill();
			}
			if(style.borderBottomSize != null && style.borderBottomSize > 0) {
				styleGraphics.lineStyle();
				styleGraphics.beginFill(borderColor.bottom,borderAlpha);
				styleGraphics.addVertex(0,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
				var x = borderSize.left;
				var y = h - borderSize.get_bottom();
				styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
				var x = w - borderSize.get_right();
				var y = h - borderSize.get_bottom();
				styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
				styleGraphics.addVertex(w,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
				styleGraphics.endFill();
			}
		} else {
			if(borderSize.left != 0) {
				if(borderSize.left == borderSize.top) {
					if(borderRadius <= borderSize.left) {
						styleGraphics.beginFill(borderColor.left,borderAlpha);
						styleGraphics.drawPie(borderRadius,borderRadius,borderRadius,Math.PI,Math.PI * 0.25,10);
						styleGraphics.addVertex(0,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						styleGraphics.addVertex(borderRadius,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h * 0.5;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
						styleGraphics.beginFill(borderColor.top,borderAlpha);
						styleGraphics.drawPie(borderRadius,borderRadius,borderRadius,Math.PI * 1.25,Math.PI * 0.25,10);
						styleGraphics.addVertex(borderRadius,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.addVertex(borderRadius,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
					} else {
						var innerRadius = borderRadius - borderSize.left;
						styleGraphics.beginFill(borderColor.left,borderAlpha);
						styleGraphics.drawPieInner(borderRadius,borderRadius,borderRadius,innerRadius,Math.PI,Math.PI * 0.25,10);
						styleGraphics.addVertex(0,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						styleGraphics.addVertex(x,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h * 0.5;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
						styleGraphics.beginFill(borderColor.top,borderAlpha);
						styleGraphics.drawPieInner(borderRadius,borderRadius,borderRadius,innerRadius,Math.PI * 1.25,Math.PI * 0.25,10);
						styleGraphics.addVertex(borderRadius,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = borderSize.top;
						styleGraphics.addVertex(borderRadius,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
					}
				} else {
					styleGraphics.beginFill(borderColor.left,borderAlpha);
					if(borderRadius <= borderSize.left || borderRadius <= borderSize.top) {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve(styleGraphics,borderRadius,borderRadius,borderRadius,Math.PI,Math.PI * 0.5 * borderSize.left / (borderSize.left + borderSize.top));
						var x = borderSize.left;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h * 0.5;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					} else {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner(styleGraphics,borderRadius,borderRadius,borderRadius,borderRadius - borderSize.left,borderRadius - borderSize.top,Math.PI,Math.PI * 0.5 * borderSize.left / (borderSize.left + borderSize.top));
						styleGraphics.flush();
						styleGraphics.addVertex(0,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						styleGraphics.addVertex(x,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h * 0.5;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					}
					styleGraphics.endFill();
				}
				if(borderSize.left == borderSize.get_bottom()) {
					if(borderRadius <= borderSize.left) {
						styleGraphics.beginFill(borderColor.left,borderAlpha);
						styleGraphics.drawPie(borderRadius,h - borderRadius,borderRadius,Math.PI * 0.75,Math.PI * 0.25,10);
						var y = h * 0.5;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderRadius;
						styleGraphics.addVertex(borderRadius,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderRadius;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
						styleGraphics.beginFill(borderColor.bottom,borderAlpha);
						styleGraphics.drawPie(borderRadius,h - borderRadius,borderRadius,Math.PI * 0.5,Math.PI * 0.25,10);
						var x = w * 0.5;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderRadius;
						styleGraphics.addVertex(borderRadius,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.addVertex(borderRadius,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
					} else {
						var innerRadius = borderRadius - borderSize.left;
						styleGraphics.beginFill(borderColor.left,borderAlpha);
						styleGraphics.drawPieInner(borderRadius,h - borderRadius,borderRadius,innerRadius,Math.PI * 0.75,Math.PI * 0.25,10);
						var y = h * 0.5;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h - borderRadius;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderRadius;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
						styleGraphics.beginFill(borderColor.bottom,borderAlpha);
						styleGraphics.drawPieInner(borderRadius,h - borderRadius,borderRadius,innerRadius,Math.PI * 0.5,Math.PI * 0.25,10);
						var x = w * 0.5;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(borderRadius,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.addVertex(borderRadius,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
					}
				} else {
					styleGraphics.beginFill(borderColor.left,borderAlpha);
					if(borderRadius <= borderSize.left || borderRadius <= borderSize.get_bottom()) {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve(styleGraphics,borderRadius,h - borderRadius,borderRadius,Math.PI * (0.5 + 0.5 * borderSize.get_bottom() / (borderSize.left + borderSize.get_bottom())),Math.PI * 0.5 * borderSize.left / (borderSize.left + borderSize.get_bottom()));
						var y = h * 0.5;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					} else {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner(styleGraphics,borderRadius,h - borderRadius,borderRadius,borderRadius - borderSize.left,borderRadius - borderSize.get_bottom(),Math.PI * (0.5 + 0.5 * borderSize.get_bottom() / (borderSize.left + borderSize.get_bottom())),Math.PI * 0.5 * borderSize.left / (borderSize.left + borderSize.get_bottom()));
						var y = h * 0.5;
						styleGraphics.flush();
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = h - borderRadius;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderRadius;
						styleGraphics.addVertex(0,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,0 * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,0 * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					}
					styleGraphics.endFill();
				}
			}
			if(borderSize.top != 0) {
				if(borderSize.left != borderSize.top) {
					styleGraphics.beginFill(borderColor.top,borderAlpha);
					if(borderRadius <= borderSize.left || borderRadius <= borderSize.top) {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve(styleGraphics,borderRadius,borderRadius,borderRadius,Math.PI * (1 + 0.5 * borderSize.left / (borderSize.left + borderSize.top)),Math.PI * 0.5 * borderSize.top / (borderSize.left + borderSize.top));
						var x = w * 0.5;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = borderSize.left;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					} else {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner(styleGraphics,borderRadius,borderRadius,borderRadius,borderRadius - borderSize.left,borderRadius - borderSize.top,Math.PI * (1 + 0.5 * borderSize.left / (borderSize.left + borderSize.top)),Math.PI * 0.5 * borderSize.top / (borderSize.left + borderSize.top));
						styleGraphics.flush();
						styleGraphics.addVertex(borderRadius,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = borderSize.top;
						styleGraphics.addVertex(borderRadius,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					}
					styleGraphics.endFill();
				}
				if(borderSize.get_right() != borderSize.top) {
					styleGraphics.beginFill(borderColor.top,borderAlpha);
					if(borderRadius <= borderSize.get_right() || borderRadius <= borderSize.top) {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve(styleGraphics,w - borderRadius,borderRadius,borderRadius,Math.PI * -0.5,Math.PI * 0.5 * borderSize.top / (borderSize.get_right() + borderSize.top));
						var x = w - borderSize.get_right();
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
					} else {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner(styleGraphics,w - borderRadius,borderRadius,borderRadius,borderRadius - borderSize.get_right(),borderRadius - borderSize.top,Math.PI * -0.5,Math.PI * 0.5 * borderSize.top / (borderSize.get_right() + borderSize.top));
						var x = w - borderRadius;
						styleGraphics.flush();
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					}
					styleGraphics.endFill();
				}
			}
			if(borderSize.get_right() != 0) {
				if(borderSize.get_right() == borderSize.top) {
					if(borderRadius <= borderSize.get_right()) {
						styleGraphics.beginFill(borderColor.right,borderAlpha);
						styleGraphics.drawPie(w - borderRadius,borderRadius,borderRadius,Math.PI * -0.25,Math.PI * 0.25,10);
						styleGraphics.addVertex(w,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						styleGraphics.addVertex(x,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h * 0.5;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
						styleGraphics.beginFill(borderColor.top,borderAlpha);
						styleGraphics.drawPie(w - borderRadius,borderRadius,borderRadius,Math.PI * -0.5,Math.PI * 0.25,10);
						var x = w - borderRadius;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						styleGraphics.addVertex(x,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
					} else {
						var innerRadius = borderRadius - borderSize.get_right();
						styleGraphics.beginFill(borderColor.right,borderAlpha);
						styleGraphics.drawPieInner(w - borderRadius,borderRadius,borderRadius,innerRadius,Math.PI * -0.25,Math.PI * 0.25,10);
						styleGraphics.addVertex(w,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						styleGraphics.addVertex(x,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h * 0.5;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
						styleGraphics.beginFill(borderColor.top,borderAlpha);
						styleGraphics.drawPieInner(w - borderRadius,borderRadius,borderRadius,innerRadius,Math.PI * -0.5,Math.PI * 0.25,10);
						var x = w - borderRadius;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						styleGraphics.addVertex(x,0,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + 0 * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + 0 * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
					}
				} else {
					styleGraphics.beginFill(borderColor.right,borderAlpha);
					if(borderRadius <= borderSize.get_right() || borderRadius <= borderSize.top) {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve(styleGraphics,w - borderRadius,borderRadius,borderRadius,Math.PI * (-0.5 + 0.5 * borderSize.top / (borderSize.get_right() + borderSize.top)),Math.PI * 0.5 * borderSize.get_right() / (borderSize.get_right() + borderSize.top));
						var y = h * 0.5;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = borderSize.top;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					} else {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner(styleGraphics,w - borderRadius,borderRadius,borderRadius,borderRadius - borderSize.get_right(),borderRadius - borderSize.top,Math.PI * (-0.5 + 0.5 * borderSize.top / (borderSize.get_right() + borderSize.top)),Math.PI * 0.5 * borderSize.get_right() / (borderSize.get_right() + borderSize.top));
						styleGraphics.flush();
						styleGraphics.addVertex(w,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						styleGraphics.addVertex(x,borderRadius,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + borderRadius * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + borderRadius * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h * 0.5;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					}
					styleGraphics.endFill();
				}
				if(borderSize.get_right() == borderSize.get_bottom()) {
					if(borderRadius <= borderSize.get_right()) {
						styleGraphics.beginFill(borderColor.right,borderAlpha);
						styleGraphics.drawPie(w - borderRadius,h - borderRadius,borderRadius,0,Math.PI * 0.25,10);
						var y = h * 0.5;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						var y = h - borderRadius;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderRadius;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
						styleGraphics.beginFill(borderColor.bottom,borderAlpha);
						styleGraphics.drawPie(w - borderRadius,h - borderRadius,borderRadius,Math.PI * 0.25,Math.PI * 0.25,10);
						var x = w * 0.5;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						var y = h - borderRadius;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
					} else {
						var innerRadius = borderRadius - borderSize.get_right();
						styleGraphics.beginFill(borderColor.right,borderAlpha);
						styleGraphics.drawPieInner(w - borderRadius,h - borderRadius,borderRadius,innerRadius,0,Math.PI * 0.25,10);
						var y = h * 0.5;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h - borderRadius;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderRadius;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
						styleGraphics.beginFill(borderColor.bottom,borderAlpha);
						styleGraphics.drawPieInner(w - borderRadius,h - borderRadius,borderRadius,innerRadius,Math.PI * 0.25,Math.PI * 0.25,10);
						var x = w * 0.5;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						styleGraphics.endFill();
					}
				} else {
					styleGraphics.beginFill(borderColor.right,borderAlpha);
					if(borderRadius <= borderSize.get_right() || borderRadius <= borderSize.get_bottom()) {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve(styleGraphics,w - borderRadius,h - borderRadius,borderRadius,0,Math.PI * 0.5 * borderSize.get_right() / (borderSize.get_right() + borderSize.get_bottom()));
						var x = w - borderSize.get_right();
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h * 0.5;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					} else {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner(styleGraphics,w - borderRadius,h - borderRadius,borderRadius,borderRadius - borderSize.get_right(),borderRadius - borderSize.get_bottom(),0,Math.PI * 0.5 * borderSize.get_right() / (borderSize.get_right() + borderSize.get_bottom()));
						var y = h * 0.5;
						styleGraphics.flush();
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h * 0.5;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h - borderRadius;
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderRadius;
						styleGraphics.addVertex(w,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,w * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,w * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					}
					styleGraphics.endFill();
				}
			}
			if(borderSize.get_bottom() != 0) {
				if(borderSize.left != borderSize.get_bottom()) {
					styleGraphics.beginFill(borderColor.bottom,borderAlpha);
					if(borderRadius <= borderSize.left || borderRadius <= borderSize.get_bottom()) {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve(styleGraphics,borderRadius,h - borderRadius,borderRadius,Math.PI * 0.5,Math.PI * 0.5 * borderSize.get_bottom() / (borderSize.left + borderSize.get_bottom()));
						var x = borderSize.left;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
					} else {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner(styleGraphics,borderRadius,h - borderRadius,borderRadius,borderRadius - borderSize.left,borderRadius - borderSize.get_bottom(),Math.PI * 0.5,Math.PI * 0.5 * borderSize.get_bottom() / (borderSize.left + borderSize.get_bottom()));
						var x = w * 0.5;
						styleGraphics.flush();
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(borderRadius,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						styleGraphics.addVertex(borderRadius,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,borderRadius * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,borderRadius * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
					}
					styleGraphics.endFill();
				}
				if(borderSize.get_right() != borderSize.get_bottom()) {
					styleGraphics.beginFill(borderColor.bottom,borderAlpha);
					if(borderRadius <= borderSize.get_right() || borderRadius <= borderSize.get_bottom()) {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve(styleGraphics,w - borderRadius,h - borderRadius,borderRadius,Math.PI * 0.5 * borderSize.get_right() / (borderSize.get_right() + borderSize.get_bottom()),Math.PI * 0.5 * borderSize.get_bottom() / (borderSize.get_right() + borderSize.get_bottom()));
						var x = w * 0.5;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderSize.get_right();
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
					} else {
						haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner(styleGraphics,w - borderRadius,h - borderRadius,borderRadius,borderRadius - borderSize.get_right(),borderRadius - borderSize.get_bottom(),Math.PI * 0.5 * borderSize.get_right() / (borderSize.get_right() + borderSize.get_bottom()),Math.PI * 0.5 * borderSize.get_bottom() / (borderSize.get_right() + borderSize.get_bottom()));
						var x = w * 0.5;
						styleGraphics.flush();
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
						var x = w * 0.5;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						var y = h - borderSize.get_bottom();
						styleGraphics.addVertex(x,y,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + y * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + y * styleGraphics.md + styleGraphics.my);
						var x = w - borderRadius;
						styleGraphics.addVertex(x,h,styleGraphics.curR,styleGraphics.curG,styleGraphics.curB,styleGraphics.curA,x * styleGraphics.ma + h * styleGraphics.mc + styleGraphics.mx,x * styleGraphics.mb + h * styleGraphics.md + styleGraphics.my);
					}
					styleGraphics.endFill();
				}
			}
		}
	}
};
haxe_ui_backend_heaps_StyleHelper.paintTile = function(g,tile,src,dst) {
	var scaleX = dst.width / src.width;
	var scaleY = dst.height / src.height;
	var sub = tile.sub(src.left * scaleX,src.top * scaleY,src.width,src.height);
	g.beginTileFill(dst.left,dst.top,scaleX,scaleY,sub);
	g.drawRect(dst.left,dst.top,dst.width,dst.height);
	g.endFill();
};
haxe_ui_backend_heaps_StyleHelper.paintTileRepeat = function(g,tile,src,srcScaleX,srcScaleY,dst) {
	var scaledw = srcScaleX * src.width;
	var scaledh = srcScaleY * src.height;
	var wCount = dst.width / scaledw;
	var hCount = dst.height / scaledh;
	var iwCount = Math.ceil(wCount);
	var ihCount = Math.ceil(hCount);
	var lastw = iwCount - 1;
	var lasth = ihCount - 1;
	var _g = 0;
	var _g1 = lastw;
	while(_g < _g1) {
		var iwCurr = _g++;
		var _g2 = 0;
		var _g3 = lasth;
		while(_g2 < _g3) {
			var ihCurr = _g2++;
			haxe_ui_backend_heaps_StyleHelper.paintTile(g,tile,src,new haxe_ui_geom_Rectangle(dst.left + iwCurr * scaledw,dst.top + ihCurr * scaledh,scaledw,scaledh));
		}
	}
	var localRect = src.copy();
	var clippedw = (wCount - lastw) * scaledw;
	localRect.width = (wCount - lastw) * src.width;
	var _g = 0;
	var _g1 = lasth;
	while(_g < _g1) {
		var ihCurr = _g++;
		haxe_ui_backend_heaps_StyleHelper.paintTile(g,tile,localRect,new haxe_ui_geom_Rectangle(dst.left + lastw * scaledw,dst.top + ihCurr * scaledh,clippedw,scaledh));
	}
	var clippedh = (hCount - lasth) * scaledh;
	localRect.width = src.width;
	localRect.height = (hCount - lasth) * src.height;
	var _g = 0;
	var _g1 = lastw;
	while(_g < _g1) {
		var iwCurr = _g++;
		haxe_ui_backend_heaps_StyleHelper.paintTile(g,tile,localRect,new haxe_ui_geom_Rectangle(dst.left + iwCurr * scaledw,dst.top + lasth * scaledh,scaledw,clippedh));
	}
	localRect.width = (wCount - lastw) * src.width;
	if(localRect.width > 1 && localRect.height > 1) {
		haxe_ui_backend_heaps_StyleHelper.paintTile(g,tile,localRect,new haxe_ui_geom_Rectangle(dst.left + lastw * scaledw,dst.top + lasth * scaledh,clippedw,clippedh));
	}
};
haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCorner = function(graphics,cx,cy,radius,startInnerRadius,endInnerRadius,angleStart,angleLength) {
	var nsegments = 10;
	var angleOffset = angleLength / (nsegments - 1);
	var x = cx + Math.cos(angleStart) * startInnerRadius;
	var y = cy + Math.sin(angleStart) * endInnerRadius;
	graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	var a;
	var _g = 0;
	var _g1 = nsegments;
	while(_g < _g1) {
		var i = _g++;
		a = i * angleOffset + angleStart;
		var x = cx + Math.cos(a) * radius;
		var y = cy + Math.sin(a) * radius;
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	}
	var x = cx + Math.cos(angleStart + angleLength) * startInnerRadius;
	var y = cy + Math.sin(angleStart + angleLength) * endInnerRadius;
	graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	var _g = 0;
	var _g1 = nsegments;
	while(_g < _g1) {
		var i = _g++;
		a = (nsegments - 1 - i) * angleOffset + angleStart;
		var x = cx + Math.cos(a) * startInnerRadius;
		var y = cy + Math.sin(a) * endInnerRadius;
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	}
};
haxe_ui_backend_heaps_StyleHelper.drawUnevenBordersCurve = function(graphics,cx,cy,radius,angleStart,angleLength) {
	var nsegments = 10;
	var angleOffset = angleLength / (nsegments - 1);
	var a;
	var _g = 0;
	var _g1 = nsegments;
	while(_g < _g1) {
		var i = _g++;
		a = i * angleOffset + angleStart;
		var x = cx + Math.cos(a) * radius;
		var y = cy + Math.sin(a) * radius;
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	}
};
haxe_ui_backend_heaps_StyleHelper.drawRoundedBackground = function(graphics,w,h,borderSize,borderRadius) {
	if(borderRadius <= borderSize.left || borderRadius <= borderSize.top) {
		var x = borderSize.left;
		var y = borderSize.top;
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	} else {
		var x = borderSize.left;
		graphics.addVertex(x,borderRadius,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + borderRadius * graphics.mc + graphics.mx,x * graphics.mb + borderRadius * graphics.md + graphics.my);
		var startRadius = borderRadius - borderSize.left;
		var endRadius = borderRadius - borderSize.top;
		var angleStart = Math.PI;
		var nsegments = startRadius != endRadius ? 200 : 100;
		var angleOffset = Math.PI * 0.5 / (nsegments - 1);
		var a;
		var _g = 0;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			a = i * angleOffset + angleStart;
			var x = borderRadius + Math.cos(a) * startRadius;
			var y = borderRadius + Math.sin(a) * endRadius;
			graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
		}
	}
	if(borderRadius <= borderSize.get_right() || borderRadius <= borderSize.top) {
		var x = w - borderSize.get_right();
		var y = borderSize.top;
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	} else {
		var x = w - borderRadius;
		var y = borderSize.top;
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
		var cx = w - borderRadius;
		var startRadius = borderRadius - borderSize.get_right();
		var endRadius = borderRadius - borderSize.top;
		var angleStart = -Math.PI * 0.5;
		var nsegments = startRadius != endRadius ? 200 : 100;
		var angleOffset = Math.PI * 0.5 / (nsegments - 1);
		var a;
		var _g = 0;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			a = i * angleOffset + angleStart;
			var x = cx + Math.cos(a) * startRadius;
			var y = borderRadius + Math.sin(a) * endRadius;
			graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
		}
	}
	if(borderRadius <= borderSize.get_right() || borderRadius <= borderSize.get_bottom()) {
		var x = w - borderSize.get_right();
		var y = h - borderSize.get_bottom();
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	} else {
		var x = w - borderSize.get_right();
		var y = h - borderRadius;
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
		var cx = w - borderRadius;
		var cy = h - borderRadius;
		var startRadius = borderRadius - borderSize.get_right();
		var endRadius = borderRadius - borderSize.get_bottom();
		var nsegments = startRadius != endRadius ? 200 : 100;
		var angleOffset = Math.PI * 0.5 / (nsegments - 1);
		var a;
		var _g = 0;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			a = i * angleOffset;
			var x = cx + Math.cos(a) * startRadius;
			var y = cy + Math.sin(a) * endRadius;
			graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
		}
	}
	if(borderRadius <= borderSize.left || borderRadius <= borderSize.get_bottom()) {
		var x = borderSize.left;
		var y = h - borderSize.get_bottom();
		graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
	} else {
		var y = h - borderSize.get_bottom();
		graphics.addVertex(borderRadius,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,borderRadius * graphics.ma + y * graphics.mc + graphics.mx,borderRadius * graphics.mb + y * graphics.md + graphics.my);
		var cy = h - borderRadius;
		var startRadius = borderRadius - borderSize.left;
		var endRadius = borderRadius - borderSize.get_bottom();
		var angleStart = Math.PI * 0.5;
		var nsegments = startRadius != endRadius ? 200 : 100;
		var angleOffset = Math.PI * 0.5 / (nsegments - 1);
		var a;
		var _g = 0;
		var _g1 = nsegments;
		while(_g < _g1) {
			var i = _g++;
			a = i * angleOffset + angleStart;
			var x = borderRadius + Math.cos(a) * startRadius;
			var y = cy + Math.sin(a) * endRadius;
			graphics.addVertex(x,y,graphics.curR,graphics.curG,graphics.curB,graphics.curA,x * graphics.ma + y * graphics.mc + graphics.mx,x * graphics.mb + y * graphics.md + graphics.my);
		}
	}
};
var haxe_ui_backend_heaps_TileCache = function() { };
$hxClasses["haxe.ui.backend.heaps.TileCache"] = haxe_ui_backend_heaps_TileCache;
haxe_ui_backend_heaps_TileCache.__name__ = "haxe.ui.backend.heaps.TileCache";
haxe_ui_backend_heaps_TileCache.set = function(resourceId,tile) {
	haxe_ui_backend_heaps_TileCache._cache.h[resourceId] = tile;
	return tile;
};
haxe_ui_backend_heaps_TileCache.get = function(resourceId) {
	return haxe_ui_backend_heaps_TileCache._cache.h[resourceId];
};
haxe_ui_backend_heaps_TileCache.getGradient = function(type,startCol,endCol,size,alpha) {
	if(alpha == null) {
		alpha = 255;
	}
	if(size == null) {
		size = 256;
	}
	var key = type + "_" + startCol + "_" + endCol + "_" + size + "_" + alpha;
	if(Object.prototype.hasOwnProperty.call(haxe_ui_backend_heaps_TileCache._cache.h,key)) {
		return haxe_ui_backend_heaps_TileCache._cache.h[key];
	}
	var alphaMask = alpha << 24;
	var arr = haxe_ui_util_ColorUtil.buildColorArray(startCol,endCol,size);
	var tile = null;
	if(type == "vertical") {
		var gradient = new hxd_BitmapData(1,size);
		var y = 0;
		var _g = 0;
		while(_g < arr.length) {
			var col = arr[_g];
			++_g;
			gradient.line(0,y,1,y,alphaMask | col);
			++y;
		}
		tile = h2d_Tile.fromBitmap(gradient);
	} else if(type == "horizontal") {
		var gradient = new hxd_BitmapData(size,1);
		var x = 0;
		var _g = 0;
		while(_g < arr.length) {
			var col = arr[_g];
			++_g;
			gradient.line(x,0,x,1,alphaMask | col);
			++x;
		}
		tile = h2d_Tile.fromBitmap(gradient);
	}
	return tile;
};
var haxe_ui_behaviours_Behaviours = function(component) {
	this._actualUpdateOrder = null;
	this._updateOrder = [];
	this._instances = new haxe_ds_StringMap();
	this._registry = new haxe_ds_StringMap();
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviours"] = haxe_ui_behaviours_Behaviours;
haxe_ui_behaviours_Behaviours.__name__ = "haxe.ui.behaviours.Behaviours";
haxe_ui_behaviours_Behaviours.prototype = {
	_component: null
	,_registry: null
	,_instances: null
	,register: function(id,cls,defaultValue) {
		var info = { id : id, cls : cls, defaultValue : defaultValue, isSet : false};
		this._registry.h[id] = info;
		HxOverrides.remove(this._updateOrder,id);
		this._updateOrder.push(id);
		this._actualUpdateOrder = null;
	}
	,replaceNative: function() {
		if(this._component.get_native() == false || this._component.get_hasNativeEntry() == false) {
			return;
		}
		var ids = [];
		var h = this._registry.h;
		var id_h = h;
		var id_keys = Object.keys(h);
		var id_length = id_keys.length;
		var id_current = 0;
		while(id_current < id_length) {
			var id = id_keys[id_current++];
			ids.push(id);
		}
		var _g = 0;
		while(_g < ids.length) {
			var id = ids[_g];
			++_g;
			var nativeProps = this._component.getNativeConfigProperties(".behaviour[id=" + id + "]");
			if(nativeProps != null && Object.prototype.hasOwnProperty.call(nativeProps.h,"class")) {
				var registered = this._registry.h[id];
				var name = nativeProps.h["class"];
				var info = { id : id, cls : $hxClasses[name], defaultValue : registered.defaultValue, config : nativeProps, isSet : false};
				this._registry.h[id] = info;
			}
		}
	}
	,validateData: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(js_Boot.__implements(b,haxe_ui_behaviours_IValidatingBehaviour)) {
				(js_Boot.__cast(b , haxe_ui_behaviours_IValidatingBehaviour)).validate();
			}
		}
	}
	,_updateOrder: null
	,set_updateOrder: function(value) {
		this._updateOrder = value;
		this._actualUpdateOrder = null;
		return value;
	}
	,_actualUpdateOrder: null
	,actualUpdateOrder: null
	,get_actualUpdateOrder: function() {
		if(this._actualUpdateOrder == null) {
			this._actualUpdateOrder = this._updateOrder.slice();
			var h = this._instances.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(this._actualUpdateOrder.indexOf(key) == -1) {
					this._actualUpdateOrder.push(key);
				}
			}
		}
		return this._actualUpdateOrder;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(b != null) {
				b.update();
			}
		}
	}
	,find: function(id,create) {
		if(create == null) {
			create = true;
		}
		var b = this._instances.h[id];
		if(b == null && create == true) {
			var info = this._registry.h[id];
			if(info != null) {
				b = Type.createInstance(info.cls,[this._component]);
				if(b != null) {
					b.config = info.config;
					b.id = id;
					this._instances.h[id] = b;
					this._actualUpdateOrder = null;
				} else {
					var c = js_Boot.getClass(this._component);
					haxe_Log.trace("WARNING: problem creating behaviour class '" + Std.string(info.cls) + "' for '" + c.__name__ + ":" + id + "'",{ fileName : "haxe/ui/behaviours/Behaviours.hx", lineNumber : 140, className : "haxe.ui.behaviours.Behaviours", methodName : "find"});
				}
			}
		}
		if(b == null) {
			throw haxe_Exception.thrown("behaviour " + id + " not found");
		}
		return b;
	}
	,_cache: null
	,cache: function() {
		this._cache = new haxe_ds_StringMap();
		var h = this._registry.h;
		var registeredKey_h = h;
		var registeredKey_keys = Object.keys(h);
		var registeredKey_length = registeredKey_keys.length;
		var registeredKey_current = 0;
		while(registeredKey_current < registeredKey_length) {
			var registeredKey = registeredKey_keys[registeredKey_current++];
			var v = this._registry.h[registeredKey].defaultValue;
			var instance = this._instances.h[registeredKey];
			if(instance != null) {
				v = instance.get();
			}
			if(v != null) {
				this._cache.h[registeredKey] = v;
			}
		}
	}
	,dispose: function() {
		this._component = null;
		this._registry = null;
		var h = this._instances.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var inst = this._instances.h[key];
			inst._component = null;
		}
		this._instances = null;
		this._cache = null;
		this._actualUpdateOrder = null;
		this._updateOrder = null;
	}
	,detatch: function() {
		var h = this._instances.h;
		var b_h = h;
		var b_keys = Object.keys(h);
		var b_length = b_keys.length;
		var b_current = 0;
		while(b_current < b_length) {
			var b = b_h[b_keys[b_current++]];
			b.detatch();
		}
		this._instances = new haxe_ds_StringMap();
	}
	,restore: function() {
		if(this._cache == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var v = this._cache.h[key];
			if(v != null) {
				this.set(key,v);
			}
		}
		this._cache = null;
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,setDynamic: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = haxe_ui_util_Variant.toDynamic((js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value);
			changed = v != value;
		}
		b.setDynamic(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,set: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = (js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value;
			changed = haxe_ui_util_Variant.neq(v,value);
		}
		b.set(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,softSet: function(id,value) {
		var b = this.find(id);
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			(js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value = value;
		}
	}
	,ready: function() {
		if(this._autoDispatch == null) {
			return;
		}
		var b = this._autoDispatch.keys();
		while(b.hasNext()) {
			var b1 = b.next();
			var changed = this._autoDispatch.h[b1.__id__];
			this.performAutoDispatch(b1,changed);
		}
		this._autoDispatch = null;
	}
	,_autoDispatch: null
	,performAutoDispatch: function(b,changed) {
		if(this._component.get_isReady() == false) {
			if(this._autoDispatch == null) {
				this._autoDispatch = new haxe_ds_ObjectMap();
			}
			this._autoDispatch.set(b,changed);
			return;
		}
		var autoDispatch = b.getConfigValue("autoDispatch",null);
		if(autoDispatch != null) {
			var arr = autoDispatch.split(".");
			var eventName = arr.pop().toLowerCase();
			var cls = arr.join(".");
			var event = Type.createInstance($hxClasses[cls],[eventName]);
			if(eventName != "change") {
				b._component.dispatch(event);
			} else if(changed == true || changed == null) {
				b._component.dispatch(event);
			}
		}
	}
	,get: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			var info = this._registry.h[id];
			if(info.isSet == false && info.defaultValue != null && js_Boot.getClass(b) == haxe_ui_behaviours_DefaultBehaviour) {
				v = info.defaultValue;
			} else {
				v = b.get();
			}
		}
		this.unlock();
		return v;
	}
	,getDynamic: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			v = b.getDynamic();
		}
		this.unlock();
		return v;
	}
	,call: function(id,param) {
		return this.find(id).call(param);
	}
	,applyDefaults: function() {
		var order = this._updateOrder.slice();
		var h = this._registry.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			if(order.indexOf(key) == -1) {
				order.push(key);
			}
		}
		var _g = 0;
		while(_g < order.length) {
			var key = order[_g];
			++_g;
			var r = this._registry.h[key];
			if(r.defaultValue != null) {
				this.set(key,r.defaultValue);
			}
		}
	}
	,__class__: haxe_ui_behaviours_Behaviours
	,__properties__: {get_actualUpdateOrder:"get_actualUpdateOrder",set_updateOrder:"set_updateOrder"}
};
var haxe_ui_behaviours_DynamicBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DynamicBehaviour"] = haxe_ui_behaviours_DynamicBehaviour;
haxe_ui_behaviours_DynamicBehaviour.__name__ = "haxe.ui.behaviours.DynamicBehaviour";
haxe_ui_behaviours_DynamicBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DynamicBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,getDynamic: function() {
		return this._value;
	}
	,setDynamic: function(value) {
		if(value == this._value) {
			return;
		}
		this._value = value;
	}
	,set: function(value) {
		this.setDynamic(haxe_ui_util_Variant.toDynamic(value));
	}
	,__class__: haxe_ui_behaviours_DynamicBehaviour
});
var haxe_ui_behaviours_DynamicDataBehaviour = function(component) {
	haxe_ui_behaviours_DynamicBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DynamicDataBehaviour"] = haxe_ui_behaviours_DynamicDataBehaviour;
haxe_ui_behaviours_DynamicDataBehaviour.__name__ = "haxe.ui.behaviours.DynamicDataBehaviour";
haxe_ui_behaviours_DynamicDataBehaviour.__interfaces__ = [haxe_ui_behaviours_IValidatingBehaviour];
haxe_ui_behaviours_DynamicDataBehaviour.__super__ = haxe_ui_behaviours_DynamicBehaviour;
haxe_ui_behaviours_DynamicDataBehaviour.prototype = $extend(haxe_ui_behaviours_DynamicBehaviour.prototype,{
	_dataInvalid: null
	,setDynamic: function(value) {
		if(value == this.getDynamic()) {
			return;
		}
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data",false);
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DynamicDataBehaviour
});
var haxe_ui_behaviours_InvalidatingBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.InvalidatingBehaviour"] = haxe_ui_behaviours_InvalidatingBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.__name__ = "haxe.ui.behaviours.InvalidatingBehaviour";
haxe_ui_behaviours_InvalidatingBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.invalidateComponent();
	}
	,__class__: haxe_ui_behaviours_InvalidatingBehaviour
});
var haxe_ui_behaviours_LayoutBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.LayoutBehaviour"] = haxe_ui_behaviours_LayoutBehaviour;
haxe_ui_behaviours_LayoutBehaviour.__name__ = "haxe.ui.behaviours.LayoutBehaviour";
haxe_ui_behaviours_LayoutBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_LayoutBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_behaviours_LayoutBehaviour
});
var haxe_ui_core_IValueComponent = function() { };
$hxClasses["haxe.ui.core.IValueComponent"] = haxe_ui_core_IValueComponent;
haxe_ui_core_IValueComponent.__name__ = "haxe.ui.core.IValueComponent";
haxe_ui_core_IValueComponent.__isInterface__ = true;
var haxe_ui_focus_IFocusable = function() { };
$hxClasses["haxe.ui.focus.IFocusable"] = haxe_ui_focus_IFocusable;
haxe_ui_focus_IFocusable.__name__ = "haxe.ui.focus.IFocusable";
haxe_ui_focus_IFocusable.__isInterface__ = true;
haxe_ui_focus_IFocusable.prototype = {
	get_focus: null
	,set_focus: null
	,get_allowFocus: null
	,set_allowFocus: null
	,get_autoFocus: null
	,get_disabled: null
	,__class__: haxe_ui_focus_IFocusable
	,__properties__: {get_disabled:"get_disabled",get_autoFocus:"get_autoFocus",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_core_InteractiveComponent = function() {
	this._autoFocus = true;
	this._allowFocus = true;
	this._focus = false;
	this.actionRepeatInterval = 100;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.core.InteractiveComponent"] = haxe_ui_core_InteractiveComponent;
haxe_ui_core_InteractiveComponent.__name__ = "haxe.ui.core.InteractiveComponent";
haxe_ui_core_InteractiveComponent.__interfaces__ = [haxe_ui_core_IValueComponent,haxe_ui_focus_IFocusable];
haxe_ui_core_InteractiveComponent.__super__ = haxe_ui_core_Component;
haxe_ui_core_InteractiveComponent.prototype = $extend(haxe_ui_core_Component.prototype,{
	actionRepeatInterval: null
	,_focus: null
	,get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this._focus = value;
		var eventType = null;
		if(this._focus == true) {
			eventType = "focusin";
			haxe_ui_focus_FocusManager.get_instance().set_focus(js_Boot.__cast(this , haxe_ui_focus_IFocusable));
			var scrollview = this.findScroller();
			if(scrollview != null) {
				scrollview.ensureVisible(this);
			}
		} else {
			eventType = "focusout";
			haxe_ui_focus_FocusManager.get_instance().set_focus(null);
		}
		this.invalidateComponent("data",false);
		this.dispatch(new haxe_ui_events_FocusEvent(eventType));
		return value;
	}
	,_allowFocus: null
	,get_allowFocus: function() {
		return this._allowFocus;
	}
	,set_allowFocus: function(value) {
		if(this._allowFocus == value) {
			return value;
		}
		this._allowFocus = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js_Boot.__implements(child,haxe_ui_focus_IFocusable)) {
				(js_Boot.__cast(child , haxe_ui_focus_IFocusable)).set_allowFocus(value);
			}
		}
		return value;
	}
	,_autoFocus: null
	,get_autoFocus: function() {
		return this._autoFocus;
	}
	,findScroller: function() {
		var view = null;
		var ref = this;
		while(ref != null) {
			if(js_Boot.__implements(ref,haxe_ui_core_IScrollView)) {
				view = js_Boot.__cast(ref , haxe_ui_core_IScrollView);
				break;
			}
			ref = ref.parentComponent;
		}
		return view;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("allowInteraction",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
	}
	,get_allowInteraction: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowInteraction"));
	}
	,set_allowInteraction: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowInteraction",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"allowInteraction"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_allowInteraction(this.get_allowInteraction());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_InteractiveComponent();
	}
	,__class__: haxe_ui_core_InteractiveComponent
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_allowInteraction:"set_allowInteraction",get_allowInteraction:"get_allowInteraction",get_autoFocus:"get_autoFocus",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"})
});
var haxe_ui_components_Button = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Button"] = haxe_ui_components_Button;
haxe_ui_components_Button.__name__ = "haxe.ui.components.Button";
haxe_ui_components_Button.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Button.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("easeInRepeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("remainPressed",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("toggle",haxe_ui_components__$Button_ToggleBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$Button_SelectedBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Button_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$Button_IconBehaviour);
		this.behaviours.register("componentGroup",haxe_ui_components__$Button_GroupBehaviour);
	}
	,get_repeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeater"));
		return value;
	}
	,get_repeatInterval: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeatInterval"));
		return value;
	}
	,get_easeInRepeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("easeInRepeater"));
	}
	,set_easeInRepeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("easeInRepeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"easeInRepeater"));
		return value;
	}
	,get_remainPressed: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("remainPressed"));
	}
	,set_remainPressed: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("remainPressed",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"remainPressed"));
		return value;
	}
	,get_toggle: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	,set_toggle: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("toggle",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"toggle"));
		return value;
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selected"));
		return value;
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("icon");
	}
	,set_icon: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,get_componentGroup: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"componentGroup",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"componentGroup"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:case 3:
			this.set_text(Std.string(value));
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_text(haxe_ui_util_Variant.toString(v));
			} else {
				this.set_text(value);
			}
			break;
		default:
			this.set_text(value);
		}
		return value;
	}
	,set_iconPosition: function(value) {
		if(this.get_customStyle().iconPosition == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().iconPosition = null;
		} else {
			this.get_customStyle().iconPosition = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		c.set_easeInRepeater(this.get_easeInRepeater());
		c.set_remainPressed(this.get_remainPressed());
		c.set_toggle(this.get_toggle());
		c.set_selected(this.get_selected());
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Button();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_ButtonEvents;
		this._compositeBuilderClass = haxe_ui_components_ButtonBuilder;
		this._defaultLayoutClass = haxe_ui_components_ButtonLayout;
	}
	,__class__: haxe_ui_components_Button
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{get_textAlign:"get_textAlign",set_iconPosition:"set_iconPosition",set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup",set_icon:"set_icon",get_icon:"get_icon",set_selected:"set_selected",get_selected:"get_selected",set_toggle:"set_toggle",get_toggle:"get_toggle",set_remainPressed:"set_remainPressed",get_remainPressed:"get_remainPressed",set_easeInRepeater:"set_easeInRepeater",get_easeInRepeater:"get_easeInRepeater",set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater"})
});
var haxe_ui_layouts_ILayout = function() { };
$hxClasses["haxe.ui.layouts.ILayout"] = haxe_ui_layouts_ILayout;
haxe_ui_layouts_ILayout.__name__ = "haxe.ui.layouts.ILayout";
haxe_ui_layouts_ILayout.__isInterface__ = true;
var haxe_ui_layouts_Layout = function() {
};
$hxClasses["haxe.ui.layouts.Layout"] = haxe_ui_layouts_Layout;
haxe_ui_layouts_Layout.__name__ = "haxe.ui.layouts.Layout";
haxe_ui_layouts_Layout.__interfaces__ = [haxe_ui_layouts_ILayout];
haxe_ui_layouts_Layout.prototype = {
	_component: null
	,get_component: function() {
		return this._component;
	}
	,set_component: function(value) {
		this._component = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponent(criteria,type,recursive,searchType);
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponents(styleName,type,maxDepth);
	}
	,refresh: function() {
		if(this._component != null && this._component.get_isReady() == true) {
			this.resizeChildren();
			this._component.handlePreReposition();
			this.repositionChildren();
			this._component.handlePostReposition();
		}
	}
	,autoSize: function() {
		if(this.get_component().get_isReady() == false) {
			return false;
		}
		var calculatedWidth = null;
		var calculatedHeight = null;
		if(this.get_component().get_autoWidth() == true || this.get_component().get_autoHeight() == true) {
			var size = this.calcAutoSize();
			if(this.get_component().get_autoWidth() == true) {
				calculatedWidth = size.width;
			}
			if(this.get_component().get_autoHeight() == true) {
				calculatedHeight = size.height;
			}
			this.get_component().resizeComponent(calculatedWidth,calculatedHeight);
		}
		if(calculatedWidth == null) {
			return calculatedHeight != null;
		} else {
			return true;
		}
	}
	,marginTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginTop == null) {
			return 0;
		}
		return child.get_style().marginTop;
	}
	,marginLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginLeft == null) {
			return 0;
		}
		return child.get_style().marginLeft;
	}
	,marginBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginBottom == null) {
			return 0;
		}
		return child.get_style().marginBottom;
	}
	,marginRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginRight == null) {
			return 0;
		}
		return child.get_style().marginRight;
	}
	,hidden: function(c) {
		if(c == null) {
			c = this.get_component();
		}
		return c.get_hidden();
	}
	,horizontalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().horizontalAlign == null) {
			return "left";
		}
		return child.get_style().horizontalAlign;
	}
	,verticalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().verticalAlign == null) {
			return "top";
		}
		return child.get_style().verticalAlign;
	}
	,fixedMinWidth: function(child) {
		var fixedMinWidth = false;
		if(child != null && child.get_style() != null && child.get_style().minWidth != null) {
			fixedMinWidth = child.get_componentWidth() <= child.get_style().minWidth;
		}
		return fixedMinWidth;
	}
	,fixedMinHeight: function(child) {
		var fixedMinHeight = false;
		if(child != null && child.get_style() != null && child.get_style().minHeight != null) {
			fixedMinHeight = child.get_componentHeight() <= child.get_style().minHeight;
		}
		return fixedMinHeight;
	}
	,borderSize: null
	,get_borderSize: function() {
		if(this._component.get_style() == null) {
			return 0;
		}
		var n = this._component.get_style().get_fullBorderSize();
		var tmp = n > 0;
		return n;
	}
	,paddingLeft: null
	,get_paddingLeft: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingLeft == null) {
			return 0;
		}
		return this._component.get_style().paddingLeft;
	}
	,paddingTop: null
	,get_paddingTop: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingTop == null) {
			return 0;
		}
		return this._component.get_style().paddingTop;
	}
	,paddingBottom: null
	,get_paddingBottom: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingBottom == null) {
			return 0;
		}
		return this._component.get_style().paddingBottom;
	}
	,paddingRight: null
	,get_paddingRight: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingRight == null) {
			return 0;
		}
		return this._component.get_style().paddingRight;
	}
	,horizontalSpacing: null
	,get_horizontalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().horizontalSpacing == null) {
			return 0;
		}
		return this._component.get_style().horizontalSpacing;
	}
	,verticalSpacing: null
	,get_verticalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().verticalSpacing == null) {
			return 0;
		}
		return this._component.get_style().verticalSpacing;
	}
	,innerWidth: null
	,innerHeight: null
	,get_innerWidth: function() {
		if(this.get_component() == null) {
			return 0;
		}
		return this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
	}
	,get_innerHeight: function() {
		if(this.get_component() == null) {
			return 0;
		}
		var padding = 0;
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingTop != null) {
			padding = this.get_component().get_style().paddingTop + padding;
		}
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingBottom != null) {
			padding = this.get_component().get_style().paddingBottom + padding;
		}
		var icy = this.get_component().get_componentHeight() - padding;
		return icy;
	}
	,resizeChildren: function() {
	}
	,repositionChildren: function() {
	}
	,usableSize: null
	,get_usableSize: function() {
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,usableWidth: null
	,get_usableWidth: function() {
		return this.get_usableSize().width;
	}
	,usableHeight: null
	,get_usableHeight: function() {
		return this.get_usableSize().height;
	}
	,calcAutoSize: function(exclusions) {
		var x1 = 16777215;
		var x2 = 0;
		var y1 = 16777215;
		var y2 = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false || this.excluded(exclusions,child) == true) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_left() < x1) {
					x1 = child.get_left();
				}
				if(child.get_componentWidth() != null && child.get_left() + child.get_componentWidth() > x2) {
					x2 = child.get_left() + child.get_componentWidth();
				}
			}
			if(child.get_percentHeight() == null) {
				if(child.get_top() < y1) {
					y1 = child.get_top();
				}
				if(child.get_componentHeight() != null && child.get_top() + child.get_componentHeight() > y2) {
					y2 = child.get_top() + child.get_componentHeight();
				}
			}
		}
		if(x1 == 16777215) {
			x1 = 0;
		}
		if(y1 == 16777215) {
			y1 = 0;
		}
		var w = x2 - x1 + (this.get_paddingLeft() + this.get_paddingRight());
		var h = y2 - y1 + (this.get_paddingTop() + this.get_paddingBottom());
		if(((this) instanceof haxe_ui_layouts_AbsoluteLayout)) {
			w += x1;
			h += y1;
		}
		return new haxe_ui_geom_Size(w,h);
	}
	,excluded: function(exclusions,child) {
		if(exclusions == null || child == null) {
			return false;
		}
		return exclusions.indexOf(child) != -1;
	}
	,cloneLayout: function() {
		var c = this.self();
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_Layout();
	}
	,__class__: haxe_ui_layouts_Layout
	,__properties__: {get_usableHeight:"get_usableHeight",get_usableWidth:"get_usableWidth",get_usableSize:"get_usableSize",get_innerHeight:"get_innerHeight",get_innerWidth:"get_innerWidth",get_verticalSpacing:"get_verticalSpacing",get_horizontalSpacing:"get_horizontalSpacing",get_paddingRight:"get_paddingRight",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingLeft:"get_paddingLeft",get_borderSize:"get_borderSize",set_component:"set_component",get_component:"get_component"}
};
var haxe_ui_layouts_DefaultLayout = function() {
	this._roundFullWidths = false;
	this._calcFullHeights = false;
	this._calcFullWidths = false;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.DefaultLayout"] = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DefaultLayout.__name__ = "haxe.ui.layouts.DefaultLayout";
haxe_ui_layouts_DefaultLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_DefaultLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_calcFullWidths: null
	,_calcFullHeights: null
	,_roundFullWidths: null
	,buildWidthRoundingMap: function() {
		var tmp;
		if(this._roundFullWidths != false) {
			var _this = this.get_component();
			tmp = (_this._children == null ? [] : _this._children).length <= 1;
		} else {
			tmp = true;
		}
		if(tmp) {
			return null;
		}
		var map = null;
		var hasNonFullWidth = false;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null || child.get_percentWidth() != 100) {
				hasNonFullWidth = true;
				break;
			}
		}
		if(hasNonFullWidth == false) {
			var remainderWidth = this.get_usableWidth();
			var _this = this.get_component();
			var remainderWidth1 = remainderWidth % (_this._children == null ? [] : _this._children).length;
			if(remainderWidth1 != 0) {
				map = new haxe_ds_ObjectMap();
				var _g = 0;
				var _this = this.get_component();
				var _g1 = _this._children == null ? [] : _this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					if(child.get_includeInLayout() == false) {
						continue;
					}
					var n = 0;
					if(remainderWidth1 > 0) {
						n = 1;
						--remainderWidth1;
					}
					map.set(child,n);
				}
			}
		}
		return map;
	}
	,resizeChildren: function() {
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var fullWidthValue = 100;
		var fullHeightValue = 100;
		if(this._calcFullWidths == true || this._calcFullHeights == true) {
			var n1 = 0;
			var n2 = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(this._calcFullWidths == true && child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					++n1;
				}
				if(this._calcFullHeights == true && child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					++n2;
				}
			}
			if(n1 > 0) {
				fullWidthValue = 100 / n1;
			}
			if(n2 > 0) {
				fullHeightValue = 100 / n2;
			}
		}
		var childRoundingWidth = this.buildWidthRoundingMap();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var childPercentWidth = child.get_percentWidth();
				if(childPercentWidth == 100) {
					childPercentWidth = fullWidthValue;
				}
				cx = usableSize.width * childPercentWidth / percentWidth - this.marginLeft(child) - this.marginRight(child);
				if(childRoundingWidth != null && childRoundingWidth.h.__keys__[child.__id__] != null) {
					var roundDirection = childRoundingWidth.h[child.__id__];
					if(roundDirection == 0) {
						cx = Math.floor(cx);
					} else if(roundDirection == 1) {
						cx = Math.ceil(cx);
					}
				}
			}
			if(child.get_percentHeight() != null) {
				var childPercentHeight = child.get_percentHeight();
				if(childPercentHeight == 100) {
					childPercentHeight = fullHeightValue;
				}
				cy = usableSize.height * childPercentHeight / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	,repositionChildren: function() {
		var usableSize = this.get_usableSize();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			var ypos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (usableSize.width - child.get_componentWidth()) / 2 + this.get_paddingLeft() + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginRight(child));
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			switch(this.verticalAlign(child)) {
			case "bottom":
				ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginBottom(child));
				break;
			case "center":
				ypos = (usableSize.height - child.get_componentHeight()) / 2 + this.get_paddingTop() + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos,ypos);
		}
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_Layout.prototype.cloneLayout.call(this);
		c._calcFullWidths = this._calcFullWidths;
		c._calcFullHeights = this._calcFullHeights;
		c._roundFullWidths = this._roundFullWidths;
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_DefaultLayout();
	}
	,__class__: haxe_ui_layouts_DefaultLayout
});
var haxe_ui_components_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.ButtonLayout"] = haxe_ui_components_ButtonLayout;
haxe_ui_components_ButtonLayout.__name__ = "haxe.ui.components.ButtonLayout";
haxe_ui_components_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style() == null || this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		if(this._component.get_autoWidth() == false) {
			var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
			var ucx = this.get_usableSize().width;
			if(label != null) {
				label.set_width(ucx);
			}
			var itemRenderer = this.get_component().findComponent(null,haxe_ui_core_ItemRenderer);
			if(itemRenderer != null) {
				itemRenderer.set_width(ucx);
			}
		}
		if(this._component.get_autoHeight() == false) {
			var icon = this.get_component().findComponent("button-icon",null,false);
			var ucy = this.get_usableSize().height;
			if(icon != null) {
				if(icon.get_height() > 0 && ucy > 0 && icon.get_height() > ucy) {
					var ratio = icon.get_width() / icon.get_height();
					icon.set_height(ucy);
					icon.set_width(ucy * ratio);
				}
			}
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right")) {
			size.width -= icon.get_width() + this.get_verticalSpacing();
		}
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var exclusions = [];
		var itemRenderer = this.get_component().findComponent(null,haxe_ui_core_ItemRenderer);
		var icon = this.get_component().findComponent("button-icon",null,false);
		var tmp;
		if(itemRenderer != null) {
			var icon1 = this.get_component().findComponent("button-icon",null,false);
			tmp = icon1 != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right");
		} else {
			tmp = false;
		}
		if(tmp) {
			exclusions.push(icon);
		}
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		var tmp;
		if(itemRenderer != null) {
			var icon1 = this.get_component().findComponent("button-icon",null,false);
			tmp = icon1 != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right");
		} else {
			tmp = false;
		}
		if(tmp) {
			size.width += icon.get_width() + this.get_verticalSpacing();
		}
		return size;
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		if(label != null && label.get_hidden() == true) {
			label = null;
		}
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null && icon.get_hidden() == true) {
			icon = null;
		}
		switch(this.get_iconPosition()) {
		case "bottom":case "top":
			if(label != null && icon != null) {
				var cy = label.get_componentHeight() + icon.get_componentHeight() + this.get_verticalSpacing();
				var y = this.get_component().get_componentHeight() / 2 - cy / 2 | 0;
				if(this.get_iconPosition() == "bottom") {
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
					y += this.get_verticalSpacing() + label.get_componentHeight();
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
				} else {
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
					y += this.get_verticalSpacing() + icon.get_componentHeight();
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
				}
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
			} else if(label != null) {
				label.set_left((this.get_component().get_componentWidth() / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "far-left":
			if(label != null && icon != null) {
				var x = this.get_paddingLeft();
				if(this.get_iconPosition() == "far-left") {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "far-right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if(this.get_iconPosition() == "far-right") {
					if(cx + this.get_paddingLeft() + this.get_paddingRight() < this.get_component().get_componentWidth()) {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
					} else {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					}
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "left":case "right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign() == "left") {
					x = this.get_paddingLeft();
				}
				if(this.get_iconPosition() == "right") {
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
					x += this.get_horizontalSpacing() + label.get_componentWidth();
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
				} else {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		}
	}
	,getTextAlignPos: function(label,usableWidth) {
		switch((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign()) {
		case "left":
			return this.marginLeft(label) + this.get_paddingLeft();
		case "right":
			return usableWidth - label.get_componentWidth() - this.marginRight(label) - this.get_paddingRight();
		default:
			return (usableWidth / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label);
		}
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_ButtonLayout();
	}
	,__class__: haxe_ui_components_ButtonLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$Button_GroupBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.GroupBehaviour"] = haxe_ui_components__$Button_GroupBehaviour;
haxe_ui_components__$Button_GroupBehaviour.__name__ = "haxe.ui.components._Button.GroupBehaviour";
haxe_ui_components__$Button_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_GroupBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		if(this._previousValue != null && !haxe_ui_util_Variant.get_isNull(this._previousValue) && haxe_ui_util_Variant.toString(this._previousValue) != haxe_ui_util_Variant.toString(this._value)) {
			haxe_ui_components_ButtonGroups.get_instance().remove(haxe_ui_util_Variant.toString(this._previousValue),this._component);
		}
		haxe_ui_components_ButtonGroups.get_instance().add(haxe_ui_util_Variant.toString(value),this._component);
	}
	,validateData: function() {
		if(this._previousValue != null && !haxe_ui_util_Variant.get_isNull(this._previousValue) && haxe_ui_util_Variant.toString(this._previousValue) != haxe_ui_util_Variant.toString(this._value)) {
			haxe_ui_components_ButtonGroups.get_instance().remove(haxe_ui_util_Variant.toString(this._previousValue),this._component);
		}
		haxe_ui_components_ButtonGroups.get_instance().add(haxe_ui_util_Variant.toString(this._value),this._component);
	}
	,__class__: haxe_ui_components__$Button_GroupBehaviour
});
var haxe_ui_components__$Button_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.TextBehaviour"] = haxe_ui_components__$Button_TextBehaviour;
haxe_ui_components__$Button_TextBehaviour.__name__ = "haxe.ui.components._Button.TextBehaviour";
haxe_ui_components__$Button_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var itemRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer == null) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		} else if(!this._component.get_isReady()) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		} else {
			var data = itemRenderer.get_data();
			var text = null;
			if(data != null) {
				if(Type.typeof(data) == ValueType.TObject) {
					text = data.text;
					if(text == null) {
						text = data.value;
					}
				} else {
					text = Std.string(data);
				}
			}
			return haxe_ui_util_Variant.fromString(text);
		}
	}
	,validateData: function() {
		var itemRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer != null) {
			var data = itemRenderer.get_data();
			if(data == null) {
				data = { };
			} else {
				data = Reflect.copy(data);
			}
			data.text = haxe_ui_util_Variant.toString(this._value);
			itemRenderer.set_data(data);
		} else {
			var label = this._component.findComponent(null,haxe_ui_components_Label,false);
			if(label == null) {
				label = new haxe_ui_components_Label();
				label.set_id("button-label");
				label.set_scriptAccess(false);
				this._component.addComponent(label);
				var _this = this._component;
				var force = true;
				if(force == null) {
					force = false;
				}
				_this.invalidateComponent("style",false);
				if(force == true) {
					_this._style = null;
				}
			}
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
	,__class__: haxe_ui_components__$Button_TextBehaviour
});
var haxe_ui_components__$Button_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.IconBehaviour"] = haxe_ui_components__$Button_IconBehaviour;
haxe_ui_components__$Button_IconBehaviour.__name__ = "haxe.ui.components._Button.IconBehaviour";
haxe_ui_components__$Button_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var icon = this._component.findComponent("button-icon",null,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			this._component.get_customStyle().icon = null;
			this._component.removeComponent(icon);
			return;
		}
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("icon");
			icon.set_id("button-icon");
			icon.set_scriptAccess(false);
			this._component.addComponentAt(icon,0);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_components__$Button_IconBehaviour
});
var haxe_ui_components__$Button_ToggleBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.ToggleBehaviour"] = haxe_ui_components__$Button_ToggleBehaviour;
haxe_ui_components__$Button_ToggleBehaviour.__name__ = "haxe.ui.components._Button.ToggleBehaviour";
haxe_ui_components__$Button_ToggleBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Button_ToggleBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(this._value,value)) {
			return;
		}
		this._value = value;
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			button.set_selected(false);
		}
		button.registerInternalEvents(button._internalEventsClass,true);
	}
	,__class__: haxe_ui_components__$Button_ToggleBehaviour
});
var haxe_ui_components__$Button_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.SelectedBehaviour"] = haxe_ui_components__$Button_SelectedBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.__name__ = "haxe.ui.components._Button.SelectedBehaviour";
haxe_ui_components__$Button_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(button.get_toggle() == false) {
			return;
		}
		haxe_ui_components_ButtonGroups.get_instance().setSelection(button,haxe_ui_util_Variant.toBool(this._value));
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			button.removeClass(":down",true,true);
		} else {
			button.addClass(":down",true,true);
		}
		var events = js_Boot.__cast(button._internalEvents , haxe_ui_components_ButtonEvents);
		if(button.hitTest(haxe_ui_core_Screen.get_instance().currentMouseX,haxe_ui_core_Screen.get_instance().currentMouseY)) {
			button.addClass(":hover",true,events.recursiveStyling);
		} else {
			button.removeClass(":hover",true,events.recursiveStyling);
		}
		events.dispatchChanged();
	}
	,__class__: haxe_ui_components__$Button_SelectedBehaviour
});
var haxe_ui_events_Events = function(target) {
	this._target = target;
};
$hxClasses["haxe.ui.events.Events"] = haxe_ui_events_Events;
haxe_ui_events_Events.__name__ = "haxe.ui.events.Events";
haxe_ui_events_Events.prototype = {
	_target: null
	,register: function() {
	}
	,unregister: function() {
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.hasEvent(type,listener) == false) {
			this._target.registerEvent(type,listener,priority);
		}
	}
	,hasEvent: function(type,listener) {
		return this._target.hasEvent(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		this._target.unregisterEvent(type,listener);
	}
	,dispatch: function(event) {
		this._target.dispatch(event);
	}
	,__class__: haxe_ui_events_Events
};
var haxe_ui_components_ButtonEvents = function(button) {
	this.recursiveStyling = true;
	this._repeatInterval = 0;
	this._repeater = false;
	this._down = false;
	haxe_ui_events_Events.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonEvents"] = haxe_ui_components_ButtonEvents;
haxe_ui_components_ButtonEvents.__name__ = "haxe.ui.components.ButtonEvents";
haxe_ui_components_ButtonEvents.__super__ = haxe_ui_events_Events;
haxe_ui_components_ButtonEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_button: null
	,_down: null
	,_repeatTimer: null
	,_repeater: null
	,_repeatInterval: null
	,recursiveStyling: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("move",$bind(this,this.onMove)) == false) {
			this.registerEvent("move",$bind(this,this.onMove));
		}
		if(this.hasEvent("actionstart",$bind(this,this.onActionStart)) == false) {
			this.registerEvent("actionstart",$bind(this,this.onActionStart));
		}
		if(this.hasEvent("actionend",$bind(this,this.onActionEnd)) == false) {
			this.registerEvent("actionend",$bind(this,this.onActionEnd));
		}
		if(this._button.get_toggle() == true) {
			this.registerEvent("click",$bind(this,this.onMouseClick),100);
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("click",$bind(this,this.onMouseClick));
		this.unregisterEvent("move",$bind(this,this.onMove));
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
		this.unregisterEvent("actionend",$bind(this,this.onActionEnd));
	}
	,onMouseOver: function(event) {
		if(this._button.get_toggle() == true && this._button.classes.indexOf(":down") != -1) {
			return;
		}
		if(event.buttonDown == false || this._down == false) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,onMouseOut: function(event) {
		if(this._button.get_toggle() == true && this._button.get_selected() == true) {
			return;
		}
		if(this._button.get_remainPressed() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		this._button.removeClass(":hover",true,this.recursiveStyling);
	}
	,onMouseDown: function(event) {
		var _gthis = this;
		this._button.set_focus(true);
		if(this._button.get_repeater() == true && this._repeatInterval == 0) {
			this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		}
		this._down = true;
		this._button.addClass(":down",true,this.recursiveStyling);
		this._button.get_screen().registerEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._repeater == true && this._repeatInterval == this._button.get_repeatInterval()) {
			this._repeatTimer = new haxe_ui_util_Timer(this._repeatInterval,$bind(this,this.onRepeatTimer));
		} else if(this._button.get_repeater() == true) {
			if(this._repeatTimer != null) {
				this._repeatTimer.stop();
				this._repeatTimer = null;
			}
			haxe_ui_util_Timer.delay(function() {
				if(_gthis._repeater == true && _gthis._repeatTimer == null) {
					if(_gthis._button.get_easeInRepeater() == true && _gthis._repeatInterval > _gthis._button.get_repeatInterval()) {
						var tmp = _gthis._repeatInterval - (_gthis._repeatInterval - _gthis._button.get_repeatInterval()) / 2 | 0;
						_gthis._repeatInterval = tmp;
						_gthis.onRepeatTimer();
					}
					_gthis.onMouseDown(event);
				}
			},this._repeatInterval);
		}
		this._repeater = this._button.get_repeater();
	}
	,onMouseUp: function(event) {
		this._down = this._repeater = false;
		this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		this._button.get_screen().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._button.get_toggle() == true) {
			return;
		}
		this._button.removeClass(":down",true,this.recursiveStyling);
		var over = this._button.hitTest(event.screenX,event.screenY);
		if(event.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
		if(this._repeatTimer != null) {
			this._repeatTimer.stop();
			this._repeatTimer = null;
		}
	}
	,onMove: function(event) {
		var over = this._button.hitTest(haxe_ui_core_Screen.get_instance().currentMouseX,haxe_ui_core_Screen.get_instance().currentMouseY);
		if(over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
	}
	,onRepeatTimer: function() {
		if(this._button.classes.indexOf(":hover") != -1 && this._down == true) {
			var event = new haxe_ui_events_MouseEvent("click");
			this._button.dispatch(event);
		}
	}
	,onMouseClick: function(event) {
		this._button.set_selected(!this._button.get_selected());
		if(this._button.get_selected() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		if(this._button.hitTest(event.screenX,event.screenY)) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		}
	}
	,dispatchChanged: function() {
		this._button.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,press: function() {
		this._down = true;
		if(this._button.get_toggle() == true) {
			this._button.addClass(":down",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,release: function() {
		if(this._down == true) {
			this._down = false;
			if(this._button.get_toggle() == true) {
				this._button.set_selected(!this._button.get_selected());
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			} else {
				this._button.removeClass(":down",true,this.recursiveStyling);
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			}
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this.press();
			break;
		default:
		}
	}
	,onActionEnd: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this.release();
			break;
		default:
		}
	}
	,__class__: haxe_ui_components_ButtonEvents
});
var haxe_ui_core_CompositeBuilder = function(component) {
	this._component = component;
};
$hxClasses["haxe.ui.core.CompositeBuilder"] = haxe_ui_core_CompositeBuilder;
haxe_ui_core_CompositeBuilder.__name__ = "haxe.ui.core.CompositeBuilder";
haxe_ui_core_CompositeBuilder.prototype = {
	_component: null
	,create: function() {
	}
	,destroy: function() {
	}
	,onInitialize: function() {
	}
	,onReady: function() {
	}
	,show: function() {
		return false;
	}
	,hide: function() {
		return false;
	}
	,get_numComponents: function() {
		return null;
	}
	,get_cssName: function() {
		return null;
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return false;
	}
	,getComponentIndex: function(child) {
		return -2147483648;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentData: function() {
	}
	,applyStyle: function(style) {
	}
	,onComponentAdded: function(child) {
	}
	,onComponentRemoved: function(child) {
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var _g = 0;
		var _g1 = this.get_numComponents();
		while(_g < _g1) {
			var i = _g++;
			var c = this.getComponentAt(i);
			var match = c.findComponent(criteria,type,recursive,searchType);
			if(match != null) {
				return match;
			}
		}
		return null;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		return null;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this._component.get_componentClipRect() != null;
	}
	,__class__: haxe_ui_core_CompositeBuilder
	,__properties__: {get_isComponentClipped:"get_isComponentClipped",get_cssName:"get_cssName",get_numComponents:"get_numComponents"}
};
var haxe_ui_components_ButtonBuilder = function(button) {
	haxe_ui_core_CompositeBuilder.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonBuilder"] = haxe_ui_components_ButtonBuilder;
haxe_ui_components_ButtonBuilder.__name__ = "haxe.ui.components.ButtonBuilder";
haxe_ui_components_ButtonBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_ButtonBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_button: null
	,onReady: function() {
		haxe_ui_core_CompositeBuilder.prototype.onReady.call(this);
		var renderer = this._button.findComponent(null,haxe_ui_core_ItemRenderer);
		if(renderer != null) {
			if(!this._button.get_autoWidth()) {
				renderer.removeClass("auto-size");
			} else {
				renderer.addClass("auto-size");
			}
		}
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		var c = this._component.findComponent("button-label",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		var c = this._component.findComponent("button-icon",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		var list = this._component.findComponents(null,haxe_ui_components_Label,16777215);
		var _g = 0;
		while(_g < list.length) {
			var c = list[_g];
			++_g;
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		if(style.icon != null) {
			this._button.set_icon(style.icon);
		}
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			var existingRenderer = this._component.findComponent(null,haxe_ui_core_ItemRenderer);
			if(existingRenderer != null) {
				this._component.removeComponent(existingRenderer);
			}
			child.addClass("auto-size");
		}
		return null;
	}
	,__class__: haxe_ui_components_ButtonBuilder
});
var haxe_ui_components_ButtonGroups = function() {
	this._groups = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.components.ButtonGroups"] = haxe_ui_components_ButtonGroups;
haxe_ui_components_ButtonGroups.__name__ = "haxe.ui.components.ButtonGroups";
haxe_ui_components_ButtonGroups.__properties__ = {get_instance:"get_instance"};
haxe_ui_components_ButtonGroups.get_instance = function() {
	if(haxe_ui_components_ButtonGroups._instance == null) {
		haxe_ui_components_ButtonGroups._instance = new haxe_ui_components_ButtonGroups();
	}
	return haxe_ui_components_ButtonGroups._instance;
};
haxe_ui_components_ButtonGroups.prototype = {
	_groups: null
	,get: function(name) {
		return this._groups.h[name];
	}
	,set: function(name,buttons) {
		this._groups.h[name] = buttons;
	}
	,add: function(name,button) {
		var arr = this.get(name);
		if(arr == null) {
			arr = [];
		}
		if(arr.indexOf(button) == -1) {
			arr.push(button);
		}
		this.set(name,arr);
	}
	,remove: function(name,button) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		HxOverrides.remove(arr,button);
		if(arr.length == 0) {
			var _this = this._groups;
			if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
				delete(_this.h[name]);
			}
		}
	}
	,setSelection: function(button,value,allowDeselection) {
		if(allowDeselection == null) {
			allowDeselection = false;
		}
		if(button.get_componentGroup() != null && value == false && allowDeselection == false) {
			var arr = haxe_ui_components_ButtonGroups.get_instance().get(button.get_componentGroup());
			var hasSelection = false;
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var b = arr[_g];
					++_g;
					if(b != button && b.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false && allowDeselection == false) {
				button.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(true));
				return;
			}
		}
		if(button.get_componentGroup() != null && value == true) {
			var arr = haxe_ui_components_ButtonGroups.get_instance().get(button.get_componentGroup());
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var b = arr[_g];
					++_g;
					if(b != button) {
						b.set_selected(false);
					}
				}
			}
		}
		if(allowDeselection == true && value == false) {
			button.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(false));
		}
	}
	,__class__: haxe_ui_components_ButtonGroups
};
var haxe_ui_events_UIEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.relatedComponent = null;
	this.relatedEvent = null;
	this.type = type;
	this.bubble = bubble;
	this.data = data;
	this.canceled = false;
};
$hxClasses["haxe.ui.events.UIEvent"] = haxe_ui_events_UIEvent;
haxe_ui_events_UIEvent.__name__ = "haxe.ui.events.UIEvent";
haxe_ui_events_UIEvent.__super__ = haxe_ui_backend_EventImpl;
haxe_ui_events_UIEvent.prototype = $extend(haxe_ui_backend_EventImpl.prototype,{
	bubble: null
	,type: null
	,target: null
	,data: null
	,canceled: null
	,relatedEvent: null
	,relatedComponent: null
	,value: null
	,previousValue: null
	,cancel: function() {
		haxe_ui_backend_EventImpl.prototype.cancel.call(this);
		this.canceled = true;
	}
	,clone: function() {
		var c = new haxe_ui_events_UIEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.value = this.value;
		c.previousValue = this.previousValue;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		c.relatedComponent = this.relatedComponent;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
	}
	,__class__: haxe_ui_events_UIEvent
});
var haxe_ui_components_CalendarEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.components.CalendarEvent"] = haxe_ui_components_CalendarEvent;
haxe_ui_components_CalendarEvent.__name__ = "haxe.ui.components.CalendarEvent";
haxe_ui_components_CalendarEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_components_CalendarEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_components_CalendarEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_components_CalendarEvent
});
var haxe_ui_containers_Grid = function() {
	this._columns = -1;
	haxe_ui_containers_Box.call(this);
	if(this._columns == -1) {
		this.set_columns(2);
	}
};
$hxClasses["haxe.ui.containers.Grid"] = haxe_ui_containers_Grid;
haxe_ui_containers_Grid.__name__ = "haxe.ui.containers.Grid";
haxe_ui_containers_Grid.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Grid.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_columns: null
	,get_columns: function() {
		return (js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).get_columns();
	}
	,set_columns: function(value) {
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
		this._columns = value;
		return value;
	}
	,createDefaults: function() {
		haxe_ui_containers_Box.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_VerticalGridLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_columns(this.get_columns());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Grid();
	}
	,__class__: haxe_ui_containers_Grid
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components_Calendar = function() {
	haxe_ui_containers_Grid.call(this);
};
$hxClasses["haxe.ui.components.Calendar"] = haxe_ui_components_Calendar;
haxe_ui_components_Calendar.__name__ = "haxe.ui.components.Calendar";
haxe_ui_components_Calendar.__super__ = haxe_ui_containers_Grid;
haxe_ui_components_Calendar.prototype = $extend(haxe_ui_containers_Grid.prototype,{
	previousMonth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("previousMonth",null);
	}
	,nextMonth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("nextMonth",null);
	}
	,previousYear: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("previousYear",null);
	}
	,nextYear: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("nextYear",null);
	}
	,createDefaults: function() {
		haxe_ui_containers_Grid.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Calendar_Layout;
	}
	,registerComposite: function() {
		haxe_ui_containers_Grid.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Calendar_Events;
		this._compositeBuilderClass = haxe_ui_components__$Calendar_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Calendar_Layout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Grid.prototype.registerBehaviours.call(this);
		this.behaviours.register("date",haxe_ui_components__$Calendar_DateBehaviour);
		this.behaviours.register("selectedDate",haxe_ui_components__$Calendar_SelectedDateBehaviour);
		this.behaviours.register("previousMonth",haxe_ui_components__$Calendar_PreviousMonthBehaviour);
		this.behaviours.register("nextMonth",haxe_ui_components__$Calendar_NextMonthBehaviour);
		this.behaviours.register("previousYear",haxe_ui_components__$Calendar_PreviousYearBehaviour);
		this.behaviours.register("nextYear",haxe_ui_components__$Calendar_NextYearBehaviour);
	}
	,get_date: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("date"));
	}
	,set_date: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("date",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"date"));
		return value;
	}
	,get_selectedDate: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("selectedDate"));
	}
	,set_selectedDate: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedDate",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedDate"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Grid.prototype.cloneComponent.call(this);
		if(this.get_date() != null) {
			c.set_date(this.get_date());
		}
		if(this.get_selectedDate() != null) {
			c.set_selectedDate(this.get_selectedDate());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Calendar();
	}
	,__class__: haxe_ui_components_Calendar
	,__properties__: $extend(haxe_ui_containers_Grid.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate",set_date:"set_date",get_date:"get_date"})
});
var haxe_ui_components__$Calendar_PreviousMonthBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.PreviousMonthBehaviour"] = haxe_ui_components__$Calendar_PreviousMonthBehaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousMonthBehaviour";
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousMonth(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_PreviousMonthBehaviour
});
var haxe_ui_components__$Calendar_NextMonthBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.NextMonthBehaviour"] = haxe_ui_components__$Calendar_NextMonthBehaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.__name__ = "haxe.ui.components._Calendar.NextMonthBehaviour";
haxe_ui_components__$Calendar_NextMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextMonth(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_NextMonthBehaviour
});
var haxe_ui_components__$Calendar_PreviousYearBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.PreviousYearBehaviour"] = haxe_ui_components__$Calendar_PreviousYearBehaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousYearBehaviour";
haxe_ui_components__$Calendar_PreviousYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousYear(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_PreviousYearBehaviour
});
var haxe_ui_components__$Calendar_NextYearBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.NextYearBehaviour"] = haxe_ui_components__$Calendar_NextYearBehaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.__name__ = "haxe.ui.components._Calendar.NextYearBehaviour";
haxe_ui_components__$Calendar_NextYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextYear(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_NextYearBehaviour
});
var haxe_ui_components__$Calendar_SelectedDateBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.SelectedDateBehaviour"] = haxe_ui_components__$Calendar_SelectedDateBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.__name__ = "haxe.ui.components._Calendar.SelectedDateBehaviour";
haxe_ui_components__$Calendar_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var date = haxe_ui_util_Variant.toDate(value);
		this._component.invalidateComponent("data",false);
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(date);
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Calendar_SelectedDateBehaviour
});
var haxe_ui_components__$Calendar_DateBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.DateBehaviour"] = haxe_ui_components__$Calendar_DateBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.__name__ = "haxe.ui.components._Calendar.DateBehaviour";
haxe_ui_components__$Calendar_DateBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var date = haxe_ui_util_Variant.toDate(this._value);
		if(date == null) {
			return;
		}
		var year = date.getFullYear();
		var month = date.getMonth();
		var startDay = new Date(year,month,1,0,0,0).getDay();
		var endDay = haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year);
		var _g = 0;
		var _this = this._component;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_opacity(.3);
			child.removeClass("calendar-off-day");
			child.removeClass("calendar-day");
			child.removeClass("calendar-day-selected");
			child.removeClass(":hover");
		}
		var prevMonth = haxe_ui_components__$Calendar_DateUtils.previousMonth(date);
		var last = haxe_ui_components__$Calendar_DateUtils.getEndDay(prevMonth.getMonth(),prevMonth.getFullYear());
		var n = startDay - 1;
		var _g = 0;
		var _g1 = startDay;
		while(_g < _g1) {
			var _ = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[n];
			item.addClass("calendar-off-day");
			--n;
			item.set_text("" + last);
			--last;
		}
		var selectedDate = (js_Boot.__cast(this._component , haxe_ui_components_Calendar)).get_selectedDate();
		if(selectedDate == null) {
			selectedDate = new Date();
		}
		var _g = 0;
		var _g1 = endDay;
		while(_g < _g1) {
			var i = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[i + startDay];
			item.addClass("calendar-day");
			item.set_opacity(1);
			item.set_hidden(false);
			item.set_text("" + (i + 1));
			if(i + 1 == selectedDate.getDate() && month == selectedDate.getMonth() && year == selectedDate.getFullYear()) {
				item.addClass("calendar-day-selected");
			}
			last = i + startDay;
		}
		++last;
		var n = 0;
		var _g = last;
		var _this = this._component;
		var _g1 = (_this._children == null ? [] : _this._children).length;
		while(_g < _g1) {
			var i = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[i];
			item.addClass("calendar-off-day");
			item.set_text("" + (n + 1));
			++n;
		}
		this._component.registerInternalEvents(null,true);
		this._component.dispatch(new haxe_ui_components_CalendarEvent("datechange"));
	}
	,__class__: haxe_ui_components__$Calendar_DateBehaviour
});
var haxe_ui_components__$Calendar_DateUtils = function() { };
$hxClasses["haxe.ui.components._Calendar.DateUtils"] = haxe_ui_components__$Calendar_DateUtils;
haxe_ui_components__$Calendar_DateUtils.__name__ = "haxe.ui.components._Calendar.DateUtils";
haxe_ui_components__$Calendar_DateUtils.getEndDay = function(month,year) {
	var endDay = -1;
	switch(month) {
	case 1:
		if(year % 400 == 0 || year % 100 != 0 && year % 4 == 0) {
			endDay = 29;
		} else {
			endDay = 28;
		}
		break;
	case 3:case 5:case 8:case 10:
		endDay = 30;
		break;
	default:
		endDay = 31;
	}
	return endDay;
};
haxe_ui_components__$Calendar_DateUtils.previousMonth = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	--month;
	if(month < 0) {
		month = 11;
		--year;
	}
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.nextMonth = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	++month;
	if(month > 11) {
		month = 0;
		++year;
	}
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.previousYear = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	--year;
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.nextYear = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	++year;
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
var haxe_ui_components__$Calendar_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.components._Calendar.Events"] = haxe_ui_components__$Calendar_Events;
haxe_ui_components__$Calendar_Events.__name__ = "haxe.ui.components._Calendar.Events";
haxe_ui_components__$Calendar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Calendar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		this.unregister();
		var _g = 0;
		var _this = this._target;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.hasEvent("click",$bind(this,this.onDayClicked)) == false && child.classes.indexOf("calendar-day") != -1) {
				child.registerEvent("click",$bind(this,this.onDayClicked));
			}
		}
	}
	,unregister: function() {
		var _g = 0;
		var _this = this._target;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onDayClicked));
		}
	}
	,onDayClicked: function(event) {
		var calendar = js_Boot.__cast(this._target , haxe_ui_components_Calendar);
		var day = Std.parseInt(event.target.get_text());
		var month = calendar.get_date().getMonth();
		var year = calendar.get_date().getFullYear();
		calendar.set_selectedDate(new Date(year,month,day,0,0,0));
	}
	,__class__: haxe_ui_components__$Calendar_Events
});
var haxe_ui_components__$Calendar_Builder = function(calendar) {
	haxe_ui_core_CompositeBuilder.call(this,calendar);
	this._calendar = calendar;
};
$hxClasses["haxe.ui.components._Calendar.Builder"] = haxe_ui_components__$Calendar_Builder;
haxe_ui_components__$Calendar_Builder.__name__ = "haxe.ui.components._Calendar.Builder";
haxe_ui_components__$Calendar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Calendar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_calendar: null
	,create: function() {
		this._calendar.set_columns(7);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		this._calendar.set_date(new Date());
	}
	,__class__: haxe_ui_components__$Calendar_Builder
});
var haxe_ui_layouts_VerticalGridLayout = function() {
	this._columns = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalGridLayout"] = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_layouts_VerticalGridLayout.__name__ = "haxe.ui.layouts.VerticalGridLayout";
haxe_ui_layouts_VerticalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_VerticalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_columns: null
	,get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns == value) {
			return value;
		}
		this._columns = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var rows = Math.ceil((_this._children == null ? [] : _this._children).length / this.get_columns());
			var c = this.get_columns();
			var _this = this.get_component();
			var c1 = Math.min(c,(_this._children == null ? [] : _this._children).length);
			size.width -= this.get_horizontalSpacing() * (c1 - 1);
			size.height -= this.get_verticalSpacing() * (rows - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
			++columnIndex;
			if(columnIndex >= this.get_columns()) {
				xpos = this.get_paddingLeft();
				ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var columnWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var fullWidthsCounts = [0];
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					fullWidthsCounts[rowIndex]++;
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					fullWidthsCounts.push(0);
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var childPercentWidth = child.get_percentWidth();
					if(childPercentWidth == 100 && fullWidthsCounts[rowIndex] != 0) {
						var f = fullWidthsCounts[rowIndex];
						if(rowIndex > 0 && fullWidthsCounts[rowIndex - 1] != 0) {
							f = fullWidthsCounts[rowIndex - 1];
						}
						childPercentWidth = 100 / f;
					}
					var cx = usableSize.width * childPercentWidth / 100;
					if(cx > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = cx;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var rowHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_height() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_height();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var newRow = true;
			var fullHeightRowCount = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					if(newRow == true) {
						newRow = false;
						++fullHeightRowCount;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					newRow = true;
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var childPercentHeight = child.get_percentHeight();
					if(childPercentHeight == 100 && fullHeightRowCount > 1) {
						childPercentHeight = 100 / fullHeightRowCount;
					}
					var cy = usableSize.height * childPercentHeight / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					} else {
						var tmp = usableSize.height > rowHeights[rowIndex];
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var explicitWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[columnIndex] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this.get_columns() | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var explicitHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[columnIndex % this._columns] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitHeights;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_Layout.prototype.cloneLayout.call(this);
		c.set_columns(this.get_columns());
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_VerticalGridLayout();
	}
	,__class__: haxe_ui_layouts_VerticalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components__$Calendar_Layout = function() {
	haxe_ui_layouts_VerticalGridLayout.call(this);
};
$hxClasses["haxe.ui.components._Calendar.Layout"] = haxe_ui_components__$Calendar_Layout;
haxe_ui_components__$Calendar_Layout.__name__ = "haxe.ui.components._Calendar.Layout";
haxe_ui_components__$Calendar_Layout.__super__ = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_components__$Calendar_Layout.prototype = $extend(haxe_ui_layouts_VerticalGridLayout.prototype,{
	resizeChildren: function() {
		var max = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_layout() == null) {
				continue;
			}
			if(child.get_width() > child.get_layout().get_paddingLeft() + child.get_layout().get_paddingRight() && child.get_width() > max) {
				max = child.get_width();
			}
			if(child.get_width() > child.get_layout().get_paddingTop() + child.get_layout().get_paddingBottom() && child.get_height() > max) {
				max = child.get_height();
			}
		}
		if(max > 0) {
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.set_width(max);
				child.set_height(max);
			}
		}
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_VerticalGridLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$Calendar_Layout();
	}
	,__class__: haxe_ui_components__$Calendar_Layout
});
var haxe_ui_core_IDataComponent = function() { };
$hxClasses["haxe.ui.core.IDataComponent"] = haxe_ui_core_IDataComponent;
haxe_ui_core_IDataComponent.__name__ = "haxe.ui.core.IDataComponent";
haxe_ui_core_IDataComponent.__isInterface__ = true;
haxe_ui_core_IDataComponent.prototype = {
	get_dataSource: null
	,__class__: haxe_ui_core_IDataComponent
	,__properties__: {get_dataSource:"get_dataSource"}
};
var haxe_ui_components_Canvas = function() {
	haxe_ui_core_Component.call(this);
	this.componentGraphics = new haxe_ui_graphics_ComponentGraphics(this);
};
$hxClasses["haxe.ui.components.Canvas"] = haxe_ui_components_Canvas;
haxe_ui_components_Canvas.__name__ = "haxe.ui.components.Canvas";
haxe_ui_components_Canvas.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_Canvas.__super__ = haxe_ui_core_Component;
haxe_ui_components_Canvas.prototype = $extend(haxe_ui_core_Component.prototype,{
	componentGraphics: null
	,validateComponentLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateComponentLayout.call(this);
		this.componentGraphics.resize(this.get_width(),this.get_height());
		return b;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		var tmp = this.componentGraphics._drawCommands.slice();
		c.componentGraphics._drawCommands = tmp;
		c.componentGraphics.replayDrawCommands();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_components__$Canvas_DataSourceBehaviour);
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,self: function() {
		return new haxe_ui_components_Canvas();
	}
	,__class__: haxe_ui_components_Canvas
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
var haxe_ui_components__$Canvas_DataSourceBehaviour = function(canvas) {
	haxe_ui_behaviours_DataBehaviour.call(this,canvas);
	this._canvas = canvas;
};
$hxClasses["haxe.ui.components._Canvas.DataSourceBehaviour"] = haxe_ui_components__$Canvas_DataSourceBehaviour;
haxe_ui_components__$Canvas_DataSourceBehaviour.__name__ = "haxe.ui.components._Canvas.DataSourceBehaviour";
haxe_ui_components__$Canvas_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Canvas_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_canvas: null
	,validateData: function() {
		if(this._value != null) {
			var ds = haxe_ui_util_Variant.toDataSource(this._value);
			var g = this._canvas.componentGraphics;
			var _g = 0;
			var _g1 = ds.get_size();
			while(_g < _g1) {
				var i = _g++;
				var item = ds.get(i);
				switch(item.id) {
				case "circle":
					var x = parseFloat(item.x);
					var y = parseFloat(item.y);
					var radius = parseFloat(item.radius);
					g.circle(x,y,radius);
					break;
				case "clear":
					g.clear();
					break;
				case "fill-style":case "fillStyle":
					var color = item.color;
					var alpha = item.alpha != null ? parseFloat(item.alpha) : 1;
					g.fillStyle(haxe_ui_util_Color.fromString(color),alpha);
					break;
				case "image":
					var resource = item.resource;
					var x1 = parseFloat(item.x);
					var y1 = parseFloat(item.y);
					var width = parseFloat(item.width);
					var height = parseFloat(item.height);
					g.image(haxe_ui_util_Variant.fromString(resource),x1,y1,width,height);
					break;
				case "line-to":case "lineTo":
					var x2 = item.x != null ? parseFloat(item.x) : 0;
					var y2 = item.y != null ? parseFloat(item.y) : 0;
					g.lineTo(x2,y2);
					break;
				case "move-to":case "moveTo":
					var x3 = item.x != null ? parseFloat(item.x) : 0;
					var y3 = item.y != null ? parseFloat(item.y) : 0;
					g.moveTo(x3,y3);
					break;
				case "rectangle":
					var x4 = item.x != null ? parseFloat(item.x) : 0;
					var y4 = item.y != null ? parseFloat(item.y) : 0;
					var width1 = item.width != null ? parseFloat(item.width) : this._canvas.get_width();
					var height1 = item.height != null ? parseFloat(item.height) : this._canvas.get_height();
					g.rectangle(x4,y4,width1,height1);
					break;
				case "stroke-style":case "strokeStyle":
					var color1 = item.color;
					var thickness = item.thickness != null ? parseFloat(item.thickness) : 1;
					var alpha1 = item.alpha != null ? parseFloat(item.alpha) : 1;
					g.strokeStyle(haxe_ui_util_Color.fromString(color1),thickness,alpha1);
					break;
				default:
					haxe_Log.trace("unrecognised draw command: " + Std.string(item),{ fileName : "haxe/ui/components/Canvas.hx", lineNumber : 90, className : "haxe.ui.components._Canvas.DataSourceBehaviour", methodName : "validateData"});
				}
			}
		}
	}
	,__class__: haxe_ui_components__$Canvas_DataSourceBehaviour
});
var haxe_ui_components_CheckBox = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBox"] = haxe_ui_components_CheckBox;
haxe_ui_components_CheckBox.__name__ = "haxe.ui.components.CheckBox";
haxe_ui_components_CheckBox.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBox.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$CheckBox_TextBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$CheckBox_SelectedBehaviour);
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selected"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:
			this.set_selected(value == 1);
			break;
		case 6:
			if(_g.c == String) {
				this.set_selected(value == "true" || value == "1");
			} else {
				this.set_selected(value);
			}
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_selected(haxe_ui_util_Variant.toBool(v));
			} else {
				this.set_selected(value);
			}
			break;
		default:
			this.set_selected(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBox();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$CheckBox_Events;
		this._compositeBuilderClass = haxe_ui_components_CheckBoxBuilder;
		this._defaultLayoutClass = haxe_ui_components__$CheckBox_CheckBoxLayout;
	}
	,__class__: haxe_ui_components_CheckBox
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components_CheckBoxValue = function() {
	this._down = true;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBoxValue"] = haxe_ui_components_CheckBoxValue;
haxe_ui_components_CheckBoxValue.__name__ = "haxe.ui.components.CheckBoxValue";
haxe_ui_components_CheckBoxValue.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBoxValue.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	onReady: function() {
		this.createIcon();
		this.registerEvent("actionstart",$bind(this,this.onActionStart));
		this.registerEvent("actionend",$bind(this,this.onActionEnd));
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null) {
			icon.set_resource(style.icon);
		}
	}
	,createIcon: function() {
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon == null && this.parentComponent != null) {
			icon = new haxe_ui_components_Image();
			icon.set_id("" + this.parentComponent.get_cssName() + "-icon");
			icon.addClass("" + this.parentComponent.get_cssName() + "-icon");
			if(this.get_style() != null && this.get_style().icon != null) {
				icon.set_resource(this.get_style().icon);
			}
			this.addComponent(icon);
		}
	}
	,_down: null
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this._down = true;
			break;
		default:
		}
	}
	,onActionEnd: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			if(this._down == true) {
				this._down = false;
				if(this.parentComponent != null) {
					var checkbox = js_Boot.__cast(this.parentComponent , haxe_ui_components_CheckBox);
					checkbox.set_selected(!checkbox.get_selected());
				}
			}
			break;
		default:
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBoxValue();
	}
	,__class__: haxe_ui_components_CheckBoxValue
});
var haxe_ui_components__$CheckBox_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.TextBehaviour"] = haxe_ui_components__$CheckBox_TextBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.__name__ = "haxe.ui.components._CheckBox.TextBehaviour";
haxe_ui_components__$CheckBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("" + this._component.get_cssName() + "-label");
			label.addClass("" + this._component.get_cssName() + "-label");
			label.set_scriptAccess(false);
			this._component.addComponent(label);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_components__$CheckBox_TextBehaviour
});
var haxe_ui_components__$CheckBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.SelectedBehaviour"] = haxe_ui_components__$CheckBox_SelectedBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.__name__ = "haxe.ui.components._CheckBox.SelectedBehaviour";
haxe_ui_components__$CheckBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var valueComponent = this._component.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(valueComponent == null) {
			return;
		}
		valueComponent.createIcon();
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			valueComponent.addClass(":selected");
		} else {
			valueComponent.removeClass(":selected");
		}
		var event = new haxe_ui_events_UIEvent("change");
		event.previousValue = this._previousValue;
		event.value = this._value;
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$CheckBox_SelectedBehaviour
});
var haxe_ui_components__$CheckBox_Events = function(checkbox) {
	haxe_ui_events_Events.call(this,checkbox);
	this._checkbox = checkbox;
};
$hxClasses["haxe.ui.components._CheckBox.Events"] = haxe_ui_components__$CheckBox_Events;
haxe_ui_components__$CheckBox_Events.__name__ = "haxe.ui.components._CheckBox.Events";
haxe_ui_components__$CheckBox_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$CheckBox_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_checkbox: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("click",$bind(this,this.onClick)) == false) {
			this.registerEvent("click",$bind(this,this.onClick));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("click",$bind(this,this.onClick));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).addClass(":hover");
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).removeClass(":hover");
	}
	,onClick: function(event) {
		this._checkbox.set_selected(!this._checkbox.get_selected());
	}
	,onMouseDown: function(event) {
		this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue).set_focus(true);
	}
	,__class__: haxe_ui_components__$CheckBox_Events
});
var haxe_ui_components_CheckBoxBuilder = function(checkbox) {
	haxe_ui_core_CompositeBuilder.call(this,checkbox);
	this._checkbox = checkbox;
	this._checkbox.set_allowFocus(false);
};
$hxClasses["haxe.ui.components.CheckBoxBuilder"] = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_CheckBoxBuilder.__name__ = "haxe.ui.components.CheckBoxBuilder";
haxe_ui_components_CheckBoxBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_CheckBoxBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_checkbox: null
	,create: function() {
		if(this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue) == null) {
			var value = new haxe_ui_components_CheckBoxValue();
			value.set_id("" + this._checkbox.get_cssName() + "-value");
			value.addClass("" + this._checkbox.get_cssName() + "-value");
			value.set_scriptAccess(false);
			this._checkbox.addComponent(value);
		}
	}
	,applyStyle: function(style) {
		var c = this._component.findComponent("" + this._checkbox.get_cssName() + "-label",haxe_ui_core_Component);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,get_cssName: function() {
		return "checkbox";
	}
	,__class__: haxe_ui_components_CheckBoxBuilder
});
var haxe_ui_layouts_HorizontalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullWidths = true;
	this._roundFullWidths = true;
};
$hxClasses["haxe.ui.layouts.HorizontalLayout"] = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalLayout.__name__ = "haxe.ui.layouts.HorizontalLayout";
haxe_ui_layouts_HorizontalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_HorizontalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var xpos = this.get_paddingLeft();
		var usableSize = this.get_usableSize();
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
		}
		var evenlySpace = false;
		var aroundSpace = false;
		var betweenSpace = false;
		if(this.get_component().get_style() != null) {
			if(this.get_component().get_style().justifyContent == "space-between") {
				betweenSpace = true;
			}
			if(this.get_component().get_style().justifyContent == "space-evenly") {
				evenlySpace = true;
			}
			if(this.get_component().get_style().justifyContent == "space-around") {
				aroundSpace = true;
			}
		}
		var spacing = this.get_horizontalSpacing();
		if(betweenSpace) {
			spacing = usableSize.width / (visibleChildren - 1) + this.get_horizontalSpacing();
		} else if(aroundSpace) {
			spacing = (usableSize.width + this.get_horizontalSpacing() * (visibleChildren - 1)) / visibleChildren;
		} else if(evenlySpace) {
			spacing = (usableSize.width + this.get_horizontalSpacing() * (visibleChildren - 1)) / (visibleChildren + 1);
		}
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var ypos = 0;
			switch(this.verticalAlign(child)) {
			case "bottom":
				if(child.get_componentHeight() < this.get_component().get_componentHeight()) {
					ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginTop(child));
				}
				break;
			case "center":
				ypos = (usableSize.height - child.get_componentHeight()) / 2 + this.get_paddingTop() + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			if(aroundSpace) {
				child.moveComponent(xpos + spacing / 2 + this.marginLeft(child),ypos);
			} else if(evenlySpace) {
				child.moveComponent(xpos + spacing + this.marginLeft(child),ypos);
			} else {
				child.moveComponent(xpos + this.marginLeft(child),ypos);
			}
			xpos += child.get_componentWidth() + spacing;
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentWidth() > 0 && (child.get_percentWidth() == null || this.fixedMinWidth(child) == true)) {
				size.width -= child.get_componentWidth() + this.marginLeft(child) + this.marginRight(child);
			}
		}
		if(visibleChildren > 1) {
			size.width -= this.get_horizontalSpacing() * (visibleChildren - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_HorizontalLayout();
	}
	,__class__: haxe_ui_layouts_HorizontalLayout
});
var haxe_ui_components__$CheckBox_CheckBoxLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.components._CheckBox.CheckBoxLayout"] = haxe_ui_components__$CheckBox_CheckBoxLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.__name__ = "haxe.ui.components._CheckBox.CheckBoxLayout";
haxe_ui_components__$CheckBox_CheckBoxLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
		var icon = this._component.findComponent(null,haxe_ui_components_Image,true);
		if(icon != null) {
			icon.set_left(Math.round(icon.get_left()));
			icon.set_top(Math.round(icon.get_top()));
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_HorizontalLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this._component.get_autoWidth() == false) {
			var label = this._component.findComponent(null,haxe_ui_components_Label,false);
			if(label != null) {
				label.set_percentWidth(100);
			}
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_HorizontalLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$CheckBox_CheckBoxLayout();
	}
	,__class__: haxe_ui_components__$CheckBox_CheckBoxLayout
});
var haxe_ui_components_ColorPicker = function() {
	this._impl = null;
	haxe_ui_containers_Box.call(this);
	this._impl = new haxe_ui_components__$ColorPicker_HSVColorPickerImpl();
	this._impl.registerEvent("change",$bind(this,this.onImplValueChanged));
	this._impl.picker = this;
	this.addComponent(this._impl);
};
$hxClasses["haxe.ui.components.ColorPicker"] = haxe_ui_components_ColorPicker;
haxe_ui_components_ColorPicker.__name__ = "haxe.ui.components.ColorPicker";
haxe_ui_components_ColorPicker.__super__ = haxe_ui_containers_Box;
haxe_ui_components_ColorPicker.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_impl: null
	,get_currentColor: function() {
		return this._impl.get_currentColor();
	}
	,onImplValueChanged: function(_) {
		this.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		haxe_ui_containers_Box.prototype.addClass.call(this,name,invalidate,recursive);
		if(this._impl != null) {
			this._impl.onStyleClassChanged();
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		haxe_ui_containers_Box.prototype.removeClass.call(this,name,invalidate,recursive);
		if(this._impl != null) {
			this._impl.onStyleClassChanged();
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_ColorPicker();
	}
	,__class__: haxe_ui_components_ColorPicker
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{get_currentColor:"get_currentColor"})
});
var haxe_ui_components__$ColorPicker_ColorPickerImpl = function() {
	this._currentColor = null;
	this.picker = null;
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.components._ColorPicker.ColorPickerImpl"] = haxe_ui_components__$ColorPicker_ColorPickerImpl;
haxe_ui_components__$ColorPicker_ColorPickerImpl.__name__ = "haxe.ui.components._ColorPicker.ColorPickerImpl";
haxe_ui_components__$ColorPicker_ColorPickerImpl.__super__ = haxe_ui_containers_Box;
haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype = $extend(haxe_ui_containers_Box.prototype,{
	picker: null
	,_currentColor: null
	,get_currentColor: function() {
		return this._currentColor;
	}
	,set_currentColor: function(value) {
		this._currentColor = value;
		this.onCurrentColorChanged();
		return value;
	}
	,onCurrentColorChanged: function() {
	}
	,onInitialize: function() {
		haxe_ui_containers_Box.prototype.onInitialize.call(this);
		if(this._currentColor == null) {
			this.set_currentColor(16711680);
		}
	}
	,onStyleClassChanged: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$ColorPicker_ColorPickerImpl();
	}
	,__class__: haxe_ui_components__$ColorPicker_ColorPickerImpl
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_currentColor:"set_currentColor",get_currentColor:"get_currentColor"})
});
var haxe_ui_components__$ColorPicker_HSVColorPickerImpl = function() {
	this._trackingHue = false;
	this._trackingSaturationValue = false;
	this._sliderTracking = false;
	this._lastColor = null;
	haxe_ui_components__$ColorPicker_ColorPickerImpl.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_Absolute();
	c1.set_id("saturationValueContainer");
	c1.set_percentWidth(100.);
	c1.set_percentHeight(100.);
	c1.set_styleString("clip:true;padding-right: 3px;padding-bottom:3px;");
	var c2 = new haxe_ui_components_Canvas();
	c2.set_id("saturationValueGraph");
	c2.set_left(2.);
	c2.set_top(2.);
	c2.set_percentWidth(100.);
	c2.set_percentHeight(100.);
	c2.set_styleString("pointer-events:true");
	c1.addComponent(c2);
	var c3 = new haxe_ui_containers_Box();
	c3.set_id("saturationValueIndicator");
	c3.set_styleString("pointer-events:none");
	c3.set_includeInLayout(false);
	c1.addComponent(c3);
	c0.addComponent(c1);
	var c4 = new haxe_ui_containers_Absolute();
	c4.set_id("hueContainer");
	c4.set_percentWidth(100.);
	c4.set_styleString("clip:true;");
	var c5 = new haxe_ui_components_Canvas();
	c5.set_id("hueGraph");
	c5.set_left(2.);
	c5.set_top(2.);
	c5.set_height(20.);
	c5.set_percentWidth(100.);
	c5.set_styleString("pointer-events:true");
	c4.addComponent(c5);
	var c6 = new haxe_ui_containers_Box();
	c6.set_id("hueIndicator");
	c6.set_left(10.);
	c6.set_top(3.);
	c6.set_width(8.);
	c6.set_height(18.);
	c6.set_includeInLayout(false);
	c4.addComponent(c6);
	c0.addComponent(c4);
	var c7 = new haxe_ui_containers_HBox();
	c7.set_percentWidth(100.);
	c7.set_styleNames("controls-preview-container");
	var c8 = new haxe_ui_containers_HBox();
	c8.set_percentWidth(100.);
	c8.set_styleNames("controls-container");
	var c9 = new haxe_ui_components_Image();
	c9.set_id("prevControls");
	c9.set_styleString("pointer-events:true");
	c9.set_verticalAlign("center");
	c8.addComponent(c9);
	var c10 = new haxe_ui_containers_Stack();
	c10.set_id("controlsStack");
	c10.set_percentWidth(100.);
	c10.set_selectedIndex(0);
	var c11 = new haxe_ui_containers_Grid();
	c11.set_id("hsvControls");
	c11.set_percentWidth(100.);
	c11.set_styleString("spacing:0px");
	c11.set_columns(4);
	var c12 = new haxe_ui_components_Label();
	c12.set_text("{{hue}}");
	c12.set_styleNames("text-tiny");
	c11.addComponent(c12);
	var c13 = new haxe_ui_components_HorizontalSlider();
	c13.set_id("sliderHue");
	c13.set_styleNames("simple-slider");
	c13.set_max(360.);
	c13.set_allowFocus(false);
	c11.addComponent(c13);
	var c14 = new haxe_ui_components_Spacer();
	c14.set_width(5.);
	c11.addComponent(c14);
	var c15 = new haxe_ui_components_TextField();
	c15.set_id("inputHue");
	c15.set_styleNames("text-tiny");
	c15.set_restrictChars("0-9");
	c11.addComponent(c15);
	var c16 = new haxe_ui_components_Label();
	c16.set_text("{{saturation}}");
	c16.set_styleNames("text-tiny");
	c11.addComponent(c16);
	var c17 = new haxe_ui_components_HorizontalSlider();
	c17.set_id("sliderSaturation");
	c17.set_styleNames("simple-slider");
	c17.set_allowFocus(false);
	c11.addComponent(c17);
	var c18 = new haxe_ui_components_Spacer();
	c18.set_width(5.);
	c11.addComponent(c18);
	var c19 = new haxe_ui_components_TextField();
	c19.set_id("inputSaturation");
	c19.set_styleNames("text-tiny");
	c19.set_restrictChars("0-9");
	c11.addComponent(c19);
	var c20 = new haxe_ui_components_Label();
	c20.set_text("{{brightness}}");
	c20.set_styleNames("text-tiny");
	c11.addComponent(c20);
	var c21 = new haxe_ui_components_HorizontalSlider();
	c21.set_id("sliderValue");
	c21.set_styleNames("simple-slider");
	c21.set_allowFocus(false);
	c11.addComponent(c21);
	var c22 = new haxe_ui_components_Spacer();
	c22.set_width(5.);
	c11.addComponent(c22);
	var c23 = new haxe_ui_components_TextField();
	c23.set_id("inputValue");
	c23.set_styleNames("text-tiny");
	c23.set_restrictChars("0-9");
	c11.addComponent(c23);
	c10.addComponent(c11);
	var c24 = new haxe_ui_containers_Grid();
	c24.set_id("rgbControls");
	c24.set_percentWidth(100.);
	c24.set_styleString("spacing:0");
	c24.set_columns(4);
	var c25 = new haxe_ui_components_Label();
	c25.set_text("{{red}}");
	c25.set_styleNames("text-tiny");
	c24.addComponent(c25);
	var c26 = new haxe_ui_components_HorizontalSlider();
	c26.set_id("sliderRed");
	c26.set_styleNames("simple-slider");
	c26.set_max(255.);
	c26.set_allowFocus(false);
	c24.addComponent(c26);
	var c27 = new haxe_ui_components_Spacer();
	c27.set_width(5.);
	c24.addComponent(c27);
	var c28 = new haxe_ui_components_TextField();
	c28.set_id("inputRed");
	c28.set_styleNames("text-tiny");
	c28.set_restrictChars("0-9");
	c24.addComponent(c28);
	var c29 = new haxe_ui_components_Label();
	c29.set_text("{{green}}");
	c29.set_styleNames("text-tiny");
	c24.addComponent(c29);
	var c30 = new haxe_ui_components_HorizontalSlider();
	c30.set_id("sliderGreen");
	c30.set_styleNames("simple-slider");
	c30.set_max(255.);
	c30.set_allowFocus(false);
	c24.addComponent(c30);
	var c31 = new haxe_ui_components_Spacer();
	c31.set_width(5.);
	c24.addComponent(c31);
	var c32 = new haxe_ui_components_TextField();
	c32.set_id("inputGreen");
	c32.set_styleNames("text-tiny");
	c32.set_restrictChars("0-9");
	c24.addComponent(c32);
	var c33 = new haxe_ui_components_Label();
	c33.set_text("{{blue}}");
	c33.set_styleNames("text-tiny");
	c24.addComponent(c33);
	var c34 = new haxe_ui_components_HorizontalSlider();
	c34.set_id("sliderBlue");
	c34.set_styleNames("simple-slider");
	c34.set_max(255.);
	c34.set_allowFocus(false);
	c24.addComponent(c34);
	var c35 = new haxe_ui_components_Spacer();
	c35.set_width(5.);
	c24.addComponent(c35);
	var c36 = new haxe_ui_components_TextField();
	c36.set_id("inputBlue");
	c36.set_styleNames("text-tiny");
	c36.set_restrictChars("0-9");
	c24.addComponent(c36);
	c10.addComponent(c24);
	c8.addComponent(c10);
	var c37 = new haxe_ui_components_Image();
	c37.set_id("nextControls");
	c37.set_styleString("pointer-events:true");
	c37.set_verticalAlign("center");
	c8.addComponent(c37);
	c7.addComponent(c8);
	var c38 = new haxe_ui_containers_VBox();
	c38.set_percentHeight(100.);
	c38.set_styleString("spacing: 2px");
	var c39 = new haxe_ui_containers_Box();
	c39.set_id("colorPreviewContainer");
	c39.set_width(64.);
	c39.set_percentHeight(100.);
	var c40 = new haxe_ui_containers_Box();
	c40.set_id("colorPreview");
	c40.set_percentWidth(100.);
	c40.set_percentHeight(100.);
	c40.set_styleString("background-color: #ff0000");
	c39.addComponent(c40);
	c38.addComponent(c39);
	var c41 = new haxe_ui_components_TextField();
	c41.set_id("inputHex");
	c41.set_text("FF0000");
	c41.set_styleNames("text-tiny");
	c41.set_horizontalAlign("center");
	c38.addComponent(c41);
	c7.addComponent(c38);
	c0.addComponent(c7);
	this.addComponent(c0);
	c9.registerEvent("click",function(event) {
		var __this__ = c9;
		var controlsStack = c10;
		controlsStack.prevPage();
	});
	c37.registerEvent("click",function(event) {
		var __this__ = c37;
		var controlsStack = c10;
		controlsStack.nextPage();
	});
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.sliderValue = c21;
	this.sliderSaturation = c17;
	this.sliderRed = c26;
	this.sliderHue = c13;
	this.sliderGreen = c30;
	this.sliderBlue = c34;
	this.saturationValueIndicator = c3;
	this.saturationValueGraph = c2;
	this.saturationValueContainer = c1;
	this.rgbControls = c24;
	this.prevControls = c9;
	this.nextControls = c37;
	this.inputValue = c23;
	this.inputSaturation = c19;
	this.inputRed = c28;
	this.inputHue = c15;
	this.inputHex = c41;
	this.inputGreen = c32;
	this.inputBlue = c36;
	this.hueIndicator = c6;
	this.hueGraph = c5;
	this.hueContainer = c4;
	this.hsvControls = c11;
	this.controlsStack = c10;
	this.colorPreviewContainer = c39;
	this.colorPreview = c40;
	c12.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("hue"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c12,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("hue");
	});
	c16.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("saturation"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c16,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("saturation");
	});
	c20.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("brightness"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c20,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("brightness");
	});
	c25.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("red"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c25,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("red");
	});
	c29.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("green"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c29,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("green");
	});
	c33.set_text(haxe_ui_locale_LocaleManager.get_instance().lookupString("blue"));
	haxe_ui_locale_LocaleManager.get_instance().registerComponent(c33,"text",function() {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("blue");
	});
	this.saturationValueGraph.componentGraphics.setProperty("html5.graphics.method","canvas");
	this.hueGraph.componentGraphics.setProperty("html5.graphics.method","canvas");
	this.set_currentColor(16711680);
	var c = this.controlsStack;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onControlStackChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "controlsStack" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("focusin",$bind(this,this.onInputFocus));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragstart",$bind(this,this.onSliderDragStart));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("dragend",$bind(this,this.onSliderDragEnd));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderHue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onHueSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onHueInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderSaturation;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onSaturationSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputSaturation;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onSaturationInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputSaturation" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderValue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onValueSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputValue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onValueInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputValue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderRed;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onRedSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputRed;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onRedInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputRed" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderGreen;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onGreenSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputGreen;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onGreenInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputGreen" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.sliderBlue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onBlueSliderChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "sliderBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputBlue;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onBlueInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputBlue" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.inputHex;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onHexInputChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "inputHex" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.saturationValueGraph;
	if(c != null) {
		c.registerEvent("mousedown",$bind(this,this.onSaturationValueGraphDown));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "saturationValueGraph" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
	var c = this.hueGraph;
	if(c != null) {
		c.registerEvent("mousedown",$bind(this,this.onHueGraphDown));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "hueGraph" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 407, className : "haxe.ui.components._ColorPicker.HSVColorPickerImpl", methodName : "new"});
	}
};
$hxClasses["haxe.ui.components._ColorPicker.HSVColorPickerImpl"] = haxe_ui_components__$ColorPicker_HSVColorPickerImpl;
haxe_ui_components__$ColorPicker_HSVColorPickerImpl.__name__ = "haxe.ui.components._ColorPicker.HSVColorPickerImpl";
haxe_ui_components__$ColorPicker_HSVColorPickerImpl.__super__ = haxe_ui_components__$ColorPicker_ColorPickerImpl;
haxe_ui_components__$ColorPicker_HSVColorPickerImpl.prototype = $extend(haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype,{
	_currentColorHSV: null
	,_currentColorRGBF: null
	,_lastColor: null
	,set_currentColor: function(value) {
		this._currentColorHSV = haxe_ui_util_ColorUtil.toHSV(value);
		this._currentColorRGBF = haxe_ui_util_ColorUtil.hsvToRGBF(this._currentColorHSV.h,this._currentColorHSV.s,this._currentColorHSV.v);
		return haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype.set_currentColor.call(this,value);
	}
	,onCurrentColorChanged: function() {
		this.invalidateComponent("data",false);
	}
	,validateComponentData: function() {
		haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype.validateComponentData.call(this);
		this._currentColorRGBF.r = Math.round(this._currentColorRGBF.r);
		this._currentColorRGBF.g = Math.round(this._currentColorRGBF.g);
		this._currentColorRGBF.b = Math.round(this._currentColorRGBF.b);
		this.updateSaturationValueGraph();
		this.updateHueGraph();
		if(this.isHSV()) {
			this.sliderHue.set_pos(this._currentColorHSV.h);
			this.sliderSaturation.set_pos(this._currentColorHSV.s);
			this.sliderValue.set_pos(this._currentColorHSV.v);
			this.inputHue.set_text("" + Math.round(this._currentColorHSV.h));
			this.inputSaturation.set_text("" + Math.round(this._currentColorHSV.s));
			this.inputValue.set_text("" + Math.round(this._currentColorHSV.v));
		} else if(this.isRGB()) {
			this.sliderRed.set_pos(this._currentColorRGBF.r);
			this.sliderGreen.set_pos(this._currentColorRGBF.g);
			this.sliderBlue.set_pos(this._currentColorRGBF.b);
			this.inputRed.set_text("" + Math.round(this._currentColorRGBF.r));
			this.inputGreen.set_text("" + Math.round(this._currentColorRGBF.g));
			this.inputBlue.set_text("" + Math.round(this._currentColorRGBF.b));
		}
		this.inputHex.set_text(StringTools.hex(this._currentColorRGBF.r | 0,2) + StringTools.hex(this._currentColorRGBF.g | 0,2) + StringTools.hex(this._currentColorRGBF.b | 0,2));
		var coord = this.saturationValueCoordFromHSV(this._currentColorHSV.h,this._currentColorHSV.s,this._currentColorHSV.v);
		this.saturationValueIndicator.set_left(coord.x | 0);
		this.saturationValueIndicator.set_top((coord.y | 0) - 1);
		var coord = this.hueCoordFromHSV(this._currentColorHSV.h,this._currentColorHSV.s,this._currentColorHSV.v);
		this.hueIndicator.set_left(coord.x | 0);
		this.hueIndicator.set_top(coord.y | 0);
		this._currentColor = haxe_ui_util_Color.fromComponents(Math.round(this._currentColorRGBF.r),Math.round(this._currentColorRGBF.g),Math.round(this._currentColorRGBF.b),255);
		this.colorPreview.set_backgroundColor(haxe_ui_util_Color.fromString(haxe_ui_util_Color.toHex(this._currentColor)));
		if(this._lastColor != this._currentColor) {
			this._lastColor = this._currentColor;
			this.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,updateSaturationValueGraph: function() {
		var cx = this.saturationValueGraph.get_width();
		var cy = this.saturationValueGraph.get_height();
		if(cx <= 0 || cy <= 0) {
			return;
		}
		if(this._currentColorRGBF.r == 255 && this._currentColorRGBF.g == 255 && this._currentColorRGBF.b == 255) {
			return;
		}
		var stepX = 100 / cx;
		var stepY = 100 / cy;
		var bytes = new haxe_io_Bytes(new ArrayBuffer(cx * cy * 4 | 0));
		var _g = 0;
		var _g1 = cy | 0;
		while(_g < _g1) {
			var y = _g++;
			var _g2 = 0;
			var _g3 = cx | 0;
			while(_g2 < _g3) {
				var x = _g2++;
				var i = y * (cx * 4) + x * 4 | 0;
				var pixel = haxe_ui_util_ColorUtil.hsvToRGBF(this._currentColorHSV.h - 1,(x + 1) * stepX,100 - y * stepY);
				if(this.picker.get_disabled()) {
					var greypixel = haxe_ui_util_ColorUtil.rgbToGray(Math.round(pixel.r),Math.round(pixel.g),Math.round(pixel.b));
					bytes.b[i] = greypixel;
					bytes.b[i + 1] = greypixel;
					bytes.b[i + 2] = greypixel;
					bytes.b[i + 3] = 255;
				} else {
					bytes.b[i] = Math.round(pixel.r);
					bytes.b[i + 1] = Math.round(pixel.g);
					bytes.b[i + 2] = Math.round(pixel.b);
					bytes.b[i + 3] = 255;
				}
			}
		}
		this.saturationValueGraph.componentGraphics.clear();
		this.saturationValueGraph.componentGraphics.setPixels(bytes);
	}
	,updateHueGraph: function() {
		var cx = this.hueGraph.get_width();
		var cy = this.hueGraph.get_height();
		if(cx <= 0 || cy <= 0) {
			return;
		}
		if(this._currentColorRGBF.r == 255 && this._currentColorRGBF.g == 255 && this._currentColorRGBF.b == 255) {
			return;
		}
		var step = 360 / cx;
		var bytes = new haxe_io_Bytes(new ArrayBuffer(cx * cy * 4 | 0));
		var _g = 0;
		var _g1 = cy | 0;
		while(_g < _g1) {
			var y = _g++;
			var _g2 = 0;
			var _g3 = cx | 0;
			while(_g2 < _g3) {
				var x = _g2++;
				var i = y * (cx * 4) + x * 4 | 0;
				var c = haxe_ui_util_ColorUtil.hsvToRGBF(x * step,100,100);
				if(this.picker.get_disabled()) {
					var greypixel = haxe_ui_util_ColorUtil.rgbToGray(Math.round(c.r),Math.round(c.g),Math.round(c.b));
					bytes.b[i] = greypixel;
					bytes.b[i + 1] = greypixel;
					bytes.b[i + 2] = greypixel;
					bytes.b[i + 3] = 255;
				} else {
					bytes.b[i] = Math.round(c.r);
					bytes.b[i + 1] = Math.round(c.g);
					bytes.b[i + 2] = Math.round(c.b);
					bytes.b[i + 3] = 255;
				}
			}
		}
		this.hueGraph.componentGraphics.clear();
		this.hueGraph.componentGraphics.setPixels(bytes);
	}
	,onControlStackChange: function(_) {
		this.onCurrentColorChanged();
	}
	,isHSV: function() {
		return this.controlsStack.get_selectedIndex() == 0;
	}
	,isRGB: function() {
		return this.controlsStack.get_selectedIndex() == 1;
	}
	,onInputFocus: function(e) {
	}
	,_sliderTracking: null
	,onSliderDragStart: function(_) {
		this._sliderTracking = true;
	}
	,onSliderDragEnd: function(_) {
		this._sliderTracking = false;
	}
	,onHueSliderChanged: function(_) {
		this.applyHSV({ h : this.sliderHue.get_pos(), s : this._currentColorHSV.s, v : this._currentColorHSV.v});
	}
	,onHueInputChanged: function(_) {
		if(this.inputHue.get_text() == null || this.inputHue.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputHue.get_text());
		if(v > 360) {
			v = 360;
		}
		this.sliderHue.set_pos(v);
	}
	,onSaturationSliderChanged: function(_) {
		this.applyHSV({ h : this._currentColorHSV.h, s : this.sliderSaturation.get_pos(), v : this._currentColorHSV.v});
	}
	,onSaturationInputChanged: function(_) {
		if(this.inputSaturation.get_text() == null || this.inputSaturation.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputSaturation.get_text());
		if(v > 100) {
			v = 100;
		}
		this.sliderSaturation.set_pos(v);
	}
	,onValueSliderChanged: function(_) {
		this.applyHSV({ h : this._currentColorHSV.h, s : this._currentColorHSV.s, v : this.sliderValue.get_pos()});
	}
	,onValueInputChanged: function(_) {
		if(this.inputValue.get_text() == null || this.inputValue.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputValue.get_text());
		if(v > 100) {
			v = 100;
		}
		this.sliderValue.set_pos(v);
	}
	,onRedSliderChanged: function(_) {
		this.applyHSV(haxe_ui_util_ColorUtil.rgbfToHSV(this.sliderRed.get_pos(),this._currentColorRGBF.g,this._currentColorRGBF.b));
	}
	,onRedInputChanged: function(_) {
		if(this.inputRed.get_text() == null || this.inputRed.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputRed.get_text());
		if(v > 255) {
			v = 255;
		}
		this.sliderRed.set_pos(v);
	}
	,onGreenSliderChanged: function(_) {
		this.applyHSV(haxe_ui_util_ColorUtil.rgbfToHSV(this._currentColorRGBF.r,this.sliderGreen.get_pos(),this._currentColorRGBF.b));
	}
	,onGreenInputChanged: function(_) {
		if(this.inputGreen.get_text() == null || this.inputGreen.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputGreen.get_text());
		if(v > 255) {
			v = 255;
		}
		this.sliderGreen.set_pos(v);
	}
	,onBlueSliderChanged: function(_) {
		this.applyHSV(haxe_ui_util_ColorUtil.rgbfToHSV(this._currentColorRGBF.r,this._currentColorRGBF.g,this.sliderBlue.get_pos()));
	}
	,onBlueInputChanged: function(_) {
		if(this.inputBlue.get_text() == null || this.inputBlue.get_text() == "") {
			return;
		}
		var v = parseFloat(this.inputBlue.get_text());
		if(v > 255) {
			v = 255;
		}
		this.sliderBlue.set_pos(v);
	}
	,onHexInputChanged: function(_) {
		if(this.inputHex.get_text() == null || this.inputHex.get_text() == "" || this.inputHex.get_text().length != 6) {
			return;
		}
		var hexR = HxOverrides.substr(this.inputHex.get_text(),0,2);
		var hexG = HxOverrides.substr(this.inputHex.get_text(),2,2);
		var hexB = HxOverrides.substr(this.inputHex.get_text(),4,2);
		var r = Std.parseInt("0x" + hexR);
		var g = Std.parseInt("0x" + hexG);
		var b = Std.parseInt("0x" + hexB);
		if(this._trackingSaturationValue == false && this._sliderTracking == false) {
			this.applyHSV(haxe_ui_util_ColorUtil.rgbfToHSV(r,g,b));
		}
	}
	,applyHSV: function(newHSV) {
		this._currentColorHSV = newHSV;
		this._currentColorRGBF = haxe_ui_util_ColorUtil.hsvToRGBF(newHSV.h,newHSV.s,newHSV.v);
		this.onCurrentColorChanged();
	}
	,_trackingSaturationValue: null
	,onSaturationValueGraphDown: function(e) {
		e.cancel();
		this._trackingSaturationValue = true;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this.applyHSVFromCoord(e.screenX - this.saturationValueGraph.get_screenLeft(),e.screenY - this.saturationValueGraph.get_screenTop());
	}
	,_trackingHue: null
	,onHueGraphDown: function(e) {
		e.cancel();
		this._trackingHue = true;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this.applyHueFromCoord(e.screenX - this.hueGraph.get_screenLeft(),e.screenY - this.hueGraph.get_screenTop());
	}
	,onScreenMouseMove: function(e) {
		if(this._trackingSaturationValue) {
			this.applyHSVFromCoord(e.screenX - this.saturationValueGraph.get_screenLeft(),e.screenY - this.saturationValueGraph.get_screenTop());
		} else if(this._trackingHue) {
			this.applyHueFromCoord(e.screenX - this.hueGraph.get_screenLeft(),e.screenY - this.hueGraph.get_screenTop());
		}
	}
	,onScreenMouseUp: function(e) {
		this._trackingSaturationValue = false;
		this._trackingHue = false;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
	}
	,applyHSVFromCoord: function(x,y) {
		var cx = this.saturationValueGraph.get_width();
		var cy = this.saturationValueGraph.get_height();
		if(x > cx) {
			x = cx;
		} else if(x < 0) {
			x = 0;
		}
		if(y > cy) {
			y = cy;
		} else if(y < 0) {
			y = 0;
		}
		var newHSV = this.hsvFromSaturationValueCoord(this._currentColorHSV.h,x,y);
		this._currentColorHSV = newHSV;
		this._currentColorRGBF = haxe_ui_util_ColorUtil.hsvToRGBF(newHSV.h,newHSV.s,newHSV.v);
		this.onCurrentColorChanged();
	}
	,applyHueFromCoord: function(x,y) {
		var cx = this.hueGraph.get_width();
		var step = 360 / (this.hueGraph.get_width() - 10);
		var hue = (x - 3) * step;
		this.applyHSV({ h : hue, s : this._currentColorHSV.s, v : this._currentColorHSV.v});
	}
	,hsvFromSaturationValueCoord: function(hue,x,y) {
		var stepX = 100 / this.saturationValueGraph.get_width();
		var stepY = 100 / this.saturationValueGraph.get_height();
		var s = x * stepX;
		var v = 100 - y * stepY;
		return { h : hue, s : s, v : v};
	}
	,saturationValueCoordFromHSV: function(hue,saturation,value) {
		var stepX = 100 / this.saturationValueGraph.get_width();
		var stepY = 100 / this.saturationValueGraph.get_height();
		var x = (saturation - 1) / stepX;
		var y = (100 - value) / stepY;
		return new haxe_ui_geom_Point(x,y);
	}
	,hueCoordFromHSV: function(hue,saturation,value) {
		var step = 360 / (this.hueGraph.get_width() - 10);
		var x = hue / step;
		var y = 3;
		return new haxe_ui_geom_Point(x + 3,y);
	}
	,onStyleClassChanged: function() {
		if(this.picker.classes.indexOf("no-sliders") != -1 || this.picker.classes.indexOf("no-text-inputs") != -1) {
			this.hsvControls.set_columns(3);
			this.rgbControls.set_columns(3);
		} else {
			this.hsvControls.set_columns(4);
			this.rgbControls.set_columns(4);
		}
	}
	,sliderValue: null
	,sliderSaturation: null
	,sliderRed: null
	,sliderHue: null
	,sliderGreen: null
	,sliderBlue: null
	,saturationValueIndicator: null
	,saturationValueGraph: null
	,saturationValueContainer: null
	,rgbControls: null
	,prevControls: null
	,nextControls: null
	,inputValue: null
	,inputSaturation: null
	,inputRed: null
	,inputHue: null
	,inputHex: null
	,inputGreen: null
	,inputBlue: null
	,hueIndicator: null
	,hueGraph: null
	,hueContainer: null
	,hsvControls: null
	,controlsStack: null
	,colorPreviewContainer: null
	,colorPreview: null
	,registerBehaviours: function() {
		haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components__$ColorPicker_ColorPickerImpl.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$ColorPicker_HSVColorPickerImpl();
	}
	,__class__: haxe_ui_components__$ColorPicker_HSVColorPickerImpl
});
var haxe_ui_components_Decorator = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.components.Decorator"] = haxe_ui_components_Decorator;
haxe_ui_components_Decorator.__name__ = "haxe.ui.components.Decorator";
haxe_ui_components_Decorator.__super__ = haxe_ui_containers_Box;
haxe_ui_components_Decorator.prototype = $extend(haxe_ui_containers_Box.prototype,{
	set_icon: function(value) {
		var image = this.findComponent(null,haxe_ui_components_Image);
		if(image == null) {
			image = new haxe_ui_components_Image();
			this.addComponent(image);
		}
		image.set_resource(value);
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Decorator();
	}
	,__class__: haxe_ui_components_Decorator
});
var haxe_ui_components_DropDown = function() {
	this._itemRenderer = null;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.DropDown"] = haxe_ui_components_DropDown;
haxe_ui_components_DropDown.__name__ = "haxe.ui.components.DropDown";
haxe_ui_components_DropDown.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_DropDown.__super__ = haxe_ui_components_Button;
haxe_ui_components_DropDown.prototype = $extend(haxe_ui_components_Button.prototype,{
	_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		this._itemRenderer = value;
		return value;
	}
	,onThemeChanged: function() {
		haxe_ui_components_Button.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_components_DropDownBuilder);
		builder.onThemeChanged();
	}
	,postCloneComponent: function(c) {
		haxe_ui_components_Button.prototype.postCloneComponent.call(this,c);
		if(this._itemRenderer != null) {
			c.addComponent(this._itemRenderer.cloneComponent());
		}
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_DropDownEvents;
		this._compositeBuilderClass = haxe_ui_components_DropDownBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
		this.behaviours.register("handlerStyleNames",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dataSource",haxe_ui_components__$DropDown_DataSourceBehaviour);
		this.behaviours.register("type",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromString("list"));
		this.behaviours.register("virtual",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("dropdownWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownHeight",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownSize",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("selectedIndex",haxe_ui_components__$DropDown_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_components__$DropDown_SelectedItemBehaviour);
		this.behaviours.register("searchable",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("searchPrompt",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromString("{{search}}"));
		this.behaviours.register("searchField",haxe_ui_components__$DropDown_SearchFieldBehaviour);
		this.behaviours.register("dropDownOpen",haxe_ui_components__$DropDown_DropDownOpenBehaviour);
		this.behaviours.register("hideDropDown",haxe_ui_components__$DropDown_HideDropDown);
		this.behaviours.register("showDropDown",haxe_ui_components__$DropDown_ShowDropDown);
	}
	,get_handlerStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("handlerStyleNames"));
	}
	,set_handlerStyleNames: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"handlerStyleNames",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("handlerStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"handlerStyleNames"));
		return value;
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_type: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("type"));
	}
	,set_type: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"type",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("type",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"type"));
		return value;
	}
	,get_virtual: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("virtual",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"virtual"));
		return value;
	}
	,get_dropdownWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("dropdownWidth"));
	}
	,set_dropdownWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dropdownWidth"));
		return value;
	}
	,get_dropdownHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("dropdownHeight"));
	}
	,set_dropdownHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dropdownHeight"));
		return value;
	}
	,get_dropdownSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("dropdownSize"));
	}
	,set_dropdownSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownSize",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dropdownSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItem"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_searchable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("searchable"));
	}
	,set_searchable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("searchable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"searchable"));
		return value;
	}
	,get_searchPrompt: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("searchPrompt"));
	}
	,set_searchPrompt: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"searchPrompt",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("searchPrompt",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"searchPrompt"));
		return value;
	}
	,get_searchField: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("searchField"));
	}
	,set_searchField: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("searchField",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"searchField"));
		return value;
	}
	,get_dropDownOpen: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("dropDownOpen"));
	}
	,set_dropDownOpen: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropDownOpen",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dropDownOpen"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedItem();
	}
	,set_value: function(value) {
		this.set_selectedItem(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this.get_itemRenderer() != null) {
			c.set_itemRenderer(this.get_itemRenderer());
		}
		if(this.get_handlerStyleNames() != null) {
			c.set_handlerStyleNames(this.get_handlerStyleNames());
		}
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		if(this.get_type() != null) {
			c.set_type(this.get_type());
		}
		c.set_virtual(this.get_virtual());
		if(this.get_dropdownWidth() != null) {
			c.set_dropdownWidth(this.get_dropdownWidth());
		}
		if(this.get_dropdownHeight() != null) {
			c.set_dropdownHeight(this.get_dropdownHeight());
		}
		if(this.get_dropdownSize() != null) {
			c.set_dropdownSize(this.get_dropdownSize());
		}
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedItem() != null) {
			c.set_selectedItem(this.get_selectedItem());
		}
		c.set_searchable(this.get_searchable());
		if(this.get_searchPrompt() != null) {
			c.set_searchPrompt(this.get_searchPrompt());
		}
		if(this.get_searchField() != null) {
			c.set_searchField(this.get_searchField());
		}
		c.set_dropDownOpen(this.get_dropDownOpen());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_DropDown();
	}
	,__class__: haxe_ui_components_DropDown
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_dropDownOpen:"set_dropDownOpen",get_dropDownOpen:"get_dropDownOpen",set_searchField:"set_searchField",get_searchField:"get_searchField",set_searchPrompt:"set_searchPrompt",get_searchPrompt:"get_searchPrompt",set_searchable:"set_searchable",get_searchable:"get_searchable",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_dropdownSize:"set_dropdownSize",get_dropdownSize:"get_dropdownSize",set_dropdownHeight:"set_dropdownHeight",get_dropdownHeight:"get_dropdownHeight",set_dropdownWidth:"set_dropdownWidth",get_dropdownWidth:"get_dropdownWidth",set_virtual:"set_virtual",get_virtual:"get_virtual",set_type:"set_type",get_type:"get_type",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_handlerStyleNames:"set_handlerStyleNames",get_handlerStyleNames:"get_handlerStyleNames",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer"})
});
var haxe_ui_components__$DropDown_HideDropDown = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.HideDropDown"] = haxe_ui_components__$DropDown_HideDropDown;
haxe_ui_components__$DropDown_HideDropDown.__name__ = "haxe.ui.components._DropDown.HideDropDown";
haxe_ui_components__$DropDown_HideDropDown.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_HideDropDown.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		events.hideDropDown();
		return null;
	}
	,__class__: haxe_ui_components__$DropDown_HideDropDown
});
var haxe_ui_components__$DropDown_ShowDropDown = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.ShowDropDown"] = haxe_ui_components__$DropDown_ShowDropDown;
haxe_ui_components__$DropDown_ShowDropDown.__name__ = "haxe.ui.components._DropDown.ShowDropDown";
haxe_ui_components__$DropDown_ShowDropDown.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_ShowDropDown.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		events.showDropDown();
		return null;
	}
	,__class__: haxe_ui_components__$DropDown_ShowDropDown
});
var haxe_ui_components__$DropDown_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.DataSourceBehaviour"] = haxe_ui_components__$DropDown_DataSourceBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.__name__ = "haxe.ui.components._DropDown.DataSourceBehaviour";
haxe_ui_components__$DropDown_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value) == true) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
		}
		return this._value;
	}
	,set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.reset();
		if(this._component.get_text() == null && this._component.get_isReady()) {
			(js_Boot.__cast(this._component , haxe_ui_components_DropDown)).set_selectedIndex(0);
		}
	}
	,__class__: haxe_ui_components__$DropDown_DataSourceBehaviour
});
var haxe_ui_components__$DropDown_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SelectedIndexBehaviour"] = haxe_ui_components__$DropDown_SelectedIndexBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedIndexBehaviour";
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
	}
	,get: function() {
		if(this._component.get_isReady() == false) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		return haxe_ui_util_Variant.fromInt(handler.get_selectedIndex());
	}
	,set: function(value) {
		if(this._component.get_isReady() == false) {
			haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
			return;
		}
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._value = value;
		this.invalidateData();
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
	}
	,__class__: haxe_ui_components__$DropDown_SelectedIndexBehaviour
});
var haxe_ui_components__$DropDown_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_DynamicDataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SelectedItemBehaviour"] = haxe_ui_components__$DropDown_SelectedItemBehaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedItemBehaviour";
haxe_ui_components__$DropDown_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_DynamicDataBehaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_DynamicDataBehaviour.prototype,{
	validateData: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedItem(this._value);
	}
	,getDynamic: function() {
		if(this._component.get_isReady() == false) {
			return this._value;
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		return handler.get_selectedItem();
	}
	,setDynamic: function(value) {
		if(this._component.get_isReady() == false) {
			haxe_ui_behaviours_DynamicDataBehaviour.prototype.setDynamic.call(this,value);
			return;
		}
		this._value = value;
		this.invalidateData();
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedItem(value);
	}
	,__class__: haxe_ui_components__$DropDown_SelectedItemBehaviour
});
var haxe_ui_components__$DropDown_SearchFieldBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SearchFieldBehaviour"] = haxe_ui_components__$DropDown_SearchFieldBehaviour;
haxe_ui_components__$DropDown_SearchFieldBehaviour.__name__ = "haxe.ui.components._DropDown.SearchFieldBehaviour";
haxe_ui_components__$DropDown_SearchFieldBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_SearchFieldBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		return haxe_ui_util_Variant.fromComponent(events.get_searchField());
	}
	,set: function(value) {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		events.set_searchField(haxe_ui_util_Variant.toComponent(value));
	}
	,__class__: haxe_ui_components__$DropDown_SearchFieldBehaviour
});
var haxe_ui_components__$DropDown_DropDownOpenBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.DropDownOpenBehaviour"] = haxe_ui_components__$DropDown_DropDownOpenBehaviour;
haxe_ui_components__$DropDown_DropDownOpenBehaviour.__name__ = "haxe.ui.components._DropDown.DropDownOpenBehaviour";
haxe_ui_components__$DropDown_DropDownOpenBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_DropDownOpenBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		return haxe_ui_util_Variant.fromBool(events._dropdownOpen);
	}
	,set: function(value) {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(true))) {
			events.showDropDown();
		} else {
			events.hideDropDown();
		}
	}
	,__class__: haxe_ui_components__$DropDown_DropDownOpenBehaviour
});
var haxe_ui_components_IDropDownHandler = function() { };
$hxClasses["haxe.ui.components.IDropDownHandler"] = haxe_ui_components_IDropDownHandler;
haxe_ui_components_IDropDownHandler.__name__ = "haxe.ui.components.IDropDownHandler";
haxe_ui_components_IDropDownHandler.__isInterface__ = true;
haxe_ui_components_IDropDownHandler.prototype = {
	get_component: null
	,get_selectedIndex: null
	,set_selectedIndex: null
	,get_selectedItem: null
	,set_selectedItem: null
	,component: null
	,prepare: null
	,reset: null
	,applyDefault: null
	,pauseEvents: null
	,resumeEvents: null
	,__class__: haxe_ui_components_IDropDownHandler
	,__properties__: {set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_component:"get_component"}
};
var haxe_ui_components_DropDownHandler = function(dropdown) {
	this.eventsPaused = false;
	this._dropdown = dropdown;
};
$hxClasses["haxe.ui.components.DropDownHandler"] = haxe_ui_components_DropDownHandler;
haxe_ui_components_DropDownHandler.__name__ = "haxe.ui.components.DropDownHandler";
haxe_ui_components_DropDownHandler.__interfaces__ = [haxe_ui_components_IDropDownHandler];
haxe_ui_components_DropDownHandler.prototype = {
	_dropdown: null
	,component: null
	,get_component: function() {
		return null;
	}
	,prepare: function(wrapper) {
	}
	,reset: function() {
	}
	,get_selectedIndex: function() {
		return -1;
	}
	,set_selectedIndex: function(value) {
		return value;
	}
	,get_selectedItem: function() {
		return null;
	}
	,set_selectedItem: function(value) {
		return value;
	}
	,applyDefault: function() {
	}
	,eventsPaused: null
	,pauseEvents: function() {
		this.eventsPaused = true;
	}
	,resumeEvents: function() {
		var _gthis = this;
		haxe_ui_Toolkit.callLater(function() {
			_gthis.eventsPaused = false;
		});
	}
	,__class__: haxe_ui_components_DropDownHandler
	,__properties__: {set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_component:"get_component"}
};
var haxe_ui_components__$DropDown_ListDropDownHandler = function(dropdown) {
	this._cachedSelectedItem = null;
	this._cachedSelectedIndex = -1;
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components._DropDown.ListDropDownHandler"] = haxe_ui_components__$DropDown_ListDropDownHandler;
haxe_ui_components__$DropDown_ListDropDownHandler.__name__ = "haxe.ui.components._DropDown.ListDropDownHandler";
haxe_ui_components__$DropDown_ListDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components__$DropDown_ListDropDownHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_listview: null
	,get_component: function() {
		this.createListView();
		return this._listview;
	}
	,reset: function() {
		if(this._listview != null) {
			this._listview.set_dataSource(this._dropdown.get_dataSource());
		}
	}
	,prepare: function(wrapper) {
		var itemCount = 4;
		if(this._dropdown.get_dropdownSize() != null) {
			itemCount = this._dropdown.get_dropdownSize();
		}
		if(this._listview.get_dataSource() != null && this._listview.get_dataSource().get_size() < itemCount) {
			itemCount = this._listview.get_dataSource().get_size();
		}
		if(itemCount > 0 && this._dropdown.get_dropdownHeight() == null) {
			this._listview.set_itemCount(itemCount);
		}
		this._listview.syncComponentValidation();
		if(this._dropdown.get_dropdownWidth() == null) {
			wrapper.syncComponentValidation();
			var offset = 0;
			if(wrapper.get_layout() != null) {
				offset = wrapper.get_layout().get_paddingLeft() + wrapper.get_layout().get_paddingRight();
			}
			this._listview.set_width(this._dropdown.get_width() - offset);
		} else {
			this._listview.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._listview.set_height(this._dropdown.get_dropdownHeight());
		}
		var selectedIndex = this._dropdown.get_selectedIndex();
		if(this._dropdown.get_dataSource() != null && this._dropdown.get_text() != null && selectedIndex < 0) {
			var text = this._dropdown.get_text();
			var itemIndex = this.indexOfItem(text);
			if(itemIndex != -1) {
				selectedIndex = itemIndex;
			}
		}
		this._listview.unregisterEvent("change",$bind(this,this.onListChange));
		this._listview.set_selectedIndex(selectedIndex);
		this._listview.syncComponentValidation();
		this._listview.registerEvent("change",$bind(this,this.onListChange));
	}
	,_cachedSelectedIndex: null
	,get_selectedIndex: function() {
		if(this._listview == null) {
			return this._cachedSelectedIndex;
		}
		return this._listview.get_selectedIndex();
	}
	,set_selectedIndex: function(value) {
		var data = null;
		var dispatchChanged = false;
		if(this._listview != null && this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			this._listview.set_selectedIndex(value);
		} else if(this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
				data = this._dropdown.get_dataSource().get(value);
			}
			dispatchChanged = true;
		}
		if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
			var data1 = this._dropdown.get_dataSource().get(value);
			var itemRenderer = this._dropdown.findComponent(null,haxe_ui_core_ItemRenderer);
			if(itemRenderer == null) {
				var text = null;
				if(Type.typeof(data1) == ValueType.TObject) {
					text = data1.text;
					if(text == null) {
						text = data1.value;
					}
				} else {
					text = Std.string(data1);
				}
				this._dropdown.set_text(text);
			} else {
				itemRenderer.set_data(data1);
			}
		}
		if(dispatchChanged) {
			var event = new haxe_ui_events_UIEvent("change",false,data);
			event.value = haxe_ui_util_Variant.fromDynamic(data);
			this._dropdown.dispatch(event);
			this._dropdown.dispatch(new haxe_ui_events_UIEvent("propertychange",false,"selectedItem"));
		}
		return value;
	}
	,indexOfItem: function(text) {
		if(text == null) {
			return -1;
		}
		var index = -1;
		if(this._dropdown.get_dataSource() != null) {
			var _g = 0;
			var _g1 = this._dropdown.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var item = this._dropdown.get_dataSource().get(i);
				if(item == text || item.value == text || item.text == text) {
					index = i;
				}
			}
		}
		if(index == -1 && this._dropdown.get_dataSource() != null) {
			var expr = haxe_ui_locale_LocaleManager.get_instance().findBindingExpr(this._dropdown,"text");
			if(expr != null) {
				text = expr;
				var _g = 0;
				var _g1 = this._dropdown.get_dataSource().get_size();
				while(_g < _g1) {
					var i = _g++;
					var item = this._dropdown.get_dataSource().get(i);
					if(item == text || item.value == text || item.text == text) {
						index = i;
					}
				}
			}
		}
		return index;
	}
	,get_selectedItem: function() {
		if(this._listview == null) {
			if(this._cachedSelectedIndex >= 0 && this._cachedSelectedIndex < this._dropdown.get_dataSource().get_size()) {
				var data = this._dropdown.get_dataSource().get(this._cachedSelectedIndex);
				return data;
			} else {
				return this._cachedSelectedItem;
			}
		}
		return this._listview.get_selectedItem();
	}
	,_cachedSelectedItem: null
	,set_selectedItem: function(value) {
		if(value == null) {
			return value;
		}
		var text = null;
		if(Type.typeof(value) == ValueType.TObject) {
			text = value.text;
			if(text == null) {
				text = value.value;
			}
		} else {
			text = Std.string(value);
		}
		var index = this.indexOfItem(text);
		this.set_selectedIndex(index);
		return value;
	}
	,createListView: function() {
		var _gthis = this;
		if(this._listview == null) {
			this._listview = new haxe_ui_containers_ListView();
			if(this._dropdown.get_itemRenderer() != null) {
				this._listview.addComponent(this._dropdown.get_itemRenderer());
			}
			this._listview.componentTabIndex = -1;
			this._listview.set_virtual(this._dropdown.get_virtual());
			this._listview.set_dataSource(this._dropdown.get_dataSource());
			if(this._cachedSelectedIndex != -1) {
				this._listview.set_selectedIndex(this._cachedSelectedIndex);
			}
			if(this._dropdown.get_id() != null) {
				this._listview.addClass(this._dropdown.get_id() + "-listview");
				this._listview.set_id(this._dropdown.get_id() + "_listview");
			}
			this._listview.registerEvent("actionstart",function(e) {
				switch(e.action) {
				case "actionBack":case "actionCancel":
					e.cancel();
					(js_Boot.__cast(_gthis._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
					break;
				case "actionConfirm":case "actionPress":
					e.cancel();
					_gthis.applySelection();
					break;
				default:
				}
			});
		}
	}
	,onListChange: function(event) {
		if(((event.relatedEvent) instanceof haxe_ui_events_MouseEvent)) {
			this.applySelection();
		}
	}
	,applySelection: function() {
		if(this._listview.get_selectedItem() == null) {
			return;
		}
		var currentHover = this._listview.findComponent(":hover",null,true,"css");
		if(currentHover != null) {
			currentHover.removeClass(":hover");
		}
		var selectedItem = this._listview.get_selectedItem();
		var itemRenderer = this._dropdown.findComponent(null,haxe_ui_core_ItemRenderer);
		if(itemRenderer == null) {
			var text = null;
			if(Type.typeof(selectedItem) == ValueType.TObject) {
				text = this._listview.get_selectedItem().text;
				if(text == null) {
					text = this._listview.get_selectedItem().value;
				}
			} else {
				text = Std.string(selectedItem);
			}
			this._dropdown.set_text(text);
		} else {
			itemRenderer.set_data(selectedItem);
		}
		if(this.eventsPaused == false) {
			(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
			var event = new haxe_ui_events_UIEvent("change",false,selectedItem);
			event.value = haxe_ui_util_Variant.fromDynamic(selectedItem);
			this._dropdown.dispatch(event);
			this._dropdown.dispatch(new haxe_ui_events_UIEvent("propertychange",false,"selectedItem"));
		}
	}
	,applyDefault: function() {
		var indexToSelect = 0;
		if(this._cachedSelectedItem != null) {
			var index = this.indexOfItem(this._cachedSelectedItem);
			if(index != -1) {
				indexToSelect = index;
			}
		} else if(this._cachedSelectedIndex != -1) {
			indexToSelect = this._cachedSelectedIndex;
		}
		this._dropdown.set_selectedIndex(indexToSelect);
	}
	,__class__: haxe_ui_components__$DropDown_ListDropDownHandler
});
var haxe_ui_components_CalendarDropDownHandler = function(dropdown) {
	this._cachedSelectedDate = null;
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components.CalendarDropDownHandler"] = haxe_ui_components_CalendarDropDownHandler;
haxe_ui_components_CalendarDropDownHandler.__name__ = "haxe.ui.components.CalendarDropDownHandler";
haxe_ui_components_CalendarDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components_CalendarDropDownHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_calendar: null
	,get_component: function() {
		if(this._calendar == null) {
			this._calendar = new haxe_ui_containers_CalendarView();
			if(this._dropdown.get_id() != null) {
				this._calendar.addClass(this._dropdown.get_id() + "-calendar");
				this._calendar.set_id(this._dropdown.get_id() + "_calendar");
			}
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		return this._calendar;
	}
	,prepare: function(wrapper) {
		if(this._dropdown.get_dropdownWidth() != null) {
			this._calendar.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._calendar.set_height(this._dropdown.get_dropdownHeight());
		}
		if(this._cachedSelectedDate != null) {
			this._calendar.unregisterEvent("change",$bind(this,this.onCalendarChange));
			this._calendar.set_selectedDate(this._cachedSelectedDate);
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this._calendar.syncComponentValidation();
	}
	,_cachedSelectedDate: null
	,get_selectedItem: function() {
		if(this._calendar == null) {
			return this._cachedSelectedDate;
		}
		return this._calendar.get_selectedDate();
	}
	,set_selectedItem: function(value) {
		if(value == null) {
			return value;
		}
		var date = null;
		if(((value) instanceof Date)) {
			date = js_Boot.__cast(value , Date);
		} else {
			date = HxOverrides.strDate(Std.string(value));
		}
		if(this._calendar != null && date != null) {
			if(HxOverrides.dateStr(date) == HxOverrides.dateStr(this._calendar.get_selectedDate())) {
				this._dropdown.set_text(DateTools.format(date,haxe_ui_locale_Formats.get_dateFormatShort()));
				return value;
			}
			this._cachedSelectedDate = date;
			this._calendar.set_selectedDate(date);
		} else if(date != null) {
			this._cachedSelectedDate = date;
			this._dropdown.set_text(DateTools.format(this._cachedSelectedDate,haxe_ui_locale_Formats.get_dateFormatShort()));
		}
		return value;
	}
	,onCalendarChange: function(event) {
		if(this._calendar.get_selectedDate() == null) {
			return;
		}
		this._cachedSelectedDate = this._calendar.get_selectedDate();
		this._dropdown.set_text(DateTools.format(this._calendar.get_selectedDate(),haxe_ui_locale_Formats.get_dateFormatShort()));
		(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		this._dropdown.dispatch(new haxe_ui_events_UIEvent("change",false,this._calendar.get_selectedDate()));
		this._dropdown.dispatch(new haxe_ui_events_UIEvent("propertychange",false,"selectedItem"));
	}
	,applyDefault: function() {
		var now = new Date();
		this._dropdown.set_selectedItem(now);
	}
	,__class__: haxe_ui_components_CalendarDropDownHandler
});
var haxe_ui_components_DropDownEvents = function(dropdown) {
	this._lastSearchTerm = "";
	this._searchField = null;
	this._dropdownOpen = false;
	this._wrapper = null;
	this._overlay = null;
	haxe_ui_components_ButtonEvents.call(this,dropdown);
	this._dropdown = dropdown;
};
$hxClasses["haxe.ui.components.DropDownEvents"] = haxe_ui_components_DropDownEvents;
haxe_ui_components_DropDownEvents.__name__ = "haxe.ui.components.DropDownEvents";
haxe_ui_components_DropDownEvents.__super__ = haxe_ui_components_ButtonEvents;
haxe_ui_components_DropDownEvents.prototype = $extend(haxe_ui_components_ButtonEvents.prototype,{
	_dropdown: null
	,register: function() {
		haxe_ui_components_ButtonEvents.prototype.register.call(this);
		this.registerEvent("mousedown",$bind(this,this.onClick));
		this.registerEvent("hidden",$bind(this,this.onHidden));
	}
	,unregister: function() {
		haxe_ui_components_ButtonEvents.prototype.unregister.call(this);
		this.unregisterEvent("mousedown",$bind(this,this.onClick));
		this.unregisterEvent("hidden",$bind(this,this.onHidden));
	}
	,onClick: function(event) {
		this._dropdown.set_selected(!this._dropdown.get_selected());
		if(this._dropdown.get_selected() == true) {
			this.showDropDown();
		} else {
			this.hideDropDown();
		}
	}
	,onHidden: function(_) {
		this.hideDropDown();
	}
	,onMouseClick: function(event) {
	}
	,_overlay: null
	,_wrapper: null
	,_dropdownOpen: null
	,showDropDown: function() {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		if(this._wrapper == null) {
			this._wrapper = new haxe_ui_containers_Box();
			this._wrapper.addClass("popup");
			this._wrapper.addClass("dropdown-popup");
			if(this._button.get_id() != null) {
				this._wrapper.addClass(this._button.get_id() + "-popup");
				this._wrapper.set_id(this._button.get_id() + "_popup");
			} else {
				this._wrapper.set_id("dropdown_popup");
			}
			this._wrapper.set_styleNames(this._dropdown.get_handlerStyleNames());
			if(this._dropdown.get_searchable() == true) {
				var searchContainer = new haxe_ui_containers_VBox();
				searchContainer.set_id("dropdown-search-container");
				searchContainer.addClass("dropdown-search-container");
				searchContainer.set_scriptAccess(false);
				var searchFieldContainer = new haxe_ui_containers_HBox();
				searchFieldContainer.set_id("dropdown-search-field-container");
				searchFieldContainer.addClass("dropdown-search-field-container");
				searchFieldContainer.set_scriptAccess(false);
				searchFieldContainer.addComponent(this.get_searchField());
				var searchFieldSeparator = new haxe_ui_core_Component();
				searchFieldSeparator.set_id("dropdown-search-field-separator");
				searchFieldSeparator.addClass("dropdown-search-field-separator");
				searchFieldSeparator.set_scriptAccess(false);
				searchContainer.addComponent(searchFieldContainer);
				searchContainer.addComponent(searchFieldSeparator);
				searchContainer.addComponent(handler.get_component());
				this._wrapper.addComponent(searchContainer);
			} else {
				this._wrapper.addComponent(handler.get_component());
			}
			if(this._dropdown.get_style().fontSize != null && handler.get_component().get_customStyle().fontSize != this._dropdown.get_style().fontSize) {
				handler.get_component().get_customStyle().fontSize = this._dropdown.get_style().fontSize;
			}
			var filler = new haxe_ui_core_Component();
			filler.set_includeInLayout(false);
			filler.addClass("dropdown-filler");
			filler.set_id("dropdown-filler");
			this._wrapper.addComponent(filler);
		}
		var componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.get_style().mode != null && this._dropdown.get_style().mode == "mobile") {
			if(this._overlay == null) {
				this._overlay = new haxe_ui_core_Component();
				this._overlay.set_id("modal-background");
				this._overlay.addClass("modal-background");
				this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
			}
			haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			haxe_ui_core_Screen.get_instance().addComponent(this._wrapper);
			handler.prepare(this._wrapper);
			this._wrapper.syncComponentValidation();
			this._wrapper.validateNow();
			this._wrapper.set_left(haxe_ui_core_Screen.get_instance().get_actualWidth() / 2 - this._wrapper.get_actualComponentWidth() / 2);
			this._wrapper.set_top(haxe_ui_core_Screen.get_instance().get_actualHeight() / 2 - this._wrapper.get_actualComponentHeight() / 2);
		} else {
			this._wrapper.set_left(this._dropdown.get_screenLeft() + componentOffset.x);
			this._wrapper.set_top(this._dropdown.get_screenTop() + (this._dropdown.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y);
			this._wrapper.hide();
			haxe_ui_core_Screen.get_instance().addComponent(this._wrapper);
			handler.prepare(this._wrapper);
			this._wrapper.syncComponentValidation();
			this._wrapper.validateNow();
			var marginTop = 0.0;
			if(this._wrapper.get_style() != null && this._wrapper.get_style().marginTop != null) {
				marginTop = this._wrapper.get_style().marginTop;
			}
			var fh = this._wrapper;
			fh.set_top(fh.get_top() + marginTop);
			this._wrapper.show();
			var popupToRight = false;
			var popupFromBottom = false;
			if(this._wrapper.get_screenLeft() + this._wrapper.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_actualWidth()) {
				var left = this._wrapper.get_screenLeft() - this._wrapper.get_actualComponentWidth() + this._dropdown.get_actualComponentWidth();
				this._wrapper.set_left(left >= 0 ? left : haxe_ui_core_Screen.get_instance().get_actualWidth() / 2 - this._wrapper.get_actualComponentWidth() / 2);
				popupToRight = true;
			}
			this._wrapper.removeClass("popup-from-bottom");
			if(this._wrapper.get_screenTop() + this._wrapper.get_actualComponentHeight() > haxe_ui_core_Screen.get_instance().get_actualHeight()) {
				this._wrapper.set_top(this._dropdown.get_screenTop() - this._wrapper.get_actualComponentHeight() + haxe_ui_Toolkit.get_scaleY());
				popupFromBottom = true;
				this._wrapper.addClass("popup-from-bottom");
			}
			var cx = this._wrapper.get_width() - this._dropdown.get_width();
			var filler = this._wrapper.findComponent("dropdown-filler",null,false);
			if(cx > 0 && filler != null) {
				this._wrapper.addClass("dropdown-popup-expanded");
				filler.set_width(cx);
				if(popupToRight) {
					cx -= haxe_ui_Toolkit.get_scaleX();
					filler.set_left(haxe_ui_Toolkit.get_scaleX());
				} else {
					cx += haxe_ui_Toolkit.get_scaleX();
					filler.set_left(this._wrapper.get_width() - cx);
				}
				if(popupFromBottom) {
					filler.set_top(this._wrapper.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY());
				} else {
					filler.set_top(0);
				}
				filler.set_hidden(false);
			} else if(filler != null) {
				filler.set_hidden(true);
				this._wrapper.removeClass("dropdown-popup-expanded");
			}
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
		this.registerEvent("move",$bind(this,this.onDropDownMoved));
		this._dropdownOpen = true;
	}
	,onDropDownMoved: function(_) {
		this.hideDropDown();
	}
	,createSearchField: function() {
		var _gthis = this;
		var searchField = new haxe_ui_components_TextField();
		searchField.registerEvent("actionstart",function(e) {
			if(e.action == "actionDown" || e.action == "actionUp" || e.action == "actionConfirm" || e.action == "actionPress" || e.action == "actionBack" || e.action == "actionCancel") {
				var builder = js_Boot.__cast(_gthis._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder);
				builder.get_handler().get_component().dispatch(e);
			}
		});
		searchField.set_id("dropdown-search-field");
		searchField.addClass("dropdown-search-field");
		searchField.set_placeholder(this._dropdown.get_searchPrompt());
		searchField.set_scriptAccess(false);
		searchField.registerEvent("change",$bind(this,this.onSearchChange));
		return searchField;
	}
	,_searchField: null
	,get_searchField: function() {
		if(this._searchField == null) {
			this._searchField = this.createSearchField();
		}
		return this._searchField;
	}
	,set_searchField: function(value) {
		this._searchField = value;
		return value;
	}
	,_lastSearchTerm: null
	,onSearchChange: function(event) {
		if(this._wrapper == null) {
			return;
		}
		var searchField = this._wrapper.findComponent("dropdown-search-field",haxe_ui_components_TextField);
		if(searchField == null) {
			return;
		}
		var selectedItem = this._dropdown.get_selectedItem();
		var searchTerm = searchField.get_text();
		if(searchTerm == null || StringTools.trim(searchTerm).length == 0) {
			searchTerm = "";
		}
		if(this._lastSearchTerm == searchTerm) {
			return;
		}
		this._lastSearchTerm = searchTerm;
		if(searchTerm.length == 0) {
			this._dropdown.get_dataSource().clearFilter();
		} else {
			this._dropdown.get_dataSource().filter(function(index,data) {
				var v = data.text;
				return Std.string(v).toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;
			});
		}
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		handler.prepare(this._wrapper);
		if(selectedItem != null) {
			handler.pauseEvents();
			this._dropdown.set_selectedItem(selectedItem);
			handler.resumeEvents();
		}
	}
	,hideDropDown: function() {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		if(this._wrapper != null) {
			var searchField = this._wrapper.findComponent("dropdown-search-field",haxe_ui_components_TextField);
			if(searchField != null) {
				searchField.set_focus(false);
			}
		}
		if(this._overlay != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
			this._overlay = null;
		}
		this._dropdown.set_selected(false);
		if(this._wrapper != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._wrapper,false);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
		this.unregisterEvent("move",$bind(this,this.onDropDownMoved));
		this._dropdownOpen = false;
	}
	,onScreenMouseDown: function(event) {
		if(this._wrapper == null) {
			return;
		}
		if(this._wrapper.hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		var componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		this.hideDropDown();
	}
	,dispatchChanged: function() {
	}
	,release: function() {
		if(this._down == true) {
			haxe_ui_components_ButtonEvents.prototype.release.call(this);
			if(this._dropdown.get_selected() == true) {
				this.showDropDown();
			} else {
				this.hideDropDown();
			}
		}
	}
	,__class__: haxe_ui_components_DropDownEvents
	,__properties__: {set_searchField:"set_searchField",get_searchField:"get_searchField"}
});
var haxe_ui_components_DropDownBuilder = function(dropdown) {
	haxe_ui_components_ButtonBuilder.call(this,dropdown);
	this._dropdown = dropdown;
	var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
	var value = haxe_ui_components__$DropDown_ListDropDownHandler.__name__;
	this1.h["list"] = value;
	var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
	var value = haxe_ui_components_CalendarDropDownHandler.__name__;
	this1.h["date"] = value;
};
$hxClasses["haxe.ui.components.DropDownBuilder"] = haxe_ui_components_DropDownBuilder;
haxe_ui_components_DropDownBuilder.__name__ = "haxe.ui.components.DropDownBuilder";
haxe_ui_components_DropDownBuilder.__super__ = haxe_ui_components_ButtonBuilder;
haxe_ui_components_DropDownBuilder.prototype = $extend(haxe_ui_components_ButtonBuilder.prototype,{
	_dropdown: null
	,_handler: null
	,handler: null
	,get_handler: function() {
		if(this._handler == null) {
			var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
			var key = this._dropdown.get_type();
			var handlerClass = this1.h[key];
			if(handlerClass == null) {
				handlerClass = this._dropdown.get_type();
			}
			this._handler = Type.createInstance($hxClasses[handlerClass],[this._dropdown]);
		}
		return this._handler;
	}
	,onReady: function() {
		haxe_ui_components_ButtonBuilder.prototype.onReady.call(this);
		if(this._dropdown.get_text() == null) {
			this.get_handler().applyDefault();
		}
	}
	,create: function() {
		this._dropdown.set_toggle(true);
		if(this._dropdown.findComponent(null,haxe_ui_core_ItemRenderer) == null) {
			this._dropdown.addComponent(new haxe_ui_core_BasicItemRenderer());
		}
	}
	,destroy: function() {
		var events = js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents);
		events.hideDropDown();
		if(events._wrapper != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(events._wrapper);
			events._wrapper = null;
		}
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			this._dropdown.set_itemRenderer(child.cloneComponent());
			if(child.get_id() == "dropdown-renderer" || child.get_id() == "dropdownRenderer") {
				return child;
			}
		}
		return haxe_ui_components_ButtonBuilder.prototype.addComponent.call(this,child);
	}
	,onThemeChanged: function() {
		if(this._handler != null) {
			haxe_ui_core_Screen.get_instance().invalidateChildren(this._handler.get_component());
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(this._handler.get_component());
		}
	}
	,__class__: haxe_ui_components_DropDownBuilder
	,__properties__: $extend(haxe_ui_components_ButtonBuilder.prototype.__properties__,{get_handler:"get_handler"})
});
var haxe_ui_core_IDirectionalComponent = function() { };
$hxClasses["haxe.ui.core.IDirectionalComponent"] = haxe_ui_core_IDirectionalComponent;
haxe_ui_core_IDirectionalComponent.__name__ = "haxe.ui.core.IDirectionalComponent";
haxe_ui_core_IDirectionalComponent.__isInterface__ = true;
var haxe_ui_components_Range = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Range"] = haxe_ui_components_Range;
haxe_ui_components_Range.__name__ = "haxe.ui.components.Range";
haxe_ui_components_Range.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Range.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Range.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	virtualStart: null
	,virtualEnd: null
	,posFromCoord: function(coord) {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,get_cssName: function() {
		return "range";
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Range_RangeMin,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Range_RangeMax,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("start",haxe_ui_components__$Range_RangeStart,null);
		this.behaviours.register("end",haxe_ui_components__$Range_RangeEnd,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("precision",haxe_ui_behaviours_InvalidatingBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_InvalidatingBehaviour);
		this.behaviours.register("allowInteraction",haxe_ui_components__$Range_AllowInteraction,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("posFromCoord",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_start: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("start"));
	}
	,set_start: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("start",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"start"));
		return value;
	}
	,get_end: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("end"));
	}
	,set_end: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("end",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"end"));
		return value;
	}
	,get_precision: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"precision"));
		return value;
	}
	,get_step: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"step"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_start() != null) {
			c.set_start(this.get_start());
		}
		c.set_end(this.get_end());
		c.set_precision(this.get_precision());
		c.set_step(this.get_step());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Range();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_RangeBuilder;
	}
	,__class__: haxe_ui_components_Range
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_step:"set_step",get_step:"get_step",set_precision:"set_precision",get_precision:"get_precision",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalRange = function() {
	haxe_ui_components_Range.call(this);
};
$hxClasses["haxe.ui.components.HorizontalRange"] = haxe_ui_components_HorizontalRange;
haxe_ui_components_HorizontalRange.__name__ = "haxe.ui.components.HorizontalRange";
haxe_ui_components_HorizontalRange.__super__ = haxe_ui_components_Range;
haxe_ui_components_HorizontalRange.prototype = $extend(haxe_ui_components_Range.prototype,{
	posFromCoord: function(coord) {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerComposite: function() {
		haxe_ui_components_Range.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_HorizontalRangeLayout;
		this._compositeBuilderClass = haxe_ui_components__$HorizontalRange_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Range.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components_HorizontalRangePosFromCoord);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Range.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalRange();
	}
	,__class__: haxe_ui_components_HorizontalRange
});
var haxe_ui_components_HorizontalRangePosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components.HorizontalRangePosFromCoord"] = haxe_ui_components_HorizontalRangePosFromCoord;
haxe_ui_components_HorizontalRangePosFromCoord.__name__ = "haxe.ui.components.HorizontalRangePosFromCoord";
haxe_ui_components_HorizontalRangePosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components_HorizontalRangePosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		p.x -= this._component.getComponentOffset().x;
		var xpos = p.x - range.get_layout().get_paddingLeft();
		var ucx = range.get_layout().get_usableWidth() * haxe_ui_Toolkit.get_scaleX();
		if(xpos >= ucx) {
			xpos = ucx;
		}
		var min = range.get_min();
		if(min == null) {
			min = 0;
		}
		var m = range.get_max() - min;
		var d = ucx / m;
		var v = xpos + range.get_start() * d;
		var p = v / d;
		return haxe_ui_util_Variant.fromFloat(p);
	}
	,__class__: haxe_ui_components_HorizontalRangePosFromCoord
});
var haxe_ui_components_HorizontalRangeLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HorizontalRangeLayout"] = haxe_ui_components_HorizontalRangeLayout;
haxe_ui_components_HorizontalRangeLayout.__name__ = "haxe.ui.components.HorizontalRangeLayout";
haxe_ui_components_HorizontalRangeLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HorizontalRangeLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		var value = this.findComponent("" + range.get_cssName() + "-value");
		if(value != null) {
			var ucx = this.get_usableWidth();
			var start = range.get_start();
			if(start == null) {
				start = 0;
			}
			var end = range.get_end();
			if(range.virtualStart != null) {
				start = range.virtualStart;
			}
			if(range.virtualEnd != null) {
				end = range.virtualEnd;
			}
			var min = range.get_min();
			if(min == null) {
				min = 0;
			}
			var m = range.get_max() - min;
			var d = ucx / m;
			var startInPixels = start * d - min * d;
			var endInPixels = end * d - min * d;
			var cx = Math.ceil(endInPixels - startInPixels);
			if(cx < 0) {
				cx = 0;
			} else if(cx > ucx) {
				cx = ucx;
			}
			if(cx == 0) {
				value.set_width(0);
				value.set_hidden(true);
			} else {
				value.set_width(cx);
				value.set_hidden(false);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		var value = this.findComponent("" + range.get_cssName() + "-value");
		var start = range.get_start();
		if(start == null) {
			start = 0;
		}
		if(range.virtualStart != null) {
			start = range.virtualStart;
		}
		var min = range.get_min();
		if(min == null) {
			min = 0;
		}
		var ucx = this.get_usableWidth();
		var m = range.get_max() - min;
		var d = ucx / m;
		var startInPixels = start * d - min * d;
		value.set_left(Math.floor(this.get_paddingLeft() + startInPixels));
		value.set_top(this.get_paddingTop());
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalRangeLayout();
	}
	,__class__: haxe_ui_components_HorizontalRangeLayout
});
var haxe_ui_components_RangeBuilder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
	this.showWarning();
};
$hxClasses["haxe.ui.components.RangeBuilder"] = haxe_ui_components_RangeBuilder;
haxe_ui_components_RangeBuilder.__name__ = "haxe.ui.components.RangeBuilder";
haxe_ui_components_RangeBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_RangeBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		haxe_ui_core_CompositeBuilder.prototype.create.call(this);
		if(this._component.findComponent("${_component.cssName}-value") == null) {
			var v = new haxe_ui_core_Component();
			v.set_id("" + this._component.get_cssName() + "-value");
			v.addClass("" + this._component.get_cssName() + "-value",false);
			this._component.addComponent(v);
		}
	}
	,showWarning: function() {
		var name = this._component.get_className().split(".").pop();
		haxe_Log.trace("WARNING: trying to create an instance of '" + name + "' directly, use either 'Horizontal" + name + "' or 'Vertical" + name + "'",{ fileName : "haxe/ui/components/Range.hx", lineNumber : 266, className : "haxe.ui.components.RangeBuilder", methodName : "showWarning"});
	}
	,__class__: haxe_ui_components_RangeBuilder
});
var haxe_ui_components__$HorizontalRange_Builder = function(component) {
	haxe_ui_components_RangeBuilder.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalRange.Builder"] = haxe_ui_components__$HorizontalRange_Builder;
haxe_ui_components__$HorizontalRange_Builder.__name__ = "haxe.ui.components._HorizontalRange.Builder";
haxe_ui_components__$HorizontalRange_Builder.__super__ = haxe_ui_components_RangeBuilder;
haxe_ui_components__$HorizontalRange_Builder.prototype = $extend(haxe_ui_components_RangeBuilder.prototype,{
	showWarning: function() {
	}
	,__class__: haxe_ui_components__$HorizontalRange_Builder
});
var haxe_ui_components_Scroll = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	this.cascadeActive = true;
};
$hxClasses["haxe.ui.components.Scroll"] = haxe_ui_components_Scroll;
haxe_ui_components_Scroll.__name__ = "haxe.ui.components.Scroll";
haxe_ui_components_Scroll.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Scroll.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Scroll.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,applyPageFromCoord: function(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("applyPageFromCoord",coord));
	}
	,createChildren: function() {
		this.createButton("deinc",true).set_repeater(true);
		this.createButton("inc",true).set_repeater(true);
		this.createButton("thumb").set_remainPressed(true);
		this.registerInternalEvents(haxe_ui_components__$Scroll_Events);
	}
	,createButton: function(type,hidden) {
		if(hidden == null) {
			hidden = false;
		}
		var b = this.findComponent("scroll-" + type + "-button",haxe_ui_components_Button);
		if(b == null) {
			b = new haxe_ui_components_Button();
			b.set_hidden(hidden);
			b.set_scriptAccess(false);
			b.get_customStyle().native = false;
			b.set_id("scroll-" + type + "-button");
			b.addClass(type);
			b.set_allowFocus(false);
			this.addComponent(b);
		}
		return b;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Scroll_ScrollMinMaxBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Scroll_ScrollMinMaxBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("pageSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("pos",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("increment",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(20));
		this.behaviours.register("thumbSize",haxe_ui_behaviours_DefaultBehaviour,null);
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_pageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pageSize"));
	}
	,set_pageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pageSize"));
		return value;
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		return value;
	}
	,get_increment: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("increment"));
	}
	,set_increment: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("increment",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"increment"));
		return value;
	}
	,get_thumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("thumbSize"));
	}
	,set_thumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("thumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"thumbSize"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Scroll();
	}
	,__class__: haxe_ui_components_Scroll
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_thumbSize:"set_thumbSize",get_thumbSize:"get_thumbSize",set_increment:"set_increment",get_increment:"get_increment",set_pos:"set_pos",get_pos:"get_pos",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_max:"set_max",get_max:"get_max",get_min:"get_min"})
});
var haxe_ui_components_HorizontalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.HorizontalScroll"] = haxe_ui_components_HorizontalScroll;
haxe_ui_components_HorizontalScroll.__name__ = "haxe.ui.components.HorizontalScroll";
haxe_ui_components_HorizontalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_HorizontalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$HorizontalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalScroll();
	}
	,__class__: haxe_ui_components_HorizontalScroll
});
var haxe_ui_components__$HorizontalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.PosFromCoord"] = haxe_ui_components__$HorizontalScroll_PosFromCoord;
haxe_ui_components__$HorizontalScroll_PosFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.PosFromCoord";
haxe_ui_components__$HorizontalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var xpos = p.x;
		var minX = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minX = deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		var maxX = scroll.get_layout().get_usableWidth() - thumb.get_width();
		if(deinc != null && deinc.get_hidden() == false) {
			maxX += deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		if(xpos < minX) {
			xpos = minX;
		} else if(xpos > maxX) {
			xpos = maxX;
		}
		var ucx = scroll.get_layout().get_usableWidth();
		ucx -= thumb.get_width();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = xpos - minX;
		var value = scroll.get_min() + v / ucx * m;
		return haxe_ui_util_Variant.fromFloat(value);
	}
	,__class__: haxe_ui_components__$HorizontalScroll_PosFromCoord
});
var haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.ApplyPageFromCoord"] = haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.ApplyPageFromCoord";
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.x < thumb.get_screenLeft()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.x > thumb.get_screenLeft() + thumb.get_width()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._HorizontalScroll.HorizontalScrollLayout"] = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__name__ = "haxe.ui.components._HorizontalScroll.HorizontalScrollLayout";
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			if(scroll.get_min() == scroll.get_max()) {
				thumb.hide();
			} else {
				var m = scroll.get_max() - scroll.get_min();
				var ucx = this.get_usableWidth();
				var thumbWidth = scroll.get_pageSize() / m * ucx;
				if(scroll.get_thumbSize() != null) {
					thumbWidth = scroll.get_thumbSize();
				}
				if(thumbWidth < this.get_innerHeight()) {
					thumbWidth = this.get_innerHeight();
				} else if(thumbWidth > ucx) {
					thumbWidth = ucx;
				}
				if(thumbWidth > 0 && isNaN(thumbWidth) == false) {
					thumb.set_width(thumbWidth);
				}
				thumb.show();
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_left(this.get_component().get_width() - inc.get_width() - this.get_paddingRight());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableWidth();
			u -= thumb.get_componentWidth();
			var x = (scroll.get_pos() - scroll.get_min()) / m * u;
			x += this.get_paddingLeft();
			if(deinc != null && this.hidden(deinc) == false) {
				x += deinc.get_width() + this.get_horizontalSpacing();
			}
			thumb.set_left(x);
			thumb.set_top(Math.round(thumb.get_top()));
		}
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucx -= deinc.get_width() + this.get_horizontalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucx -= inc.get_width() + this.get_horizontalSpacing();
		}
		return ucx;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout();
	}
	,__class__: haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout
});
var haxe_ui_components_Slider = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	this.cascadeActive = true;
	this.actionRepeatInterval = 10;
};
$hxClasses["haxe.ui.components.Slider"] = haxe_ui_components_Slider;
haxe_ui_components_Slider.__name__ = "haxe.ui.components.Slider";
haxe_ui_components_Slider.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Slider.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Slider.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Slider_MinBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Slider_MaxBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("start",haxe_ui_components__$Slider_StartBehaviour,null);
		this.behaviours.register("end",haxe_ui_components__$Slider_EndBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("pos",haxe_ui_components__$Slider_PosBehaviour);
		this.behaviours.register("center",haxe_ui_components__$Slider_CenterBehaviour,null);
		this.behaviours.register("step",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("minorTicks",haxe_ui_components__$Slider_MinorTicks,null);
		this.behaviours.register("majorTicks",haxe_ui_components__$Slider_MajorTicks,null);
		this.behaviours.register("posFromCoord",haxe_ui_components__$Slider_PosFromCoord);
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_precision: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"precision"));
		return value;
	}
	,get_start: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("start"));
	}
	,set_start: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("start",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"start"));
		return value;
	}
	,get_end: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("end"));
	}
	,set_end: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("end",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"end"));
		return value;
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_center: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("center"));
	}
	,set_center: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("center",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"center"));
		return value;
	}
	,get_step: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"step"));
		return value;
	}
	,get_minorTicks: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("minorTicks"));
	}
	,set_minorTicks: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("minorTicks",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"minorTicks"));
		return value;
	}
	,get_majorTicks: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("majorTicks"));
	}
	,set_majorTicks: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("majorTicks",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"majorTicks"));
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 3:
			this.set_pos(value == true ? 1 : 0);
			break;
		case 6:
			if(_g.c == String) {
				this.set_pos(parseFloat(value));
			} else {
				this.set_pos(value);
			}
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_pos(haxe_ui_util_Variant.toFloat(v));
			} else {
				this.set_pos(value);
			}
			break;
		default:
			this.set_pos(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		if(this.get_start() != null) {
			c.set_start(this.get_start());
		}
		c.set_end(this.get_end());
		c.set_pos(this.get_pos());
		if(this.get_center() != null) {
			c.set_center(this.get_center());
		}
		if(this.get_step() != null) {
			c.set_step(this.get_step());
		}
		if(this.get_minorTicks() != null) {
			c.set_minorTicks(this.get_minorTicks());
		}
		if(this.get_majorTicks() != null) {
			c.set_majorTicks(this.get_majorTicks());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Slider();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_SliderBuilder;
	}
	,__class__: haxe_ui_components_Slider
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_majorTicks:"set_majorTicks",get_majorTicks:"get_majorTicks",set_minorTicks:"set_minorTicks",get_minorTicks:"get_minorTicks",set_step:"set_step",get_step:"get_step",set_center:"set_center",get_center:"get_center",set_pos:"set_pos",get_pos:"get_pos",set_end:"set_end",get_end:"get_end",set_start:"set_start",get_start:"get_start",set_precision:"set_precision",get_precision:"get_precision",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalSlider = function() {
	haxe_ui_components_Slider.call(this);
};
$hxClasses["haxe.ui.components.HorizontalSlider"] = haxe_ui_components_HorizontalSlider;
haxe_ui_components_HorizontalSlider.__name__ = "haxe.ui.components.HorizontalSlider";
haxe_ui_components_HorizontalSlider.__super__ = haxe_ui_components_Slider;
haxe_ui_components_HorizontalSlider.prototype = $extend(haxe_ui_components_Slider.prototype,{
	registerComposite: function() {
		haxe_ui_components_Slider.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components_HorizontalSliderLayout;
		this._compositeBuilderClass = haxe_ui_components__$HorizontalSlider_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Slider.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Slider.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalSlider();
	}
	,__class__: haxe_ui_components_HorizontalSlider
});
var haxe_ui_components_HorizontalSliderLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.HorizontalSliderLayout"] = haxe_ui_components_HorizontalSliderLayout;
haxe_ui_components_HorizontalSliderLayout.__name__ = "haxe.ui.components.HorizontalSliderLayout";
haxe_ui_components_HorizontalSliderLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_HorizontalSliderLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		var range = this.findComponent(null,haxe_ui_components_Range);
		var rangeValue = range.findComponent("range-value");
		var startThumb = this.findComponent("start-thumb");
		var endThumb = this.findComponent("end-thumb");
		var padding = 0;
		if(range != null && range.get_layout() != null) {
			padding = range.get_layout().get_paddingLeft();
		}
		if(startThumb != null) {
			startThumb.set_left(range.get_left() + rangeValue.get_left() - startThumb.get_width() / 2);
			startThumb.set_left(Math.ceil(startThumb.get_left()));
			if(padding > 1 && startThumb.get_left() % 2 != 0) {
				startThumb.set_left(startThumb.get_left() + padding / 2);
			}
		}
		var cx = rangeValue.get_width();
		if(rangeValue.get_hidden() == true && this._component.get_hidden() == false) {
			cx = 0;
		}
		if(slider.get_center() != null) {
			if(slider.get_pos() >= slider.get_center()) {
				endThumb.set_left(range.get_left() + rangeValue.get_left() + cx - endThumb.get_width() / 2);
			} else {
				endThumb.set_left(range.get_left() + rangeValue.get_left() - endThumb.get_width() / 2);
				if(padding > 1 && cx % 2 == 0) {
					endThumb.set_left(endThumb.get_left() + padding / 2);
				}
			}
		} else {
			endThumb.set_left(range.get_left() + rangeValue.get_left() + cx - endThumb.get_width() / 2);
			endThumb.set_left(Math.ceil(endThumb.get_left()));
			if(startThumb != null && endThumb.get_left() % 2 == 0) {
				endThumb.set_left(endThumb.get_left() + 1);
			}
		}
		if(slider.get_minorTicks() != null && range != null && range.get_layout() != null) {
			var minorTicks = this.findComponents("minor-tick",haxe_ui_core_Component,1);
			if(minorTicks != null && minorTicks.length > 0) {
				var m = slider.get_max() - slider.get_min();
				var v = slider.get_minorTicks();
				var n = m / v | 0;
				var i = 0;
				var padding = range.get_layout().get_paddingLeft() + this.get_paddingLeft();
				var tcx = range.get_layout().get_usableWidth() / n;
				var _g = 0;
				while(_g < minorTicks.length) {
					var tick = minorTicks[_g];
					++_g;
					tick.set_left(i * tcx + padding);
					tick.set_left(Math.ceil(tick.get_left()));
					++i;
				}
			}
		}
		if(slider.get_majorTicks() != null && range != null && range.get_layout() != null) {
			var majorTicks = this.findComponents("major-tick",haxe_ui_core_Component,1);
			if(majorTicks != null && majorTicks.length > 0) {
				var m = slider.get_max() - slider.get_min();
				var v = slider.get_majorTicks();
				var n = m / v | 0;
				var i = 0;
				var padding = range.get_layout().get_paddingLeft() + this.get_paddingLeft();
				var tcx = range.get_layout().get_usableWidth() / n;
				var _g = 0;
				while(_g < majorTicks.length) {
					var tick = majorTicks[_g];
					++_g;
					tick.set_left(i * tcx + padding);
					tick.set_left(Math.ceil(tick.get_left()));
					++i;
				}
			}
		}
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalSliderLayout();
	}
	,__class__: haxe_ui_components_HorizontalSliderLayout
});
var haxe_ui_components_SliderBuilder = function(slider) {
	haxe_ui_core_CompositeBuilder.call(this,slider);
	this._slider = slider;
	this.showWarning();
};
$hxClasses["haxe.ui.components.SliderBuilder"] = haxe_ui_components_SliderBuilder;
haxe_ui_components_SliderBuilder.__name__ = "haxe.ui.components.SliderBuilder";
haxe_ui_components_SliderBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_SliderBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_slider: null
	,create: function() {
		if(this._component.findComponent("range") == null) {
			var v = this.createValueComponent();
			if(v != null) {
				v.set_scriptAccess(false);
				v.set_allowFocus(false);
				v.set_id("range");
				v.addClass("slider-value");
				v.set_start(v.set_end(0));
				if(this._slider.get_center() != null) {
					this._slider.set_pos(this._slider.get_center());
					v.virtualStart = this._slider.get_center();
				}
				this._component.addComponent(v);
			}
		}
		this.createThumb("end-thumb");
	}
	,getStartOffset: function() {
		return 0;
	}
	,createValueComponent: function() {
		return null;
	}
	,createThumb: function(id) {
		if(this._component.findComponent(id) != null) {
			return;
		}
		var b = new haxe_ui_components_Button();
		b.set_scriptAccess(false);
		b.set_allowFocus(false);
		b.set_id(id);
		b.addClass(id);
		b.set_remainPressed(true);
		this._component.addComponent(b);
		this._component.registerInternalEvents(haxe_ui_components__$Slider_Events,true);
	}
	,showWarning: function() {
		haxe_Log.trace("WARNING: trying to create an instance of 'Slider' directly, use either 'HorizontalSlider' or 'VerticalSlider'",{ fileName : "haxe/ui/components/Slider.hx", lineNumber : 546, className : "haxe.ui.components.SliderBuilder", methodName : "showWarning"});
	}
	,__class__: haxe_ui_components_SliderBuilder
});
var haxe_ui_components__$HorizontalSlider_Builder = function(slider) {
	haxe_ui_components_SliderBuilder.call(this,slider);
	this._slider = slider;
};
$hxClasses["haxe.ui.components._HorizontalSlider.Builder"] = haxe_ui_components__$HorizontalSlider_Builder;
haxe_ui_components__$HorizontalSlider_Builder.__name__ = "haxe.ui.components._HorizontalSlider.Builder";
haxe_ui_components__$HorizontalSlider_Builder.__super__ = haxe_ui_components_SliderBuilder;
haxe_ui_components__$HorizontalSlider_Builder.prototype = $extend(haxe_ui_components_SliderBuilder.prototype,{
	createValueComponent: function() {
		return new haxe_ui_components_HorizontalRange();
	}
	,getStartOffset: function() {
		var start = 0;
		if(this._slider.get_start() != null) {
			start = this._slider.get_start();
		}
		return start;
	}
	,showWarning: function() {
	}
	,__class__: haxe_ui_components__$HorizontalSlider_Builder
});
var haxe_ui_components_Image = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Image"] = haxe_ui_components_Image;
haxe_ui_components_Image.__name__ = "haxe.ui.components.Image";
haxe_ui_components_Image.__super__ = haxe_ui_core_Component;
haxe_ui_components_Image.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Image_ImageLayout;
		this._compositeBuilderClass = haxe_ui_components__$Image_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("resource",haxe_ui_components__$Image_ResourceBehaviour);
		this.behaviours.register("scaleMode",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("fill"));
		this.behaviours.register("imageHorizontalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("imageVerticalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("originalWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("originalHeight",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("imageScale",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(1));
	}
	,get_resource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("resource");
	}
	,set_resource: function(value) {
		this.behaviours.set("resource",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"resource"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_scaleMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scaleMode"));
	}
	,set_scaleMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scaleMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scaleMode"));
		return value;
	}
	,get_imageHorizontalAlign: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageHorizontalAlign"));
	}
	,set_imageHorizontalAlign: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageHorizontalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageHorizontalAlign"));
		return value;
	}
	,get_imageVerticalAlign: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageVerticalAlign"));
	}
	,set_imageVerticalAlign: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageVerticalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageVerticalAlign"));
		return value;
	}
	,get_originalWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalWidth"));
	}
	,set_originalWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("originalWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"originalWidth"));
		return value;
	}
	,get_originalHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalHeight"));
	}
	,set_originalHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("originalHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"originalHeight"));
		return value;
	}
	,get_imageScale: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("imageScale"));
	}
	,set_imageScale: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageScale",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"imageScale"));
		return value;
	}
	,get_value: function() {
		return this.get_resource();
	}
	,set_value: function(value) {
		this.set_resource(haxe_ui_util_Variant.fromDynamic(value));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_resource() != null) {
			c.set_resource(this.get_resource());
		}
		if(this.get_scaleMode() != null) {
			c.set_scaleMode(this.get_scaleMode());
		}
		if(this.get_imageHorizontalAlign() != null) {
			c.set_imageHorizontalAlign(this.get_imageHorizontalAlign());
		}
		if(this.get_imageVerticalAlign() != null) {
			c.set_imageVerticalAlign(this.get_imageVerticalAlign());
		}
		c.set_originalWidth(this.get_originalWidth());
		c.set_originalHeight(this.get_originalHeight());
		c.set_imageScale(this.get_imageScale());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Image();
	}
	,__class__: haxe_ui_components_Image
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_imageScale:"set_imageScale",get_imageScale:"get_imageScale",set_originalHeight:"set_originalHeight",get_originalHeight:"get_originalHeight",set_originalWidth:"set_originalWidth",get_originalWidth:"get_originalWidth",set_imageVerticalAlign:"set_imageVerticalAlign",get_imageVerticalAlign:"get_imageVerticalAlign",set_imageHorizontalAlign:"set_imageHorizontalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",set_scaleMode:"set_scaleMode",get_scaleMode:"get_scaleMode",set_resource:"set_resource",get_resource:"get_resource"})
});
var haxe_ui_components__$Image_ImageLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Image.ImageLayout"] = haxe_ui_components__$Image_ImageLayout;
haxe_ui_components__$Image_ImageLayout.__name__ = "haxe.ui.components._Image.ImageLayout";
haxe_ui_components__$Image_ImageLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Image_ImageLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_imageScaleMode: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_scaleMode();
	}
	,resizeChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = image.getImageDisplay();
			var maxWidth = this.get_usableSize().width;
			var maxHeight = this.get_usableSize().height;
			if(this.get_component().get_autoWidth() == true) {
				maxWidth = -1;
			}
			if(this._component.get_autoHeight() == true) {
				maxHeight = -1;
			}
			var scaleW = maxWidth != -1 ? maxWidth / image.get_originalWidth() : 1;
			var scaleH = maxHeight != -1 ? maxHeight / image.get_originalHeight() : 1;
			scaleW *= image.get_imageScale();
			scaleH *= image.get_imageScale();
			if(this.get_imageScaleMode() != "fill") {
				var scale;
				switch(this.get_imageScaleMode()) {
				case "fitheight":
					scale = scaleH;
					break;
				case "fitinside":
					scale = scaleW < scaleH ? scaleW : scaleH;
					break;
				case "fitoutside":
					scale = scaleW > scaleH ? scaleW : scaleH;
					break;
				case "fitwidth":
					scale = scaleW;
					break;
				default:
					scale = 1;
				}
				imageDisplay.set_imageWidth(image.get_originalWidth() * scale);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scale);
			} else {
				imageDisplay.set_imageWidth(image.get_originalWidth() * scaleW);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scaleH);
			}
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = this._component.getImageDisplay();
			switch(image.get_imageHorizontalAlign()) {
			case "center":
				imageDisplay.set_left((this._component.get_componentWidth() - imageDisplay.get_imageWidth()) / 2);
				break;
			case "left":
				imageDisplay.set_left(this.get_paddingLeft());
				break;
			case "right":
				imageDisplay.set_left(this._component.get_componentWidth() - imageDisplay.get_imageWidth() - this.get_paddingRight());
				break;
			}
			switch(image.get_imageVerticalAlign()) {
			case "bottom":
				imageDisplay.set_top(this._component.get_componentHeight() - imageDisplay.get_imageHeight() - this.get_paddingBottom());
				break;
			case "center":
				imageDisplay.set_top((this._component.get_componentHeight() - imageDisplay.get_imageHeight()) / 2);
				break;
			case "top":
				imageDisplay.set_top(this.get_paddingTop());
				break;
			}
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasImageDisplay()) {
			size.width += this.get_component().getImageDisplay().get_imageWidth();
			size.height += this.get_component().getImageDisplay().get_imageHeight();
		}
		return size;
	}
	,refresh: function() {
		haxe_ui_layouts_DefaultLayout.prototype.refresh.call(this);
		this.updateClipRect();
	}
	,updateClipRect: function() {
		if(this.get_component().hasImageDisplay()) {
			var usz = this.get_usableSize();
			var imageDisplay = this.get_component().getImageDisplay();
			var rc = imageDisplay.get_imageClipRect();
			if(imageDisplay.get_imageWidth() > usz.width || imageDisplay.get_imageHeight() > usz.height) {
				if(rc == null) {
					rc = new haxe_ui_geom_Rectangle();
				}
				rc.top = this.get_paddingLeft();
				rc.left = this.get_paddingTop();
				rc.width = usz.width;
				rc.height = usz.height;
			} else {
				rc = null;
			}
			imageDisplay.set_imageClipRect(rc);
		}
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$Image_ImageLayout();
	}
	,__class__: haxe_ui_components__$Image_ImageLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_imageScaleMode:"get_imageScaleMode"})
});
var haxe_ui_components__$Image_ResourceBehaviour = function(component) {
	this._canvasMap = null;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Image.ResourceBehaviour"] = haxe_ui_components__$Image_ResourceBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.__name__ = "haxe.ui.components._Image.ResourceBehaviour";
haxe_ui_components__$Image_ResourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_canvasMap: null
	,validateData: function() {
		var _gthis = this;
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._component.removeImageDisplay();
			this._component.invalidateComponent();
			return;
		}
		if(haxe_ui_util_Variant.get_isComponent(this._value) && ((haxe_ui_util_Variant.toComponent(this._value)) instanceof haxe_ui_components_Canvas)) {
			var newCanvas = null;
			if(this._canvasMap == null) {
				this._canvasMap = new haxe_ds_StringMap();
			}
			var canvas = haxe_ui_util_Variant.toComponent(this._value);
			if(canvas.get_id() == null) {
				canvas.set_id(haxe_ui_util_GUID.uuid());
			}
			var existingCanvas = this._component.findComponent(null,haxe_ui_components_Canvas,false);
			if(existingCanvas != null && existingCanvas.get_id() == canvas.get_id()) {
				return;
			}
			if(existingCanvas != null) {
				this._component.removeComponent(existingCanvas,false);
			}
			var this1 = this._canvasMap;
			var key = canvas.get_id();
			if(Object.prototype.hasOwnProperty.call(this1.h,key)) {
				var this1 = this._canvasMap;
				var key = canvas.get_id();
				newCanvas = this1.h[key];
			} else {
				newCanvas = haxe_ui_util_Variant.toComponent(this._value).cloneComponent();
				var this1 = this._canvasMap;
				var key = canvas.get_id();
				this1.h[key] = newCanvas;
			}
			this._component.addComponent(newCanvas);
		} else if(haxe_ui_util_Variant.get_isComponent(this._value) && ((haxe_ui_util_Variant.toComponent(this._value)) instanceof haxe_ui_components_Image)) {
			var image = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._value) , haxe_ui_components_Image);
			this._component.addComponent(image);
		} else {
			haxe_ui_loaders_image_ImageLoader.get_instance().load(this._value,function(imageInfo) {
				if(imageInfo != null) {
					if(_gthis._value == null || haxe_ui_util_Variant.get_isNull(_gthis._value)) {
						_gthis._component.removeImageDisplay();
						_gthis._component.invalidateComponent();
						return;
					}
					var image = js_Boot.__cast(_gthis._component , haxe_ui_components_Image);
					if(image == null) {
						return;
					}
					var display = image.getImageDisplay();
					if(display != null) {
						if(imageInfo.loader != null) {
							imageInfo.loader.postProcess(_gthis._value,image);
							imageInfo.loader = null;
						}
						display.set_imageInfo(imageInfo);
						image.set_originalWidth(imageInfo.width);
						image.set_originalHeight(imageInfo.height);
						if(image.autoSize() == true && image.parentComponent != null) {
							var _this = image.parentComponent;
							if(!(_this._layout == null || _this._layoutLocked == true)) {
								_this.invalidateComponent("layout",false);
							}
						}
						image.invalidateComponent();
						display.validateComponent();
						var event = new haxe_ui_events_UIEvent("change");
						image.dispatch(event);
					}
				}
			});
		}
	}
	,__class__: haxe_ui_components__$Image_ResourceBehaviour
});
var haxe_ui_components__$Image_Builder = function(image) {
	var _gthis = this;
	haxe_ui_core_CompositeBuilder.call(this,image);
	this._image = image;
	this._image.registerEvent("shown",function(_) {
		if(_gthis._image.parentComponent != null) {
			var _this = _gthis._image.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	});
};
$hxClasses["haxe.ui.components._Image.Builder"] = haxe_ui_components__$Image_Builder;
haxe_ui_components__$Image_Builder.__name__ = "haxe.ui.components._Image.Builder";
haxe_ui_components__$Image_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Image_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_image: null
	,applyStyle: function(style) {
		if(style.resource != null) {
			this._image.set_resource(style.resource);
		}
	}
	,__class__: haxe_ui_components__$Image_Builder
});
var haxe_ui_components_Label = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Label"] = haxe_ui_components_Label;
haxe_ui_components_Label.__name__ = "haxe.ui.components.Label";
haxe_ui_components_Label.__super__ = haxe_ui_core_Component;
haxe_ui_components_Label.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$Label_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Label_LabelLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$Label_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$Label_HtmlTextBehaviour);
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:case 3:
			this.set_text(Std.string(value));
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_text(haxe_ui_util_Variant.toString(v));
			} else {
				this.set_text(value);
			}
			break;
		default:
			this.set_text(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Label();
	}
	,__class__: haxe_ui_components_Label
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components__$Label_LabelLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Label.LabelLayout"] = haxe_ui_components__$Label_LabelLayout;
haxe_ui_components__$Label_LabelLayout.__name__ = "haxe.ui.components._Label.LabelLayout";
haxe_ui_components__$Label_LabelLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Label_LabelLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		if(this.get_component().get_autoWidth() == false) {
			this.get_component().getTextDisplay().set_width(this.get_component().get_componentWidth() - this.get_paddingLeft() - this.get_paddingRight());
			var wordWrap = true;
			if(this._component.get_style() != null && this._component.get_style().wordWrap != null) {
				wordWrap = this._component.get_style().wordWrap;
			}
			this.get_component().getTextDisplay().set_wordWrap(wordWrap);
		} else {
			this.get_component().getTextDisplay().set_width(this.get_component().getTextDisplay().get_textWidth());
		}
		if(this.get_component().get_autoHeight() == true) {
			this.get_component().getTextDisplay().set_height(this.get_component().getTextDisplay().get_textHeight());
		} else {
			this.get_component().getTextDisplay().set_height(this.get_component().get_height());
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasTextDisplay() == true) {
			this.get_component().getTextDisplay().set_left(this.get_paddingLeft());
			this.get_component().getTextDisplay().set_top(this.get_paddingTop());
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextDisplay() == true) {
			size.width += this.get_component().getTextDisplay().get_textWidth();
			size.height += this.get_component().getTextDisplay().get_textHeight();
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$Label_LabelLayout();
	}
	,__class__: haxe_ui_components__$Label_LabelLayout
});
var haxe_ui_components__$Label_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.TextBehaviour"] = haxe_ui_components__$Label_TextBehaviour;
haxe_ui_components__$Label_TextBehaviour.__name__ = "haxe.ui.components._Label.TextBehaviour";
haxe_ui_components__$Label_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_text("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_TextBehaviour
});
var haxe_ui_components__$Label_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.HtmlTextBehaviour"] = haxe_ui_components__$Label_HtmlTextBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.__name__ = "haxe.ui.components._Label.HtmlTextBehaviour";
haxe_ui_components__$Label_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_htmlText("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_HtmlTextBehaviour
});
var haxe_ui_components__$Label_Builder = function(label) {
	haxe_ui_core_CompositeBuilder.call(this,label);
	this._label = label;
};
$hxClasses["haxe.ui.components._Label.Builder"] = haxe_ui_components__$Label_Builder;
haxe_ui_components__$Label_Builder.__name__ = "haxe.ui.components._Label.Builder";
haxe_ui_components__$Label_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$Label_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Label_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_label: null
	,applyStyle: function(style) {
		if(this._label.hasTextDisplay() == true) {
			this._label.getTextDisplay().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._label.getTextDisplay().get_supportsHtml()) {
				var v = Std.string(this._component.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._label.set_htmlText(this._label.get_text());
			}
		}
	}
	,get_isComponentClipped: function() {
		var componentClipRect = this._component.get_componentClipRect();
		if(componentClipRect == null) {
			return false;
		}
		return this._label.getTextDisplay().measureTextWidth() > componentClipRect.width;
	}
	,__class__: haxe_ui_components__$Label_Builder
});
var haxe_ui_components_Progress = function() {
	haxe_ui_components_Range.call(this);
	this.behaviours.set_updateOrder(["min","max","pos","indeterminate"]);
};
$hxClasses["haxe.ui.components.Progress"] = haxe_ui_components_Progress;
haxe_ui_components_Progress.__name__ = "haxe.ui.components.Progress";
haxe_ui_components_Progress.__interfaces__ = [haxe_ui_core_IValueComponent,haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Progress.__super__ = haxe_ui_components_Range;
haxe_ui_components_Progress.prototype = $extend(haxe_ui_components_Range.prototype,{
	get_cssName: function() {
		return "progress";
	}
	,registerComposite: function() {
		haxe_ui_components_Range.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_ProgressBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Range.prototype.registerBehaviours.call(this);
		this.behaviours.register("indeterminate",haxe_ui_components__$Progress_Indeterminate);
		this.behaviours.register("pos",haxe_ui_components__$Progress_Pos);
		this.behaviours.register("min",haxe_ui_components__$Progress_Min);
	}
	,get_indeterminate: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("indeterminate"));
	}
	,set_indeterminate: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("indeterminate",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"indeterminate"));
		return value;
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 3:
			this.set_pos(value == true ? 1 : 0);
			break;
		case 6:
			if(_g.c == String) {
				this.set_pos(parseFloat(value));
			} else {
				this.set_pos(value);
			}
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_pos(haxe_ui_util_Variant.toFloat(v));
			} else {
				this.set_pos(value);
			}
			break;
		default:
			this.set_pos(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Range.prototype.cloneComponent.call(this);
		c.set_indeterminate(this.get_indeterminate());
		c.set_pos(this.get_pos());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Progress();
	}
	,__class__: haxe_ui_components_Progress
	,__properties__: $extend(haxe_ui_components_Range.prototype.__properties__,{set_pos:"set_pos",get_pos:"get_pos",set_indeterminate:"set_indeterminate",get_indeterminate:"get_indeterminate"})
});
var haxe_ui_components__$Progress_Pos = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Pos"] = haxe_ui_components__$Progress_Pos;
haxe_ui_components__$Progress_Pos.__name__ = "haxe.ui.components._Progress.Pos";
haxe_ui_components__$Progress_Pos.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Progress_Pos.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		return haxe_ui_util_Variant.fromFloat(progress.get_end());
	}
	,set: function(value) {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		progress.set_end(haxe_ui_util_Variant.toFloat(value));
	}
	,__class__: haxe_ui_components__$Progress_Pos
});
var haxe_ui_components__$Progress_Min = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Min"] = haxe_ui_components__$Progress_Min;
haxe_ui_components__$Progress_Min.__name__ = "haxe.ui.components._Progress.Min";
haxe_ui_components__$Progress_Min.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Progress_Min.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		var progress = js_Boot.__cast(this._component , haxe_ui_components_Progress);
		progress.set_start(haxe_ui_util_Variant.toFloat(value));
	}
	,__class__: haxe_ui_components__$Progress_Min
});
var haxe_ui_components__$Progress_Indeterminate = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Progress.Indeterminate"] = haxe_ui_components__$Progress_Indeterminate;
haxe_ui_components__$Progress_Indeterminate.__name__ = "haxe.ui.components._Progress.Indeterminate";
haxe_ui_components__$Progress_Indeterminate.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$Progress_Indeterminate.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			this._component.removeClass(":indeterminate");
		} else {
			this._component.addClass(":indeterminate");
		}
	}
	,detatch: function() {
		haxe_ui_behaviours_ValueBehaviour.prototype.detatch.call(this);
		this._component.removeClass(":indeterminate");
	}
	,__class__: haxe_ui_components__$Progress_Indeterminate
});
var haxe_ui_components_ProgressBuilder = function(component) {
	haxe_ui_components_RangeBuilder.call(this,component);
};
$hxClasses["haxe.ui.components.ProgressBuilder"] = haxe_ui_components_ProgressBuilder;
haxe_ui_components_ProgressBuilder.__name__ = "haxe.ui.components.ProgressBuilder";
haxe_ui_components_ProgressBuilder.__super__ = haxe_ui_components_RangeBuilder;
haxe_ui_components_ProgressBuilder.prototype = $extend(haxe_ui_components_RangeBuilder.prototype,{
	__class__: haxe_ui_components_ProgressBuilder
});
var haxe_ui_components__$Range_RangeMin = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeMin"] = haxe_ui_components__$Range_RangeMin;
haxe_ui_components__$Range_RangeMin.__name__ = "haxe.ui.components._Range.RangeMin";
haxe_ui_components__$Range_RangeMin.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeMin.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		range.set_min(haxe_ui_util_Variant.toFloat(this._value));
		if(range.get_start() < range.get_min()) {
			range.set_start(range.get_min());
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Range_RangeMin
});
var haxe_ui_components__$Range_RangeMax = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeMax"] = haxe_ui_components__$Range_RangeMax;
haxe_ui_components__$Range_RangeMax.__name__ = "haxe.ui.components._Range.RangeMax";
haxe_ui_components__$Range_RangeMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		range.set_max(haxe_ui_util_Variant.toFloat(this._value));
		if(range.get_end() > range.get_max()) {
			range.set_end(range.get_max());
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Range_RangeMax
});
var haxe_ui_components__$Range_RangeStart = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeStart"] = haxe_ui_components__$Range_RangeStart;
haxe_ui_components__$Range_RangeStart.__name__ = "haxe.ui.components._Range.RangeStart";
haxe_ui_components__$Range_RangeStart.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeStart.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(range.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_min());
		} else if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(range.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_max());
		}
		range.set_start(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		changeEvent.previousValue = this._previousValue;
		changeEvent.value = this._value;
		this._component.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Range_RangeStart
});
var haxe_ui_components__$Range_RangeEnd = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.RangeEnd"] = haxe_ui_components__$Range_RangeEnd;
haxe_ui_components__$Range_RangeEnd.__name__ = "haxe.ui.components._Range.RangeEnd";
haxe_ui_components__$Range_RangeEnd.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Range_RangeEnd.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(range.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_min());
		} else if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(range.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_max());
		}
		range.set_end(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		changeEvent.previousValue = this._previousValue;
		changeEvent.value = this._value;
		this._component.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Range_RangeEnd
});
var haxe_ui_components__$Range_AllowInteraction = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Range.AllowInteraction"] = haxe_ui_components__$Range_AllowInteraction;
haxe_ui_components__$Range_AllowInteraction.__name__ = "haxe.ui.components._Range.AllowInteraction";
haxe_ui_components__$Range_AllowInteraction.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Range_AllowInteraction.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromBool(this._component._internalEvents != null);
	}
	,set: function(value) {
		if(this._component.get_native() == true) {
			return;
		}
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(true))) {
			this._component.registerInternalEvents(haxe_ui_components__$Range_Events);
		} else {
			this._component.unregisterInternalEvents();
		}
	}
	,__class__: haxe_ui_components__$Range_AllowInteraction
});
var haxe_ui_components__$Range_Events = function(range) {
	haxe_ui_events_Events.call(this,range);
	this._range = range;
	this.register();
};
$hxClasses["haxe.ui.components._Range.Events"] = haxe_ui_components__$Range_Events;
haxe_ui_components__$Range_Events.__name__ = "haxe.ui.components._Range.Events";
haxe_ui_components__$Range_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Range_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_range: null
	,register: function() {
		this._range.registerEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,unregister: function() {
		this._range.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,onMouseDown: function(e) {
		var pt = new haxe_ui_geom_Point(e.get_localX(),e.get_localY());
		var pos = this._range.posFromCoord(pt);
		this.applyPos(pos);
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseUp: function(e) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(e) {
		var pt = new haxe_ui_geom_Point(e.screenX - this._range.get_screenLeft(),e.screenY - this._range.get_screenTop());
		var pos = this._range.posFromCoord(pt);
		this.applyPos(pos);
	}
	,applyPos: function(pos) {
		var precision = this._range.get_precision();
		if(precision == null) {
			precision = 0;
		}
		pos = Math.round(pos * Math.pow(10,precision)) / Math.pow(10,precision);
		if(this._range.get_step() > 0) {
			pos = Math.ceil(pos / this._range.get_step()) * this._range.get_step();
		}
		if(((this._range) instanceof haxe_ui_components_Progress)) {
			(js_Boot.__cast(this._range , haxe_ui_components_Progress)).set_pos(pos);
			return;
		}
		var d1 = this._range.get_end() - this._range.get_start();
		var d2 = pos - this._range.get_start();
		if(d2 < d1 / 2) {
			this._range.set_start(pos);
		} else if(d2 >= d1 / 2) {
			this._range.set_end(pos);
		} else if(pos > this._range.get_start()) {
			this._range.set_end(pos);
		} else if(pos < this._range.get_end()) {
			this._range.set_start(pos);
		}
	}
	,__class__: haxe_ui_components__$Range_Events
});
var haxe_ui_components__$Scroll_Events = function(scroll) {
	haxe_ui_events_Events.call(this,scroll);
	this._scroll = scroll;
	this._deincButton = this._scroll.findComponent("scroll-deinc-button");
	this._incButton = this._scroll.findComponent("scroll-inc-button");
	this._thumb = this._scroll.findComponent("scroll-thumb-button");
};
$hxClasses["haxe.ui.components._Scroll.Events"] = haxe_ui_components__$Scroll_Events;
haxe_ui_components__$Scroll_Events.__name__ = "haxe.ui.components._Scroll.Events";
haxe_ui_components__$Scroll_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Scroll_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scroll: null
	,_deincButton: null
	,_incButton: null
	,_thumb: null
	,register: function() {
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._deincButton != null && this._deincButton.hasEvent("click",$bind(this,this.onDeinc)) == false) {
			this._deincButton.registerEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null && this._incButton.hasEvent("click",$bind(this,this.onInc)) == false) {
			this._incButton.registerEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null && this._thumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._thumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		if(this._deincButton != null) {
			this._deincButton.unregisterEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null) {
			this._incButton.unregisterEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null) {
			this._thumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,onMouseDown: function(event) {
		var componentOffset = this._scroll.getComponentOffset();
		if(this._deincButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false && this._incButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false) {
			this._scroll.applyPageFromCoord(new haxe_ui_geom_Point(event.screenX - componentOffset.x,event.screenY - componentOffset.y));
		}
	}
	,onDeinc: function(event) {
		var fh = this._scroll;
		fh.set_pos(fh.get_pos() - this._scroll.get_increment());
	}
	,onInc: function(event) {
		var fh = this._scroll;
		fh.set_pos(fh.get_pos() + this._scroll.get_increment());
	}
	,_mouseDownOffset: null
	,onThumbMouseDown: function(event) {
		this._mouseDownOffset = new haxe_ui_geom_Point();
		var tmp = event.screenX - this._thumb.get_left();
		var tmp1 = this._scroll.get_layout().get_paddingLeft();
		this._mouseDownOffset.x = tmp + tmp1;
		var tmp = event.screenY - this._thumb.get_top();
		var tmp1 = this._scroll.get_layout().get_paddingTop();
		this._mouseDownOffset.y = tmp + tmp1;
		this._scroll.get_screen().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseUp: function(event) {
		this._mouseDownOffset = null;
		this._scroll.get_screen().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(event) {
		if(this._mouseDownOffset == null) {
			return;
		}
		var coord = new haxe_ui_geom_Point(event.screenX - this._mouseDownOffset.x,event.screenY - this._mouseDownOffset.y);
		this._scroll.set_pos(this._scroll.posFromCoord(coord));
	}
	,__class__: haxe_ui_components__$Scroll_Events
});
var haxe_ui_components__$Scroll_ScrollValueBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Scroll.ScrollValueBehaviour"] = haxe_ui_components__$Scroll_ScrollValueBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollValueBehaviour";
haxe_ui_components__$Scroll_ScrollValueBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,validateData: function() {
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var pos = scroll.get_pos();
		var min = scroll.get_min();
		var max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		scroll.dispatch(changeEvent);
		var scrollEvent = new haxe_ui_events_ScrollEvent("scrollscroll");
		scroll.dispatch(scrollEvent);
	}
	,__class__: haxe_ui_components__$Scroll_ScrollValueBehaviour
});
var haxe_ui_components__$Scroll_ScrollMinMaxBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Scroll.ScrollMinMaxBehaviour"] = haxe_ui_components__$Scroll_ScrollMinMaxBehaviour;
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollMinMaxBehaviour";
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Scroll_ScrollMinMaxBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,validateData: function() {
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var pos = scroll.get_pos();
		var min = scroll.get_min();
		var max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		scroll.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Scroll_ScrollMinMaxBehaviour
});
var haxe_ui_components__$Slider_StartBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.StartBehaviour"] = haxe_ui_components__$Slider_StartBehaviour;
haxe_ui_components__$Slider_StartBehaviour.__name__ = "haxe.ui.components._Slider.StartBehaviour";
haxe_ui_components__$Slider_StartBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_StartBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_SliderBuilder);
		if(this._component.findComponent("start-thumb") == null) {
			builder.createThumb("start-thumb");
		}
		var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_min());
		}
		if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_max());
		}
		if(slider.get_precision() != null) {
			var v = haxe_ui_util_Variant.toFloat(this._value);
			var precision = slider.get_precision();
			if(precision == null) {
				precision = 0;
			}
			this._value = haxe_ui_util_Variant.fromFloat(Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision));
		}
		if(slider.get_step() != null) {
			var v = haxe_ui_util_Variant.toFloat(this._value);
			var n = slider.get_step();
			var r = v % n;
			this._value = haxe_ui_util_Variant.fromFloat(r <= n / 2 ? Math.round(v - r) : Math.round(v + n - r));
		}
		this._component.findComponent(null,haxe_ui_components_Range).set_start(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Slider_StartBehaviour
});
var haxe_ui_components__$Slider_EndBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.EndBehaviour"] = haxe_ui_components__$Slider_EndBehaviour;
haxe_ui_components__$Slider_EndBehaviour.__name__ = "haxe.ui.components._Slider.EndBehaviour";
haxe_ui_components__$Slider_EndBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_EndBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		if(range == null) {
			return;
		}
		var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_min());
		}
		if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_max());
		}
		if(slider.get_precision() != null) {
			var v = haxe_ui_util_Variant.toFloat(this._value);
			var precision = slider.get_precision();
			if(precision == null) {
				precision = 0;
			}
			this._value = haxe_ui_util_Variant.fromFloat(Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision));
		}
		if(slider.get_step() != null) {
			var v = haxe_ui_util_Variant.toFloat(this._value);
			var n = slider.get_step();
			var r = v % n;
			this._value = haxe_ui_util_Variant.fromFloat(r <= n / 2 ? Math.round(v - r) : Math.round(v + n - r));
		}
		if(slider.get_center() != null) {
			if(haxe_ui_util_Variant.gte(this._value,haxe_ui_util_Variant.fromFloat(slider.get_center()))) {
				range.virtualStart = slider.get_center();
				range.virtualEnd = haxe_ui_util_Variant.toFloat(this._value);
			} else if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_center()))) {
				range.virtualStart = haxe_ui_util_Variant.toFloat(this._value);
				range.virtualEnd = slider.get_center();
			}
		}
		range.set_end(haxe_ui_util_Variant.toFloat(this._value));
		(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_pos(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Slider_EndBehaviour
});
var haxe_ui_components__$Slider_MinBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MinBehaviour"] = haxe_ui_components__$Slider_MinBehaviour;
haxe_ui_components__$Slider_MinBehaviour.__name__ = "haxe.ui.components._Slider.MinBehaviour";
haxe_ui_components__$Slider_MinBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MinBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		if(range == null) {
			return;
		}
		if((js_Boot.__cast(this._component , haxe_ui_components_Slider)).get_start() == null) {
			range.set_start(haxe_ui_util_Variant.toFloat(this._value));
		}
		range.set_min(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Slider_MinBehaviour
});
var haxe_ui_components__$Slider_MaxBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MaxBehaviour"] = haxe_ui_components__$Slider_MaxBehaviour;
haxe_ui_components__$Slider_MaxBehaviour.__name__ = "haxe.ui.components._Slider.MaxBehaviour";
haxe_ui_components__$Slider_MaxBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MaxBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		if(range == null) {
			return;
		}
		range.set_max(haxe_ui_util_Variant.toFloat(this._value));
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_components__$Slider_MaxBehaviour
});
var haxe_ui_components__$Slider_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.PosBehaviour"] = haxe_ui_components__$Slider_PosBehaviour;
haxe_ui_components__$Slider_PosBehaviour.__name__ = "haxe.ui.components._Slider.PosBehaviour";
haxe_ui_components__$Slider_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(this._component.get_isReady() == false) {
			return this._value;
		}
		return haxe_ui_util_Variant.fromFloat((js_Boot.__cast(this._component , haxe_ui_components_Slider)).get_end());
	}
	,validateData: function() {
		(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_end(haxe_ui_util_Variant.toFloat(this._value));
	}
	,__class__: haxe_ui_components__$Slider_PosBehaviour
});
var haxe_ui_components__$Slider_CenterBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.CenterBehaviour"] = haxe_ui_components__$Slider_CenterBehaviour;
haxe_ui_components__$Slider_CenterBehaviour.__name__ = "haxe.ui.components._Slider.CenterBehaviour";
haxe_ui_components__$Slider_CenterBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Slider_CenterBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(value != null && haxe_ui_util_Variant.get_isNull(value) == false) {
			var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
			slider.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			var v = this._component.findComponent(null,haxe_ui_components_Range);
			if(v != null) {
				v.virtualStart = haxe_ui_util_Variant.toFloat(this._value);
			}
			this._component.addClass("with-center");
		} else {
			this._component.removeClass("with-center");
		}
	}
	,__class__: haxe_ui_components__$Slider_CenterBehaviour
});
var haxe_ui_components__$Slider_MinorTicks = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MinorTicks"] = haxe_ui_components__$Slider_MinorTicks;
haxe_ui_components__$Slider_MinorTicks.__name__ = "haxe.ui.components._Slider.MinorTicks";
haxe_ui_components__$Slider_MinorTicks.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MinorTicks.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value != null && haxe_ui_util_Variant.get_isNull(this._value) == false) {
			var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
			var ticks = slider.findComponents("minor-tick",null,1);
			if(ticks == null || ticks.length == 0) {
				var m = slider.get_max() - slider.get_min();
				var v = haxe_ui_util_Variant.toFloat(this._value);
				var n = m / v | 0;
				var index = slider.getComponentIndex(slider.findComponent(null,haxe_ui_components_Range));
				var _g = 0;
				var _g1 = n + 1;
				while(_g < _g1) {
					var _ = _g++;
					var tick = new haxe_ui_core_Component();
					tick.addClass("minor-tick");
					tick.set_scriptAccess(false);
					slider.addComponentAt(tick,index + 1);
				}
			}
		}
	}
	,__class__: haxe_ui_components__$Slider_MinorTicks
});
var haxe_ui_components__$Slider_MajorTicks = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.MajorTicks"] = haxe_ui_components__$Slider_MajorTicks;
haxe_ui_components__$Slider_MajorTicks.__name__ = "haxe.ui.components._Slider.MajorTicks";
haxe_ui_components__$Slider_MajorTicks.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Slider_MajorTicks.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value != null && haxe_ui_util_Variant.get_isNull(this._value) == false) {
			var slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
			var ticks = slider.findComponents("major-tick",null,1);
			if(ticks == null || ticks.length == 0) {
				var m = slider.get_max() - slider.get_min();
				var v = haxe_ui_util_Variant.toFloat(this._value);
				var n = m / v | 0;
				var index = slider.getComponentIndex(slider.findComponent(null,haxe_ui_components_Range));
				var _g = 0;
				var _g1 = n + 1;
				while(_g < _g1) {
					var _ = _g++;
					var tick = new haxe_ui_core_Component();
					tick.addClass("major-tick");
					tick.set_scriptAccess(false);
					slider.addComponentAt(tick,index + 1);
				}
			}
		}
	}
	,__class__: haxe_ui_components__$Slider_MajorTicks
});
var haxe_ui_components__$Slider_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Slider.PosFromCoord"] = haxe_ui_components__$Slider_PosFromCoord;
haxe_ui_components__$Slider_PosFromCoord.__name__ = "haxe.ui.components._Slider.PosFromCoord";
haxe_ui_components__$Slider_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Slider_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(coord) {
		var range = this._component.findComponent(null,haxe_ui_components_Range);
		return haxe_ui_util_Variant.fromFloat(range.posFromCoord(coord));
	}
	,__class__: haxe_ui_components__$Slider_PosFromCoord
});
var haxe_ui_components__$Slider_Events = function(slider) {
	this._offset = null;
	this._rangeSynced = false;
	haxe_ui_events_Events.call(this,slider);
	this._slider = slider;
	this._range = slider.findComponent(null,haxe_ui_components_Range);
};
$hxClasses["haxe.ui.components._Slider.Events"] = haxe_ui_components__$Slider_Events;
haxe_ui_components__$Slider_Events.__name__ = "haxe.ui.components._Slider.Events";
haxe_ui_components__$Slider_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Slider_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_slider: null
	,_endThumb: null
	,_startThumb: null
	,_range: null
	,_activeThumb: null
	,register: function() {
		this._startThumb = this._slider.findComponent("start-thumb");
		if(this._startThumb != null && this._startThumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._startThumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		this._endThumb = this._slider.findComponent("end-thumb");
		if(this._endThumb != null && this._endThumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._endThumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._range != null && this._range.hasEvent("mousedown",$bind(this,this.onRangeMouseDown)) == false) {
			this._range.registerEvent("mousedown",$bind(this,this.onRangeMouseDown));
		}
		if(this._range != null && this._range.hasEvent("change",$bind(this,this.onRangeChange)) == false) {
			this._range.registerEvent("change",$bind(this,this.onRangeChange));
		}
		if(this.hasEvent("actionstart",$bind(this,this.onActionStart)) == false) {
			this.registerEvent("actionstart",$bind(this,this.onActionStart));
		}
	}
	,unregister: function() {
		if(this._startThumb != null) {
			this._startThumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._endThumb != null) {
			this._endThumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._range != null) {
			this._range.unregisterEvent("mousedown",$bind(this,this.onRangeMouseDown));
			this._range.unregisterEvent("change",$bind(this,this.onRangeChange));
		}
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
	}
	,_rangeSynced: null
	,onRangeChange: function(e) {
		if(this._rangeSynced == false && this._range.get_end() == this._slider.get_end()) {
			this._rangeSynced = true;
			if(this._slider.get_end() == 0) {
				return;
			}
		}
		if(this._rangeSynced == false) {
			return;
		}
		var event = new haxe_ui_events_UIEvent("change");
		event.previousValue = e.previousValue;
		event.value = e.value;
		this._slider.dispatch(event);
	}
	,onRangeMouseDown: function(e) {
		if(this._startThumb != null && this._startThumb.hitTest(e.screenX,e.screenY) == true) {
			return;
		}
		if(this._endThumb != null && this._endThumb.hitTest(e.screenX,e.screenY) == true) {
			return;
		}
		this._slider.set_focus(true);
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		e.cancel();
		var coord = new haxe_ui_geom_Point();
		coord.x = e.screenX - this._slider.get_screenLeft() - this._slider.get_paddingLeft() * haxe_ui_Toolkit.get_scaleX();
		coord.y = e.screenY - this._slider.get_screenTop() - this._slider.get_paddingTop() * haxe_ui_Toolkit.get_scaleY();
		var pos = this._slider.posFromCoord(coord);
		if(this._startThumb == null) {
			this._slider.set_pos(pos);
			this.startDrag(this._endThumb,this._endThumb.get_actualComponentWidth() / 2,this._endThumb.get_actualComponentHeight() / 2);
			return;
		}
		var builder = js_Boot.__cast(this._slider._compositeBuilder , haxe_ui_components_SliderBuilder);
		var d1 = this._slider.get_end() - this._slider.get_start();
		var d2 = pos - this._slider.get_start();
		if(d2 < d1 / 2) {
			pos -= builder.getStartOffset();
			this._slider.set_start(pos);
			this.startDrag(this._startThumb,this._startThumb.get_actualComponentWidth() / 2,this._startThumb.get_actualComponentHeight() / 2);
		} else if(d2 >= d1 / 2) {
			pos -= builder.getStartOffset();
			this._slider.set_end(pos);
			this.startDrag(this._endThumb,this._endThumb.get_actualComponentWidth() / 2,this._endThumb.get_actualComponentHeight() / 2);
		} else if(pos > this._slider.get_start()) {
			this._slider.set_end(pos);
			this.startDrag(this._endThumb,this._endThumb.get_actualComponentWidth() / 2,this._endThumb.get_actualComponentHeight() / 2);
		} else if(pos < this._slider.get_end()) {
			this._slider.set_start(pos);
			this.startDrag(this._startThumb,this._startThumb.get_actualComponentWidth() / 2,this._startThumb.get_actualComponentHeight() / 2);
		}
	}
	,_offset: null
	,onThumbMouseDown: function(e) {
		e.cancel();
		this._slider.set_focus(true);
		this.startDrag(js_Boot.__cast(e.target , haxe_ui_components_Button),e.get_localX() * haxe_ui_Toolkit.get_scaleX(),e.get_localY() * haxe_ui_Toolkit.get_scaleX());
	}
	,startDrag: function(thumb,offsetX,offsetY) {
		this._offset = new haxe_ui_geom_Point(offsetX,offsetY);
		this._activeThumb = thumb;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._slider.dispatch(new haxe_ui_events_DragEvent("dragstart"));
	}
	,onScreenMouseUp: function(e) {
		this._activeThumb = null;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
		this._slider.dispatch(new haxe_ui_events_DragEvent("dragend"));
	}
	,onScreenMouseMove: function(e) {
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		var coord = new haxe_ui_geom_Point();
		coord.x = e.screenX - this._slider.get_screenLeft() - this._offset.x - this._slider.get_paddingLeft() * haxe_ui_Toolkit.get_scaleX() + this._activeThumb.get_actualComponentWidth() / 2;
		coord.y = e.screenY - this._slider.get_screenTop() - this._offset.y - this._slider.get_paddingTop() * haxe_ui_Toolkit.get_scaleX() + this._activeThumb.get_actualComponentHeight() / 2;
		var pos = this._slider.posFromCoord(coord);
		var builder = js_Boot.__cast(this._slider._compositeBuilder , haxe_ui_components_SliderBuilder);
		if(this._activeThumb == this._startThumb) {
			pos -= builder.getStartOffset();
			if(pos > this._slider.get_end()) {
				pos = this._slider.get_end();
			}
			this._slider.set_start(pos);
		} else if(this._activeThumb == this._endThumb) {
			pos -= builder.getStartOffset();
			this._slider.set_end(pos);
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionDown":case "actionLeft":
			event.repeater = true;
			var fh = this._slider;
			fh.set_value(fh.get_value() - 1);
			break;
		case "actionRight":case "actionUp":
			event.repeater = true;
			var fh = this._slider;
			fh.set_value(fh.get_value() + 1);
			break;
		default:
		}
	}
	,__class__: haxe_ui_components__$Slider_Events
});
var haxe_ui_components_Spacer = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Spacer"] = haxe_ui_components_Spacer;
haxe_ui_components_Spacer.__name__ = "haxe.ui.components.Spacer";
haxe_ui_components_Spacer.__super__ = haxe_ui_core_Component;
haxe_ui_components_Spacer.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Spacer();
	}
	,__class__: haxe_ui_components_Spacer
});
var haxe_ui_containers_VBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalLayout());
};
$hxClasses["haxe.ui.containers.VBox"] = haxe_ui_containers_VBox;
haxe_ui_containers_VBox.__name__ = "haxe.ui.containers.VBox";
haxe_ui_containers_VBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_VBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VBox();
	}
	,__class__: haxe_ui_containers_VBox
});
var haxe_ui_components_Stepper = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.components.Stepper"] = haxe_ui_components_Stepper;
haxe_ui_components_Stepper.__name__ = "haxe.ui.components.Stepper";
haxe_ui_components_Stepper.__interfaces__ = [haxe_ui_core_IValueComponent];
haxe_ui_components_Stepper.__super__ = haxe_ui_containers_VBox;
haxe_ui_components_Stepper.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	increment: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("increment",null);
	}
	,deincrement: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("deincrement",null);
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Stepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$Stepper_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("pos",haxe_ui_components__$Stepper_PosBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(1));
		this.behaviours.register("min",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("max",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("increment",haxe_ui_components__$Stepper_IncBehaviour);
		this.behaviours.register("deincrement",haxe_ui_components__$Stepper_DeincBehaviour);
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pos"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_step: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"step"));
		return value;
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"max"));
		return value;
	}
	,get_precision: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"precision"));
		return value;
	}
	,get_repeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeater"));
		return value;
	}
	,get_repeatInterval: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"repeatInterval"));
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 3:
			this.set_pos(value == true ? 1 : 0);
			break;
		case 6:
			if(_g.c == String) {
				this.set_pos(parseFloat(value));
			} else {
				this.set_pos(value);
			}
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_pos(haxe_ui_util_Variant.toFloat(v));
			} else {
				this.set_pos(value);
			}
			break;
		default:
			this.set_pos(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		c.set_pos(this.get_pos());
		c.set_step(this.get_step());
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Stepper();
	}
	,__class__: haxe_ui_components_Stepper
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater",set_precision:"set_precision",get_precision:"get_precision",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_step:"set_step",get_step:"get_step",set_pos:"set_pos",get_pos:"get_pos"})
});
var haxe_ui_components__$Stepper_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.PosBehaviour"] = haxe_ui_components__$Stepper_PosBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.__name__ = "haxe.ui.components._Stepper.PosBehaviour";
haxe_ui_components__$Stepper_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var v = haxe_ui_util_Variant.toFloat(this._value);
		var min = stepper.get_min();
		var max = stepper.get_max();
		var v1;
		if(v == null || isNaN(v)) {
			v1 = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			v1 = v;
		}
		stepper.set_pos(v1);
		this._value = haxe_ui_util_Variant.fromFloat(v1);
		var event = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$Stepper_PosBehaviour
});
var haxe_ui_components__$Stepper_IncBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.IncBehaviour"] = haxe_ui_components__$Stepper_IncBehaviour;
haxe_ui_components__$Stepper_IncBehaviour.__name__ = "haxe.ui.components._Stepper.IncBehaviour";
haxe_ui_components__$Stepper_IncBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Stepper_IncBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var newPos = stepper.get_pos();
		newPos += stepper.get_step();
		if(stepper.get_max() != null && newPos > stepper.get_max()) {
			newPos = stepper.get_max();
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
	,__class__: haxe_ui_components__$Stepper_IncBehaviour
});
var haxe_ui_components__$Stepper_DeincBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.DeincBehaviour"] = haxe_ui_components__$Stepper_DeincBehaviour;
haxe_ui_components__$Stepper_DeincBehaviour.__name__ = "haxe.ui.components._Stepper.DeincBehaviour";
haxe_ui_components__$Stepper_DeincBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Stepper_DeincBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var newPos = stepper.get_pos();
		newPos -= stepper.get_step();
		if(stepper.get_min() != null && newPos < stepper.get_min()) {
			newPos = stepper.get_min();
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
	,__class__: haxe_ui_components__$Stepper_DeincBehaviour
});
var haxe_ui_components__$Stepper_Builder = function(stepper) {
	haxe_ui_core_CompositeBuilder.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._Stepper.Builder"] = haxe_ui_components__$Stepper_Builder;
haxe_ui_components__$Stepper_Builder.__name__ = "haxe.ui.components._Stepper.Builder";
haxe_ui_components__$Stepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Stepper_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stepper: null
	,create: function() {
		var button = new haxe_ui_components_Button();
		button.set_styleNames("stepper-button stepper-inc");
		button.set_id("stepper-inc");
		button.set_repeater(this._stepper.get_repeater());
		button.set_easeInRepeater(true);
		button.set_allowFocus(false);
		button.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button);
		var button = new haxe_ui_components_Button();
		button.set_styleNames("stepper-button stepper-deinc");
		button.set_id("stepper-deinc");
		button.set_repeater(this._stepper.get_repeater());
		button.set_easeInRepeater(true);
		button.set_allowFocus(false);
		button.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button);
	}
	,__class__: haxe_ui_components__$Stepper_Builder
});
var haxe_ui_components__$Stepper_Events = function(stepper) {
	haxe_ui_events_Events.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._Stepper.Events"] = haxe_ui_components__$Stepper_Events;
haxe_ui_components__$Stepper_Events.__name__ = "haxe.ui.components._Stepper.Events";
haxe_ui_components__$Stepper_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Stepper_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_stepper: null
	,register: function() {
		var button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		if(!button.hasEvent("click",$bind(this,this.onInc))) {
			button.registerEvent("click",$bind(this,this.onInc));
		}
		var button = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		if(!button.hasEvent("click",$bind(this,this.onDeinc))) {
			button.registerEvent("click",$bind(this,this.onDeinc));
		}
	}
	,unregister: function() {
		var button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		button.unregisterEvent("click",$bind(this,this.onInc));
		var button = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		button.unregisterEvent("click",$bind(this,this.onDeinc));
	}
	,onInc: function(event) {
		this._stepper.increment();
	}
	,onDeinc: function(event) {
		this._stepper.deincrement();
	}
	,__class__: haxe_ui_components__$Stepper_Events
});
var haxe_ui_components_TabBar = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.TabBar"] = haxe_ui_components_TabBar;
haxe_ui_components_TabBar.__name__ = "haxe.ui.components.TabBar";
haxe_ui_components_TabBar.__super__ = haxe_ui_core_Component;
haxe_ui_components_TabBar.prototype = $extend(haxe_ui_core_Component.prototype,{
	removeTab: function(index) {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removeTab",index);
	}
	,getTab: function(index) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("getTab",index));
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$TabBar_Builder;
		this._internalEventsClass = haxe_ui_components__$TabBar_Events;
		this._defaultLayoutClass = haxe_ui_components_TabBarLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedIndex",haxe_ui_components__$TabBar_SelectedIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedTab",haxe_ui_components__$TabBar_SelectedTab);
		this.behaviours.register("tabPosition",haxe_ui_components__$TabBar_TabPosition,haxe_ui_util_Variant.fromString("top"));
		this.behaviours.register("tabCount",haxe_ui_components__$TabBar_TabCount);
		this.behaviours.register("closable",haxe_ui_components__$TabBar_Closable,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("buttonWidth",haxe_ui_components__$TabBar_ButtonWidth,null);
		this.behaviours.register("buttonHeight",haxe_ui_components__$TabBar_ButtonHeight,null);
		this.behaviours.register("removeTab",haxe_ui_components__$TabBar_RemoveTab);
		this.behaviours.register("getTab",haxe_ui_components__$TabBar_GetTab);
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		return value;
	}
	,get_selectedTab: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedTab"));
	}
	,get_tabPosition: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("tabPosition"));
	}
	,set_tabPosition: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"tabPosition",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("tabPosition",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"tabPosition"));
		return value;
	}
	,get_tabCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("tabCount"));
	}
	,get_closable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("closable"));
	}
	,set_closable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("closable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"closable"));
		return value;
	}
	,get_buttonWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("buttonWidth"));
	}
	,set_buttonWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("buttonWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"buttonWidth"));
		return value;
	}
	,get_buttonHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("buttonHeight"));
	}
	,set_buttonHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("buttonHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"buttonHeight"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TabBar();
	}
	,__class__: haxe_ui_components_TabBar
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_buttonHeight:"set_buttonHeight",get_buttonHeight:"get_buttonHeight",set_buttonWidth:"set_buttonWidth",get_buttonWidth:"get_buttonWidth",set_closable:"set_closable",get_closable:"get_closable",get_tabCount:"get_tabCount",set_tabPosition:"set_tabPosition",get_tabPosition:"get_tabPosition",get_selectedTab:"get_selectedTab",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_components_TabBarLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._roundFullWidths = true;
};
$hxClasses["haxe.ui.components.TabBarLayout"] = haxe_ui_components_TabBarLayout;
haxe_ui_components_TabBarLayout.__name__ = "haxe.ui.components.TabBarLayout";
haxe_ui_components_TabBarLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_TabBarLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var filler = this._component.findComponent("tabbar-filler",null,false);
		var container = this._component.findComponent("tabbar-contents",null,false);
		if(filler != null) {
			filler.set_width(this._component.get_width() - container.get_width());
			filler.set_height(this._component.get_height());
			filler.set_left(container.get_width());
		}
		var max = 0;
		var _g = 0;
		var _g1 = container._children == null ? [] : container._children;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			button.syncComponentValidation();
			if(button.get_height() > max) {
				max = button.get_height();
			}
		}
		if(max > 0) {
			var _g = 0;
			var _g1 = container._children == null ? [] : container._children;
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				button.set_height(max);
			}
		}
		var left = this._component.findComponent("tabbar-scroll-left",null,false);
		var right = this._component.findComponent("tabbar-scroll-right",null,false);
		if(left != null && this.hidden(left) == false) {
			var x = this._component.get_width() - left.get_width();
			if(right != null) {
				x -= right.get_width();
			}
			left.set_left(x + 1);
			left.set_top(this._component.get_height() / 2 - left.get_height() / 2);
		}
		if(right != null && this.hidden(right) == false) {
			right.set_left(this._component.get_width() - right.get_width());
			right.set_top(this._component.get_height() / 2 - right.get_height() / 2);
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this);
		var max = 0;
		var _g = 0;
		var _g1 = this._component.findComponents(null,haxe_ui_components__$TabBar_TabBarButton);
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.get_height() > max) {
				max = b.get_height();
			}
		}
		size.height = max;
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TabBarLayout();
	}
	,__class__: haxe_ui_components_TabBarLayout
});
var haxe_ui_components__$TabBar_Closable = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.Closable"] = haxe_ui_components__$TabBar_Closable;
haxe_ui_components__$TabBar_Closable.__name__ = "haxe.ui.components._TabBar.Closable";
haxe_ui_components__$TabBar_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_Closable.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		var buttons = builder._container.findComponents(null,haxe_ui_components__$TabBar_TabBarButton,1);
		var _g = 0;
		while(_g < buttons.length) {
			var b = buttons[_g];
			++_g;
			b.set_closable(haxe_ui_util_Variant.toBool(this._value));
		}
	}
	,__class__: haxe_ui_components__$TabBar_Closable
});
var haxe_ui_components__$TabBar_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.SelectedIndex"] = haxe_ui_components__$TabBar_SelectedIndex;
haxe_ui_components__$TabBar_SelectedIndex.__name__ = "haxe.ui.components._TabBar.SelectedIndex";
haxe_ui_components__$TabBar_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		var _this = builder._container;
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1))) {
			var _this = builder._container;
			this._value = haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1);
			return;
		}
		var beforeChangeEvent = new haxe_ui_events_UIEvent("beforechange");
		beforeChangeEvent.value = this._value;
		this._component.dispatch(beforeChangeEvent);
		if(beforeChangeEvent.canceled) {
			this._value = this._previousValue;
			return;
		}
		var tab = js_Boot.__cast(builder._container.getComponentAt(haxe_ui_util_Variant.toInt(this._value)) , haxe_ui_components_Button);
		if(tab != null) {
			var selectedTab = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedTab();
			if(selectedTab != null) {
				selectedTab.removeClass("tabbar-button-selected");
				var label = selectedTab.findComponent(null,haxe_ui_components_Label);
				if(label != null) {
					label.invalidateComponent();
				}
				var icon = selectedTab.findComponent(null,haxe_ui_components_Image);
				if(icon != null) {
					icon.invalidateComponent();
				}
			}
			tab.addClass("tabbar-button-selected");
			var label = tab.findComponent(null,haxe_ui_components_Label);
			if(label != null) {
				label.invalidateComponent();
			}
			var icon = tab.findComponent(null,haxe_ui_components_Image);
			if(icon != null) {
				icon.invalidateComponent();
			}
			var rangeMin = Math.abs(builder._container.get_left());
			var rangeMax = rangeMin + this._component.get_width();
			var left = this._component.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
			var right = this._component.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
			if(left != null && left.get_hidden() == false) {
				rangeMax -= left.get_width();
				rangeMax -= this._component.get_layout().get_horizontalSpacing();
			}
			if(right != null && right.get_hidden() == false) {
				rangeMax -= right.get_width();
			}
			if(tab.get_left() < rangeMin || tab.get_left() + tab.get_width() > rangeMax) {
				var max = -(builder._container.get_width() - this._component.get_width());
				var x = -tab.get_left() + this._component.get_layout().get_paddingLeft();
				if(left != null && left.get_hidden() == false) {
					max -= left.get_width();
					max -= this._component.get_layout().get_horizontalSpacing();
				}
				if(right != null && right.get_hidden() == false) {
					max -= right.get_width();
				}
				if(x < max) {
					x = max;
				}
				builder._containerPosition = x;
				builder._container.set_left(x);
			}
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_components__$TabBar_SelectedIndex
});
var haxe_ui_components__$TabBar_SelectedTab = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.SelectedTab"] = haxe_ui_components__$TabBar_SelectedTab;
haxe_ui_components__$TabBar_SelectedTab.__name__ = "haxe.ui.components._TabBar.SelectedTab";
haxe_ui_components__$TabBar_SelectedTab.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_SelectedTab.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		return haxe_ui_util_Variant.fromComponent(builder._container.findComponent("tabbar-button-selected",null,false,"css"));
	}
	,__class__: haxe_ui_components__$TabBar_SelectedTab
});
var haxe_ui_components__$TabBar_TabPosition = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.TabPosition"] = haxe_ui_components__$TabBar_TabPosition;
haxe_ui_components__$TabBar_TabPosition.__name__ = "haxe.ui.components._TabBar.TabPosition";
haxe_ui_components__$TabBar_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_TabPosition.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromString("bottom"))) {
			this._component.addClass(":bottom");
			var _g = 0;
			var _this = builder._container;
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(":bottom");
			}
		} else {
			this._component.removeClass(":bottom");
			var _g = 0;
			var _this = builder._container;
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(":bottom");
			}
		}
	}
	,__class__: haxe_ui_components__$TabBar_TabPosition
});
var haxe_ui_components__$TabBar_TabCount = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.TabCount"] = haxe_ui_components__$TabBar_TabCount;
haxe_ui_components__$TabBar_TabCount.__name__ = "haxe.ui.components._TabBar.TabCount";
haxe_ui_components__$TabBar_TabCount.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_TabCount.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var _this = builder._container;
		return haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length);
	}
	,__class__: haxe_ui_components__$TabBar_TabCount
});
var haxe_ui_components__$TabBar_RemoveTab = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.RemoveTab"] = haxe_ui_components__$TabBar_RemoveTab;
haxe_ui_components__$TabBar_RemoveTab.__name__ = "haxe.ui.components._TabBar.RemoveTab";
haxe_ui_components__$TabBar_RemoveTab.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_RemoveTab.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = param;
		var _this = builder._container;
		if(index < (_this._children == null ? [] : _this._children).length) {
			var selectedIndex = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedIndex();
			var newSelectedIndex = selectedIndex;
			if(index < selectedIndex) {
				--newSelectedIndex;
			} else if(index == selectedIndex) {
				(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(-1);
				newSelectedIndex = selectedIndex;
				var _this = builder._container;
				if(newSelectedIndex > (_this._children == null ? [] : _this._children).length - 2) {
					var _this = builder._container;
					newSelectedIndex = (_this._children == null ? [] : _this._children).length - 2;
				}
			}
			builder._container.removeComponentAt(index);
			this._component.dispatch(new haxe_ui_events_UIEvent("close",null,index));
			(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(newSelectedIndex);
		}
		return null;
	}
	,__class__: haxe_ui_components__$TabBar_RemoveTab
});
var haxe_ui_components__$TabBar_GetTab = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.GetTab"] = haxe_ui_components__$TabBar_GetTab;
haxe_ui_components__$TabBar_GetTab.__name__ = "haxe.ui.components._TabBar.GetTab";
haxe_ui_components__$TabBar_GetTab.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_GetTab.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = param;
		var tab = null;
		var _this = builder._container;
		if(index < (_this._children == null ? [] : _this._children).length) {
			var _this = builder._container;
			tab = (_this._children == null ? [] : _this._children)[index];
		}
		return haxe_ui_util_Variant.fromComponent(tab);
	}
	,__class__: haxe_ui_components__$TabBar_GetTab
});
var haxe_ui_components__$TabBar_ButtonWidth = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.ButtonWidth"] = haxe_ui_components__$TabBar_ButtonWidth;
haxe_ui_components__$TabBar_ButtonWidth.__name__ = "haxe.ui.components._TabBar.ButtonWidth";
haxe_ui_components__$TabBar_ButtonWidth.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_ButtonWidth.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		var _g = 0;
		var _g1 = this._component.findComponents(null,haxe_ui_components_Button);
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.set_width(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_components__$TabBar_ButtonWidth
});
var haxe_ui_components__$TabBar_ButtonHeight = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.ButtonHeight"] = haxe_ui_components__$TabBar_ButtonHeight;
haxe_ui_components__$TabBar_ButtonHeight.__name__ = "haxe.ui.components._TabBar.ButtonHeight";
haxe_ui_components__$TabBar_ButtonHeight.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_ButtonHeight.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		var _g = 0;
		var _g1 = this._component.findComponents(null,haxe_ui_components_Button);
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.set_height(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_components__$TabBar_ButtonHeight
});
var haxe_ui_components__$TabBar_Events = function(tabbar) {
	haxe_ui_events_Events.call(this,tabbar);
	this._tabbar = tabbar;
};
$hxClasses["haxe.ui.components._TabBar.Events"] = haxe_ui_components__$TabBar_Events;
haxe_ui_components__$TabBar_Events.__name__ = "haxe.ui.components._TabBar.Events";
haxe_ui_components__$TabBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TabBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_tabbar: null
	,register: function() {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var _g = 0;
		var _this = builder._container;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.hasEvent("mousedown",$bind(this,this.onTabMouseDown)) == false) {
				t.registerEvent("mousedown",$bind(this,this.onTabMouseDown));
			}
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,unregister: function() {
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onMouseWheel: function(event) {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._scrollLeft == null || builder._scrollLeft.get_hidden() == true) {
			return;
		}
		if(event.delta < 0) {
			builder.scrollRight();
		} else {
			builder.scrollLeft();
		}
		event.cancel();
	}
	,onTabMouseDown: function(event) {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var button = event.target;
		var close = button.findComponent("tab-close-button",haxe_ui_components_Image,false);
		var select = true;
		if(close != null) {
			select = !close.hitTest(event.screenX,event.screenY);
		}
		if(select == true) {
			this._tabbar.set_selectedIndex(builder._container.getComponentIndex(button));
		}
	}
	,__class__: haxe_ui_components__$TabBar_Events
});
var haxe_ui_components__$TabBar_Builder = function(tabbar) {
	haxe_ui_core_CompositeBuilder.call(this,tabbar);
	this._tabbar = tabbar;
	this.createContainer();
};
$hxClasses["haxe.ui.components._TabBar.Builder"] = haxe_ui_components__$TabBar_Builder;
haxe_ui_components__$TabBar_Builder.__name__ = "haxe.ui.components._TabBar.Builder";
haxe_ui_components__$TabBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TabBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_tabbar: null
	,_container: null
	,_filler: null
	,create: function() {
		this.createContainer();
	}
	,createContainer: function() {
		if(this._filler == null) {
			this._filler = new haxe_ui_containers_Box();
			this._filler.set_id("tabbar-filler");
			this._filler.addClass("tabbar-filler");
			this._tabbar.addComponent(this._filler);
		}
		if(this._container == null) {
			this._container = new haxe_ui_containers_HBox();
			this._container.set_id("tabbar-contents");
			this._container.addClass("tabbar-contents");
			this._tabbar.addComponent(this._container);
		}
	}
	,addTab: function(child) {
		var button = this.createTabBarButton(child);
		var v = this._container.addComponent(button);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		}
		return v;
	}
	,addTabAt: function(child,index) {
		var button = this.createTabBarButton(child);
		var v = this._container.addComponentAt(button,index);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		} else if(index <= this._tabbar.get_selectedIndex()) {
			var fh = this._tabbar;
			fh.set_selectedIndex(fh.get_selectedIndex() + 1);
		}
		return v;
	}
	,createTabBarButton: function(child) {
		var button = new haxe_ui_components__$TabBar_TabBarButton();
		button.addClass("tabbar-button");
		if(this._tabbar.get_tabPosition() == "bottom") {
			button.addClass(":bottom");
		}
		if(child.get_disabled() == true) {
			button.set_disabled(child.get_disabled());
		}
		button.set_id(child.get_id());
		button.set_text(child.get_text());
		button.set_tooltip(child.get_tooltip());
		if(((child) instanceof haxe_ui_components_Button)) {
			button.set_icon((js_Boot.__cast(child , haxe_ui_components_Button)).get_icon());
		}
		button.set_closable(this._tabbar.get_closable());
		if(this._tabbar.get_buttonWidth() != null) {
			button.set_componentWidth(this._tabbar.get_buttonWidth());
		}
		if(this._tabbar.get_buttonHeight() != null) {
			button.set_componentHeight(this._tabbar.get_buttonHeight());
		}
		return button;
	}
	,get_numComponents: function() {
		return this._container.get_numComponents();
	}
	,addComponent: function(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this.addTab(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this.addTabAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			var index = this._container.getComponentIndex(child);
			if(index != -1) {
				this._tabbar.removeTab(index);
				return child;
			}
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		var child = this._container.getComponentAt(index);
		if(child != null) {
			this._tabbar.removeTab(index);
		}
		return child;
	}
	,getComponentIndex: function(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this._container.getComponentIndex(child);
		}
		return -1;
	}
	,setComponentIndex: function(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this._container.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._container.getComponentAt(index);
	}
	,validateComponentLayout: function() {
		if(this._tabbar.get_native() == true || this._container == null) {
			return false;
		}
		if(this._containerPosition == null) {
			this._containerPosition = this._tabbar.get_layout().get_paddingLeft();
		}
		if(this._container.get_width() > this._tabbar.get_layout().get_usableWidth() && this._tabbar.get_layout().get_usableWidth() > 0) {
			this.showScrollButtons();
			this._container.set_left(this._containerPosition);
		} else {
			this.hideScrollButtons();
			this._containerPosition = null;
		}
		return true;
	}
	,_scrollLeft: null
	,_scrollRight: null
	,showScrollButtons: function() {
		var _gthis = this;
		if(this._scrollLeft == null) {
			this._scrollLeft = new haxe_ui_components_Button();
			this._scrollLeft.set_id("tabbar-scroll-left");
			this._scrollLeft.addClass("tabbar-scroll-left");
			this._scrollLeft.set_includeInLayout(false);
			this._scrollLeft.set_repeater(true);
			this._tabbar.addComponent(this._scrollLeft);
			this._scrollLeft.set_onClick(function(e) {
				_gthis.scrollLeft();
			});
		} else {
			this._scrollLeft.show();
		}
		if(this._scrollRight == null) {
			this._scrollRight = new haxe_ui_components_Button();
			this._scrollRight.set_id("tabbar-scroll-right");
			this._scrollRight.addClass("tabbar-scroll-right");
			this._scrollRight.set_includeInLayout(false);
			this._scrollRight.set_repeater(true);
			this._tabbar.addComponent(this._scrollRight);
			this._scrollRight.set_onClick(function(e) {
				_gthis.scrollRight();
			});
		} else {
			this._scrollRight.show();
		}
	}
	,_containerPosition: null
	,scrollLeft: function() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		var x = this._container.get_left() + 20;
		if(x > this._tabbar.get_layout().get_paddingLeft()) {
			x = this._tabbar.get_layout().get_paddingLeft();
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,scrollRight: function() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		var x = this._container.get_left() - 20;
		var max = -(this._container.get_width() - this._tabbar.get_width());
		var left = this._tabbar.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
		var right = this._tabbar.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
		if(left != null && left.get_hidden() == false) {
			max -= left.get_width();
			max -= this._tabbar.get_layout().get_horizontalSpacing();
		}
		if(right != null && right.get_hidden() == false) {
			max -= right.get_width();
		}
		if(x < max) {
			x = max;
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,hideScrollButtons: function() {
		if(this._scrollLeft != null) {
			this._scrollLeft.hide();
		}
		if(this._scrollRight != null) {
			this._scrollRight.hide();
		}
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		var list = this._component.findComponents(null,haxe_ui_components_Button,16777215);
		var _g = 0;
		while(_g < list.length) {
			var c = list[_g];
			++_g;
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_components__$TabBar_Builder
});
var haxe_ui_components__$TabBar_TabBarButton = function() {
	this._closable = false;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components._TabBar.TabBarButton"] = haxe_ui_components__$TabBar_TabBarButton;
haxe_ui_components__$TabBar_TabBarButton.__name__ = "haxe.ui.components._TabBar.TabBarButton";
haxe_ui_components__$TabBar_TabBarButton.__super__ = haxe_ui_components_Button;
haxe_ui_components__$TabBar_TabBarButton.prototype = $extend(haxe_ui_components_Button.prototype,{
	_closable: null
	,set_closable: function(value) {
		if(this._closable == value) {
			return value;
		}
		this._closable = value;
		var existing = this.findComponent("tab-close-button",haxe_ui_components_Image,false);
		var events = js_Boot.__cast(this._internalEvents , haxe_ui_components_ButtonEvents);
		events.recursiveStyling = false;
		if(this._closable == true && existing == null) {
			this.set_iconPosition("far-left");
			var image = new haxe_ui_components_Image();
			image.set_id("tab-close-button");
			image.addClass("tab-close-button");
			image.set_includeInLayout(false);
			image.set_scriptAccess(false);
			image.set_onClick($bind(this,this.onCloseClicked));
			this.addComponent(image);
		} else if(existing != null) {
			this.removeComponent(existing);
		}
		return value;
	}
	,onCloseClicked: function(e) {
		var tabbar = this.findAncestor(null,haxe_ui_components_TabBar);
		var builder = js_Boot.__cast(tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = builder._container.getComponentIndex(this);
		var event = new haxe_ui_events_UIEvent("beforeclose",null,index);
		tabbar.dispatch(event);
		if(event.canceled == false) {
			if(index != -1) {
				tabbar.removeTab(index);
			}
		}
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$TabBar_TabBarButtonLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$TabBar_TabBarButton();
	}
	,__class__: haxe_ui_components__$TabBar_TabBarButton
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_closable:"set_closable"})
});
var haxe_ui_components__$TabBar_TabBarButtonLayout = function() {
	haxe_ui_components_ButtonLayout.call(this);
};
$hxClasses["haxe.ui.components._TabBar.TabBarButtonLayout"] = haxe_ui_components__$TabBar_TabBarButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.__name__ = "haxe.ui.components._TabBar.TabBarButtonLayout";
haxe_ui_components__$TabBar_TabBarButtonLayout.__super__ = haxe_ui_components_ButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.prototype = $extend(haxe_ui_components_ButtonLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_components_ButtonLayout.prototype.repositionChildren.call(this);
		var image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null && image.get_hidden() == false && this.get_component().get_componentWidth() > 0) {
			image.set_top((this.get_component().get_componentHeight() / 2 - image.get_componentHeight() / 2 | 0) + this.marginTop(image) - this.marginBottom(image));
			image.set_left(this.get_component().get_componentWidth() - image.get_componentWidth() - this.get_paddingRight() + this.marginLeft(image) - this.marginRight(image));
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_components_ButtonLayout.prototype.calcAutoSize.call(this,exclusions);
		var image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null && image.get_hidden() == false) {
			size.width += image.get_width() + this.get_horizontalSpacing();
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_components_ButtonLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$TabBar_TabBarButtonLayout();
	}
	,__class__: haxe_ui_components__$TabBar_TabBarButtonLayout
});
var haxe_ui_components_TextArea = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextArea"] = haxe_ui_components_TextArea;
haxe_ui_components_TextArea.__name__ = "haxe.ui.components.TextArea";
haxe_ui_components_TextArea.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_components_TextArea.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextArea.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	scrollToBottom: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("scrollToBottom",null);
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
		if(scrollInvalid || layoutInvalid || dataInvalid) {
			if(this._compositeBuilder != null) {
				(js_Boot.__cast(this._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$TextArea_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$TextArea_HtmlTextBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextArea_PlaceholderBehaviour);
		this.behaviours.register("wrap",haxe_ui_components__$TextArea_WrapBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("dataSource",haxe_ui_components__$TextArea_DataSourceBehaviour);
		this.behaviours.register("autoScrollToBottom",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("scrollToTop",haxe_ui_components__$TextArea_ScrollToTop);
		this.behaviours.register("scrollToBottom",haxe_ui_components__$TextArea_ScrollToBottom);
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_placeholder: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	,get_autoScrollToBottom: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoScrollToBottom"));
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:case 3:
			this.set_text(Std.string(value));
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_text(haxe_ui_util_Variant.toString(v));
			} else {
				this.set_text(value);
			}
			break;
		default:
			this.set_text(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextArea();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextArea_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextArea_TextAreaBuilder;
		this._defaultLayoutClass = haxe_ui_components__$TextArea_TextAreaLayout;
	}
	,__class__: haxe_ui_components_TextArea
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{get_autoScrollToBottom:"get_autoScrollToBottom",get_placeholder:"get_placeholder",set_htmlText:"set_htmlText"})
});
var haxe_ui_components__$TextArea_TextAreaLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextArea.TextAreaLayout"] = haxe_ui_components__$TextArea_TextAreaLayout;
haxe_ui_components__$TextArea_TextAreaLayout.__name__ = "haxe.ui.components._TextArea.TextAreaLayout";
haxe_ui_components__$TextArea_TextAreaLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextArea_TextAreaLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_left(this.get_paddingLeft());
			hscroll.set_top(ucy - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_left(ucx - vscroll.get_componentWidth() + this.get_paddingRight());
			vscroll.set_top(this.get_paddingTop());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(this.get_paddingLeft() + 2);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_width(usableSize.width);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_height(usableSize.height);
		}
		if(this.get_component().hasTextInput() == true) {
			var size = usableSize;
			this.get_component().getTextInput().set_width(size.width - 4);
			this.get_component().getTextInput().set_height(size.height - 4);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$TextArea_TextAreaLayout();
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaLayout
});
var haxe_ui_components__$TextArea_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.DataSourceBehaviour"] = haxe_ui_components__$TextArea_DataSourceBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.__name__ = "haxe.ui.components._TextArea.DataSourceBehaviour";
haxe_ui_components__$TextArea_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		this._value = value;
		this._component.getTextInput().set_dataSource(haxe_ui_util_Variant.toDataSource(value));
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_components__$TextArea_DataSourceBehaviour
});
var haxe_ui_components__$TextArea_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.PlaceholderBehaviour"] = haxe_ui_components__$TextArea_PlaceholderBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextArea.PlaceholderBehaviour";
haxe_ui_components__$TextArea_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_PlaceholderBehaviour
});
var haxe_ui_components__$TextArea_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.TextBehaviour"] = haxe_ui_components__$TextArea_TextBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.__name__ = "haxe.ui.components._TextArea.TextBehaviour";
haxe_ui_components__$TextArea_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var text = this._value != null ? haxe_ui_util_Variant.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,text);
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextBehaviour
});
var haxe_ui_components__$TextArea_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.HtmlTextBehaviour"] = haxe_ui_components__$TextArea_HtmlTextBehaviour;
haxe_ui_components__$TextArea_HtmlTextBehaviour.__name__ = "haxe.ui.components._TextArea.HtmlTextBehaviour";
haxe_ui_components__$TextArea_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var htmlText = this._value != null ? haxe_ui_util_Variant.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateHtmlText(textarea,htmlText);
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
	,__class__: haxe_ui_components__$TextArea_HtmlTextBehaviour
});
var haxe_ui_components__$TextArea_WrapBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.WrapBehaviour"] = haxe_ui_components__$TextArea_WrapBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.__name__ = "haxe.ui.components._TextArea.WrapBehaviour";
haxe_ui_components__$TextArea_WrapBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		textarea.getTextInput().set_wordWrap(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextArea_WrapBehaviour
});
var haxe_ui_components__$TextArea_ScrollToTop = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ScrollToTop"] = haxe_ui_components__$TextArea_ScrollToTop;
haxe_ui_components__$TextArea_ScrollToTop.__name__ = "haxe.ui.components._TextArea.ScrollToTop";
haxe_ui_components__$TextArea_ScrollToTop.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ScrollToTop.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(0);
		}
		return null;
	}
	,__class__: haxe_ui_components__$TextArea_ScrollToTop
});
var haxe_ui_components__$TextArea_ScrollToBottom = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ScrollToBottom"] = haxe_ui_components__$TextArea_ScrollToBottom;
haxe_ui_components__$TextArea_ScrollToBottom.__name__ = "haxe.ui.components._TextArea.ScrollToBottom";
haxe_ui_components__$TextArea_ScrollToBottom.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ScrollToBottom.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(vscroll.get_max());
		}
		return null;
	}
	,__class__: haxe_ui_components__$TextArea_ScrollToBottom
});
var haxe_ui_components__$TextArea_TextAreaHelper = function() { };
$hxClasses["haxe.ui.components._TextArea.TextAreaHelper"] = haxe_ui_components__$TextArea_TextAreaHelper;
haxe_ui_components__$TextArea_TextAreaHelper.__name__ = "haxe.ui.components._TextArea.TextAreaHelper";
haxe_ui_components__$TextArea_TextAreaHelper.validateText = function(textarea,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	if(textarea.get_placeholder() != null) {
		if(textarea.get_focus() == false) {
			if(text.length == 0) {
				text = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else if(text != textarea.get_placeholder()) {
				textarea.removeClass(":empty");
			}
		} else {
			textarea.removeClass(":empty");
			if(text == textarea.get_placeholder()) {
				text = "";
			}
		}
	} else if(placeholderVisible == true) {
		textarea.removeClass(":empty");
	}
	textarea.getTextInput().set_text("" + text);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout",false);
	}
};
haxe_ui_components__$TextArea_TextAreaHelper.validateHtmlText = function(textarea,htmlText) {
	if(htmlText == null) {
		htmlText = "";
	}
	var placeholderVisible = htmlText.length == 0;
	if(textarea.get_placeholder() != null) {
		if(textarea.get_focus() == false) {
			if(htmlText.length == 0) {
				htmlText = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else if(htmlText != textarea.get_placeholder()) {
				textarea.removeClass(":empty");
			}
		} else {
			textarea.removeClass(":empty");
			if(htmlText == textarea.get_placeholder()) {
				htmlText = "";
			}
		}
	} else if(placeholderVisible == true) {
		textarea.removeClass(":empty");
	}
	textarea.getTextInput().set_htmlText("" + htmlText);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout",false);
	}
};
var haxe_ui_components__$TextArea_Events = function(textarea) {
	haxe_ui_events_Events.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.Events"] = haxe_ui_components__$TextArea_Events;
haxe_ui_components__$TextArea_Events.__name__ = "haxe.ui.components._TextArea.Events";
haxe_ui_components__$TextArea_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextArea_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textarea: null
	,register: function() {
		var _gthis = this;
		if(this._textarea.getTextInput().get_data().onChangedCallback == null) {
			this._textarea.getTextInput().set_multiline(true);
			this._textarea.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textarea.classes.indexOf(":empty") != -1 == false) {
					var text = _gthis._textarea.getTextInput().get_text();
					if(text == null) {
						text = "";
					}
					_gthis._textarea.set_text(text);
					_gthis._textarea.dispatch(new haxe_ui_events_UIEvent("change"));
					if(_gthis._textarea.get_style().autoHeight == true) {
						var maxHeight = _gthis._textarea.get_style().maxHeight;
						var newHeight = _gthis._textarea.getTextInput().get_textHeight() + 8;
						if(maxHeight == null || newHeight < maxHeight) {
							_gthis._textarea.set_height(newHeight);
						}
					}
					(js_Boot.__cast(_gthis._textarea._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
				}
			};
		}
		if(this._textarea.getTextInput().get_data().onScrollCallback == null) {
			this._textarea.getTextInput().get_data().onScrollCallback = function() {
				var hscroll = _gthis._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
				if(hscroll != null) {
					hscroll.set_pos(_gthis._textarea.getTextInput().get_hscrollPos());
				}
				var vscroll = _gthis._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
				if(vscroll != null) {
					vscroll.set_pos(_gthis._textarea.getTextInput().get_vscrollPos());
				}
			};
		}
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		if(this.hasEvent("mousewheel",$bind(this,this.onMouseWheel)) == false) {
			this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("focusin",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusin",$bind(this,this.onFocusChange));
		}
		if(this.hasEvent("focusout",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusout",$bind(this,this.onFocusChange));
		}
	}
	,unregister: function() {
		this._textarea.getTextInput().get_data().onChangedCallback = null;
		this._textarea.getTextInput().get_data().onScrollCallback = null;
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	,onMouseWheel: function(event) {
		if(this._textarea.getTextInput().get_data().vscrollNativeWheel == true) {
			return;
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			event.cancel();
			var step = 20;
			if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
				step = this._textarea.getTextInput().get_data().vscrollPageStep;
			} else {
				step = Math.ceil((this._textarea.getTextInput().get_textStyle().fontSize + 1) / 10) * 10;
			}
			if(event.delta > 0) {
				vscroll.set_pos(vscroll.get_pos() - step);
			} else if(event.delta < 0) {
				vscroll.set_pos(vscroll.get_pos() + step);
			}
		}
	}
	,onScrollChange: function(event) {
		if(this._textarea.get_style().autoHeight == true) {
			var maxHeight = this._textarea.get_style().maxHeight;
			var newHeight = this._textarea.getTextInput().get_textHeight() + 8;
			if(maxHeight == null || newHeight < maxHeight) {
				this._textarea.set_height(newHeight);
			}
			if(maxHeight != null && newHeight > maxHeight) {
				this._textarea.set_height(maxHeight);
			}
		}
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._textarea.getTextInput().set_hscrollPos(hscroll.get_pos());
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._textarea.getTextInput().set_vscrollPos(vscroll.get_pos());
		}
	}
	,onMouseDown: function(event) {
		this._textarea.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textarea.get_focus() == true) {
			this._textarea.getTextInput().focus();
		} else {
			this._textarea.getTextInput().blur();
		}
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(this._textarea,this._textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_Events
});
var haxe_ui_components__$TextArea_TextAreaBuilder = function(textarea) {
	haxe_ui_core_CompositeBuilder.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.TextAreaBuilder"] = haxe_ui_components__$TextArea_TextAreaBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.__name__ = "haxe.ui.components._TextArea.TextAreaBuilder";
haxe_ui_components__$TextArea_TextAreaBuilder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$TextArea_TextAreaBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textarea: null
	,checkScrolls: function() {
		if(this._textarea.get_native() == true) {
			return;
		}
		var textInput = this._textarea.getTextInput();
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(textInput.get_textWidth() - textInput.get_width() > 1) {
			if(hscroll == null) {
				hscroll = this.createHScroll();
			}
			hscroll.set_max(textInput.get_hscrollMax());
			hscroll.set_pos(textInput.get_hscrollPos());
			hscroll.set_pageSize(textInput.get_hscrollPageSize());
		} else if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(textInput.get_textHeight() - textInput.get_height() > 1) {
			if(vscroll == null) {
				vscroll = this.createVScroll();
			}
			vscroll.set_max(textInput.get_vscrollMax());
			vscroll.set_pos(textInput.get_vscrollPos());
			vscroll.set_pageSize(textInput.get_vscrollPageSize());
			if(this._textarea.get_autoScrollToBottom() == true) {
				this._textarea.scrollToBottom();
			}
		} else if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,createHScroll: function() {
		var hscroll = new haxe_ui_components_HorizontalScroll();
		hscroll.set_percentWidth(100);
		hscroll.set_id("textarea-hscroll");
		hscroll.set_allowFocus(false);
		hscroll.set_scriptAccess(false);
		this._component.addComponent(hscroll);
		this._component.registerInternalEvents(null,true);
		return hscroll;
	}
	,createVScroll: function() {
		var vscroll = new haxe_ui_components_VerticalScroll();
		if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
			vscroll.set_increment(this._textarea.getTextInput().get_data().vscrollPageStep);
		}
		vscroll.set_percentHeight(100);
		vscroll.set_id("textarea-vscroll");
		vscroll.set_allowFocus(false);
		vscroll.set_scriptAccess(false);
		this._component.addComponent(vscroll);
		this._component.registerInternalEvents(null,true);
		return vscroll;
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(this._textarea.hasTextInput() == true) {
			this._textarea.getTextInput().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._textarea.getTextInput().get_supportsHtml()) {
				var v = Std.string(this._textarea.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._textarea.set_htmlText(this._textarea.get_text());
			}
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaBuilder
});
var haxe_ui_components_TextField = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextField"] = haxe_ui_components_TextField;
haxe_ui_components_TextField.__name__ = "haxe.ui.components.TextField";
haxe_ui_components_TextField.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextField.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("password",haxe_ui_components__$TextField_PasswordBehaviour);
		this.behaviours.register("maxChars",haxe_ui_components__$TextField_MaxCharsBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("restrictChars",haxe_ui_components__$TextField_RestrictCharsBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextField_PlaceholderBehaviour);
		this.behaviours.register("text",haxe_ui_components__$TextField_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$TextField_HtmlTextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$TextField_IconBehaviour);
		this.behaviours.register("caretIndex",haxe_ui_components__$TextField_CaretIndexBehaviour);
		this.behaviours.register("selectionStartIndex",haxe_ui_components__$TextField_SelectionStartIndexBehaviour);
		this.behaviours.register("selectionEndIndex",haxe_ui_components__$TextField_SelectionEndIndexBehaviour);
	}
	,get_password: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("password"));
	}
	,set_password: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("password",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"password"));
		return value;
	}
	,get_maxChars: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("maxChars"));
	}
	,set_maxChars: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("maxChars",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"maxChars"));
		return value;
	}
	,get_restrictChars: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("restrictChars"));
	}
	,set_restrictChars: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"restrictChars",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("restrictChars",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"restrictChars"));
		return value;
	}
	,get_placeholder: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"placeholder",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("placeholder",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"placeholder"));
		return value;
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"htmlText"));
		return value;
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"icon",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("icon",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"icon"));
		return value;
	}
	,get_caretIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("caretIndex"));
	}
	,set_caretIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("caretIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"caretIndex"));
		return value;
	}
	,get_selectionStartIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectionStartIndex"));
	}
	,set_selectionStartIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionStartIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionStartIndex"));
		return value;
	}
	,get_selectionEndIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectionEndIndex"));
	}
	,set_selectionEndIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionEndIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionEndIndex"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 1:case 2:case 3:
			this.set_text(Std.string(value));
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_text(haxe_ui_util_Variant.toString(v));
			} else {
				this.set_text(value);
			}
			break;
		default:
			this.set_text(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_password(this.get_password());
		c.set_maxChars(this.get_maxChars());
		if(this.get_restrictChars() != null) {
			c.set_restrictChars(this.get_restrictChars());
		}
		if(this.get_placeholder() != null) {
			c.set_placeholder(this.get_placeholder());
		}
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		c.set_caretIndex(this.get_caretIndex());
		c.set_selectionStartIndex(this.get_selectionStartIndex());
		c.set_selectionEndIndex(this.get_selectionEndIndex());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextField();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextField_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextField_Builder;
		this._defaultLayoutClass = haxe_ui_components__$TextField_TextFieldLayout;
	}
	,__class__: haxe_ui_components_TextField
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selectionEndIndex:"set_selectionEndIndex",get_selectionEndIndex:"get_selectionEndIndex",set_selectionStartIndex:"set_selectionStartIndex",get_selectionStartIndex:"get_selectionStartIndex",set_caretIndex:"set_caretIndex",get_caretIndex:"get_caretIndex",set_icon:"set_icon",get_icon:"get_icon",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_restrictChars:"set_restrictChars",get_restrictChars:"get_restrictChars",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",set_password:"set_password",get_password:"get_password"})
});
var haxe_ui_components__$TextField_TextFieldLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextField.TextFieldLayout"] = haxe_ui_components__$TextField_TextFieldLayout;
haxe_ui_components__$TextField_TextFieldLayout.__name__ = "haxe.ui.components._TextField.TextFieldLayout";
haxe_ui_components__$TextField_TextFieldLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextField_TextFieldLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,repositionChildren: function() {
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		var xpos = this.get_paddingLeft();
		if(icon != null) {
			switch(this.get_iconPosition()) {
			case "left":
				icon.set_left(xpos);
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				xpos += icon.get_componentWidth() + this.get_horizontalSpacing();
				break;
			case "right":
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight());
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				break;
			}
		}
		var decorator = this.findComponent(null,haxe_ui_components_Decorator);
		if(decorator != null) {
			decorator.set_left(this._component.get_width() - decorator.get_width() - this.get_borderSize());
			decorator.set_top(this.get_borderSize());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(xpos);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + this.get_component().get_componentHeight() / 2 - (this.get_component().getTextInput().get_height() + this.get_paddingTop() + this.get_paddingBottom()) / 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var offset = 0;
		var decorator = this.findComponent(null,haxe_ui_components_Decorator);
		if(decorator != null) {
			var cy = this._component.get_height() - this.get_borderSize() * 2;
			decorator.set_height(cy);
			offset = decorator.get_width();
		}
		if(this.get_component().hasTextInput() == true) {
			var size = this.get_usableSize();
			this.get_component().getTextInput().set_width(size.width - offset);
			this.get_component().getTextInput().set_height(size.height);
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextInput() == true) {
			if(this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight() > size.width) {
				size.width = this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight();
			}
			if(this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom() > size.height) {
				size.height = this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom();
			}
		}
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		if(icon != null) {
			size.width -= icon.get_componentWidth() + this.get_horizontalSpacing();
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$TextField_TextFieldLayout();
	}
	,__class__: haxe_ui_components__$TextField_TextFieldLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$TextField_PasswordBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PasswordBehaviour"] = haxe_ui_components__$TextField_PasswordBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.__name__ = "haxe.ui.components._TextField.PasswordBehaviour";
haxe_ui_components__$TextField_PasswordBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	originalValue: null
	,validateData: function() {
		if(this.originalValue == null) {
			this.originalValue = this._value;
		}
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		textfield.getTextInput().set_password(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextField_PasswordBehaviour
});
var haxe_ui_components__$TextField_MaxCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.MaxCharsBehaviour"] = haxe_ui_components__$TextField_MaxCharsBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.__name__ = "haxe.ui.components._TextField.MaxCharsBehaviour";
haxe_ui_components__$TextField_MaxCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_MaxCharsBehaviour
});
var haxe_ui_components__$TextField_RestrictCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.RestrictCharsBehaviour"] = haxe_ui_components__$TextField_RestrictCharsBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.__name__ = "haxe.ui.components._TextField.RestrictCharsBehaviour";
haxe_ui_components__$TextField_RestrictCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	regexp: null
	,validateData: function() {
		var excludeEReg = new EReg("\\^(.-.|.)","gu");
		var excludeChars = "";
		var includeChars = excludeEReg.map(haxe_ui_util_Variant.toString(this._value),function(ereg) {
			excludeChars += ereg.matched(1);
			return "";
		});
		var testRegexpParts = [];
		if(includeChars.length > 0) {
			testRegexpParts.push("[^" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)) + "]");
		}
		if(excludeChars.length > 0) {
			testRegexpParts.push("[" + excludeChars + "]");
		}
		this.regexp = new EReg("(" + testRegexpParts.join(" | ") + ")","g");
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_RestrictCharsBehaviour
});
var haxe_ui_components__$TextField_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PlaceholderBehaviour"] = haxe_ui_components__$TextField_PlaceholderBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextField.PlaceholderBehaviour";
haxe_ui_components__$TextField_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_PlaceholderBehaviour
});
var haxe_ui_components__$TextField_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.TextBehaviour"] = haxe_ui_components__$TextField_TextBehaviour;
haxe_ui_components__$TextField_TextBehaviour.__name__ = "haxe.ui.components._TextField.TextBehaviour";
haxe_ui_components__$TextField_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_text());
		}
	}
	,__class__: haxe_ui_components__$TextField_TextBehaviour
});
var haxe_ui_components__$TextField_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.HtmlTextBehaviour"] = haxe_ui_components__$TextField_HtmlTextBehaviour;
haxe_ui_components__$TextField_HtmlTextBehaviour.__name__ = "haxe.ui.components._TextField.HtmlTextBehaviour";
haxe_ui_components__$TextField_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateHtmlText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_htmlText());
		}
	}
	,__class__: haxe_ui_components__$TextField_HtmlTextBehaviour
});
var haxe_ui_components__$TextField_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.IconBehaviour"] = haxe_ui_components__$TextField_IconBehaviour;
haxe_ui_components__$TextField_IconBehaviour.__name__ = "haxe.ui.components._TextField.IconBehaviour";
haxe_ui_components__$TextField_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		var icon = textfield.findComponent(null,haxe_ui_components_Image,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			textfield.removeComponent(icon);
		} else {
			if(icon == null) {
				icon = new haxe_ui_components_Image();
				icon.set_id("textfield-icon");
				icon.addClass("icon");
				icon.set_scriptAccess(false);
				textfield.addComponentAt(icon,0);
			}
			icon.set_resource(haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this._value)));
		}
	}
	,__class__: haxe_ui_components__$TextField_IconBehaviour
});
var haxe_ui_components__$TextField_CaretIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.CaretIndexBehaviour"] = haxe_ui_components__$TextField_CaretIndexBehaviour;
haxe_ui_components__$TextField_CaretIndexBehaviour.__name__ = "haxe.ui.components._TextField.CaretIndexBehaviour";
haxe_ui_components__$TextField_CaretIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_CaretIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_caretIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_caretIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_CaretIndexBehaviour
});
var haxe_ui_components__$TextField_SelectionStartIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.SelectionStartIndexBehaviour"] = haxe_ui_components__$TextField_SelectionStartIndexBehaviour;
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.__name__ = "haxe.ui.components._TextField.SelectionStartIndexBehaviour";
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_SelectionStartIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_selectionStartIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_selectionStartIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_SelectionStartIndexBehaviour
});
var haxe_ui_components__$TextField_SelectionEndIndexBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.SelectionEndIndexBehaviour"] = haxe_ui_components__$TextField_SelectionEndIndexBehaviour;
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.__name__ = "haxe.ui.components._TextField.SelectionEndIndexBehaviour";
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_components__$TextField_SelectionEndIndexBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromInt(this._component.getTextInput().get_selectionEndIndex());
	}
	,set: function(value) {
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		this._component.syncComponentValidation();
		this._component.getTextInput().set_selectionEndIndex(haxe_ui_util_Variant.toInt(value));
	}
	,__class__: haxe_ui_components__$TextField_SelectionEndIndexBehaviour
});
var haxe_ui_components__$TextField_TextFieldHelper = function() { };
$hxClasses["haxe.ui.components._TextField.TextFieldHelper"] = haxe_ui_components__$TextField_TextFieldHelper;
haxe_ui_components__$TextField_TextFieldHelper.__name__ = "haxe.ui.components._TextField.TextFieldHelper";
haxe_ui_components__$TextField_TextFieldHelper.validateText = function(textfield,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && text.length > textfield.get_maxChars() && placeholderVisible == false) {
		text = HxOverrides.substr(text,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		text = text.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(text.length == 0) {
				text = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(text != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util_Variant.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_text("" + text);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout",false);
	}
};
haxe_ui_components__$TextField_TextFieldHelper.validateHtmlText = function(textfield,htmlText) {
	if(htmlText == null) {
		htmlText = "";
	}
	var placeholderVisible = htmlText.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && htmlText.length > textfield.get_maxChars() && placeholderVisible == false) {
		htmlText = HxOverrides.substr(htmlText,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		htmlText = htmlText.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(htmlText.length == 0) {
				htmlText = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(htmlText != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util_Variant.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_htmlText("" + htmlText);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout",false);
	}
};
var haxe_ui_components__$TextField_Events = function(textfield) {
	haxe_ui_events_Events.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Events"] = haxe_ui_components__$TextField_Events;
haxe_ui_components__$TextField_Events.__name__ = "haxe.ui.components._TextField.Events";
haxe_ui_components__$TextField_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextField_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textfield: null
	,register: function() {
		var _gthis = this;
		if(this._textfield.getTextInput().get_data().onChangedCallback == null) {
			this._textfield.getTextInput().set_multiline(false);
			this._textfield.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textfield.classes.indexOf(":empty") != -1 == false) {
					_gthis._textfield.set_text(_gthis._textfield.getTextInput().get_text());
					_gthis._textfield.dispatch(new haxe_ui_events_UIEvent("change"));
				}
			};
		}
		this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		this.registerEvent("focusin",$bind(this,this.onFocusChange));
		this.registerEvent("focusout",$bind(this,this.onFocusChange));
		this.registerEvent("keyup",$bind(this,this.onKeyUp));
	}
	,unregister: function() {
		this._textfield.getTextInput().get_data().onChangedCallback = null;
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
		this.unregisterEvent("keyup",$bind(this,this.onKeyUp));
	}
	,onMouseDown: function(event) {
		this._textfield.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textfield.get_focus() == true) {
			this._textfield.getTextInput().focus();
		} else {
			this._textfield.getTextInput().blur();
		}
		haxe_ui_components__$TextField_TextFieldHelper.validateText(this._textfield,this._textfield.get_text());
	}
	,onKeyUp: function(event) {
		if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			event.cancel();
			this._textfield.dispatch(new haxe_ui_events_UIEvent("submit",true));
		}
	}
	,__class__: haxe_ui_components__$TextField_Events
});
var haxe_ui_components__$TextField_Builder = function(textfield) {
	haxe_ui_core_CompositeBuilder.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Builder"] = haxe_ui_components__$TextField_Builder;
haxe_ui_components__$TextField_Builder.__name__ = "haxe.ui.components._TextField.Builder";
haxe_ui_components__$TextField_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$TextField_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextField_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textfield: null
	,applyStyle: function(style) {
		if(style.icon != null) {
			this._textfield.set_icon(haxe_ui_util_Variant.toString(style.icon));
		}
		if(this._textfield.hasTextInput() == true) {
			this._textfield.getTextInput().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._textfield.getTextInput().get_supportsHtml()) {
				var v = Std.string(this._textfield.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._textfield.set_htmlText(this._textfield.get_text());
			}
		}
	}
	,__class__: haxe_ui_components__$TextField_Builder
});
var haxe_ui_components_VerticalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.VerticalScroll"] = haxe_ui_components_VerticalScroll;
haxe_ui_components_VerticalScroll.__name__ = "haxe.ui.components.VerticalScroll";
haxe_ui_components_VerticalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_VerticalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$VerticalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$VerticalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VerticalScroll();
	}
	,__class__: haxe_ui_components_VerticalScroll
});
var haxe_ui_components__$VerticalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.PosFromCoord"] = haxe_ui_components__$VerticalScroll_PosFromCoord;
haxe_ui_components__$VerticalScroll_PosFromCoord.__name__ = "haxe.ui.components._VerticalScroll.PosFromCoord";
haxe_ui_components__$VerticalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var ypos = p.y;
		var minY = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minY = deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		var maxY = scroll.get_layout().get_usableHeight() - thumb.get_height();
		if(deinc != null && deinc.get_hidden() == false) {
			maxY += deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		if(ypos < minY) {
			ypos = minY;
		} else if(ypos > maxY) {
			ypos = maxY;
		}
		var ucy = scroll.get_layout().get_usableHeight();
		ucy -= thumb.get_height();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = ypos - minY;
		var value = scroll.get_min() + v / ucy * m;
		return haxe_ui_util_Variant.fromFloat(value);
	}
	,__class__: haxe_ui_components__$VerticalScroll_PosFromCoord
});
var haxe_ui_components__$VerticalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.ApplyPageFromCoord"] = haxe_ui_components__$VerticalScroll_ApplyPageFromCoord;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._VerticalScroll.ApplyPageFromCoord";
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.y < thumb.get_screenTop()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.y > thumb.get_screenTop() + thumb.get_height()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$VerticalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$VerticalScroll_VerticalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._VerticalScroll.VerticalScrollLayout"] = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__name__ = "haxe.ui.components._VerticalScroll.VerticalScrollLayout";
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			if(scroll.get_min() == scroll.get_max()) {
				thumb.hide();
			} else {
				var m = scroll.get_max() - scroll.get_min();
				var ucy = this.get_usableHeight();
				var thumbHeight = scroll.get_pageSize() / m * ucy;
				if(scroll.get_thumbSize() != null) {
					thumbHeight = scroll.get_thumbSize();
				}
				if(thumbHeight < this.get_innerWidth()) {
					thumbHeight = this.get_innerWidth();
				} else if(thumbHeight > ucy) {
					thumbHeight = ucy;
				}
				if(thumbHeight > 0 && isNaN(thumbHeight) == false) {
					thumb.set_height(thumbHeight);
				}
				thumb.show();
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_top(this.get_component().get_height() - inc.get_height() - this.get_paddingBottom());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableHeight();
			u -= thumb.get_height();
			var y = (scroll.get_pos() - scroll.get_min()) / m * u;
			y += this.get_paddingTop();
			if(deinc != null && this.hidden(deinc) == false) {
				y += deinc.get_height() + this.get_verticalSpacing();
			}
			thumb.set_left(Math.round(thumb.get_left()));
			thumb.set_top(y);
		}
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucy -= deinc.get_height() + this.get_verticalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucy -= inc.get_height() + this.get_verticalSpacing();
		}
		return ucy;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$VerticalScroll_VerticalScrollLayout();
	}
	,__class__: haxe_ui_components__$VerticalScroll_VerticalScrollLayout
});
var haxe_ui_containers_Absolute = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_AbsoluteLayout());
};
$hxClasses["haxe.ui.containers.Absolute"] = haxe_ui_containers_Absolute;
haxe_ui_containers_Absolute.__name__ = "haxe.ui.containers.Absolute";
haxe_ui_containers_Absolute.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Absolute.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Absolute();
	}
	,__class__: haxe_ui_containers_Absolute
});
var haxe_ui_containers_CalendarView = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.CalendarView"] = haxe_ui_containers_CalendarView;
haxe_ui_containers_CalendarView.__name__ = "haxe.ui.containers.CalendarView";
haxe_ui_containers_CalendarView.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_CalendarView.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedDate",haxe_ui_containers__$CalendarView_SelectedDateBehaviour,haxe_ui_util_Variant.fromDate(new Date()));
	}
	,get_selectedDate: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("selectedDate"));
	}
	,set_selectedDate: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedDate",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedDate"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_CalendarView();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$CalendarView_Events;
		this._defaultLayoutClass = haxe_ui_layouts_VerticalLayout;
		this._compositeBuilderClass = haxe_ui_containers__$CalendarView_Builder;
	}
	,__class__: haxe_ui_containers_CalendarView
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate"})
});
var haxe_ui_containers__$CalendarView_SelectedDateBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._CalendarView.SelectedDateBehaviour"] = haxe_ui_containers__$CalendarView_SelectedDateBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__name__ = "haxe.ui.containers._CalendarView.SelectedDateBehaviour";
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromDate(this._component.findComponent(null,haxe_ui_components_Calendar).get_selectedDate());
	}
	,set: function(value) {
		this._component.findComponent(null,haxe_ui_components_Calendar).set_selectedDate(haxe_ui_util_Variant.toDate(value));
	}
	,__class__: haxe_ui_containers__$CalendarView_SelectedDateBehaviour
});
var haxe_ui_containers__$CalendarView_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers._CalendarView.Events"] = haxe_ui_containers__$CalendarView_Events;
haxe_ui_containers__$CalendarView_Events.__name__ = "haxe.ui.containers._CalendarView.Events";
haxe_ui_containers__$CalendarView_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$CalendarView_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		var button = this._target.findComponent("prev-month");
		if(button != null && button.hasEvent("click") == false) {
			button.registerEvent("click",$bind(this,this.onPrevMonth));
		}
		var button = this._target.findComponent("next-month");
		if(button != null && button.hasEvent("click") == false) {
			button.registerEvent("click",$bind(this,this.onNextMonth));
		}
		var stepper = this._target.findComponent("current-year");
		if(stepper != null && stepper.hasEvent("change") == false) {
			stepper.registerEvent("change",$bind(this,this.onYearChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("datechange",$bind(this,this.onDateChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("datechange",$bind(this,this.onDateChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("change",$bind(this,this.onCalendarChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onPrevMonth: function(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
	}
	,onNextMonth: function(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
	}
	,onYearChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var stepper = this._target.findComponent("current-year");
		if(stepper.get_pos() > calendar.get_date().getFullYear()) {
			calendar.nextYear();
		} else if(stepper.get_pos() < calendar.get_date().getFullYear()) {
			calendar.previousYear();
		}
	}
	,onDateChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var monthName = haxe_ui_containers_CalendarView.MONTH_NAMES[calendar.get_date().getMonth()];
		this._target.findComponent("current-month",haxe_ui_components_Label).set_text(monthName + "  " + calendar.get_date().getFullYear());
	}
	,onCalendarChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var stepper = this._target.findComponent("current-year");
		stepper.set_pos(calendar.get_selectedDate().getFullYear());
		this._target.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,onMouseWheel: function(event) {
		if(event.delta >= 1) {
			this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
		} else {
			this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
		}
	}
	,__class__: haxe_ui_containers__$CalendarView_Events
});
var haxe_ui_containers__$CalendarView_Builder = function(calendarView) {
	haxe_ui_core_CompositeBuilder.call(this,calendarView);
	this._calendarView = calendarView;
};
$hxClasses["haxe.ui.containers._CalendarView.Builder"] = haxe_ui_containers__$CalendarView_Builder;
haxe_ui_containers__$CalendarView_Builder.__name__ = "haxe.ui.containers._CalendarView.Builder";
haxe_ui_containers__$CalendarView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$CalendarView_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_calendarView: null
	,create: function() {
		var box = new haxe_ui_containers_Box();
		box.set_percentWidth(100);
		var button = new haxe_ui_components_Button();
		button.set_id("prev-month");
		box.addComponent(button);
		var hbox = new haxe_ui_containers_HBox();
		hbox.set_horizontalAlign("center");
		hbox.set_verticalAlign("center");
		var label = new haxe_ui_components_Label();
		label.set_id("current-month");
		var now = new Date();
		label.set_text(haxe_ui_containers_CalendarView.MONTH_NAMES[now.getMonth()] + "  " + now.getFullYear());
		hbox.addComponent(label);
		var stepper = new haxe_ui_components_Stepper();
		stepper.set_id("current-year");
		stepper.set_min(0);
		stepper.set_max(now.getFullYear() + 1000);
		stepper.set_pos(now.getFullYear());
		stepper.set_repeater(false);
		hbox.addComponent(stepper);
		box.addComponent(hbox);
		var button = new haxe_ui_components_Button();
		button.set_id("next-month");
		button.set_horizontalAlign("right");
		box.addComponent(button);
		this._calendarView.addComponent(box);
		var calendar = new haxe_ui_components_Calendar();
		calendar.set_horizontalAlign("center");
		this._calendarView.addComponent(calendar);
	}
	,__class__: haxe_ui_containers__$CalendarView_Builder
});
var haxe_ui_containers_HBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalLayout());
};
$hxClasses["haxe.ui.containers.HBox"] = haxe_ui_containers_HBox;
haxe_ui_containers_HBox.__name__ = "haxe.ui.containers.HBox";
haxe_ui_containers_HBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_HBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_continuous: function() {
		return ((this._layout) instanceof haxe_ui_layouts_HorizontalContinuousLayout);
	}
	,set_continuous: function(value) {
		if(value == true) {
			this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
		} else {
			this.set_layout(new haxe_ui_layouts_HorizontalLayout());
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_continuous(this.get_continuous());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HBox();
	}
	,__class__: haxe_ui_containers_HBox
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_continuous:"set_continuous",get_continuous:"get_continuous"})
});
var haxe_ui_containers_Splitter = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Splitter"] = haxe_ui_containers_Splitter;
haxe_ui_containers_Splitter.__name__ = "haxe.ui.containers.Splitter";
haxe_ui_containers_Splitter.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_containers_Splitter.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Splitter.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Splitter();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_SplitterEvents;
		this._compositeBuilderClass = haxe_ui_containers_SplitterBuilder;
	}
	,__class__: haxe_ui_containers_Splitter
});
var haxe_ui_containers_HorizontalSplitter = function() {
	haxe_ui_containers_Splitter.call(this);
	this.set_layoutName("horizontal");
};
$hxClasses["haxe.ui.containers.HorizontalSplitter"] = haxe_ui_containers_HorizontalSplitter;
haxe_ui_containers_HorizontalSplitter.__name__ = "haxe.ui.containers.HorizontalSplitter";
haxe_ui_containers_HorizontalSplitter.__super__ = haxe_ui_containers_Splitter;
haxe_ui_containers_HorizontalSplitter.prototype = $extend(haxe_ui_containers_Splitter.prototype,{
	registerComposite: function() {
		haxe_ui_containers_Splitter.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents;
		this._compositeBuilderClass = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Splitter.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Splitter.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HorizontalSplitter();
	}
	,__class__: haxe_ui_containers_HorizontalSplitter
});
var haxe_ui_containers_SplitterEvents = function(splitter) {
	this._currentOffset = null;
	this._currentGripper = null;
	haxe_ui_events_Events.call(this,splitter);
	this._splitter = splitter;
};
$hxClasses["haxe.ui.containers.SplitterEvents"] = haxe_ui_containers_SplitterEvents;
haxe_ui_containers_SplitterEvents.__name__ = "haxe.ui.containers.SplitterEvents";
haxe_ui_containers_SplitterEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_SplitterEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_splitter: null
	,register: function() {
		var builder = js_Boot.__cast(this._splitter._compositeBuilder , haxe_ui_containers_SplitterBuilder);
		var grippers = this._splitter.findComponents(builder.getSplitterClass(),haxe_ui_core_Component,1);
		var _g = 0;
		while(_g < grippers.length) {
			var g = grippers[_g];
			++_g;
			g.registerEvent("mousedown",$bind(this,this.onGripperMouseDown));
		}
	}
	,unregister: function() {
		var builder = js_Boot.__cast(this._splitter._compositeBuilder , haxe_ui_containers_SplitterBuilder);
		var grippers = this._splitter.findComponents(builder.getSplitterClass(),haxe_ui_core_Component,1);
		var _g = 0;
		while(_g < grippers.length) {
			var g = grippers[_g];
			++_g;
			g.unregisterEvent("mousedown",$bind(this,this.onGripperMouseDown));
		}
	}
	,_currentGripper: null
	,_currentOffset: null
	,onGripperMouseDown: function(event) {
		this._currentGripper = js_Boot.__cast(event.target , haxe_ui_containers__$Splitter_SizerGripper);
		this._currentOffset = new haxe_ui_geom_Point(event.screenX - this._currentGripper.get_screenLeft(),event.screenY - this._currentGripper.get_screenTop());
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
	}
	,onScreenMouseMove: function(event) {
		this._currentGripper.addClass(":down");
		var index = this._splitter.getComponentIndex(this._currentGripper);
		var prev = this._splitter.getComponentAt(index - 1);
		var next = this._splitter.getComponentAt(index + 1);
		this.handleResize(prev,next,event);
	}
	,handleResize: function(prev,next,event) {
	}
	,onScreenMouseUp: function(event) {
		this._currentGripper.removeClass(":down");
		if(this._currentGripper.hitTest(event.screenX,event.screenY)) {
			this._currentGripper.addClass(":hover");
		}
		this._currentGripper = null;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
	}
	,__class__: haxe_ui_containers_SplitterEvents
});
var haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents = function(splitter) {
	haxe_ui_containers_SplitterEvents.call(this,splitter);
};
$hxClasses["haxe.ui.containers._HorizontalSplitter.HorizontalSplitterEvents"] = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.__name__ = "haxe.ui.containers._HorizontalSplitter.HorizontalSplitterEvents";
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.__super__ = haxe_ui_containers_SplitterEvents;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.prototype = $extend(haxe_ui_containers_SplitterEvents.prototype,{
	onGripperMouseDown: function(event) {
		haxe_ui_containers_SplitterEvents.prototype.onGripperMouseDown.call(this,event);
	}
	,handleResize: function(prev,next,event) {
		var screenX = this._splitter.get_screenLeft();
		var delta = event.screenX - screenX - this._currentOffset.x;
		var ucx = this._splitter.get_layout().get_usableWidth();
		var prevCX = delta;
		var nextCX = ucx - delta;
		var prevMinWidth = 0;
		var nextMinWidth = 0;
		var prevMaxWidth = null;
		var nextMaxWidth = null;
		if(prevCX <= prevMinWidth) {
			prevCX = prevMinWidth;
			nextCX = ucx - prevMinWidth;
		}
		if(nextCX <= nextMinWidth) {
			prevCX = ucx - nextMinWidth;
			nextCX = nextMinWidth;
		}
		if(prevMaxWidth != null && prevCX > prevMaxWidth) {
			prevCX = prevMaxWidth;
			nextCX = ucx - prevMaxWidth;
		}
		if(nextMaxWidth != null && nextCX > nextMaxWidth) {
			prevCX = ucx - nextMaxWidth;
			nextCX = nextMaxWidth;
		}
		if(prevCX <= 0) {
			prev.handleVisibility(false);
		} else {
			prev.handleVisibility(true);
		}
		if(nextCX <= 0) {
			next.handleVisibility(false);
		} else {
			next.handleVisibility(true);
		}
		if(prev.get_percentWidth() != null) {
			prev.set_percentWidth(prevCX / ucx * 100);
		} else {
			prev.set_width(prevCX);
		}
		if(next.get_percentWidth() != null) {
			next.set_percentWidth(nextCX / ucx * 100);
		} else {
			next.set_width(nextCX);
		}
	}
	,__class__: haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents
});
var haxe_ui_containers_SplitterBuilder = function(splitter) {
	haxe_ui_core_CompositeBuilder.call(this,splitter);
	this._splitter = splitter;
};
$hxClasses["haxe.ui.containers.SplitterBuilder"] = haxe_ui_containers_SplitterBuilder;
haxe_ui_containers_SplitterBuilder.__name__ = "haxe.ui.containers.SplitterBuilder";
haxe_ui_containers_SplitterBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_SplitterBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_splitter: null
	,addComponent: function(child) {
		var tmp;
		var _this = this._splitter;
		if((_this._children == null ? [] : _this._children).length > 0) {
			var name = this.getSplitterClass();
			tmp = child.classes.indexOf(name) != -1 == false;
		} else {
			tmp = false;
		}
		if(tmp) {
			var gripper = new haxe_ui_containers__$Splitter_SizerGripper();
			gripper.set_id(this.getSplitterClass());
			gripper.addClass(this.getSplitterClass());
			this._splitter.addComponent(gripper);
			this._splitter.registerInternalEvents(null,true);
		}
		var name = this.getSplitterClass();
		if(child.classes.indexOf(name) != -1 == false) {
			child.registerEvent("shown",$bind(this,this.onComponentShown));
			child.registerEvent("hidden",$bind(this,this.onComponentHidden));
		}
		if(child.get_hidden() == true) {
			this.onComponentHidden(null);
		}
		return null;
	}
	,getSplitterClass: function() {
		return "splitter-gripper";
	}
	,onComponentShown: function(e) {
		var _this = this._splitter;
		var children = (_this._children == null ? [] : _this._children).slice();
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c.get_hidden() == true) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.show();
				}
				break;
			}
		}
		children.reverse();
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c.get_hidden() == true) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.show();
				}
				break;
			}
		}
	}
	,onComponentHidden: function(e) {
		var _this = this._splitter;
		var children = (_this._children == null ? [] : _this._children).slice();
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c.get_hidden() == false) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.hide();
				}
				break;
			}
		}
		children.reverse();
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c.get_hidden() == false) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.hide();
				}
				break;
			}
		}
	}
	,__class__: haxe_ui_containers_SplitterBuilder
});
var haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder = function(splitter) {
	haxe_ui_containers_SplitterBuilder.call(this,splitter);
};
$hxClasses["haxe.ui.containers._HorizontalSplitter.HorizontalSplitterBuilder"] = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.__name__ = "haxe.ui.containers._HorizontalSplitter.HorizontalSplitterBuilder";
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.__super__ = haxe_ui_containers_SplitterBuilder;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.prototype = $extend(haxe_ui_containers_SplitterBuilder.prototype,{
	getSplitterClass: function() {
		return "horizontal-splitter-gripper";
	}
	,__class__: haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder
});
var haxe_ui_containers_IVirtualContainer = function() { };
$hxClasses["haxe.ui.containers.IVirtualContainer"] = haxe_ui_containers_IVirtualContainer;
haxe_ui_containers_IVirtualContainer.__name__ = "haxe.ui.containers.IVirtualContainer";
haxe_ui_containers_IVirtualContainer.__isInterface__ = true;
haxe_ui_containers_IVirtualContainer.prototype = {
	get_itemHeight: null
	,set_itemHeight: null
	,get_itemCount: null
	,get_variableItemSize: null
	,get_virtual: null
	,get_vscrollPos: null
	,set_vscrollMax: null
	,set_vscrollPageSize: null
	,get_itemRenderer: null
	,get_itemRendererClass: null
	,__class__: haxe_ui_containers_IVirtualContainer
	,__properties__: {get_itemRendererClass:"get_itemRendererClass",get_itemRenderer:"get_itemRenderer",get_vscrollPos:"get_vscrollPos",get_virtual:"get_virtual",get_variableItemSize:"get_variableItemSize",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_vscrollPageSize:"set_vscrollPageSize",set_vscrollMax:"set_vscrollMax"}
};
var haxe_ui_core_IScrollView = function() { };
$hxClasses["haxe.ui.core.IScrollView"] = haxe_ui_core_IScrollView;
haxe_ui_core_IScrollView.__name__ = "haxe.ui.core.IScrollView";
haxe_ui_core_IScrollView.__isInterface__ = true;
haxe_ui_core_IScrollView.prototype = {
	ensureVisible: null
	,__class__: haxe_ui_core_IScrollView
};
var haxe_ui_containers_ScrollView = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.containers.ScrollView"] = haxe_ui_containers_ScrollView;
haxe_ui_containers_ScrollView.__name__ = "haxe.ui.containers.ScrollView";
haxe_ui_containers_ScrollView.__interfaces__ = [haxe_ui_core_IScrollView];
haxe_ui_containers_ScrollView.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_containers_ScrollView.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	ensureVisible: function(component) {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("ensureVisible",component);
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this.get_native() == true) {
			haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
			return;
		}
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
		if(scrollInvalid || layoutInvalid) {
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).checkScrolls();
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).updateScrollRect();
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("virtual",haxe_ui_containers__$ScrollView_Virtual);
		this.behaviours.register("contentLayoutName",haxe_ui_containers__$ScrollView_ContentLayoutName,haxe_ui_util_Variant.fromString("vertical"));
		this.behaviours.register("contentWidth",haxe_ui_containers__$ScrollView_ContentWidth);
		this.behaviours.register("percentContentWidth",haxe_ui_containers__$ScrollView_PercentContentWidth);
		this.behaviours.register("contentHeight",haxe_ui_containers__$ScrollView_ContentHeight);
		this.behaviours.register("percentContentHeight",haxe_ui_containers__$ScrollView_PercentContentHeight);
		this.behaviours.register("hscrollPos",haxe_ui_containers__$ScrollView_HScrollPos);
		this.behaviours.register("hscrollMax",haxe_ui_containers__$ScrollView_HScrollMax);
		this.behaviours.register("hscrollPageSize",haxe_ui_containers__$ScrollView_HScrollPageSize);
		this.behaviours.register("hscrollThumbSize",haxe_ui_containers__$ScrollView_HScrollThumbSize);
		this.behaviours.register("vscrollPos",haxe_ui_containers__$ScrollView_VScrollPos);
		this.behaviours.register("vscrollMax",haxe_ui_containers__$ScrollView_VScrollMax);
		this.behaviours.register("vscrollPageSize",haxe_ui_containers__$ScrollView_VScrollPageSize);
		this.behaviours.register("vscrollThumbSize",haxe_ui_containers__$ScrollView_VScrollThumbSize);
		this.behaviours.register("thumbSize",haxe_ui_containers__$ScrollView_ThumbSize);
		this.behaviours.register("scrollMode",haxe_ui_containers__$ScrollView_ScrollModeBehaviour,haxe_ui_util_Variant.fromString("drag"));
		this.behaviours.register("scrollPolicy",haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour);
		this.behaviours.register("horizontalScrollPolicy",haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour);
		this.behaviours.register("verticalScrollPolicy",haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour);
		this.behaviours.register("contents",haxe_ui_containers__$ScrollView_GetContents);
		this.behaviours.register("autoHideScrolls",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("allowAutoScroll",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("ensureVisible",haxe_ui_containers__$ScrollView_EnsureVisible);
	}
	,get_virtual: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("virtual",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"virtual"));
		return value;
	}
	,get_contentLayoutName: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("contentLayoutName"));
	}
	,set_contentLayoutName: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"contentLayoutName",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("contentLayoutName",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentLayoutName"));
		return value;
	}
	,get_contentWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("contentWidth"));
	}
	,set_contentWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contentWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentWidth"));
		return value;
	}
	,get_percentContentWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("percentContentWidth"));
	}
	,set_percentContentWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("percentContentWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"percentContentWidth"));
		return value;
	}
	,get_contentHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("contentHeight"));
	}
	,set_contentHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contentHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contentHeight"));
		return value;
	}
	,get_percentContentHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("percentContentHeight"));
	}
	,set_percentContentHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("percentContentHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"percentContentHeight"));
		return value;
	}
	,get_hscrollPos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPos"));
	}
	,set_hscrollPos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollPos"));
		return value;
	}
	,get_hscrollMax: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollMax"));
	}
	,set_hscrollMax: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollMax"));
		return value;
	}
	,get_hscrollPageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPageSize"));
	}
	,set_hscrollPageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollPageSize"));
		return value;
	}
	,get_hscrollThumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollThumbSize"));
	}
	,set_hscrollThumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollThumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"hscrollThumbSize"));
		return value;
	}
	,get_vscrollPos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPos"));
	}
	,set_vscrollPos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollPos"));
		return value;
	}
	,get_vscrollMax: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollMax"));
	}
	,set_vscrollMax: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollMax"));
		return value;
	}
	,get_vscrollPageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPageSize"));
	}
	,set_vscrollPageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollPageSize"));
		return value;
	}
	,get_vscrollThumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollThumbSize"));
	}
	,set_vscrollThumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollThumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"vscrollThumbSize"));
		return value;
	}
	,get_thumbSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("thumbSize"));
	}
	,set_thumbSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("thumbSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"thumbSize"));
		return value;
	}
	,get_scrollMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scrollMode"));
	}
	,set_scrollMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scrollMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scrollMode"));
		return value;
	}
	,get_scrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scrollPolicy"));
	}
	,set_scrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"scrollPolicy"));
		return value;
	}
	,get_horizontalScrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("horizontalScrollPolicy"));
	}
	,set_horizontalScrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("horizontalScrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"horizontalScrollPolicy"));
		return value;
	}
	,get_verticalScrollPolicy: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("verticalScrollPolicy"));
	}
	,set_verticalScrollPolicy: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("verticalScrollPolicy",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"verticalScrollPolicy"));
		return value;
	}
	,get_contents: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("contents"));
	}
	,set_contents: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contents",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"contents"));
		return value;
	}
	,get_autoHideScrolls: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoHideScrolls"));
	}
	,set_autoHideScrolls: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("autoHideScrolls",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"autoHideScrolls"));
		return value;
	}
	,get_allowAutoScroll: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowAutoScroll"));
	}
	,set_allowAutoScroll: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowAutoScroll",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"allowAutoScroll"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_virtual(this.get_virtual());
		if(this.get_contentLayoutName() != null) {
			c.set_contentLayoutName(this.get_contentLayoutName());
		}
		if(this.get_contentWidth() != null) {
			c.set_contentWidth(this.get_contentWidth());
		}
		if(this.get_percentContentWidth() != null) {
			c.set_percentContentWidth(this.get_percentContentWidth());
		}
		if(this.get_contentHeight() != null) {
			c.set_contentHeight(this.get_contentHeight());
		}
		if(this.get_percentContentHeight() != null) {
			c.set_percentContentHeight(this.get_percentContentHeight());
		}
		c.set_hscrollPos(this.get_hscrollPos());
		c.set_hscrollMax(this.get_hscrollMax());
		c.set_hscrollPageSize(this.get_hscrollPageSize());
		if(this.get_hscrollThumbSize() != null) {
			c.set_hscrollThumbSize(this.get_hscrollThumbSize());
		}
		c.set_vscrollPos(this.get_vscrollPos());
		c.set_vscrollMax(this.get_vscrollMax());
		c.set_vscrollPageSize(this.get_vscrollPageSize());
		if(this.get_vscrollThumbSize() != null) {
			c.set_vscrollThumbSize(this.get_vscrollThumbSize());
		}
		if(this.get_thumbSize() != null) {
			c.set_thumbSize(this.get_thumbSize());
		}
		if(this.get_scrollMode() != null) {
			c.set_scrollMode(this.get_scrollMode());
		}
		if(this.get_scrollPolicy() != null) {
			c.set_scrollPolicy(this.get_scrollPolicy());
		}
		if(this.get_horizontalScrollPolicy() != null) {
			c.set_horizontalScrollPolicy(this.get_horizontalScrollPolicy());
		}
		if(this.get_verticalScrollPolicy() != null) {
			c.set_verticalScrollPolicy(this.get_verticalScrollPolicy());
		}
		if(this.get_contents() != null) {
			c.set_contents(this.get_contents());
		}
		c.set_autoHideScrolls(this.get_autoHideScrolls());
		c.set_allowAutoScroll(this.get_allowAutoScroll());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ScrollView();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ScrollViewEvents;
		this._compositeBuilderClass = haxe_ui_containers_ScrollViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_ScrollViewLayout;
	}
	,__class__: haxe_ui_containers_ScrollView
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_allowAutoScroll:"set_allowAutoScroll",get_allowAutoScroll:"get_allowAutoScroll",set_autoHideScrolls:"set_autoHideScrolls",get_autoHideScrolls:"get_autoHideScrolls",set_contents:"set_contents",get_contents:"get_contents",set_verticalScrollPolicy:"set_verticalScrollPolicy",get_verticalScrollPolicy:"get_verticalScrollPolicy",set_horizontalScrollPolicy:"set_horizontalScrollPolicy",get_horizontalScrollPolicy:"get_horizontalScrollPolicy",set_scrollPolicy:"set_scrollPolicy",get_scrollPolicy:"get_scrollPolicy",set_scrollMode:"set_scrollMode",get_scrollMode:"get_scrollMode",set_thumbSize:"set_thumbSize",get_thumbSize:"get_thumbSize",set_vscrollThumbSize:"set_vscrollThumbSize",get_vscrollThumbSize:"get_vscrollThumbSize",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollThumbSize:"set_hscrollThumbSize",get_hscrollThumbSize:"get_hscrollThumbSize",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_percentContentHeight:"set_percentContentHeight",get_percentContentHeight:"get_percentContentHeight",set_contentHeight:"set_contentHeight",get_contentHeight:"get_contentHeight",set_percentContentWidth:"set_percentContentWidth",get_percentContentWidth:"get_percentContentWidth",set_contentWidth:"set_contentWidth",get_contentWidth:"get_contentWidth",set_contentLayoutName:"set_contentLayoutName",get_contentLayoutName:"get_contentLayoutName",set_virtual:"set_virtual",get_virtual:"get_virtual"})
});
var haxe_ui_containers_ListView = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.ListView"] = haxe_ui_containers_ListView;
haxe_ui_containers_ListView.__name__ = "haxe.ui.containers.ListView";
haxe_ui_containers_ListView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_ListView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_ListView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	_itemRendererClass: null
	,get_itemRendererClass: function() {
		return this._itemRendererClass;
	}
	,set_itemRendererClass: function(value) {
		if(this._itemRendererClass != value) {
			this._itemRendererClass = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ListViewEvents;
		this._compositeBuilderClass = haxe_ui_containers__$ListView_ListViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_VerticalVirtualLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_containers__$ListView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$ListView_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$ListView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$ListView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$ListView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$ListView_SelectionModeBehaviour,haxe_ui_util_Variant.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(500));
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"dataSource"));
		return value;
	}
	,get_itemWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemWidth"));
	}
	,set_itemWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemWidth"));
		return value;
	}
	,get_itemHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemHeight"));
	}
	,set_itemHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemHeight"));
		return value;
	}
	,get_itemCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("itemCount"));
	}
	,set_itemCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"itemCount"));
		return value;
	}
	,get_variableItemSize: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("variableItemSize"));
	}
	,set_variableItemSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("variableItemSize",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"variableItemSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"value"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItem"));
		return value;
	}
	,get_selectedIndices: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedIndices"));
	}
	,set_selectedIndices: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndices",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndices"));
		return value;
	}
	,get_selectedItems: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedItems"));
	}
	,set_selectedItems: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedItems",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedItems"));
		return value;
	}
	,get_selectionMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectionMode"));
	}
	,set_selectionMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectionMode"));
		return value;
	}
	,get_longPressSelectionTime: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	,set_longPressSelectionTime: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("longPressSelectionTime",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"longPressSelectionTime"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedIndex();
	}
	,set_value: function(value) {
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 3:
			this.set_selectedIndex(value == true ? 1 : 0);
			break;
		case 6:
			if(_g.c == String) {
				this.set_selectedIndex(Std.parseInt(value));
			} else {
				this.set_selectedIndex(value);
			}
			break;
		case 7:
			if(_g.e == haxe_ui_util_VariantType) {
				var v = value;
				this.set_selectedIndex(haxe_ui_util_Variant.toInt(v));
			} else {
				this.set_selectedIndex(value);
			}
			break;
		default:
			this.set_selectedIndex(value);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if(this.get_itemRendererClass() != null) {
			c.set_itemRendererClass(this.get_itemRendererClass());
		}
		if(this.get_itemRenderer() != null) {
			c.set_itemRenderer(this.get_itemRenderer());
		}
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		c.set_itemWidth(this.get_itemWidth());
		c.set_itemHeight(this.get_itemHeight());
		c.set_itemCount(this.get_itemCount());
		c.set_variableItemSize(this.get_variableItemSize());
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedItem() != null) {
			c.set_selectedItem(this.get_selectedItem());
		}
		if(this.get_selectedIndices() != null) {
			c.set_selectedIndices(this.get_selectedIndices());
		}
		if(this.get_selectedItems() != null) {
			c.set_selectedItems(this.get_selectedItems());
		}
		if(this.get_selectionMode() != null) {
			c.set_selectionMode(this.get_selectionMode());
		}
		c.set_longPressSelectionTime(this.get_longPressSelectionTime());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ListView();
	}
	,__class__: haxe_ui_containers_ListView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_longPressSelectionTime:"set_longPressSelectionTime",get_longPressSelectionTime:"get_longPressSelectionTime",set_selectionMode:"set_selectionMode",get_selectionMode:"get_selectionMode",set_selectedItems:"set_selectedItems",get_selectedItems:"get_selectedItems",set_selectedIndices:"set_selectedIndices",get_selectedIndices:"get_selectedIndices",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass"})
});
var haxe_ui_containers_ScrollViewEvents = function(scrollview) {
	this._fadeTimer = null;
	this._containerEventsPaused = false;
	this._lastMousePos = null;
	this._inertia = null;
	haxe_ui_events_Events.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers.ScrollViewEvents"] = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ScrollViewEvents.__name__ = "haxe.ui.containers.ScrollViewEvents";
haxe_ui_containers_ScrollViewEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_ScrollViewEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scrollview: null
	,register: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null && contents.hasEvent("resize",$bind(this,this.onContentsResized)) == false) {
			contents.registerEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onHScroll)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onHScroll));
		}
		if(hscroll != null && hscroll.hasEvent("scrollscroll",$bind(this,this.onHScrollScroll)) == false) {
			hscroll.registerEvent("scrollscroll",$bind(this,this.onHScrollScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onVScroll)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onVScroll));
		}
		if(vscroll != null && vscroll.hasEvent("scrollscroll",$bind(this,this.onVScrollScroll)) == false) {
			vscroll.registerEvent("scrollscroll",$bind(this,this.onVScrollScroll));
		}
		if(this._scrollview.get_scrollMode() == "drag" || this._scrollview.get_scrollMode() == "inertial") {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		} else if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._scrollview.hasEvent("shown") == false) {
			this.registerEvent("shown",$bind(this,this.onShown));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.registerEvent("actionstart",$bind(this,this.onActionStart),-100);
	}
	,unregister: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.unregisterEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onHScroll));
			hscroll.unregisterEvent("scrollscroll",$bind(this,this.onHScrollScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onVScroll));
			vscroll.unregisterEvent("scrollscroll",$bind(this,this.onVScrollScroll));
		}
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("shown",$bind(this,this.onShown));
		this.unregisterEvent("actionstart",$bind(this,this.onActionStart));
	}
	,onShown: function(event) {
		var _this = this._scrollview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			if(!(hscroll._layout == null || hscroll._layoutLocked == true)) {
				hscroll.invalidateComponent("layout",false);
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			if(!(vscroll._layout == null || vscroll._layoutLocked == true)) {
				vscroll.invalidateComponent("layout",false);
			}
		}
	}
	,onContentsResized: function(event) {
		this._scrollview.invalidateComponent("scroll");
	}
	,onHScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,onHScrollScroll: function(event) {
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollscroll"));
	}
	,onVScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,onVScrollScroll: function(event) {
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollscroll"));
	}
	,_offset: null
	,_inertia: null
	,onMouseDown: function(event) {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll == null && vscroll == null) {
			return;
		}
		this._scrollview.addClass(":down");
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
		var componentOffset = this._scrollview.getComponentOffset();
		var under = this._scrollview.findComponentsUnderPoint(event.screenX - componentOffset.x,event.screenY - componentOffset.y);
		var _g = 0;
		while(_g < under.length) {
			var c = under[_g];
			++_g;
			if(c.hasTextInput() || ((c) instanceof haxe_ui_components_Scroll)) {
				return;
			}
		}
		this._offset = new haxe_ui_geom_Point();
		if(hscroll != null) {
			var tmp = hscroll.get_pos();
			this._offset.x = tmp + event.screenX;
		}
		if(vscroll != null) {
			var tmp = vscroll.get_pos();
			this._offset.y = tmp + event.screenY;
		}
		if(this._scrollview.get_scrollMode() == "inertial") {
			if(this._inertia == null) {
				this._inertia = { screen : new haxe_ui_geom_Point(), target : new haxe_ui_geom_Point(), amplitude : new haxe_ui_geom_Point(), direction : new haxe_ui_geom_Point(), timestamp : 0};
			}
			this._inertia.target.x = this._scrollview.get_hscrollPos();
			this._inertia.target.y = this._scrollview.get_vscrollPos();
			this._inertia.amplitude.x = 0;
			this._inertia.amplitude.y = 0;
			this._inertia.screen.x = event.screenX;
			this._inertia.screen.y = event.screenY;
			this._inertia.timestamp = HxOverrides.now() / 1000;
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onMouseUp));
	}
	,_lastMousePos: null
	,onMouseMove: function(event) {
		event.cancel();
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.set_pos(this._offset.x - event.screenX);
			var distX = Math.abs(event.screenX - this._lastMousePos.x);
			if(distX > haxe_ui_Toolkit.get_scaleX()) {
				this.pauseContainerEvents();
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(this._offset.y - event.screenY);
			var distY = Math.abs(event.screenY - this._lastMousePos.y);
			if(distY > haxe_ui_Toolkit.get_scaleY()) {
				this.pauseContainerEvents();
			}
		}
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
	}
	,_containerEventsPaused: null
	,pauseContainerEvents: function() {
		if(this._containerEventsPaused == true) {
			return;
		}
		this._containerEventsPaused = true;
		this.onContainerEventsStatusChanged();
	}
	,resumeContainerEvents: function() {
		if(this._containerEventsPaused == false) {
			return;
		}
		this._containerEventsPaused = false;
		this.onContainerEventsStatusChanged();
	}
	,onContainerEventsStatusChanged: function() {
		this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").disableInteractivity(this._containerEventsPaused);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null || vscroll != null) {
			if(this._scrollview.get_autoHideScrolls() == true) {
				if(this._containerEventsPaused == true) {
					if(hscroll != null) {
						hscroll.fadeIn();
					}
					if(vscroll != null) {
						vscroll.fadeIn();
					}
				} else {
					if(hscroll != null) {
						hscroll.fadeOut();
					}
					if(vscroll != null) {
						vscroll.fadeOut();
					}
				}
			}
		}
	}
	,onMouseUp: function(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._scrollview.get_scrollMode() == "inertial") {
			var now = HxOverrides.now() / 1000;
			var elapsed = (now - this._inertia.timestamp) * 1000;
			var deltaX = Math.abs(this._inertia.screen.x - event.screenX);
			var deltaY = Math.abs(this._inertia.screen.y - event.screenY);
			this._inertia.direction.x = this._inertia.screen.x - event.screenX < 0 ? 0 : 1;
			var velocityX = deltaX / elapsed;
			var v = 1000 * deltaX / (1 + elapsed);
			velocityX = 0.8 * v + 0.2 * velocityX;
			this._inertia.direction.y = this._inertia.screen.y - event.screenY < 0 ? 0 : 1;
			var velocityY = deltaY / elapsed;
			var v = 1000 * deltaY / (1 + elapsed);
			velocityY = 0.8 * v + 0.2 * velocityY;
			if(velocityX <= 75 && velocityY <= 75) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			this._inertia.timestamp = HxOverrides.now() / 1000;
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				this._inertia.amplitude.x = 0.8 * velocityX;
			}
			if(this._inertia.direction.x == 0) {
				var tmp = this._scrollview.get_hscrollPos() - this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			} else {
				var tmp = this._scrollview.get_hscrollPos() + this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			}
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				this._inertia.amplitude.y = 0.8 * velocityY;
			}
			if(this._inertia.direction.y == 0) {
				var tmp = this._scrollview.get_vscrollPos() - this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			} else {
				var tmp = this._scrollview.get_vscrollPos() + this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x && this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x) {
				this._inertia.amplitude.x = 0;
			}
			if(this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this._inertia.amplitude.y = 0;
			}
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		} else {
			this._scrollview.removeClass(":down");
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		}
	}
	,inertialScroll: function() {
		var elapsed = (HxOverrides.now() / 1000 - this._inertia.timestamp) * 1000;
		var finishedX = false;
		if(this._inertia.amplitude.x != 0) {
			var deltaX = -this._inertia.amplitude.x * Math.exp(-elapsed / 325);
			if(deltaX > 0.5 || deltaX < -0.5) {
				var oldPos = this._scrollview.get_hscrollPos();
				var newPos = 0;
				if(this._inertia.direction.x == 0) {
					newPos = this._inertia.target.x - deltaX;
				} else {
					newPos = this._inertia.target.x + deltaX;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_hscrollMax()) {
					newPos = this._scrollview.get_hscrollMax();
				}
				this._scrollview.set_hscrollPos(newPos);
				finishedX = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_hscrollMax();
			} else {
				finishedX = true;
			}
		} else {
			finishedX = true;
		}
		var finishedY = false;
		if(this._inertia.amplitude.y != 0) {
			var deltaY = -this._inertia.amplitude.y * Math.exp(-elapsed / 325);
			if(deltaY > 0.5 || deltaY < -0.5) {
				var oldPos = this._scrollview.get_vscrollPos();
				var newPos = 0;
				if(this._inertia.direction.y == 0) {
					newPos = this._inertia.target.y - deltaY;
				} else {
					newPos = this._inertia.target.y + deltaY;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_vscrollMax()) {
					newPos = this._scrollview.get_vscrollMax();
				}
				this._scrollview.set_vscrollPos(newPos);
				finishedY = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_vscrollMax();
			} else {
				finishedY = true;
			}
		} else {
			finishedY = true;
		}
		if(finishedX == true && finishedY == true) {
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		} else {
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		}
	}
	,_fadeTimer: null
	,onMouseWheel: function(event) {
		var _gthis = this;
		var primaryType = haxe_ui_components_VerticalScroll;
		var secondaryType = haxe_ui_components_HorizontalScroll;
		if(event.shiftKey) {
			primaryType = haxe_ui_components_HorizontalScroll;
			secondaryType = haxe_ui_components_VerticalScroll;
		}
		var scroll = this._scrollview.findComponent(null,primaryType,false);
		if(scroll == null) {
			scroll = this._scrollview.findComponent(null,secondaryType,false);
		}
		if(scroll != null) {
			if(this._scrollview.get_autoHideScrolls() == true && this._fadeTimer == null) {
				scroll.fadeIn();
			}
			event.cancel();
			var amount = 50;
			if(event.delta > 0) {
				scroll.set_pos(scroll.get_pos() - amount);
			} else if(event.delta < 0) {
				scroll.set_pos(scroll.get_pos() + amount);
			}
			if(this._scrollview.get_autoHideScrolls() == true) {
				if(this._fadeTimer != null) {
					this._fadeTimer.stop();
					this._fadeTimer = null;
				}
				this._fadeTimer = new haxe_ui_util_Timer(300,function() {
					scroll.fadeOut();
					_gthis._fadeTimer.stop();
					_gthis._fadeTimer = null;
				});
			}
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionDown":
			var fh = this._scrollview;
			fh.set_vscrollPos(fh.get_vscrollPos() + 1);
			event.repeater = true;
			break;
		case "actionLeft":
			var fh = this._scrollview;
			fh.set_hscrollPos(fh.get_hscrollPos() - 1);
			event.repeater = true;
			break;
		case "actionRight":
			var fh = this._scrollview;
			fh.set_hscrollPos(fh.get_hscrollPos() + 1);
			event.repeater = true;
			break;
		case "actionUp":
			var fh = this._scrollview;
			fh.set_vscrollPos(fh.get_vscrollPos() - 1);
			event.repeater = true;
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers_ScrollViewEvents
});
var haxe_ui_containers_ListViewEvents = function(listview) {
	haxe_ui_containers_ScrollViewEvents.call(this,listview);
	this._listview = listview;
};
$hxClasses["haxe.ui.containers.ListViewEvents"] = haxe_ui_containers_ListViewEvents;
haxe_ui_containers_ListViewEvents.__name__ = "haxe.ui.containers.ListViewEvents";
haxe_ui_containers_ListViewEvents.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ListViewEvents.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_listview: null
	,lastEvent: null
	,register: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.register.call(this);
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("renderercreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererdestroyed",$bind(this,this.onRendererDestroyed));
	}
	,unregister: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.unregister.call(this);
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("renderercreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererdestroyed",$bind(this,this.onRendererDestroyed));
	}
	,onScrollChange: function(e) {
		if(this._listview.get_virtual() == true) {
			var _this = this._listview;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	}
	,onRendererCreated: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		instance.registerEvent("rightclick",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._listview._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
			builder.addItemRendererClass(instance,":selected");
		}
	}
	,onRendererDestroyed: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		instance.unregisterEvent("rightclick",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._listview._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
			builder.addItemRendererClass(instance,":selected",false);
		}
	}
	,onRendererMouseDown: function(e) {
		this._listview.set_focus(true);
		if(this._listview.get_selectionMode() == "multiple-long-press") {
			if(this._listview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		} else if(this._listview.classes.indexOf(":mobile") != -1 == false) {
			e.target.addClass(":hover");
		}
	}
	,startLongPressSelection: function(e) {
		var _gthis = this;
		var timerClick = null;
		var currentMouseX = e.screenX;
		var currentMouseY = e.screenY;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		var __onMouseMove = null;
		var __onMouseUp = null;
		var __onMouseClick = null;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e) {
			_e.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				var timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					var x1 = e.screenX;
					var y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},this._listview.get_longPressSelectionTime());
	}
	,onContainerEventsStatusChanged: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.onContainerEventsStatusChanged.call(this);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("listview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		} else {
			var tmp = this._lastMousePos != null;
		}
	}
	,onRendererClick: function(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		var components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		var _g = 0;
		while(_g < components.length) {
			var component = components[_g];
			++_g;
			if(component != e.target && ((component) instanceof haxe_ui_core_InteractiveComponent) && (js_Boot.__cast(component , haxe_ui_core_InteractiveComponent)).get_allowInteraction() == true) {
				return;
			}
		}
		this.lastEvent = e;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._listview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple":case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				var selectedIndices = this._listview.get_selectedIndices();
				var fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				var toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					var _g = 0;
					while(_g < selectedIndices.length) {
						var i = selectedIndices[_g];
						++_g;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					var tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._listview.get_selectionMode() == "multiple" || this._listview.get_selectionMode() == "multiple-click-modifier-key") {
				this._listview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			var selectedIndices = this._listview.get_selectedIndices();
			if(selectedIndices.length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._listview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._listview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	,toggleSelection: function(renderer) {
		var itemIndex = renderer.itemIndex;
		var selectedIndices = this._listview.get_selectedIndices().slice();
		var index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._listview.set_selectedIndices(selectedIndices);
	}
	,selectRange: function(fromIndex,toIndex) {
		var tmp = this._listview;
		var _g = [];
		var _g1 = fromIndex;
		var _g2 = toIndex + 1;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(i);
		}
		tmp.set_selectedIndices(_g);
	}
	,onActionStart: function(event) {
		this.lastEvent = event;
		switch(event.action) {
		case "actionDown":
			if(this._listview.get_selectedIndex() < 0) {
				this._listview.set_selectedIndex(0);
			} else {
				var n = this._listview.get_selectedIndex();
				++n;
				if(n > this._listview.get_dataSource().get_size() - 1) {
					n = 0;
				}
				this._listview.set_selectedIndex(n);
			}
			event.repeater = true;
			break;
		case "actionUp":
			if(this._listview.get_selectedIndex() < 0) {
				this._listview.set_selectedIndex(this._listview.get_dataSource().get_size() - 1);
			} else {
				var n = this._listview.get_selectedIndex();
				--n;
				if(n < 0) {
					n = this._listview.set_selectedIndex(this._listview.get_dataSource().get_size() - 1);
				}
				this._listview.set_selectedIndex(n);
			}
			event.repeater = true;
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers_ListViewEvents
});
var haxe_ui_containers_ScrollViewBuilder = function(scrollview) {
	haxe_ui_core_CompositeBuilder.call(this,scrollview);
	this._scrollview = scrollview;
	this._scrollview.cascadeActive = true;
};
$hxClasses["haxe.ui.containers.ScrollViewBuilder"] = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers_ScrollViewBuilder.__name__ = "haxe.ui.containers.ScrollViewBuilder";
haxe_ui_containers_ScrollViewBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_ScrollViewBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_scrollview: null
	,_contents: null
	,_contentsLayoutName: null
	,create: function() {
		var contentLayoutName = this._scrollview.get_contentLayoutName();
		if(contentLayoutName == null) {
			contentLayoutName = "vertical";
		}
		this.createContentContainer(contentLayoutName);
	}
	,destroy: function() {
	}
	,get_numComponents: function() {
		return this._contents.get_numComponents();
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.addComponent(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.addComponentAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.removeComponent(child,dispose,invalidate);
		}
		return null;
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._contents.removeAllComponents(dispose);
		return true;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._contents.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._contents.getComponentIndex(child);
	}
	,setComponentIndex: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._contents.getComponentAt(index);
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			this._contents = new haxe_ui_containers_Box();
			this._contents.addClass("scrollview-contents");
			this._contents.set_id("scrollview-contents");
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(layoutName));
			this._component.addComponent(this._contents);
			this._contentsLayoutName = layoutName;
		}
	}
	,horizontalConstraintModifier: function() {
		return 0;
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,checkScrolls: function() {
		if(this._component.get_isNativeScroller() == true) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		if(this.get_virtualHorizontal() == false && usableSize.width > 0) {
			var horizontalConstraint = this._contents;
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
			if(vcw > usableSize.width) {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(vcw - usableSize.width);
				if(this._scrollview.get_hscrollThumbSize() == null) {
					hscroll.set_pageSize(usableSize.width / vcw * hscroll.get_max());
				}
				hscroll.syncComponentValidation();
			} else if(this._scrollview.get_horizontalScrollPolicy() == "always") {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(0);
				hscroll.set_pageSize(0);
			} else if(this._scrollview.get_horizontalScrollPolicy() != "always" && hscroll != null) {
				this.destroyHScroll();
			}
		}
		if(this.get_virtualVertical() == false && usableSize.height > 0) {
			var verticalConstraint = this._contents;
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
			if(vch > usableSize.height) {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(vch - usableSize.height);
				if(this._scrollview.get_vscrollThumbSize() == null) {
					vscroll.set_pageSize(usableSize.height / vch * vscroll.get_max());
				}
				vscroll.syncComponentValidation();
			} else if(this._scrollview.get_verticalScrollPolicy() == "always") {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(0);
				vscroll.set_pageSize(0);
			} else if(this._scrollview.get_verticalScrollPolicy() != "always" && vscroll != null) {
				this.destroyVScroll();
			}
		}
	}
	,createHScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var horizontalConstraint = this._contents;
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
		if(usableSize.width <= 0) {
			return hscroll;
		}
		if(vcw > usableSize.width && hscroll == null || this._scrollview.get_horizontalScrollPolicy() == "always") {
			hscroll = new haxe_ui_components_HorizontalScroll();
			hscroll.set_scriptAccess(false);
			hscroll.set_includeInLayout(!this._scrollview.get_autoHideScrolls());
			hscroll.set_hidden(this._scrollview.get_autoHideScrolls());
			hscroll.set_percentWidth(100);
			hscroll.set_allowFocus(false);
			hscroll.set_id("scrollview-hscroll");
			if(this._scrollview.get_hscrollThumbSize() != null) {
				hscroll.set_thumbSize(this._scrollview.get_hscrollThumbSize());
			}
			this._component.addComponent(hscroll);
			this._component.registerInternalEvents(null,true);
		}
		if(this._scrollview.get_horizontalScrollPolicy() == "never") {
			hscroll.set_includeInLayout(false);
			hscroll.set_hidden(true);
		} else if(this._scrollview.get_horizontalScrollPolicy() == "always") {
			hscroll.set_includeInLayout(true);
			hscroll.set_hidden(false);
		}
		return hscroll;
	}
	,createVScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var verticalConstraint = this._contents;
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
		if(usableSize.height <= 0) {
			return vscroll;
		}
		if(vch > usableSize.height && vscroll == null || this._scrollview.get_verticalScrollPolicy() == "always") {
			vscroll = new haxe_ui_components_VerticalScroll();
			vscroll.set_scriptAccess(false);
			vscroll.set_includeInLayout(!this._scrollview.get_autoHideScrolls());
			vscroll.set_hidden(this._scrollview.get_autoHideScrolls());
			vscroll.set_percentHeight(100);
			vscroll.set_allowFocus(false);
			vscroll.set_id("scrollview-vscroll");
			if(this._scrollview.get_vscrollThumbSize() != null) {
				vscroll.set_thumbSize(this._scrollview.get_vscrollThumbSize());
			}
			this._component.addComponent(vscroll);
			this._component.registerInternalEvents(null,true);
		}
		if(this._scrollview.get_verticalScrollPolicy() == "never") {
			vscroll.set_includeInLayout(false);
			vscroll.set_hidden(true);
		} else if(this._scrollview.get_verticalScrollPolicy() == "always") {
			vscroll.set_includeInLayout(true);
			vscroll.set_hidden(false);
		}
		return vscroll;
	}
	,destroyHScroll: function() {
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
	}
	,destroyVScroll: function() {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,updateScrollRect: function() {
		if(this._contents == null) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var clipCX = usableSize.width - this.horizontalConstraintModifier();
		if(clipCX > this._contents.get_width()) {
			clipCX = this._contents.get_width() + this.horizontalConstraintModifier();
		}
		var clipCY = usableSize.height - this.verticalConstraintModifier();
		if(clipCY > this._contents.get_height()) {
			clipCY = this._contents.get_height() + this.verticalConstraintModifier();
		}
		var xpos = 0;
		var ypos = 0;
		if(this.get_virtualHorizontal() == false) {
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				xpos = hscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCX = this._contents.get_componentClipRect().width;
		}
		if(this.get_virtualVertical() == false) {
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				ypos = vscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCY = this._contents.get_componentClipRect().height;
		}
		var newClipRect = new haxe_ui_geom_Rectangle(Math.round(xpos),Math.round(ypos),Math.round(clipCX),Math.round(clipCY));
		this._contents.set_componentClipRect(newClipRect);
		this._contents.walkComponents(function(c) {
			if(c.hasEvent("move")) {
				c.dispatch(new haxe_ui_events_UIEvent("move"));
			}
			return true;
		});
	}
	,virtualHorizontal: null
	,get_virtualHorizontal: function() {
		return this._scrollview.get_virtual();
	}
	,virtualVertical: null
	,get_virtualVertical: function() {
		return this._scrollview.get_virtual();
	}
	,onVirtualChanged: function() {
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(style.mode == "mobile") {
			this._scrollview.set_autoHideScrolls(true);
		}
		if(style.contentWidth != null && style.contentWidth != this._scrollview.get_contentWidth()) {
			this._scrollview.set_contentWidth(style.contentWidth);
		} else if(style.contentWidthPercent != null && style.contentWidthPercent != this._scrollview.get_percentContentWidth()) {
			this._scrollview.set_percentContentWidth(style.contentWidthPercent);
		}
		if(style.contentHeight != null && style.contentHeight != this._scrollview.get_contentHeight()) {
			this._scrollview.set_contentHeight(style.contentHeight);
		} else if(style.contentHeightPercent != null && style.contentHeightPercent != this._scrollview.get_percentContentHeight()) {
			this._scrollview.set_percentContentHeight(style.contentHeightPercent);
		}
	}
	,__class__: haxe_ui_containers_ScrollViewBuilder
	,__properties__: $extend(haxe_ui_core_CompositeBuilder.prototype.__properties__,{get_virtualVertical:"get_virtualVertical",get_virtualHorizontal:"get_virtualHorizontal"})
});
var haxe_ui_containers__$ListView_ListViewBuilder = function(listview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,listview);
	this._listview = listview;
};
$hxClasses["haxe.ui.containers._ListView.ListViewBuilder"] = haxe_ui_containers__$ListView_ListViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.__name__ = "haxe.ui.containers._ListView.ListViewBuilder";
haxe_ui_containers__$ListView_ListViewBuilder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_listview: null
	,create: function() {
		this.createContentContainer(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			haxe_ui_containers_ScrollViewBuilder.prototype.createContentContainer.call(this,layoutName);
			this._contents.addClass("listview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer) && (this._listview.get_itemRenderer() == null && this._listview.get_itemRendererClass() == null)) {
			this._listview.set_itemRenderer(js_Boot.__cast(child , haxe_ui_core_ItemRenderer));
			this._listview.get_itemRenderer().ready();
			this._listview.get_itemRenderer().handleVisibility(false);
			r = child;
		} else {
			r = haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onVirtualChanged: function() {
		this._contents.set_layoutName(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	,addItemRendererClass: function(child,className,add) {
		if(add == null) {
			add = true;
		}
		var _gthis = this;
		child.walkComponents(function(c) {
			if(((c) instanceof haxe_ui_core_ItemRenderer)) {
				if(add == true) {
					c.addClass(className);
					haxe_ui_Toolkit.callLater(function() {
						_gthis.ensureVisible(js_Boot.__cast(c , haxe_ui_core_ItemRenderer));
					});
				} else {
					c.removeClass(className);
				}
			} else {
				c.invalidateComponent("style",false);
			}
			return true;
		});
	}
	,ensureVisible: function(itemToEnsure) {
		if(itemToEnsure != null && this._listview.get_virtual() == false) {
			var vscroll = this._listview.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				var vpos = vscroll.get_pos();
				var contents = this._listview.findComponent("listview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
	}
	,ensureVirtualItemVisible: function(index) {
		var vscroll = this._listview.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null) {
			var layout = js_Boot.__cast(this._listview.get_layout() , haxe_ui_layouts_VerticalVirtualLayout);
			var itemHeight = layout.get_itemHeight();
			var itemTop = index * itemHeight;
			var vpos = vscroll.get_pos();
			var contents = this._listview.findComponent("listview-contents",null,null,"css");
			if(itemTop + itemHeight > vpos + contents.get_componentClipRect().height) {
				vscroll.set_pos(itemTop + itemHeight - contents.get_componentClipRect().height);
			} else if(itemTop < vpos) {
				vscroll.set_pos(itemTop);
			}
		}
	}
	,applyStyle: function(style) {
		haxe_ui_containers_ScrollViewBuilder.prototype.applyStyle.call(this,style);
		var list = this._component.findComponents(null,haxe_ui_components_Label,16777215);
		var _g = 0;
		while(_g < list.length) {
			var c = list[_g];
			++_g;
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_containers__$ListView_ListViewBuilder
});
var haxe_ui_containers__$ListView_DataSourceBehaviour = function(component) {
	this._firstPass = true;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.DataSourceBehaviour"] = haxe_ui_containers__$ListView_DataSourceBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.__name__ = "haxe.ui.containers._ListView.DataSourceBehaviour";
haxe_ui_containers__$ListView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_firstPass: null
	,set: function(value) {
		var _gthis = this;
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var dataSource = haxe_ui_util_Variant.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.onDataSourceChange = function() {
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
				if(_gthis._firstPass == true) {
					_gthis._firstPass = false;
					var _this = _gthis._component;
					if(!(_this._layout == null || _this._layoutLocked == true)) {
						_this.invalidateComponent("layout",false);
					}
				}
				_gthis.dispatchChanged();
			};
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		this.dispatchChanged();
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,dispatchChanged: function() {
		var _gthis = this;
		haxe_ui_Toolkit.callLater(function() {
			_gthis._component.dispatch(new haxe_ui_events_UIEvent("propertychange",false,"dataSource"));
		});
	}
	,__class__: haxe_ui_containers__$ListView_DataSourceBehaviour
});
var haxe_ui_containers__$ListView_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedIndexBehaviour"] = haxe_ui_containers__$ListView_SelectedIndexBehaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndexBehaviour";
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util_Variant.fromInt(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util_Variant.fromInt(-1);
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		listView.set_selectedIndices(haxe_ui_util_Variant.neq(value,haxe_ui_util_Variant.fromInt(-1)) ? [haxe_ui_util_Variant.toInt(value)] : null);
	}
	,__class__: haxe_ui_containers__$ListView_SelectedIndexBehaviour
});
var haxe_ui_containers__$ListView_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedItemBehaviour"] = haxe_ui_containers__$ListView_SelectedItemBehaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemBehaviour";
haxe_ui_containers__$ListView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return listView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var index = listView.get_dataSource().indexOf(value);
		if(index != -1 && listView.get_selectedIndices().indexOf(index) == -1) {
			listView.set_selectedIndices([index]);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedItemBehaviour
});
var haxe_ui_containers__$ListView_SelectedIndicesBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedIndicesBehaviour"] = haxe_ui_containers__$ListView_SelectedIndicesBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndicesBehaviour";
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return haxe_ui_util_Variant.fromArray([]);
		} else {
			return this._value;
		}
	}
	,validateData: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_containers_ListViewEvents);
		var _g = 0;
		var _g1 = contents._children == null ? [] : contents._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				builder.addItemRendererClass(child,":selected");
			} else {
				builder.addItemRendererClass(child,":selected",false);
			}
		}
		if(listView.get_virtual() == true) {
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				builder.ensureVirtualItemVisible(i);
			}
		}
		if(listView.get_selectedIndex() != -1 && listView.get_selectedIndices().length != 0) {
			var event = new haxe_ui_events_UIEvent("change");
			event.relatedEvent = events.lastEvent;
			this._component.dispatch(event);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedIndicesBehaviour
});
var haxe_ui_containers__$ListView_SelectedItemsBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedItemsBehaviour"] = haxe_ui_containers__$ListView_SelectedItemsBehaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemsBehaviour";
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			var selectedItems = [];
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= listView.get_dataSource().get_size()) {
					continue;
				}
				var data = listView.get_dataSource().get(i);
				selectedItems.push(data);
			}
			return haxe_ui_util_Variant.fromArray(selectedItems);
		} else {
			return haxe_ui_util_Variant.fromArray([]);
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedItems = haxe_ui_util_Variant.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			var selectedIndices = [];
			var index;
			var _g = 0;
			while(_g < selectedItems.length) {
				var item = selectedItems[_g];
				++_g;
				index = listView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			listView.set_selectedIndices(selectedIndices);
		} else {
			listView.set_selectedIndices([]);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedItemsBehaviour
});
var haxe_ui_containers__$ListView_SelectionModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectionModeBehaviour"] = haxe_ui_containers__$ListView_SelectionModeBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._ListView.SelectionModeBehaviour";
haxe_ui_containers__$ListView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices == null || selectedIndices.length == 0) {
			return;
		}
		var selectionMode = haxe_ui_util_Variant.toString(this._value);
		switch(selectionMode) {
		case "disabled":
			listView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				listView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectionModeBehaviour
});
var haxe_ui_containers__$ScrollView_EnsureVisible = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.EnsureVisible"] = haxe_ui_containers__$ScrollView_EnsureVisible;
haxe_ui_containers__$ScrollView_EnsureVisible.__name__ = "haxe.ui.containers._ScrollView.EnsureVisible";
haxe_ui_containers__$ScrollView_EnsureVisible.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_EnsureVisible.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var scrollview = js_Boot.__cast(this._component , haxe_ui_containers_ScrollView);
		if(scrollview.get_allowAutoScroll() == false) {
			return null;
		}
		var c = js_Boot.__cast(param , haxe_ui_core_Component);
		if(c == scrollview) {
			return null;
		}
		var hscroll = scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var hscrollPos = 0;
		if(hscroll != null) {
			hscrollPos = hscroll.get_pos();
		}
		var vscroll = scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vscrollPos = 0;
		if(vscroll != null) {
			vscrollPos = vscroll.get_pos();
		}
		var componentScreenRect = new haxe_ui_geom_Rectangle(c.get_screenLeft(),c.get_screenTop(),c.get_width(),c.get_height());
		var componentRect = new haxe_ui_geom_Rectangle(c.get_screenLeft() + hscrollPos,c.get_screenTop() + vscrollPos,c.get_width(),c.get_height());
		var scrollRect = new haxe_ui_geom_Rectangle(scrollview.get_screenLeft(),scrollview.get_screenTop(),scrollview.get_width(),scrollview.get_height());
		var scrollRectFixed = scrollRect.copy();
		var usableSize = scrollview.get_layout().get_usableSize();
		scrollRectFixed.width = usableSize.width;
		scrollRectFixed.height = usableSize.height;
		if(scrollRectFixed.containsRect(componentScreenRect)) {
			return null;
		}
		var newHScrollPos = hscrollPos;
		var newVScrollPos = vscrollPos;
		var fixedRight = componentRect.get_right() - scrollRect.left;
		var fixedLeft = componentRect.left - scrollRect.left;
		var fixedBottom = componentRect.get_bottom() - scrollRect.top;
		var fixedTop = componentRect.top - scrollRect.top;
		var offsetLeft = 1;
		var offsetTop = 1;
		if(scrollRectFixed.containsPoint(componentScreenRect.get_right(),componentScreenRect.top) == false) {
			newHScrollPos = fixedRight - usableSize.width + (this.calcOffset(c,"right") - offsetLeft);
		} else if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.top) == false) {
			newHScrollPos = fixedLeft - (this.calcOffset(c,"left") + offsetLeft);
		}
		if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.get_bottom()) == false) {
			newVScrollPos = fixedBottom - usableSize.height + (this.calcOffset(c,"bottom") - offsetTop);
		} else if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.top) == false) {
			newVScrollPos = fixedTop - (this.calcOffset(c,"top") + offsetTop);
		}
		if(hscroll != null) {
			hscroll.set_pos(newHScrollPos);
		}
		if(vscroll != null) {
			vscroll.set_pos(newVScrollPos);
		}
		return null;
	}
	,calcOffset: function(c,which) {
		var p = 0;
		var r = c.parentComponent;
		while(r != null) {
			if(r.get_style() != null) {
				switch(which) {
				case "bottom":
					if(r.get_paddingBottom() != null) {
						p += r.get_paddingBottom();
					}
					break;
				case "left":
					if(r.get_paddingLeft() != null) {
						p += r.get_paddingLeft();
					}
					break;
				case "right":
					if(r.get_paddingRight() != null) {
						p += r.get_paddingRight();
					}
					break;
				case "top":
					if(r.get_paddingTop() != null) {
						p += r.get_paddingTop();
					}
					break;
				}
			}
			r = r.parentComponent;
			if(r == this._component) {
				break;
			}
		}
		return p;
	}
	,__class__: haxe_ui_containers__$ScrollView_EnsureVisible
});
var haxe_ui_containers__$ScrollView_Virtual = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.Virtual"] = haxe_ui_containers__$ScrollView_Virtual;
haxe_ui_containers__$ScrollView_Virtual.__name__ = "haxe.ui.containers._ScrollView.Virtual";
haxe_ui_containers__$ScrollView_Virtual.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_Virtual.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(this._component._compositeBuilder != null) {
			(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).onVirtualChanged();
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_Virtual
});
var haxe_ui_containers__$ScrollView_ContentLayoutName = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentLayoutName"] = haxe_ui_containers__$ScrollView_ContentLayoutName;
haxe_ui_containers__$ScrollView_ContentLayoutName.__name__ = "haxe.ui.containers._ScrollView.ContentLayoutName";
haxe_ui_containers__$ScrollView_ContentLayoutName.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_ContentLayoutName.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
		if(builder != null && haxe_ui_util_Variant.fromString(builder._contentsLayoutName) != value) {
			builder._contentsLayoutName = haxe_ui_util_Variant.toString(value);
			builder._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(haxe_ui_util_Variant.toString(value)));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentLayoutName
});
var haxe_ui_containers__$ScrollView_ContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentWidth"] = haxe_ui_containers__$ScrollView_ContentWidth;
haxe_ui_containers__$ScrollView_ContentWidth.__name__ = "haxe.ui.containers._ScrollView.ContentWidth";
haxe_ui_containers__$ScrollView_ContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_width());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentWidth(null);
			contents.set_width(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentWidth
});
var haxe_ui_containers__$ScrollView_PercentContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentWidth"] = haxe_ui_containers__$ScrollView_PercentContentWidth;
haxe_ui_containers__$ScrollView_PercentContentWidth.__name__ = "haxe.ui.containers._ScrollView.PercentContentWidth";
haxe_ui_containers__$ScrollView_PercentContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentWidth());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_componentWidth(null);
			contents.set_percentWidth(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentWidth
});
var haxe_ui_containers__$ScrollView_ContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentHeight"] = haxe_ui_containers__$ScrollView_ContentHeight;
haxe_ui_containers__$ScrollView_ContentHeight.__name__ = "haxe.ui.containers._ScrollView.ContentHeight";
haxe_ui_containers__$ScrollView_ContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_height());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentHeight(null);
			contents.set_height(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentHeight
});
var haxe_ui_containers__$ScrollView_PercentContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentHeight"] = haxe_ui_containers__$ScrollView_PercentContentHeight;
haxe_ui_containers__$ScrollView_PercentContentHeight.__name__ = "haxe.ui.containers._ScrollView.PercentContentHeight";
haxe_ui_containers__$ScrollView_PercentContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentHeight());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_componentHeight(null);
			contents.set_percentHeight(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentHeight
});
var haxe_ui_containers__$ScrollView_HScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPos"] = haxe_ui_containers__$ScrollView_HScrollPos;
haxe_ui_containers__$ScrollView_HScrollPos.__name__ = "haxe.ui.containers._ScrollView.HScrollPos";
haxe_ui_containers__$ScrollView_HScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_pos());
	}
	,validateData: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(hscroll != null) {
			hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPos
});
var haxe_ui_containers__$ScrollView_VScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPos"] = haxe_ui_containers__$ScrollView_VScrollPos;
haxe_ui_containers__$ScrollView_VScrollPos.__name__ = "haxe.ui.containers._ScrollView.VScrollPos";
haxe_ui_containers__$ScrollView_VScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_pos());
	}
	,validateData: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(vscroll != null) {
			vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPos
});
var haxe_ui_containers__$ScrollView_HScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollMax"] = haxe_ui_containers__$ScrollView_HScrollMax;
haxe_ui_containers__$ScrollView_HScrollMax.__name__ = "haxe.ui.containers._ScrollView.HScrollMax";
haxe_ui_containers__$ScrollView_HScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(hscroll == null) {
					hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
				}
			} else if(hscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyHScroll();
			}
			if(hscroll != null) {
				hscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollMax
});
var haxe_ui_containers__$ScrollView_VScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollMax"] = haxe_ui_containers__$ScrollView_VScrollMax;
haxe_ui_containers__$ScrollView_VScrollMax.__name__ = "haxe.ui.containers._ScrollView.VScrollMax";
haxe_ui_containers__$ScrollView_VScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(vscroll == null) {
					vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
				}
			} else if(vscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyVScroll();
			}
			if(vscroll != null) {
				vscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollMax
});
var haxe_ui_containers__$ScrollView_HScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPageSize"] = haxe_ui_containers__$ScrollView_HScrollPageSize;
haxe_ui_containers__$ScrollView_HScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.HScrollPageSize";
haxe_ui_containers__$ScrollView_HScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPageSize
});
var haxe_ui_containers__$ScrollView_HScrollThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollThumbSize"] = haxe_ui_containers__$ScrollView_HScrollThumbSize;
haxe_ui_containers__$ScrollView_HScrollThumbSize.__name__ = "haxe.ui.containers._ScrollView.HScrollThumbSize";
haxe_ui_containers__$ScrollView_HScrollThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_thumbSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollThumbSize
});
var haxe_ui_containers__$ScrollView_VScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPageSize"] = haxe_ui_containers__$ScrollView_VScrollPageSize;
haxe_ui_containers__$ScrollView_VScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.VScrollPageSize";
haxe_ui_containers__$ScrollView_VScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPageSize
});
var haxe_ui_containers__$ScrollView_VScrollThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollThumbSize"] = haxe_ui_containers__$ScrollView_VScrollThumbSize;
haxe_ui_containers__$ScrollView_VScrollThumbSize.__name__ = "haxe.ui.containers._ScrollView.VScrollThumbSize";
haxe_ui_containers__$ScrollView_VScrollThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_thumbSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollThumbSize
});
var haxe_ui_containers__$ScrollView_ThumbSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.ThumbSize"] = haxe_ui_containers__$ScrollView_ThumbSize;
haxe_ui_containers__$ScrollView_ThumbSize.__name__ = "haxe.ui.containers._ScrollView.ThumbSize";
haxe_ui_containers__$ScrollView_ThumbSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ThumbSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		this._scrollview.set_hscrollThumbSize(haxe_ui_util_Variant.toFloat(this._value));
		this._scrollview.set_vscrollThumbSize(haxe_ui_util_Variant.toFloat(this._value));
	}
	,__class__: haxe_ui_containers__$ScrollView_ThumbSize
});
var haxe_ui_containers__$ScrollView_ScrollModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ScrollModeBehaviour"] = haxe_ui_containers__$ScrollView_ScrollModeBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollModeBehaviour";
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.registerInternalEvents(null,true);
	}
	,__class__: haxe_ui_containers__$ScrollView_ScrollModeBehaviour
});
var haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.ScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		this._scrollview.set_horizontalScrollPolicy(haxe_ui_util_Variant.toString(this._value));
		this._scrollview.set_verticalScrollPolicy(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$ScrollView_ScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.HScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	__class__: haxe_ui_containers__$ScrollView_HScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPolicyBehaviour"] = haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour;
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.__name__ = "haxe.ui.containers._ScrollView.VScrollPolicyBehaviour";
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	__class__: haxe_ui_containers__$ScrollView_VScrollPolicyBehaviour
});
var haxe_ui_containers__$ScrollView_GetContents = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.GetContents"] = haxe_ui_containers__$ScrollView_GetContents;
haxe_ui_containers__$ScrollView_GetContents.__name__ = "haxe.ui.containers._ScrollView.GetContents";
haxe_ui_containers__$ScrollView_GetContents.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_GetContents.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		return haxe_ui_util_Variant.fromComponent(contents);
	}
	,__class__: haxe_ui_containers__$ScrollView_GetContents
});
var haxe_ui_containers__$Splitter_SizerGripper = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	var image = new haxe_ui_components_Image();
	this.addComponent(image);
};
$hxClasses["haxe.ui.containers._Splitter.SizerGripper"] = haxe_ui_containers__$Splitter_SizerGripper;
haxe_ui_containers__$Splitter_SizerGripper.__name__ = "haxe.ui.containers._Splitter.SizerGripper";
haxe_ui_containers__$Splitter_SizerGripper.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_containers__$Splitter_SizerGripper.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers__$Splitter_SizerGripper();
	}
	,__class__: haxe_ui_containers__$Splitter_SizerGripper
});
var haxe_ui_containers_Stack = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Stack"] = haxe_ui_containers_Stack;
haxe_ui_containers_Stack.__name__ = "haxe.ui.containers.Stack";
haxe_ui_containers_Stack.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Stack.prototype = $extend(haxe_ui_containers_Box.prototype,{
	prevPage: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("prevPage",null);
	}
	,nextPage: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("nextPage",null);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedIndex",haxe_ui_containers__$Stack_SelectedIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedId",haxe_ui_containers__$Stack_SelectedId);
		this.behaviours.register("prevPage",haxe_ui_containers__$Stack_PrevPage);
		this.behaviours.register("nextPage",haxe_ui_containers__$Stack_NextPage);
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedIndex"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Stack();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$Stack_Builder;
	}
	,__class__: haxe_ui_containers_Stack
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_containers__$Stack_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Stack.SelectedIndex"] = haxe_ui_containers__$Stack_SelectedIndex;
haxe_ui_containers__$Stack_SelectedIndex.__name__ = "haxe.ui.containers._Stack.SelectedIndex";
haxe_ui_containers__$Stack_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$Stack_Builder);
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		var _this = this._component;
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1))) {
			var _this = this._component;
			this._value = haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1);
			return;
		}
		if(builder._currentPage != null) {
			builder._currentPage.hide();
		}
		var _this = this._component;
		builder._currentPage = (_this._children == null ? [] : _this._children)[haxe_ui_util_Variant.toInt(this._value)];
		builder._currentPage.show();
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$Stack_SelectedIndex
});
var haxe_ui_containers__$Stack_SelectedId = function(stack) {
	haxe_ui_behaviours_DataBehaviour.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.SelectedId"] = haxe_ui_containers__$Stack_SelectedId;
haxe_ui_containers__$Stack_SelectedId.__name__ = "haxe.ui.containers._Stack.SelectedId";
haxe_ui_containers__$Stack_SelectedId.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_SelectedId.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_stack: null
	,validateData: function() {
		var item = this._component.findComponent(haxe_ui_util_Variant.toString(this._value),haxe_ui_core_Component,false);
		if(item != null) {
			this._stack.set_selectedIndex(this._component.getComponentIndex(item));
		}
	}
	,__class__: haxe_ui_containers__$Stack_SelectedId
});
var haxe_ui_containers__$Stack_PrevPage = function(stack) {
	haxe_ui_behaviours_DataBehaviour.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.PrevPage"] = haxe_ui_containers__$Stack_PrevPage;
haxe_ui_containers__$Stack_PrevPage.__name__ = "haxe.ui.containers._Stack.PrevPage";
haxe_ui_containers__$Stack_PrevPage.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_PrevPage.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_stack: null
	,call: function(param) {
		var pageCount = this._stack.get_numComponents();
		var newIndex = this._stack.get_selectedIndex();
		--newIndex;
		if(newIndex < 0) {
			newIndex = pageCount - 1;
		}
		this._stack.set_selectedIndex(newIndex);
		return null;
	}
	,__class__: haxe_ui_containers__$Stack_PrevPage
});
var haxe_ui_containers__$Stack_NextPage = function(stack) {
	haxe_ui_behaviours_DataBehaviour.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.NextPage"] = haxe_ui_containers__$Stack_NextPage;
haxe_ui_containers__$Stack_NextPage.__name__ = "haxe.ui.containers._Stack.NextPage";
haxe_ui_containers__$Stack_NextPage.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_NextPage.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_stack: null
	,call: function(param) {
		var pageCount = this._stack.get_numComponents();
		var newIndex = this._stack.get_selectedIndex();
		++newIndex;
		if(newIndex > pageCount - 1) {
			newIndex = 0;
		}
		this._stack.set_selectedIndex(newIndex);
		return null;
	}
	,__class__: haxe_ui_containers__$Stack_NextPage
});
var haxe_ui_containers__$Stack_Builder = function(stack) {
	this._currentPage = null;
	haxe_ui_core_CompositeBuilder.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.Builder"] = haxe_ui_containers__$Stack_Builder;
haxe_ui_containers__$Stack_Builder.__name__ = "haxe.ui.containers._Stack.Builder";
haxe_ui_containers__$Stack_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Stack_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stack: null
	,_currentPage: null
	,onComponentAdded: function(child) {
		if(this._stack.get_selectedIndex() < 0) {
			this._stack.set_selectedIndex(0);
		}
		var childIndex = this._stack.getComponentIndex(child);
		if(childIndex != this._stack.get_selectedIndex()) {
			child.hide();
		}
	}
	,__class__: haxe_ui_containers__$Stack_Builder
});
var haxe_ui_containers_TabView = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.TabView"] = haxe_ui_containers_TabView;
haxe_ui_containers_TabView.__name__ = "haxe.ui.containers.TabView";
haxe_ui_containers_TabView.__super__ = haxe_ui_core_Component;
haxe_ui_containers_TabView.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$TabView_Builder;
		this._internalEventsClass = haxe_ui_containers__$TabView_Events;
		this._defaultLayoutClass = haxe_ui_containers__$TabView_Layout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("pageIndex",haxe_ui_containers__$TabView_PageIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedPage",haxe_ui_containers__$TabView_SelectedPage,null);
		this.behaviours.register("tabPosition",haxe_ui_containers__$TabView_TabPosition);
		this.behaviours.register("pageCount",haxe_ui_containers__$TabView_PageCount);
		this.behaviours.register("closable",haxe_ui_containers__$TabView_Closable,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("buttonWidth",haxe_ui_containers__$TabView_ButtonWidth,null);
		this.behaviours.register("buttonHeight",haxe_ui_containers__$TabView_ButtonHeight,null);
		this.behaviours.register("removePage",haxe_ui_containers__$TabView_RemovePage);
		this.behaviours.register("getPage",haxe_ui_containers__$TabView_GetPage);
		this.behaviours.register("getPageById",haxe_ui_containers__$TabView_GetPageById);
		this.behaviours.register("removeAllPages",haxe_ui_containers__$TabView_RemoveAllPages);
	}
	,get_pageIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("pageIndex"));
	}
	,set_pageIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"pageIndex"));
		return value;
	}
	,set_selectedPage: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedPage",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedPage"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TabView();
	}
	,__class__: haxe_ui_containers_TabView
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_selectedPage:"set_selectedPage",set_pageIndex:"set_pageIndex",get_pageIndex:"get_pageIndex"})
});
var haxe_ui_containers__$TabView_Layout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.containers._TabView.Layout"] = haxe_ui_containers__$TabView_Layout;
haxe_ui_containers__$TabView_Layout.__name__ = "haxe.ui.containers._TabView.Layout";
haxe_ui_containers__$TabView_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_containers__$TabView_Layout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		var content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		if(this.get_component().classes.indexOf(":bottom") != -1) {
			content.set_left(this.get_paddingLeft());
			content.set_top(this.get_paddingTop());
			tabs.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				tabs.set_top(this.get_component().get_height() - tabs.get_height() - this.get_paddingBottom() + this.marginTop(tabs));
			}
		} else {
			tabs.set_left(this.get_paddingLeft());
			tabs.set_top(this.get_paddingTop() + this.marginTop(tabs));
			content.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				content.set_top(tabs.get_top() + tabs.get_height() - this.marginTop(tabs) + this.marginTop(content));
			}
		}
	}
	,resizeChildren: function() {
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		var content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		var usableSize = this.get_usableSize();
		tabs.set_width(usableSize.width);
		if(this.get_component().get_autoHeight() == false) {
			content.set_height(usableSize.height + 1);
		}
		if(this.get_component().get_autoWidth() == false) {
			content.set_width(this.get_component().get_width());
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs != null && tabs.get_componentHeight() != null) {
			size.height -= tabs.get_componentHeight();
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers__$TabView_Layout();
	}
	,__class__: haxe_ui_containers__$TabView_Layout
});
var haxe_ui_containers__$TabView_Closable = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.Closable"] = haxe_ui_containers__$TabView_Closable;
haxe_ui_containers__$TabView_Closable.__name__ = "haxe.ui.containers._TabView.Closable";
haxe_ui_containers__$TabView_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_Closable.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.get_native() == true) {
			return;
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		builder._tabs.set_closable(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_containers__$TabView_Closable
});
var haxe_ui_containers__$TabView_PageIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageIndex"] = haxe_ui_containers__$TabView_PageIndex;
haxe_ui_containers__$TabView_PageIndex.__name__ = "haxe.ui.containers._TabView.PageIndex";
haxe_ui_containers__$TabView_PageIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_PageIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.gt(value,haxe_ui_util_Variant.fromInt(-1))) {
			var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
			builder._tabs.set_selectedIndex(haxe_ui_util_Variant.toInt(value));
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
	}
	,validateData: function() {
		if(this._component.get_native() == true) {
			return;
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(builder._views.length - 1))) {
			this._value = haxe_ui_util_Variant.fromInt(builder._views.length - 1);
			return;
		}
		builder._tabs.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
		var view = builder._views[haxe_ui_util_Variant.toInt(this._value)];
		if(view != null) {
			if(builder._currentView != null) {
				builder._currentView.hide();
			}
			if(builder._content.getComponentIndex(view) == -1) {
				builder._content.addComponent(view);
			} else {
				view.show();
			}
			builder._currentView = view;
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$TabView_PageIndex
});
var haxe_ui_containers__$TabView_SelectedPage = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.SelectedPage"] = haxe_ui_containers__$TabView_SelectedPage;
haxe_ui_containers__$TabView_SelectedPage.__name__ = "haxe.ui.containers._TabView.SelectedPage";
haxe_ui_containers__$TabView_SelectedPage.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$TabView_SelectedPage.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = builder._views[tabview.get_pageIndex()];
		return haxe_ui_util_Variant.fromComponent(view);
	}
	,set: function(value) {
		var tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = haxe_ui_util_Variant.toComponent(value);
		var viewIndex = builder._views.indexOf(view);
		if(viewIndex != -1) {
			tabview.set_pageIndex(viewIndex);
		}
	}
	,__class__: haxe_ui_containers__$TabView_SelectedPage
});
var haxe_ui_containers__$TabView_TabPosition = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.TabPosition"] = haxe_ui_containers__$TabView_TabPosition;
haxe_ui_containers__$TabView_TabPosition.__name__ = "haxe.ui.containers._TabView.TabPosition";
haxe_ui_containers__$TabView_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_TabPosition.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromString("bottom"))) {
			this._component.addClass(":bottom");
			this._component.findComponent(null,haxe_ui_components_TabBar,false).componentTabIndex = 1;
			this._component.findComponent("tabview-content",haxe_ui_containers_Box,false).componentTabIndex = 0;
		} else {
			this._component.removeClass(":bottom");
			this._component.findComponent(null,haxe_ui_components_TabBar,false).componentTabIndex = 0;
			this._component.findComponent("tabview-content",haxe_ui_containers_Box,false).componentTabIndex = 1;
		}
		this._component.findComponent(null,haxe_ui_components_TabBar,false).set_tabPosition(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$TabView_TabPosition
});
var haxe_ui_containers__$TabView_PageCount = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageCount"] = haxe_ui_containers__$TabView_PageCount;
haxe_ui_containers__$TabView_PageCount.__name__ = "haxe.ui.containers._TabView.PageCount";
haxe_ui_containers__$TabView_PageCount.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_PageCount.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		return haxe_ui_util_Variant.fromInt(builder._tabs.get_tabCount());
	}
	,__class__: haxe_ui_containers__$TabView_PageCount
});
var haxe_ui_containers__$TabView_RemovePage = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemovePage"] = haxe_ui_containers__$TabView_RemovePage;
haxe_ui_containers__$TabView_RemovePage.__name__ = "haxe.ui.containers._TabView.RemovePage";
haxe_ui_containers__$TabView_RemovePage.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_RemovePage.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var index = param;
		if(index < builder._views.length) {
			builder._tabs.removeTab(index);
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TabView_RemovePage
});
var haxe_ui_containers__$TabView_GetPage = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.GetPage"] = haxe_ui_containers__$TabView_GetPage;
haxe_ui_containers__$TabView_GetPage.__name__ = "haxe.ui.containers._TabView.GetPage";
haxe_ui_containers__$TabView_GetPage.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_GetPage.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var index = param;
		var page = null;
		if(index < builder._views.length) {
			page = builder._views[index];
		}
		return haxe_ui_util_Variant.fromComponent(page);
	}
	,__class__: haxe_ui_containers__$TabView_GetPage
});
var haxe_ui_containers__$TabView_GetPageById = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.GetPageById"] = haxe_ui_containers__$TabView_GetPageById;
haxe_ui_containers__$TabView_GetPageById.__name__ = "haxe.ui.containers._TabView.GetPageById";
haxe_ui_containers__$TabView_GetPageById.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_GetPageById.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var id = param;
		var page = null;
		var _g = 0;
		var _g1 = builder._views;
		while(_g < _g1.length) {
			var view = _g1[_g];
			++_g;
			if(view.get_id() == id) {
				page = view;
				break;
			}
		}
		return haxe_ui_util_Variant.fromComponent(page);
	}
	,__class__: haxe_ui_containers__$TabView_GetPageById
});
var haxe_ui_containers__$TabView_RemoveAllPages = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemoveAllPages"] = haxe_ui_containers__$TabView_RemoveAllPages;
haxe_ui_containers__$TabView_RemoveAllPages.__name__ = "haxe.ui.containers._TabView.RemoveAllPages";
haxe_ui_containers__$TabView_RemoveAllPages.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_RemoveAllPages.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		while(builder._views.length > 0) builder._tabs.removeTab(0);
		(js_Boot.__cast(this._component , haxe_ui_containers_TabView)).set_pageIndex(-1);
		builder._tabs.set_selectedIndex(-1);
		return null;
	}
	,__class__: haxe_ui_containers__$TabView_RemoveAllPages
});
var haxe_ui_containers__$TabView_ButtonWidth = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.ButtonWidth"] = haxe_ui_containers__$TabView_ButtonWidth;
haxe_ui_containers__$TabView_ButtonWidth.__name__ = "haxe.ui.containers._TabView.ButtonWidth";
haxe_ui_containers__$TabView_ButtonWidth.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_ButtonWidth.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var tabbar = this._component.findComponent("tabview-tabs",haxe_ui_components_TabBar);
		if(tabbar != null) {
			tabbar.set_buttonWidth(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$TabView_ButtonWidth
});
var haxe_ui_containers__$TabView_ButtonHeight = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.ButtonHeight"] = haxe_ui_containers__$TabView_ButtonHeight;
haxe_ui_containers__$TabView_ButtonHeight.__name__ = "haxe.ui.containers._TabView.ButtonHeight";
haxe_ui_containers__$TabView_ButtonHeight.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_ButtonHeight.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var tabbar = this._component.findComponent("tabview-tabs",haxe_ui_components_TabBar);
		if(tabbar != null) {
			tabbar.set_buttonHeight(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$TabView_ButtonHeight
});
var haxe_ui_containers__$TabView_Events = function(tabview) {
	haxe_ui_events_Events.call(this,tabview);
	this._tabview = tabview;
};
$hxClasses["haxe.ui.containers._TabView.Events"] = haxe_ui_containers__$TabView_Events;
haxe_ui_containers__$TabView_Events.__name__ = "haxe.ui.containers._TabView.Events";
haxe_ui_containers__$TabView_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$TabView_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_tabview: null
	,register: function() {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs.hasEvent("change",$bind(this,this.onTabChanged)) == false) {
			tabs.registerEvent("change",$bind(this,this.onTabChanged));
		}
		if(tabs.hasEvent("beforechange",$bind(this,this.onTabBeforeChanged)) == false) {
			tabs.registerEvent("beforechange",$bind(this,this.onTabBeforeChanged));
		}
		if(tabs.hasEvent("beforeclose",$bind(this,this.onBeforeTabClosed)) == false) {
			tabs.registerEvent("beforeclose",$bind(this,this.onBeforeTabClosed));
		}
		if(tabs.hasEvent("close",$bind(this,this.onTabClosed)) == false) {
			tabs.registerEvent("close",$bind(this,this.onTabClosed));
		}
	}
	,unregister: function() {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		tabs.unregisterEvent("change",$bind(this,this.onTabChanged));
		tabs.unregisterEvent("beforechange",$bind(this,this.onTabBeforeChanged));
		tabs.unregisterEvent("beforeclose",$bind(this,this.onBeforeTabClosed));
		tabs.unregisterEvent("close",$bind(this,this.onTabClosed));
	}
	,onBeforeTabClosed: function(event) {
		this._tabview.dispatch(event);
	}
	,onTabClosed: function(event) {
		var builder = js_Boot.__cast(this._tabview._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = builder._views[event.data];
		HxOverrides.remove(builder._views,view);
		if(builder._content.getComponentIndex(view) != -1) {
			builder._content.removeComponent(view);
		}
		this._tabview.dispatch(new haxe_ui_events_UIEvent("close",event.data));
	}
	,onTabChanged: function(event) {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		this._tabview.set_pageIndex(-1);
		this._tabview.set_pageIndex(tabs.get_selectedIndex());
	}
	,onTabBeforeChanged: function(event) {
		this._tabview.dispatch(event);
	}
	,__class__: haxe_ui_containers__$TabView_Events
});
var haxe_ui_containers__$TabView_Builder = function(tabview) {
	this._views = [];
	this._currentView = null;
	haxe_ui_core_CompositeBuilder.call(this,tabview);
	this._tabview = tabview;
};
$hxClasses["haxe.ui.containers._TabView.Builder"] = haxe_ui_containers__$TabView_Builder;
haxe_ui_containers__$TabView_Builder.__name__ = "haxe.ui.containers._TabView.Builder";
haxe_ui_containers__$TabView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$TabView_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_tabview: null
	,_tabs: null
	,_content: null
	,_currentView: null
	,_views: null
	,create: function() {
		if(this._content == null) {
			this._content = new haxe_ui_containers_Box();
			this._content.set_id("tabview-content");
			this._content.addClass("tabview-content");
			this._content.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("vertical"));
			this._content.componentTabIndex = 1;
			this._tabview.addComponent(this._content);
		}
		if(this._tabs == null) {
			this._tabs = new haxe_ui_components_TabBar();
			this._tabs.set_id("tabview-tabs");
			this._tabs.addClass("tabview-tabs");
			this._tabs.componentTabIndex = 0;
			this._tabview.addComponent(this._tabs);
		}
	}
	,get_numComponents: function() {
		return this._views.length;
	}
	,addComponent: function(child) {
		if(child != this._content && child != this._tabs) {
			var text = child.get_text();
			var icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = haxe_ui_util_Variant.toString((js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon());
			}
			child.registerEvent("propertychange",$bind(this,this.onPagePropertyChanged));
			this._views.push(child);
			var button = new haxe_ui_components_Button();
			if(child.get_disabled() == true) {
				button.set_disabled(true);
			}
			button.set_text(text);
			button.set_icon(haxe_ui_util_Variant.fromString(icon));
			button.set_tooltip(child.get_tooltip());
			if(child.get_id() != null) {
				button.set_id(child.get_id() + "_button");
			}
			this._tabs.addComponent(button);
			return child;
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child != this._content && child != this._tabs) {
			var text = child.get_text();
			var icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = haxe_ui_util_Variant.toString((js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon());
			}
			child.registerEvent("propertychange",$bind(this,this.onPagePropertyChanged));
			this._views.splice(index,0,child);
			var button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(haxe_ui_util_Variant.fromString(icon));
			button.set_tooltip(child.get_tooltip());
			if(child.get_id() != null) {
				button.set_id(child.get_id() + "_button");
			}
			this._tabs.addComponentAt(button,index);
			return child;
		}
		return null;
	}
	,onPagePropertyChanged: function(event) {
		if(event.data == "text") {
			var index = this._views.indexOf(event.target);
			var button = this._tabs.getTab(index);
			if(button != null && button.get_text() != event.target.get_text()) {
				button.set_text(event.target.get_text());
			}
		} else if(event.data == "icon") {
			var index = this._views.indexOf(event.target);
			var button = js_Boot.__cast(this._tabs.getTab(index) , haxe_ui_components_Button);
			if(button != null && haxe_ui_util_Variant.neq(button.get_icon(),(js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_icon())) {
				button.set_icon((js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_icon());
			}
		} else if(event.data == "disabled") {
			var index = this._views.indexOf(event.target);
			var button = js_Boot.__cast(this._tabs.getTab(index) , haxe_ui_components_Button);
			if(button != null && button.get_disabled() != (js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_disabled()) {
				button.set_disabled((js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_disabled());
			}
		}
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._content && child != this._tabs) {
			var _g = this._views.indexOf(child);
			if(_g != -1) {
				var i = _g;
				this._tabs.removeComponentAt(i,dispose,invalidate);
				return child;
			}
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._tabs.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._views.indexOf(child);
	}
	,setComponentIndex: function(child,index) {
		if(child != this._content && child != this._tabs) {
			var _g = this._views.indexOf(child);
			if(_g != -1) {
				var i = _g;
				this._views.splice(i,1);
				this._views.splice(index,0,child);
				this._tabs.setComponentIndex(this._tabs.getComponentAt(i),index);
				return child;
			}
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._views[index];
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var _g = 0;
			var _g1 = this._views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				match = view.findComponent(criteria,type,recursive,searchType);
				if(view.matchesSearch(criteria,type,searchType)) {
					return view;
				} else {
					match = view.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		var c = this._component.findComponent("tabview-tabs",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(style.fontBold != null && c.get_customStyle().fontBold != style.fontBold) {
				c.get_customStyle().fontBold = style.fontBold;
				invalidate = true;
			}
			if(style.fontUnderline != null && c.get_customStyle().fontUnderline != style.fontUnderline) {
				c.get_customStyle().fontUnderline = style.fontUnderline;
				invalidate = true;
			}
			if(style.fontItalic != null && c.get_customStyle().fontItalic != style.fontItalic) {
				c.get_customStyle().fontItalic = style.fontItalic;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_containers__$TabView_Builder
});
var haxe_ui_containers_TreeView = function() {
	this._expandableItemRenderer = null;
	this._itemRenderer = new haxe_ui_core_BasicItemRenderer();
	this._dataSource = null;
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.TreeView"] = haxe_ui_containers_TreeView;
haxe_ui_containers_TreeView.__name__ = "haxe.ui.containers.TreeView";
haxe_ui_containers_TreeView.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_containers_TreeView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_TreeView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	addNode: function(data) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("addNode",data));
	}
	,_dataSource: null
	,get_dataSource: function() {
		if(this._dataSource == null) {
			this._dataSource = new haxe_ui_data_ArrayDataSource();
			this._dataSource.onDataSourceChange = $bind(this,this.onDataChanged);
		}
		return this._dataSource;
	}
	,onDataChanged: function() {
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,_expandableItemRenderer: null
	,get_expandableItemRenderer: function() {
		if(this._expandableItemRenderer == null) {
			return this._itemRenderer;
		}
		return this._expandableItemRenderer;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TreeView_TreeViewEvents;
		this._compositeBuilderClass = haxe_ui_containers__$TreeView_TreeViewBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedNode",haxe_ui_containers__$TreeView_SelectedNode);
		this.behaviours.register("addNode",haxe_ui_containers__$TreeView_AddNode);
		this.behaviours.register("removeNode",haxe_ui_containers__$TreeView_RemoveNode);
		this.behaviours.register("clearNodes",haxe_ui_containers__$TreeView_ClearNodes);
		this.behaviours.register("getNodesInternal",haxe_ui_containers__$TreeView_GetNodesInternal);
	}
	,get_selectedNode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedNode"));
	}
	,set_selectedNode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedNode",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"selectedNode"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TreeView();
	}
	,__class__: haxe_ui_containers_TreeView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_selectedNode:"set_selectedNode",get_selectedNode:"get_selectedNode",get_expandableItemRenderer:"get_expandableItemRenderer",get_itemRenderer:"get_itemRenderer",get_dataSource:"get_dataSource"})
});
var haxe_ui_containers__$TreeView_AddNode = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.AddNode"] = haxe_ui_containers__$TreeView_AddNode;
haxe_ui_containers__$TreeView_AddNode.__name__ = "haxe.ui.containers._TreeView.AddNode";
haxe_ui_containers__$TreeView_AddNode.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeView_AddNode.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = new haxe_ui_containers_TreeViewNode();
		node.set_data(param);
		this._component.addComponent(node);
		return haxe_ui_util_Variant.fromComponent(node);
	}
	,__class__: haxe_ui_containers__$TreeView_AddNode
});
var haxe_ui_containers__$TreeView_RemoveNode = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.RemoveNode"] = haxe_ui_containers__$TreeView_RemoveNode;
haxe_ui_containers__$TreeView_RemoveNode.__name__ = "haxe.ui.containers._TreeView.RemoveNode";
haxe_ui_containers__$TreeView_RemoveNode.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeView_RemoveNode.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = param;
		this._component.removeComponent(node);
		return haxe_ui_util_Variant.fromComponent(node);
	}
	,__class__: haxe_ui_containers__$TreeView_RemoveNode
});
var haxe_ui_containers__$TreeView_ClearNodes = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.ClearNodes"] = haxe_ui_containers__$TreeView_ClearNodes;
haxe_ui_containers__$TreeView_ClearNodes.__name__ = "haxe.ui.containers._TreeView.ClearNodes";
haxe_ui_containers__$TreeView_ClearNodes.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeView_ClearNodes.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var treeview = js_Boot.__cast(this._component , haxe_ui_containers_TreeView);
		treeview.set_selectedNode(null);
		var nodes = treeview.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		var _g = 0;
		while(_g < nodes.length) {
			var n = nodes[_g];
			++_g;
			treeview.removeComponent(n);
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TreeView_ClearNodes
});
var haxe_ui_containers__$TreeView_SelectedNode = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.SelectedNode"] = haxe_ui_containers__$TreeView_SelectedNode;
haxe_ui_containers__$TreeView_SelectedNode.__name__ = "haxe.ui.containers._TreeView.SelectedNode";
haxe_ui_containers__$TreeView_SelectedNode.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TreeView_SelectedNode.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			if(this._previousValue != null && !haxe_ui_util_Variant.get_isNull(this._previousValue)) {
				var previousSelection = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._previousValue) , haxe_ui_containers_TreeViewNode);
				var renderer = previousSelection.findComponent(null,haxe_ui_core_ItemRenderer,true);
				if(renderer != null) {
					renderer.removeClass(":node-selected",true,true);
				}
			}
		} else {
			if(this._previousValue != null && !haxe_ui_util_Variant.get_isNull(this._previousValue)) {
				var previousSelection = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._previousValue) , haxe_ui_containers_TreeViewNode);
				var renderer = previousSelection.findComponent(null,haxe_ui_core_ItemRenderer,true);
				if(renderer != null) {
					renderer.removeClass(":node-selected",true,true);
				}
			}
			var node = js_Boot.__cast(haxe_ui_util_Variant.toComponent(this._value) , haxe_ui_containers_TreeViewNode);
			var p = node.parentNode;
			while(p != null) {
				p.set_expanded(true);
				p = p.parentNode;
			}
			var renderer = node.findComponent(null,haxe_ui_core_ItemRenderer,true);
			if(renderer != null) {
				renderer.addClass(":node-selected",true,true);
			}
			(js_Boot.__cast(this._component , haxe_ui_containers_TreeView)).ensureVisible(node);
		}
		var event = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_containers__$TreeView_SelectedNode
});
var haxe_ui_containers__$TreeView_GetNodesInternal = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeView.GetNodesInternal"] = haxe_ui_containers__$TreeView_GetNodesInternal;
haxe_ui_containers__$TreeView_GetNodesInternal.__name__ = "haxe.ui.containers._TreeView.GetNodesInternal";
haxe_ui_containers__$TreeView_GetNodesInternal.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeView_GetNodesInternal.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var nodes = this._component.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		return haxe_ui_util_Variant.fromArray(nodes);
	}
	,__class__: haxe_ui_containers__$TreeView_GetNodesInternal
});
var haxe_ui_containers__$TreeView_TreeViewEvents = function(treeview) {
	haxe_ui_containers_ScrollViewEvents.call(this,treeview);
	this._treeview = treeview;
};
$hxClasses["haxe.ui.containers._TreeView.TreeViewEvents"] = haxe_ui_containers__$TreeView_TreeViewEvents;
haxe_ui_containers__$TreeView_TreeViewEvents.__name__ = "haxe.ui.containers._TreeView.TreeViewEvents";
haxe_ui_containers__$TreeView_TreeViewEvents.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers__$TreeView_TreeViewEvents.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_treeview: null
	,__class__: haxe_ui_containers__$TreeView_TreeViewEvents
});
var haxe_ui_containers__$TreeView_TreeViewBuilder = function(treeview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,treeview);
	this._treeview = treeview;
};
$hxClasses["haxe.ui.containers._TreeView.TreeViewBuilder"] = haxe_ui_containers__$TreeView_TreeViewBuilder;
haxe_ui_containers__$TreeView_TreeViewBuilder.__name__ = "haxe.ui.containers._TreeView.TreeViewBuilder";
haxe_ui_containers__$TreeView_TreeViewBuilder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$TreeView_TreeViewBuilder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_treeview: null
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			if(child.get_id() == null) {
				this._treeview._itemRenderer = child;
			} else if(child.get_id() == "expandable") {
				this._treeview._expandableItemRenderer = child;
			}
			return child;
		}
		return haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
	}
	,__class__: haxe_ui_containers__$TreeView_TreeViewBuilder
});
var haxe_ui_containers_TreeViewNode = function() {
	this._data = null;
	this.parentNode = null;
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.TreeViewNode"] = haxe_ui_containers_TreeViewNode;
haxe_ui_containers_TreeViewNode.__name__ = "haxe.ui.containers.TreeViewNode";
haxe_ui_containers_TreeViewNode.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_TreeViewNode.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	addNode: function(data) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("addNode",data));
	}
	,parentNode: null
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		if(value == this._data) {
			return value;
		}
		this._data = value;
		this.invalidateComponent("data",false);
		return value;
	}
	,get_text: function() {
		return this._data.text;
	}
	,set_text: function(value) {
		if(this._data == null) {
			this._data = { };
		}
		this._data.text = value;
		this.set_data(Reflect.copy(this._data));
		return value;
	}
	,get_icon: function() {
		return this._data.icon;
	}
	,set_icon: function(value) {
		if(this._data == null) {
			this._data = { };
		}
		this._data.icon = value;
		this.set_data(Reflect.copy(this._data));
		return value;
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents;
		this._compositeBuilderClass = haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("expanded",haxe_ui_containers__$TreeViewNode_Expanded,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("addNode",haxe_ui_containers__$TreeViewNode_AddNode);
		this.behaviours.register("removeNode",haxe_ui_containers__$TreeViewNode_RemoveNode);
		this.behaviours.register("clearNodes",haxe_ui_containers__$TreeViewNode_ClearNodes);
		this.behaviours.register("getNodesInternal",haxe_ui_containers__$TreeViewNode_GetNodesInternal);
	}
	,get_expanded: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("expanded"));
	}
	,set_expanded: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("expanded",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"expanded"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TreeViewNode();
	}
	,__class__: haxe_ui_containers_TreeViewNode
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_expanded:"set_expanded",get_expanded:"get_expanded",set_data:"set_data",get_data:"get_data"})
});
var haxe_ui_containers__$TreeViewNode_AddNode = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.AddNode"] = haxe_ui_containers__$TreeViewNode_AddNode;
haxe_ui_containers__$TreeViewNode_AddNode.__name__ = "haxe.ui.containers._TreeViewNode.AddNode";
haxe_ui_containers__$TreeViewNode_AddNode.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeViewNode_AddNode.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = new haxe_ui_containers_TreeViewNode();
		node.parentNode = js_Boot.__cast(this._component , haxe_ui_containers_TreeViewNode);
		node.set_data(param);
		this._component.addComponent(node);
		return haxe_ui_util_Variant.fromComponent(node);
	}
	,__class__: haxe_ui_containers__$TreeViewNode_AddNode
});
var haxe_ui_containers__$TreeViewNode_RemoveNode = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.RemoveNode"] = haxe_ui_containers__$TreeViewNode_RemoveNode;
haxe_ui_containers__$TreeViewNode_RemoveNode.__name__ = "haxe.ui.containers._TreeViewNode.RemoveNode";
haxe_ui_containers__$TreeViewNode_RemoveNode.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeViewNode_RemoveNode.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = param;
		this._component.removeComponent(node);
		return haxe_ui_util_Variant.fromComponent(node);
	}
	,__class__: haxe_ui_containers__$TreeViewNode_RemoveNode
});
var haxe_ui_containers__$TreeViewNode_ClearNodes = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.ClearNodes"] = haxe_ui_containers__$TreeViewNode_ClearNodes;
haxe_ui_containers__$TreeViewNode_ClearNodes.__name__ = "haxe.ui.containers._TreeViewNode.ClearNodes";
haxe_ui_containers__$TreeViewNode_ClearNodes.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeViewNode_ClearNodes.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var node = js_Boot.__cast(this._component , haxe_ui_containers_TreeViewNode);
		var nodes = node.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		var _g = 0;
		while(_g < nodes.length) {
			var n = nodes[_g];
			++_g;
			node.removeComponent(n);
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TreeViewNode_ClearNodes
});
var haxe_ui_containers__$TreeViewNode_Expanded = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.Expanded"] = haxe_ui_containers__$TreeViewNode_Expanded;
haxe_ui_containers__$TreeViewNode_Expanded.__name__ = "haxe.ui.containers._TreeViewNode.Expanded";
haxe_ui_containers__$TreeViewNode_Expanded.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TreeViewNode_Expanded.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var childContainer = this._component.findComponent("treenode-child-container",haxe_ui_containers_Box);
		if(childContainer == null) {
			return;
		}
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			childContainer.show();
		} else {
			childContainer.hide();
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder);
		builder.updateIconClass();
	}
	,__class__: haxe_ui_containers__$TreeViewNode_Expanded
});
var haxe_ui_containers__$TreeViewNode_GetNodesInternal = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TreeViewNode.GetNodesInternal"] = haxe_ui_containers__$TreeViewNode_GetNodesInternal;
haxe_ui_containers__$TreeViewNode_GetNodesInternal.__name__ = "haxe.ui.containers._TreeViewNode.GetNodesInternal";
haxe_ui_containers__$TreeViewNode_GetNodesInternal.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TreeViewNode_GetNodesInternal.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var nodes = this._component.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		return haxe_ui_util_Variant.fromArray(nodes);
	}
	,__class__: haxe_ui_containers__$TreeViewNode_GetNodesInternal
});
var haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents = function(node) {
	haxe_ui_events_Events.call(this,node);
	this._node = node;
};
$hxClasses["haxe.ui.containers._TreeViewNode.TreeViewNodeEvents"] = haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents;
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.__name__ = "haxe.ui.containers._TreeViewNode.TreeViewNodeEvents";
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_node: null
	,__class__: haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents
});
var haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder = function(node) {
	this._isExpandable = false;
	this._childContainer = null;
	this._renderer = null;
	this._expandCollapseIcon = null;
	this._nodeContainer = null;
	haxe_ui_core_CompositeBuilder.call(this,node);
	this._node = node;
};
$hxClasses["haxe.ui.containers._TreeViewNode.TreeViewNodeBuilder"] = haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder;
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.__name__ = "haxe.ui.containers._TreeViewNode.TreeViewNodeBuilder";
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_node: null
	,_nodeContainer: null
	,_expandCollapseIcon: null
	,_renderer: null
	,_childContainer: null
	,_isExpandable: null
	,onInitialize: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		this._nodeContainer = new haxe_ui_containers_HBox();
		this._nodeContainer.addClass("treenode-container");
		this._expandCollapseIcon = new haxe_ui_components_Image();
		this._expandCollapseIcon.set_scriptAccess(false);
		this._expandCollapseIcon.addClass("treenode-expand-collapse-icon");
		this._expandCollapseIcon.set_id("treenode-expand-collapse-icon");
		this._expandCollapseIcon.registerEvent("click",$bind(this,this.onExpandCollapseClicked));
		this._nodeContainer.registerEvent("click",$bind(this,this.onContainerClick));
		this._nodeContainer.registerEvent("rightclick",$bind(this,this.onContainerClick));
		this._nodeContainer.registerEvent("doubleclick",$bind(this,this.onContainerDblClick));
		this._nodeContainer.addComponent(this._expandCollapseIcon);
		this._renderer = treeview.get_itemRenderer().cloneComponent();
		this._renderer.itemIndex = this._node.parentComponent.getComponentIndex(this._node);
		this._renderer.set_data(this._node.get_data());
		this._nodeContainer.addComponent(this._renderer);
		if(this._isExpandable == true) {
			this.makeExpandableRendererChanges();
		}
		this._node.addComponentAt(this._nodeContainer,0);
	}
	,onContainerClick: function(event) {
		if(this._expandCollapseIcon.hitTest(event.screenX,event.screenY)) {
			return;
		}
		var interactives = this._node.findComponentsUnderPoint(event.screenX,event.screenY,haxe_ui_core_InteractiveComponent);
		if(interactives.length > 0) {
			return;
		}
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		treeview.set_selectedNode(this._node);
	}
	,onContainerDblClick: function(event) {
		var interactives = this._node.findComponentsUnderPoint(event.screenX,event.screenY,haxe_ui_core_InteractiveComponent);
		if(interactives.length > 0) {
			return;
		}
		this.onExpandCollapseClicked(null);
	}
	,onExpandCollapseClicked: function(event) {
		event.cancel();
		this._node.set_expanded(!this._node.get_expanded());
		this.updateIconClass();
	}
	,updateIconClass: function() {
		if(this._expandCollapseIcon != null) {
			if(this._childContainer != null) {
				if(this._node.get_expanded() == true) {
					this._expandCollapseIcon.swapClass("node-expanded","node-collapsed");
				} else {
					this._expandCollapseIcon.swapClass("node-collapsed","node-expanded");
				}
			}
		}
	}
	,validateComponentData: function() {
		this._renderer.set_data(this._node.get_data());
	}
	,changeToExpandableRenderer: function() {
		if(this._isExpandable == true) {
			return;
		}
		this._isExpandable = true;
		this.makeExpandableRendererChanges();
	}
	,changeToNonExpandableRenderer: function() {
		if(this._isExpandable == false) {
			return;
		}
		this._isExpandable = false;
		this.makeNonExpandableRendererChanges();
	}
	,makeNonExpandableRendererChanges: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		if(this._expandCollapseIcon != null) {
			this._expandCollapseIcon.removeClasses(["node-collapsed","node-expanded"]);
		}
		if(this._renderer != null) {
			var wasSelected = treeview.get_selectedNode() == this._node;
			var data = this._renderer.get_data();
			var newRenderer = treeview.get_itemRenderer().cloneComponent();
			newRenderer.set_data(data);
			this._nodeContainer.removeComponent(this._renderer);
			this._renderer = newRenderer;
			this._nodeContainer.addComponent(newRenderer);
			if(wasSelected == true) {
				treeview.set_selectedNode(this._node);
			}
		}
	}
	,makeExpandableRendererChanges: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		this.updateIconClass();
		if(this._renderer != null) {
			var wasSelected = treeview.get_selectedNode() == this._node;
			var itemIndex = this._renderer.itemIndex;
			var data = this._renderer.get_data();
			var newRenderer = treeview.get_expandableItemRenderer().cloneComponent();
			newRenderer.set_data(data);
			newRenderer.itemIndex = itemIndex;
			this._nodeContainer.removeComponent(this._renderer);
			this._renderer = newRenderer;
			this._nodeContainer.addComponent(newRenderer);
			if(wasSelected == true) {
				treeview.set_selectedNode(this._node);
			}
		}
	}
	,addComponent: function(child) {
		if(child == this._renderer || child == this._childContainer) {
			return null;
		}
		if(((child) instanceof haxe_ui_containers_TreeViewNode)) {
			if(this._childContainer == null) {
				this._childContainer = new haxe_ui_containers_VBox();
				if(this._node.get_expanded() == true) {
					this._childContainer.show();
				} else {
					this._childContainer.hide();
				}
				this._childContainer.addClass("treenode-child-container");
				this._childContainer.set_id("treenode-child-container");
				this._node.addComponent(this._childContainer);
			}
			this.changeToExpandableRenderer();
			return this._childContainer.addComponent(child);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_containers_TreeViewNode)) {
			(js_Boot.__cast(child , haxe_ui_containers_TreeViewNode)).parentNode = null;
			var c = this._childContainer.removeComponent(child,dispose,invalidate);
			if(this._childContainer.get_numComponents() == 0) {
				this.changeToNonExpandableRenderer();
			}
			return c;
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder
});
var haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents = function(splitter) {
	haxe_ui_containers_SplitterEvents.call(this,splitter);
};
$hxClasses["haxe.ui.containers._VerticalSplitter.VerticalSplitterEvents"] = haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.__name__ = "haxe.ui.containers._VerticalSplitter.VerticalSplitterEvents";
haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.__super__ = haxe_ui_containers_SplitterEvents;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.prototype = $extend(haxe_ui_containers_SplitterEvents.prototype,{
	onGripperMouseDown: function(event) {
		haxe_ui_containers_SplitterEvents.prototype.onGripperMouseDown.call(this,event);
	}
	,handleResize: function(prev,next,event) {
		var screenY = this._splitter.get_screenTop();
		var delta = event.screenY - screenY - this._currentOffset.y;
		var ucy = this._splitter.get_layout().get_usableHeight();
		var prevCY = delta;
		var nextCY = ucy - delta;
		var prevMinHeight = 0;
		var nextMinHeight = 0;
		var prevMaxHeight = null;
		var nextMaxHeight = null;
		if(prevCY <= prevMinHeight) {
			prevCY = prevMinHeight;
			nextCY = ucy - prevMinHeight;
		}
		if(nextCY <= nextMinHeight) {
			prevCY = ucy - nextMinHeight;
			nextCY = nextMinHeight;
		}
		if(prevMaxHeight != null && prevCY > prevMaxHeight) {
			prevCY = prevMaxHeight;
			nextCY = ucy - prevMaxHeight;
		}
		if(nextMaxHeight != null && nextCY > nextMaxHeight) {
			prevCY = ucy - nextMaxHeight;
			nextCY = nextMaxHeight;
		}
		if(prevCY <= 0) {
			prev.handleVisibility(false);
		} else {
			prev.handleVisibility(true);
		}
		if(nextCY <= 0) {
			next.handleVisibility(false);
		} else {
			next.handleVisibility(true);
		}
		if(prev.get_percentHeight() != null) {
			prev.set_percentHeight(prevCY / ucy * 100);
		} else {
			prev.set_height(prevCY);
		}
		if(next.get_percentHeight() != null) {
			next.set_percentHeight(nextCY / ucy * 100);
		} else {
			next.set_height(nextCY);
		}
	}
	,__class__: haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents
});
var haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder = function(splitter) {
	haxe_ui_containers_SplitterBuilder.call(this,splitter);
};
$hxClasses["haxe.ui.containers._VerticalSplitter.VerticalSplitterBuilder"] = haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.__name__ = "haxe.ui.containers._VerticalSplitter.VerticalSplitterBuilder";
haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.__super__ = haxe_ui_containers_SplitterBuilder;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.prototype = $extend(haxe_ui_containers_SplitterBuilder.prototype,{
	getSplitterClass: function() {
		return "vertical-splitter-gripper";
	}
	,__class__: haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder
});
var haxe_ui_containers_menus_MenuEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.menuItem = null;
	this.menu = null;
	haxe_ui_events_UIEvent.call(this,type,true,data);
};
$hxClasses["haxe.ui.containers.menus.MenuEvent"] = haxe_ui_containers_menus_MenuEvent;
haxe_ui_containers_menus_MenuEvent.__name__ = "haxe.ui.containers.menus.MenuEvent";
haxe_ui_containers_menus_MenuEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_containers_menus_MenuEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	menu: null
	,menuItem: null
	,clone: function() {
		var c = new haxe_ui_containers_menus_MenuEvent(this.type);
		c.menu = this.menu;
		c.menuItem = this.menuItem;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_containers_menus_MenuEvent
});
var haxe_ui_containers_menus_Menu = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.Menu"] = haxe_ui_containers_menus_Menu;
haxe_ui_containers_menus_Menu.__name__ = "haxe.ui.containers.menus.Menu";
haxe_ui_containers_menus_Menu.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_menus_Menu.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	onThemeChanged: function() {
		haxe_ui_containers_VBox.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_menus__$Menu_Builder);
		builder.onThemeChanged();
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus_MenuEvents;
		this._compositeBuilderClass = haxe_ui_containers_menus__$Menu_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("menuStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_menuStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("menuStyleNames"));
	}
	,set_menuStyleNames: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"menuStyleNames",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("menuStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"menuStyleNames"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_Menu();
	}
	,__class__: haxe_ui_containers_menus_Menu
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_menuStyleNames:"set_menuStyleNames",get_menuStyleNames:"get_menuStyleNames"})
});
var haxe_ui_containers_menus_MenuEvents = function(menu) {
	this.hasScreenMouseDown = false;
	this._over = false;
	this.button = null;
	this.parentMenu = null;
	this.currentSubMenu = null;
	this._currentItem = null;
	haxe_ui_events_Events.call(this,menu);
	this._menu = menu;
};
$hxClasses["haxe.ui.containers.menus.MenuEvents"] = haxe_ui_containers_menus_MenuEvents;
haxe_ui_containers_menus_MenuEvents.__name__ = "haxe.ui.containers.menus.MenuEvents";
haxe_ui_containers_menus_MenuEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus_MenuEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_menu: null
	,_currentItem: null
	,currentSubMenu: null
	,parentMenu: null
	,button: null
	,register: function() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(((child) instanceof haxe_ui_containers_menus_MenuItem)) {
				var item = js_Boot.__cast(child , haxe_ui_containers_menus_MenuItem);
				if(!item.hasEvent("click",$bind(this,this.onItemClick))) {
					item.registerEvent("click",$bind(this,this.onItemClick));
				}
				if(!item.hasEvent("mouseover",$bind(this,this.onItemMouseOver))) {
					item.registerEvent("mouseover",$bind(this,this.onItemMouseOver));
				}
				if(!item.hasEvent("mouseout",$bind(this,this.onItemMouseOut))) {
					item.registerEvent("mouseout",$bind(this,this.onItemMouseOut));
				}
			}
		}
		if(!this.hasEvent("hidden",$bind(this,this.onHidden))) {
			this.registerEvent("hidden",$bind(this,this.onHidden));
		}
		if(!this.hasEvent("shown",$bind(this,this.onShown))) {
			this.registerEvent("shown",$bind(this,this.onShown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onItemClick));
			child.unregisterEvent("mouseover",$bind(this,this.onItemMouseOver));
			child.unregisterEvent("mouseout",$bind(this,this.onItemMouseOut));
		}
		this.unregisterEvent("hidden",$bind(this,this.onHidden));
		this.unregisterEvent("shown",$bind(this,this.onShown));
	}
	,_over: null
	,onMouseOver: function(event) {
		this._over = true;
	}
	,onMouseOut: function(event) {
		this._over = false;
	}
	,onItemClick: function(event) {
		var item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		if(!item.get_expandable()) {
			var event = new haxe_ui_containers_menus_MenuEvent("menuselected");
			event.menu = this._menu;
			event.menuItem = item;
			this.findRootMenu().dispatch(event);
			this.hideMenu();
			this.removeScreenMouseDown();
			this._menu.dispatch(new haxe_ui_events_UIEvent("close"));
		}
	}
	,onItemMouseOver: function(event) {
		var builder = js_Boot.__cast(this._menu._compositeBuilder , haxe_ui_containers_menus__$Menu_Builder);
		var subMenus = builder._subMenus;
		var item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != item) {
				child.removeClass(":hover",true,true);
			}
		}
		if(subMenus.h[item.__id__] != null) {
			this._currentItem = item;
			this.showSubMenu(js_Boot.__cast(subMenus.h[item.__id__] , haxe_ui_containers_menus_Menu),item);
		} else {
			this.hideCurrentSubMenu();
		}
	}
	,onItemMouseOut: function(event) {
		if(this.currentSubMenu != null) {
			this._currentItem.addClass(":hover",true,true);
			return;
		} else {
			this._currentItem = null;
		}
	}
	,showSubMenu: function(subMenu,source) {
		this.hideCurrentSubMenu();
		subMenu.set_menuStyleNames(this._menu.get_menuStyleNames());
		subMenu.addClass(this._menu.get_menuStyleNames());
		var componentOffset = source.getComponentOffset();
		var left = source.get_screenLeft() + source.get_actualComponentWidth() + componentOffset.x;
		var top = source.get_screenTop();
		haxe_ui_core_Screen.get_instance().addComponent(subMenu);
		subMenu.syncComponentValidation();
		if(left + subMenu.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_width()) {
			left = source.get_screenLeft() - subMenu.get_actualComponentWidth();
		}
		subMenu.set_left(left);
		subMenu.set_top(top);
		this.currentSubMenu = subMenu;
	}
	,hideMenu: function() {
		var root = this.findRootMenu();
		if(root == null) {
			return;
		}
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		if(events.button == null) {
			var _g = 0;
			var _g1 = root._children == null ? [] : root._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(":hover",true,true);
			}
			events.hideCurrentSubMenu();
			haxe_ui_core_Screen.get_instance().removeComponent(root,false);
		}
	}
	,hideCurrentSubMenu: function() {
		if(this.currentSubMenu == null) {
			return;
		}
		var _g = 0;
		var _this = this.currentSubMenu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.removeClass(":hover",true,true);
		}
		var subMenuEvents = js_Boot.__cast(this.currentSubMenu._internalEvents , haxe_ui_containers_menus_MenuEvents);
		subMenuEvents.hideCurrentSubMenu();
		haxe_ui_core_Screen.get_instance().removeComponent(this.currentSubMenu,false);
		this.currentSubMenu = null;
	}
	,onHidden: function(event) {
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.removeClass(":hover",true,true);
		}
		this.hideCurrentSubMenu();
	}
	,onShown: function(event) {
		this.addScreenMouseDown();
	}
	,findRootMenu: function() {
		var root = null;
		var ref = this._menu;
		while(ref != null) {
			var events = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			if(events.parentMenu == null) {
				root = events._menu;
				break;
			}
			ref = events.parentMenu;
		}
		return root;
	}
	,hasScreenMouseDown: null
	,addScreenMouseDown: function() {
		var root = this.findRootMenu();
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		if(events.hasScreenMouseDown == false) {
			events.hasScreenMouseDown = true;
			haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
			haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
		}
	}
	,removeScreenMouseDown: function() {
		var root = this.findRootMenu();
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		events.hasScreenMouseDown = false;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	,onScreenMouseDown: function(event) {
		var close = true;
		if(this._menu.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else if(this.button != null && this.button.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else {
			var ref = this._menu;
			var refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			var refSubMenu = refEvents.currentSubMenu;
			while(refSubMenu != null) {
				if(refSubMenu.hitTest(event.screenX,event.screenY)) {
					close = false;
					break;
				}
				ref = refSubMenu;
				refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
				refSubMenu = refEvents.currentSubMenu;
			}
		}
		if(close) {
			this.hideMenu();
			this.removeScreenMouseDown();
			this._menu.dispatch(new haxe_ui_events_UIEvent("close"));
		}
	}
	,__class__: haxe_ui_containers_menus_MenuEvents
});
var haxe_ui_containers_menus__$Menu_Builder = function(menu) {
	this._subMenus = new haxe_ds_ObjectMap();
	haxe_ui_core_CompositeBuilder.call(this,menu);
	this._menu = menu;
};
$hxClasses["haxe.ui.containers.menus._Menu.Builder"] = haxe_ui_containers_menus__$Menu_Builder;
haxe_ui_containers_menus__$Menu_Builder.__name__ = "haxe.ui.containers.menus._Menu.Builder";
haxe_ui_containers_menus__$Menu_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$Menu_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_menu: null
	,_subMenus: null
	,onThemeChanged: function() {
		var menuItem = this._subMenus.keys();
		while(menuItem.hasNext()) {
			var menuItem1 = menuItem.next();
			var menu = this._subMenus.h[menuItem1.__id__];
			haxe_ui_core_Screen.get_instance().invalidateChildren(menu);
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(menu);
		}
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			var menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			var item = new haxe_ui_containers_menus_MenuItem();
			item.set_id(child.get_id() + "Item");
			item.set_text(child.get_text());
			item.set_icon(menu.get_icon());
			item.set_tooltip(child.get_tooltip());
			item.set_expandable(true);
			this._menu.addComponent(item);
			(js_Boot.__cast(menu._internalEvents , haxe_ui_containers_menus_MenuEvents)).parentMenu = this._menu;
			menu.registerEvent("propertychange",$bind(this,this.onMenuPropertyChanged));
			this._subMenus.set(item,menu);
			return child;
		}
		return null;
	}
	,onMenuPropertyChanged: function(event) {
		if(event.data == "text") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var item = this._subMenus.keys();
			while(item.hasNext()) {
				var item1 = item.next();
				var subMenu = this._subMenus.h[item1.__id__];
				if(subMenu == menu) {
					item1.set_text(event.target.get_text());
					break;
				}
			}
		}
	}
	,onComponentAdded: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu) || ((child) instanceof haxe_ui_containers_menus_MenuItem)) {
			this._menu.registerInternalEvents(null,true);
		}
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var menu = this._subMenus.iterator();
			while(menu.hasNext()) {
				var menu1 = menu.next();
				match = menu1.findComponent(criteria,type,recursive,searchType);
				if(menu1.matchesSearch(criteria,type,searchType)) {
					return menu1;
				} else {
					match = menu1.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		var r = [];
		var menu = this._subMenus.iterator();
		while(menu.hasNext()) {
			var menu1 = menu.next();
			var match = true;
			if(styleName != null && menu1.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(menu1,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(menu1);
			} else {
				var childArray = menu1.findComponents(styleName,type,maxDepth);
				var _g = 0;
				while(_g < childArray.length) {
					var c = childArray[_g];
					++_g;
					r.push(c);
				}
			}
		}
		return r;
	}
	,destroy: function() {
		haxe_ui_core_CompositeBuilder.prototype.destroy.call(this);
		if(this._menu != null && this._menu._isDisposed == false) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._menu);
		}
		var subMenu = this._subMenus.iterator();
		while(subMenu.hasNext()) {
			var subMenu1 = subMenu.next();
			haxe_ui_core_Screen.get_instance().removeComponent(subMenu1);
		}
	}
	,hide: function() {
		haxe_ui_core_Screen.get_instance().removeComponent(this._menu,false);
		return true;
	}
	,show: function() {
		haxe_ui_core_Screen.get_instance().addComponent(this._menu);
		return true;
	}
	,__class__: haxe_ui_containers_menus__$Menu_Builder
});
var haxe_ui_containers_menus_MenuBar = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuBar"] = haxe_ui_containers_menus_MenuBar;
haxe_ui_containers_menus_MenuBar.__name__ = "haxe.ui.containers.menus.MenuBar";
haxe_ui_containers_menus_MenuBar.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_menus_MenuBar.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	onThemeChanged: function() {
		haxe_ui_containers_HBox.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		builder.onThemeChanged();
	}
	,registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus__$MenuBar_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuBar_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("menuStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_menuStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("menuStyleNames"));
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuBar();
	}
	,__class__: haxe_ui_containers_menus_MenuBar
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{get_menuStyleNames:"get_menuStyleNames"})
});
var haxe_ui_containers_menus__$MenuBar_Events = function(menubar) {
	haxe_ui_events_Events.call(this,menubar);
	this._menubar = menubar;
};
$hxClasses["haxe.ui.containers.menus._MenuBar.Events"] = haxe_ui_containers_menus__$MenuBar_Events;
haxe_ui_containers_menus__$MenuBar_Events.__name__ = "haxe.ui.containers.menus._MenuBar.Events";
haxe_ui_containers_menus__$MenuBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus__$MenuBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_menubar: null
	,_currentMenu: null
	,_currentButton: null
	,register: function() {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(!button.hasEvent("click",$bind(this,this.onButtonClick))) {
				button.registerEvent("click",$bind(this,this.onButtonClick));
			}
			if(!button.hasEvent("mouseover",$bind(this,this.onButtonOver))) {
				button.registerEvent("mouseover",$bind(this,this.onButtonOver));
			}
		}
	}
	,unregister: function() {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			button.unregisterEvent("click",$bind(this,this.onButtonClick));
			button.unregisterEvent("mouseover",$bind(this,this.onButtonOver));
		}
	}
	,onCompleteButton: function(event) {
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		target.unregisterEvent("mouseout",$bind(this,this.onCompleteButton));
		this.hideCurrentMenu();
	}
	,onButtonClick: function(event) {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = builder._buttons.indexOf(target);
		if(target.get_toggle() == false) {
			var menu = builder._menus[index];
			var newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
			newEvent.menu = menu;
			this._menubar.dispatch(newEvent);
			target.registerEvent("mouseout",$bind(this,this.onCompleteButton));
			menu.dispatch(new haxe_ui_events_MouseEvent("click"));
			return;
		}
		if(target.get_selected() == true) {
			this.showMenu(index);
		} else if(this._currentButton != null) {
			this.hideCurrentMenu();
		}
	}
	,onButtonOver: function(event) {
		if(this._currentMenu == null) {
			return;
		}
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = builder._buttons.indexOf(target);
		var menu = builder._menus[index];
		if(menu != this._currentMenu) {
			this.showMenu(index);
		}
	}
	,showMenu: function(index) {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var menu = builder._menus[index];
		var hasChildren = (menu._children == null ? [] : menu._children).length > 0;
		var target = builder._buttons[index];
		if(this._currentMenu == menu) {
			return;
		}
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(button != target) {
				button.set_selected(false);
			}
		}
		target.set_selected(true);
		this.hideCurrentMenu();
		(js_Boot.__cast(menu._internalEvents , haxe_ui_containers_menus_MenuEvents)).button = target;
		if(menu.hasEvent("close",$bind(this,this.onMenuClose)) == false) {
			menu.registerEvent("close",$bind(this,this.onMenuClose));
		}
		var rtl = false;
		if(hasChildren == true) {
			var componentOffset = target.getComponentOffset();
			var left = target.get_screenLeft() + componentOffset.x;
			var marginTop = 0;
			if(menu.get_style() != null && menu.get_style().marginTop != null) {
				marginTop = menu.get_style().marginTop;
			}
			var top = target.get_screenTop() + (target.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y + marginTop;
			menu.set_menuStyleNames(this._menubar.get_menuStyleNames());
			menu.addClasses([this._menubar.get_menuStyleNames(),"expanded"]);
			if(menu.findComponent("menu-filler",null,false) == null) {
				var filler = new haxe_ui_core_Component();
				filler.set_horizontalAlign("right");
				filler.set_includeInLayout(false);
				filler.addClass("menu-filler");
				filler.set_id("menu-filler");
				menu.addComponent(filler);
			}
			menu.show();
			menu.syncComponentValidation();
			if(left + menu.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_actualWidth()) {
				left = target.get_screenLeft() - menu.get_actualComponentWidth() + target.get_actualComponentWidth();
				rtl = true;
			}
			menu.set_left(left);
			menu.set_top(top - haxe_ui_Toolkit.get_scaleY());
		}
		this._currentButton = target;
		this._currentMenu = menu;
		if(hasChildren == true) {
			var cx = menu.get_width() - this._currentButton.get_width();
			var filler = menu.findComponent("menu-filler",null,false);
			if(cx > 0 && filler != null) {
				++cx;
				filler.set_width(cx);
				if(rtl == false) {
					filler.set_left(menu.get_width() - cx);
				}
			} else if(filler != null) {
				menu.removeComponent(filler);
			}
			if(!this._currentMenu.hasEvent("menuselected",$bind(this,this.onMenuSelected))) {
				this._currentMenu.registerEvent("menuselected",$bind(this,this.onMenuSelected));
			}
		}
		if(hasChildren == true) {
			this._currentMenu.dispatch(new haxe_ui_events_MouseEvent("click"));
			var menuEvent = new haxe_ui_containers_menus_MenuEvent("menuopened");
			menuEvent.menu = this._currentMenu;
			this._currentMenu.dispatch(menuEvent);
			this.dispatch(menuEvent);
		}
	}
	,hideCurrentMenu: function() {
		if(this._currentMenu != null) {
			var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
			var _g = 0;
			var _g1 = builder._buttons;
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				if(button.classes.indexOf("menubar-button-no-children-active") != -1) {
					button.swapClass("menubar-button-no-children","menubar-button-no-children-active");
				}
			}
			var menuEvent = new haxe_ui_containers_menus_MenuEvent("menuclosed");
			menuEvent.menu = this._currentMenu;
			this._currentMenu.dispatch(menuEvent);
			this.dispatch(menuEvent);
			this._currentMenu.unregisterEvent("menuselected",$bind(this,this.onMenuSelected));
			this._currentMenu.hide();
			this._currentButton.set_selected(false);
			this._currentButton = null;
			this._currentMenu = null;
		}
	}
	,onMenuClose: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		if(this._currentMenu == menu) {
			this.hideCurrentMenu();
		}
	}
	,onMenuSelected: function(event) {
		var newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
		newEvent.menu = event.menu;
		newEvent.menuItem = event.menuItem;
		this._menubar.dispatch(newEvent);
		this.hideCurrentMenu();
	}
	,__class__: haxe_ui_containers_menus__$MenuBar_Events
});
var haxe_ui_containers_menus__$MenuBar_Builder = function(menubar) {
	this._menus = [];
	this._buttons = [];
	haxe_ui_core_CompositeBuilder.call(this,menubar);
	this._menubar = menubar;
};
$hxClasses["haxe.ui.containers.menus._MenuBar.Builder"] = haxe_ui_containers_menus__$MenuBar_Builder;
haxe_ui_containers_menus__$MenuBar_Builder.__name__ = "haxe.ui.containers.menus._MenuBar.Builder";
haxe_ui_containers_menus__$MenuBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_menubar: null
	,_buttons: null
	,_menus: null
	,onThemeChanged: function() {
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			haxe_ui_core_Screen.get_instance().invalidateChildren(menu);
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(menu);
		}
	}
	,create: function() {
	}
	,destroy: function() {
		haxe_ui_core_CompositeBuilder.prototype.destroy.call(this);
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			haxe_ui_core_Screen.get_instance().removeComponent(menu);
		}
		this._menus = null;
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			var menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			var button = new haxe_ui_components_Button();
			button.set_text(menu.get_text());
			button.set_icon(menu.get_icon());
			button.set_tooltip(menu.get_tooltip());
			button.set_hidden(child.get_hidden());
			button.set_allowFocus(false);
			haxe_ui_locale_LocaleManager.get_instance().cloneForComponent(child,button);
			this._buttons.push(button);
			this._menubar.addComponent(button);
			this._menubar.registerInternalEvents(null,true);
			this._menus.push(menu);
			this.styleMenuButton(menu,button);
			menu.registerEvent("componentadded",$bind(this,this.onChildAdded));
			menu.registerEvent("componentremoved",$bind(this,this.onChildRemoved));
			menu.registerEvent("propertychange",$bind(this,this.onMenuPropertyChanged));
			return menu;
		}
		return null;
	}
	,onChildAdded: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		var index = this._menus.indexOf(menu);
		var button = this._buttons[index];
		this.styleMenuButton(menu,button);
	}
	,onChildRemoved: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		var index = this._menus.indexOf(menu);
		var button = this._buttons[index];
		this.styleMenuButton(menu,button);
	}
	,onMenuPropertyChanged: function(event) {
		if(event.data == "text") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var index = this._menus.indexOf(menu);
			var button = this._buttons[index];
			button.set_text(event.target.get_text());
		} else if(event.data == "hidden") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var index = this._menus.indexOf(menu);
			var button = this._buttons[index];
			button.set_hidden(event.target.get_hidden());
		} else if(event.data == "icon") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var index = this._menus.indexOf(menu);
			var button = this._buttons[index];
			button.set_icon(menu.get_icon());
		}
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,styleMenuButton: function(menu,button) {
		var hasChildren = (menu._children == null ? [] : menu._children).length > 0;
		if(hasChildren == true) {
			button.swapClass("menubar-button","menubar-button-no-children");
		} else {
			button.swapClass("menubar-button-no-children","menubar-button");
		}
		button.set_toggle(hasChildren);
		this._menubar.registerInternalEvents(null,true);
	}
	,getComponentIndex: function(child) {
		return -1;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var _g = 0;
			var _g1 = this._menus;
			while(_g < _g1.length) {
				var menu = _g1[_g];
				++_g;
				match = menu.findComponent(criteria,type,recursive,searchType);
				if(menu.matchesSearch(criteria,type,searchType)) {
					return menu;
				} else {
					match = menu.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		var r = [];
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && menu.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(menu,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(menu);
			}
			var childArray = menu.findComponents(styleName,type,maxDepth);
			var _g2 = 0;
			while(_g2 < childArray.length) {
				var c = childArray[_g2];
				++_g2;
				r.push(c);
			}
		}
		return r;
	}
	,__class__: haxe_ui_containers_menus__$MenuBar_Builder
});
var haxe_ui_containers_menus_MenuItem = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuItem"] = haxe_ui_containers_menus_MenuItem;
haxe_ui_containers_menus_MenuItem.__name__ = "haxe.ui.containers.menus.MenuItem";
haxe_ui_containers_menus_MenuItem.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_menus_MenuItem.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus__$MenuItem_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuItem_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuItem_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour);
		this.behaviours.register("icon",haxe_ui_containers_menus__$MenuItem_IconBehaviour);
		this.behaviours.register("expandable",haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour);
	}
	,get_shortcutText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("shortcutText"));
	}
	,set_shortcutText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"shortcutText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("shortcutText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"shortcutText"));
		return value;
	}
	,get_expandable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("expandable"));
	}
	,set_expandable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("expandable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertychange",null,"expandable"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_shortcutText() != null) {
			c.set_shortcutText(this.get_shortcutText());
		}
		c.set_expandable(this.get_expandable());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuItem();
	}
	,__class__: haxe_ui_containers_menus_MenuItem
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_expandable:"set_expandable",get_expandable:"get_expandable",set_shortcutText:"set_shortcutText",get_shortcutText:"get_shortcutText"})
});
var haxe_ui_containers_menus__$MenuItem_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.TextBehaviour"] = haxe_ui_containers_menus__$MenuItem_TextBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.TextBehaviour";
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-label",null,true);
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_TextBehaviour
});
var haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-shortcut-label",null,true);
		if(label != null) {
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour
});
var haxe_ui_containers_menus__$MenuItem_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.IconBehaviour"] = haxe_ui_containers_menus__$MenuItem_IconBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.IconBehaviour";
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		var icon = this._component.findComponent("menuitem-icon",null,true);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.set_scriptAccess(false);
			icon.set_id("menuitem-icon");
			icon.addClass("menuitem-icon");
			icon.addClass("icon");
			this._component.addComponentAt(icon,0);
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_IconBehaviour
});
var haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.ExpandableBehaviour"] = haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ExpandableBehaviour";
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var image = this._component.findComponent("menuitem-expandable");
		if(image == null && haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			image = new haxe_ui_components_Image();
			image.set_id("menuitem-expandable");
			image.set_styleNames("menuitem-expandable");
			image.set_scriptAccess(false);
			this._component.addComponent(image);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		} else if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			this._component.removeComponent(image);
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour
});
var haxe_ui_containers_menus__$MenuItem_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.Events"] = haxe_ui_containers_menus__$MenuItem_Events;
haxe_ui_containers_menus__$MenuItem_Events.__name__ = "haxe.ui.containers.menus._MenuItem.Events";
haxe_ui_containers_menus__$MenuItem_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus__$MenuItem_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover",true,true);
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover",true,true);
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_Events
});
var haxe_ui_containers_menus__$MenuItem_Builder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.Builder"] = haxe_ui_containers_menus__$MenuItem_Builder;
haxe_ui_containers_menus__$MenuItem_Builder.__name__ = "haxe.ui.containers.menus._MenuItem.Builder";
haxe_ui_containers_menus__$MenuItem_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuItem_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		haxe_ui_core_CompositeBuilder.prototype.create.call(this);
		var box = new haxe_ui_containers_HBox();
		box.set_percentWidth(100);
		box.set_verticalAlign("center");
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-label");
		label.set_percentWidth(100);
		label.set_styleNames("menuitem-label");
		label.set_scriptAccess(false);
		box.addComponent(label);
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-shortcut-label");
		label.set_styleNames("menuitem-shortcut-label");
		label.set_scriptAccess(false);
		box.addComponent(label);
		this._component.addComponent(box);
	}
	,applyStyle: function(style) {
		var c = this._component.findComponent("menuitem-label",haxe_ui_core_Component);
		if(c != null) {
			var invalidate = false;
			if(style.color != null && c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(style.fontName != null && c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(style.fontSize != null && c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(style.cursor != null && c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(style.textAlign != null && c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_Builder
});
var haxe_ui_containers_menus_MenuSeparator = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuSeparator"] = haxe_ui_containers_menus_MenuSeparator;
haxe_ui_containers_menus_MenuSeparator.__name__ = "haxe.ui.containers.menus.MenuSeparator";
haxe_ui_containers_menus_MenuSeparator.__super__ = haxe_ui_core_Component;
haxe_ui_containers_menus_MenuSeparator.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuSeparator();
	}
	,__class__: haxe_ui_containers_menus_MenuSeparator
});
var haxe_ui_core_ItemRenderer = function() {
	this._fieldList = null;
	this.itemIndex = -1;
	this._allowHover = true;
	this.autoRegisterInteractiveEvents = true;
	haxe_ui_containers_Box.call(this);
	this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
	this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
	this.registerEvent("mousedown",$bind(this,this._onItemMouseDown));
	this.registerEvent("mouseup",$bind(this,this._onItemMouseUp));
};
$hxClasses["haxe.ui.core.ItemRenderer"] = haxe_ui_core_ItemRenderer;
haxe_ui_core_ItemRenderer.__name__ = "haxe.ui.core.ItemRenderer";
haxe_ui_core_ItemRenderer.__super__ = haxe_ui_containers_Box;
haxe_ui_core_ItemRenderer.prototype = $extend(haxe_ui_containers_Box.prototype,{
	autoRegisterInteractiveEvents: null
	,_onItemMouseOver: function(event) {
		this.addClass(":hover");
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_components_Label);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.addClass(":hover");
		}
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_components_Image);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.addClass(":hover");
		}
	}
	,_onItemMouseOut: function(event) {
		this.removeClass(":hover");
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_components_Label);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.removeClass(":hover");
		}
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_components_Image);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.removeClass(":hover");
		}
	}
	,_onItemMouseDown: function(event) {
		this.addClass(":down");
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_components_Label);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.addClass(":down");
		}
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_components_Image);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.addClass(":down");
		}
	}
	,_onItemMouseUp: function(event) {
		this.removeClass(":down");
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_components_Label);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.removeClass(":down");
		}
		var _g = 0;
		var _g1 = this.findComponents(null,haxe_ui_components_Image);
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.removeClass(":down");
		}
	}
	,_allowHover: null
	,get_allowHover: function() {
		return this._allowHover;
	}
	,set_allowHover: function(value) {
		if(this._allowHover == value) {
			return value;
		}
		this._allowHover = value;
		if(this._allowHover == true) {
			this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		} else {
			this.unregisterEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.unregisterEvent("mouseout",$bind(this,this._onItemMouseOut));
		}
		return value;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		this._data = value;
		this.invalidateComponent("data",false);
		return value;
	}
	,itemIndex: null
	,_fieldList: null
	,validateComponentData: function() {
		if(this._data != null && (this._fieldList == null || this._fieldList.length == 0)) {
			var _g = Type.typeof(this._data);
			switch(_g._hx_index) {
			case 4:
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g1 = 0;
						while(_g1 < instanceFields.length) {
							var i = instanceFields[_g1];
							++_g1;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			case 6:
				var _g1 = _g.c;
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g = 0;
						while(_g < instanceFields.length) {
							var i = instanceFields[_g];
							++_g;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			default:
				this._fieldList = ["text"];
			}
		}
		this.updateValues(this._data,this._fieldList);
		if(this.autoRegisterInteractiveEvents) {
			var components = this.findComponents(null,haxe_ui_core_InteractiveComponent);
			var _g = 0;
			while(_g < components.length) {
				var c = components[_g];
				++_g;
				if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
					c.registerEvent("click",$bind(this,this.onItemClick));
				}
				if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
					c.registerEvent("change",$bind(this,this.onItemChange));
				}
			}
		}
		this.onDataChanged(this._data);
	}
	,onDataChanged: function(data) {
		this._data = data;
	}
	,onItemChange: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var v = event.target.get_value();
		if(this._data != null && event.target.get_id() != null) {
			Reflect.setProperty(this._data,event.target.get_id(),v);
		}
		var e = new haxe_ui_events_ItemEvent("itemcomponentevent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
		var e2 = new haxe_ui_events_ItemEvent("itemcomponentchangeevent");
		e2.bubble = true;
		e2.source = event.target;
		e2.sourceEvent = event;
		e2.itemIndex = this.itemIndex;
		e2.data = this._data;
		this.dispatch(e2);
	}
	,onItemClick: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var e = new haxe_ui_events_ItemEvent("itemcomponentevent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
		var e2 = new haxe_ui_events_ItemEvent("itemcomponentclickevent");
		e2.bubble = true;
		e2.source = event.target;
		e2.sourceEvent = event;
		e2.itemIndex = this.itemIndex;
		e2.data = this._data;
		this.dispatch(e2);
	}
	,updateValues: function(value,fieldList) {
		if(fieldList == null) {
			fieldList = Reflect.fields(value);
		}
		var valueObject = null;
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 4:
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		case 6:
			var _g1 = _g.c;
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		default:
			valueObject = { text : value};
		}
		var _g = 0;
		while(_g < fieldList.length) {
			var f = fieldList[_g];
			++_g;
			var v = Reflect.getProperty(valueObject,f);
			var c = this.findComponent(f,null,true);
			if(c != null && v != null) {
				var propValue = haxe_ui_util_TypeConverter.convertTo(v,haxe_ui_core_TypeMap.getTypeInfo(c.get_className(),"value"));
				c.set_value(propValue);
				if(this.autoRegisterInteractiveEvents) {
					if(((c) instanceof haxe_ui_core_InteractiveComponent) || ((c) instanceof haxe_ui_core_ItemRenderer)) {
						if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
							c.registerEvent("change",$bind(this,this.onItemChange));
						}
						if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
							c.registerEvent("click",$bind(this,this.onItemClick));
						}
					}
				}
				c.show();
			} else if(c != null) {
				c.hide();
			} else if(f != "id" && f != "layout") {
				try {
					Reflect.setProperty(this,f,v);
				} catch( _g1 ) {
				}
			} else if(Type.typeof(v) == ValueType.TObject) {
				this.updateValues(v);
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_allowHover(this.get_allowHover());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ItemRenderer();
	}
	,__class__: haxe_ui_core_ItemRenderer
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_allowHover:"set_allowHover",get_allowHover:"get_allowHover"})
});
var haxe_ui_core_BasicItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	var hbox = new haxe_ui_containers_HBox();
	hbox.addClass("basic-renderer-container");
	this._icon = new haxe_ui_components_Image();
	this._icon.set_id("icon");
	this._icon.addClass("basic-renderer-icon");
	this._icon.set_verticalAlign("center");
	this._icon.hide();
	hbox.addComponent(this._icon);
	this._label = new haxe_ui_components_Label();
	this._label.set_id("text");
	this._label.addClass("basic-renderer-label");
	this._label.set_verticalAlign("center");
	this._label.hide();
	hbox.addComponent(this._label);
	this.addComponent(hbox);
};
$hxClasses["haxe.ui.core.BasicItemRenderer"] = haxe_ui_core_BasicItemRenderer;
haxe_ui_core_BasicItemRenderer.__name__ = "haxe.ui.core.BasicItemRenderer";
haxe_ui_core_BasicItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_core_BasicItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	_icon: null
	,_label: null
	,updateValues: function(value,fieldList) {
		haxe_ui_core_ItemRenderer.prototype.updateValues.call(this,value,fieldList);
		if(value != null) {
			if(value.color != null) {
				var tmp = haxe_ui_util_Color.fromString(value.color);
				this._label.get_customStyle().color = haxe_ui_util_Color.toInt(tmp);
			}
			if(value.bold != null) {
				var tmp = Std.string(value.bold);
				this._label.get_customStyle().fontBold = tmp == "true";
			}
			if(value.italic != null) {
				var tmp = Std.string(value.italic);
				this._label.get_customStyle().fontItalic = tmp == "true";
			}
			if(value.underline != null) {
				var tmp = Std.string(value.underline);
				this._label.get_customStyle().fontUnderline = tmp == "true";
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_core_BasicItemRenderer();
	}
	,__class__: haxe_ui_core_BasicItemRenderer
});
var haxe_ui_core_ComponentClassMap = function() {
	this._map = null;
};
$hxClasses["haxe.ui.core.ComponentClassMap"] = haxe_ui_core_ComponentClassMap;
haxe_ui_core_ComponentClassMap.__name__ = "haxe.ui.core.ComponentClassMap";
haxe_ui_core_ComponentClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_ComponentClassMap.get_instance = function() {
	if(haxe_ui_core_ComponentClassMap._instance == null) {
		haxe_ui_core_ComponentClassMap._instance = new haxe_ui_core_ComponentClassMap();
	}
	return haxe_ui_core_ComponentClassMap._instance;
};
haxe_ui_core_ComponentClassMap.register = function(alias,className) {
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName(alias.toLowerCase(),className);
};
haxe_ui_core_ComponentClassMap.prototype = {
	_map: null
	,registerClassName: function(alias,className) {
		this.load();
		alias = alias.toLowerCase();
		if(Object.prototype.hasOwnProperty.call(this._map.h,alias) == false) {
			this._map.h[alias] = className;
		}
		this.save();
	}
	,load: function() {
		if(this._map != null) {
			return;
		}
		var s = haxe_Resource.getString("haxeui_classmap");
		if(s == null) {
			return;
		}
		var unserializer = new haxe_Unserializer(s);
		this._map = unserializer.unserialize();
	}
	,save: function() {
	}
	,__class__: haxe_ui_core_ComponentClassMap
};
var haxe_ui_core_ImageDisplay = function() {
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_ImageDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.ImageDisplay"] = haxe_ui_core_ImageDisplay;
haxe_ui_core_ImageDisplay.__name__ = "haxe.ui.core.ImageDisplay";
haxe_ui_core_ImageDisplay.__super__ = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_core_ImageDisplay.prototype = $extend(haxe_ui_backend_ImageDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_imageWidth: function(value) {
		if(this._imageWidth == value || value <= 0) {
			return value;
		}
		this._imageWidth = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageWidth: function() {
		return this._imageWidth;
	}
	,set_imageHeight: function(value) {
		if(this._imageHeight == value || value <= 0) {
			return value;
		}
		this._imageHeight = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageHeight: function() {
		return this._imageHeight;
	}
	,set_imageInfo: function(value) {
		if(value == this._imageInfo) {
			return value;
		}
		this._imageInfo = value;
		this._imageWidth = this._imageInfo.width;
		this._imageHeight = this._imageInfo.height;
		this.invalidateComponent("data");
		this.invalidateComponent("display");
		return value;
	}
	,get_imageClipRect: function() {
		return this._imageClipRect;
	}
	,set_imageClipRect: function(value) {
		this._imageClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this.parentComponent == null) {
			return;
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		}
	}
	,validateComponent: function() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.handleValidate();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,handleValidate: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		if(dataInvalid) {
			this.validateData();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
	}
	,__class__: haxe_ui_core_ImageDisplay
	,__properties__: $extend(haxe_ui_backend_ImageDisplayImpl.prototype.__properties__,{set_imageClipRect:"set_imageClipRect",get_imageClipRect:"get_imageClipRect",set_imageInfo:"set_imageInfo",set_imageHeight:"set_imageHeight",get_imageHeight:"get_imageHeight",set_imageWidth:"set_imageWidth",get_imageWidth:"get_imageWidth",set_top:"set_top",set_left:"set_left"})
});
var haxe_ui_core_Platform = function() {
	haxe_ui_backend_PlatformImpl.call(this);
};
$hxClasses["haxe.ui.core.Platform"] = haxe_ui_core_Platform;
haxe_ui_core_Platform.__name__ = "haxe.ui.core.Platform";
haxe_ui_core_Platform.__properties__ = {get_instance:"get_instance",get_hscrollHeight:"get_hscrollHeight",get_vscrollWidth:"get_vscrollWidth"};
haxe_ui_core_Platform.get_vscrollWidth = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.vscroll.width");
};
haxe_ui_core_Platform.get_hscrollHeight = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.hscroll.height");
};
haxe_ui_core_Platform.get_instance = function() {
	if(haxe_ui_core_Platform._instance == null) {
		haxe_ui_core_Platform._instance = new haxe_ui_core_Platform();
	}
	return haxe_ui_core_Platform._instance;
};
haxe_ui_core_Platform.__super__ = haxe_ui_backend_PlatformImpl;
haxe_ui_core_Platform.prototype = $extend(haxe_ui_backend_PlatformImpl.prototype,{
	getMetric: function(id) {
		return haxe_ui_backend_PlatformImpl.prototype.getMetric.call(this,id);
	}
	,__class__: haxe_ui_core_Platform
});
var haxe_ui_core_Screen = function() {
	this.currentMouseY = 0;
	this.currentMouseX = 0;
	this._eventMap = new haxe_ui_util_EventMap();
	var _gthis = this;
	haxe_ui_backend_ScreenImpl.call(this);
	this.registerEvent("mousemove",function(e) {
		_gthis.currentMouseX = e.screenX;
		_gthis.currentMouseY = e.screenY;
	});
};
$hxClasses["haxe.ui.core.Screen"] = haxe_ui_core_Screen;
haxe_ui_core_Screen.__name__ = "haxe.ui.core.Screen";
haxe_ui_core_Screen.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_Screen.get_instance = function() {
	if(haxe_ui_core_Screen._instance == null) {
		haxe_ui_core_Screen._instance = new haxe_ui_core_Screen();
	}
	return haxe_ui_core_Screen._instance;
};
haxe_ui_core_Screen.__super__ = haxe_ui_backend_ScreenImpl;
haxe_ui_core_Screen.prototype = $extend(haxe_ui_backend_ScreenImpl.prototype,{
	_eventMap: null
	,currentMouseX: null
	,currentMouseY: null
	,addComponent: function(component) {
		var wasReady = component.get_isReady();
		component._hasScreen = true;
		haxe_ui_backend_ScreenImpl.prototype.addComponent.call(this,component);
		component.ready();
		if(this.rootComponents.indexOf(component) == -1) {
			this.rootComponents.push(component);
		}
		haxe_ui_focus_FocusManager.get_instance().pushView(component);
		if(component.hasEvent("resize",$bind(this,this._onRootComponentResize)) == false) {
			component.registerEvent("resize",$bind(this,this._onRootComponentResize));
		}
		if(wasReady && component.get_hidden() == false) {
			component.dispatch(new haxe_ui_events_UIEvent("shown"));
		}
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this.rootComponents.indexOf(component) == -1) {
			return component;
		}
		component._hasScreen = false;
		haxe_ui_backend_ScreenImpl.prototype.removeComponent.call(this,component,dispose);
		component.set_depth(-1);
		HxOverrides.remove(this.rootComponents,component);
		haxe_ui_focus_FocusManager.get_instance().removeView(component);
		component.unregisterEvent("resize",$bind(this,this._onRootComponentResize));
		if(dispose == true) {
			component.disposeComponent();
		} else {
			component.dispatch(new haxe_ui_events_UIEvent("hidden"));
			component.removeClass(":hover",false,true);
		}
		return component;
	}
	,setComponentIndex: function(child,index) {
		if(index >= 0 && index <= this.rootComponents.length) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this.rootComponents,child);
			this.rootComponents.splice(index,0,child);
		}
		return child;
	}
	,onThemeChanged: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.onThemeChangedChildren(c);
		}
	}
	,onThemeChangedChildren: function(c) {
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.onThemeChangedChildren(child);
		}
		c.onThemeChanged();
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.supportsEvent(type) == true) {
			if(this._eventMap.add(type,listener,priority) == true) {
				this.mapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap.remove(type,listener) == true) {
			this.unmapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,_onMappedEvent: function(event) {
		this._eventMap.invoke(event.type,event);
	}
	,__class__: haxe_ui_core_Screen
});
var haxe_ui_core_TextDisplayData = function() {
	this.wordWrap = false;
	this.multiline = false;
};
$hxClasses["haxe.ui.core.TextDisplayData"] = haxe_ui_core_TextDisplayData;
haxe_ui_core_TextDisplayData.__name__ = "haxe.ui.core.TextDisplayData";
haxe_ui_core_TextDisplayData.prototype = {
	multiline: null
	,wordWrap: null
	,__class__: haxe_ui_core_TextDisplayData
};
var haxe_ui_core_TextDisplay = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.TextDisplay"] = haxe_ui_core_TextDisplay;
haxe_ui_core_TextDisplay.__name__ = "haxe.ui.core.TextDisplay";
haxe_ui_core_TextDisplay.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextDisplay.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_core_TextDisplay.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
				_gthis.parentComponent.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this._htmlText = null;
		this.invalidateComponent("data");
		return value;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this.invalidateComponent("position");
		this._left = value;
		return value;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this.invalidateComponent("position");
		this._top = value;
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._width = value;
		return value;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._height = value;
		return value;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.wordWrap = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textDisplay");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid || styleInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			var oldTextWidth = this.get_textWidth();
			var oldTextHeight = this.get_textHeight();
			this.measureText();
			if(this.get_textWidth() != oldTextWidth || this.get_textHeight() != oldTextHeight) {
				this.parentComponent.invalidateComponent("layout");
			}
		}
	}
	,__class__: haxe_ui_core_TextDisplay
	,__properties__: $extend(haxe_ui_backend_TextDisplayImpl.prototype.__properties__,{get_depth:"get_depth",set_wordWrap:"set_wordWrap",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",set_width:"set_width",set_top:"set_top",set_left:"set_left",set_htmlText:"set_htmlText",set_text:"set_text",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle"})
});
var haxe_ui_core_TextInputData = function() {
	this.onChangedCallback = null;
	this.onScrollCallback = null;
	this.vscrollNativeWheel = false;
	this.vscrollPageStep = null;
	this.vscrollPageSize = 0;
	this.vscrollMax = 0;
	this.vscrollPos = 0;
	this.hscrollPageSize = 0;
	this.hscrollMax = 0;
	this.hscrollPos = 0;
	this.password = false;
};
$hxClasses["haxe.ui.core.TextInputData"] = haxe_ui_core_TextInputData;
haxe_ui_core_TextInputData.__name__ = "haxe.ui.core.TextInputData";
haxe_ui_core_TextInputData.prototype = {
	password: null
	,hscrollPos: null
	,hscrollMax: null
	,hscrollPageSize: null
	,vscrollPos: null
	,vscrollMax: null
	,vscrollPageSize: null
	,vscrollPageStep: null
	,vscrollNativeWheel: null
	,onScrollCallback: null
	,onChangedCallback: null
	,__class__: haxe_ui_core_TextInputData
};
var haxe_ui_core_TextInput = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextInputImpl.call(this);
	this._isAllInvalid = true;
};
$hxClasses["haxe.ui.core.TextInput"] = haxe_ui_core_TextInput;
haxe_ui_core_TextInput.__name__ = "haxe.ui.core.TextInput";
haxe_ui_core_TextInput.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextInput.__super__ = haxe_ui_backend_TextInputImpl;
haxe_ui_core_TextInput.prototype = $extend(haxe_ui_backend_TextInputImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,focus: function() {
		haxe_ui_backend_TextInputImpl.prototype.focus.call(this);
	}
	,blur: function() {
		haxe_ui_backend_TextInputImpl.prototype.blur.call(this);
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,data: null
	,get_data: function() {
		return this._inputData;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,set_password: function(value) {
		if(value == this._inputData.password) {
			return value;
		}
		this._inputData.password = value;
		this.invalidateComponent("style");
		return value;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		var tmp = this._text == null || this._text.length == 0;
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this._displayData.multiline = value;
		this.invalidateComponent("style");
		return value;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this._displayData.wordWrap = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_hscrollPos: function() {
		return this._inputData.hscrollPos;
	}
	,set_hscrollPos: function(value) {
		if(value == this._inputData.hscrollPos) {
			return value;
		}
		this._inputData.hscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,hscrollMax: null
	,get_hscrollMax: function() {
		return this._inputData.hscrollMax;
	}
	,hscrollPageSize: null
	,get_hscrollPageSize: function() {
		return this._inputData.hscrollPageSize;
	}
	,get_vscrollPos: function() {
		return this._inputData.vscrollPos;
	}
	,set_vscrollPos: function(value) {
		if(value == this._inputData.vscrollPos) {
			return value;
		}
		this._inputData.vscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,vscrollMax: null
	,get_vscrollMax: function() {
		return this._inputData.vscrollMax;
	}
	,vscrollPageSize: null
	,get_vscrollPageSize: function() {
		return this._inputData.vscrollPageSize;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textInput");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textInput");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			this.measureText();
		}
		if(dataInvalid) {
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,__class__: haxe_ui_core_TextInput
	,__properties__: $extend(haxe_ui_backend_TextInputImpl.prototype.__properties__,{get_depth:"get_depth",get_vscrollPageSize:"get_vscrollPageSize",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",get_hscrollPageSize:"get_hscrollPageSize",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_wordWrap:"set_wordWrap",set_multiline:"set_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",set_left:"set_left",set_password:"set_password",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",get_data:"get_data",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle"})
});
var haxe_ui_core_TypeMap = function() { };
$hxClasses["haxe.ui.core.TypeMap"] = haxe_ui_core_TypeMap;
haxe_ui_core_TypeMap.__name__ = "haxe.ui.core.TypeMap";
haxe_ui_core_TypeMap.getTypeInfo = function(className,property) {
	var propInfo = haxe_ui_util_RTTI.getClassProperty(className,property);
	if(propInfo == null) {
		return null;
	}
	return propInfo.propertyType;
};
var haxe_ui_data_DataSource = function(transformer) {
	this._filterFn = null;
	this.onChange = null;
	this.onAdd = null;
	this.transformer = transformer;
	this._allowCallbacks = true;
	this._changed = false;
};
$hxClasses["haxe.ui.data.DataSource"] = haxe_ui_data_DataSource;
haxe_ui_data_DataSource.__name__ = "haxe.ui.data.DataSource";
haxe_ui_data_DataSource.prototype = {
	onDataSourceChange: null
	,transformer: null
	,_changed: null
	,onAdd: null
	,onChange: null
	,_allowCallbacks: null
	,size: null
	,get_size: function() {
		return this.handleGetSize();
	}
	,get: function(index) {
		var r = this.handleGetItem(index);
		if(js_Boot.__implements(r,haxe_ui_data_IDataItem)) {
			(js_Boot.__cast(r , haxe_ui_data_IDataItem)).onDataSourceChanged = $bind(this,this.onDataItemChange);
		}
		if(this.transformer != null) {
			r = this.transformer.transformFrom(r);
		}
		return r;
	}
	,indexOf: function(item) {
		if(this.transformer != null) {
			item = this.transformer.transformFrom(item);
		}
		return this.handleIndexOf(item);
	}
	,add: function(item) {
		var index = this.handleAddItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onAdd != null) {
			this.onAdd(item);
		}
		return index;
	}
	,_filterFn: null
	,clearFilter: function() {
		this._filterFn = null;
		this.handleClearFilter();
	}
	,filter: function(fn) {
		this._filterFn = fn;
		this.handleFilter(fn);
	}
	,handleClearFilter: function() {
	}
	,handleFilter: function(fn) {
	}
	,handleChanged: function() {
		this._changed = true;
		if(this._allowCallbacks == true) {
			this._changed = false;
			this.onInternalChange();
		}
	}
	,handleGetSize: function() {
		return 0;
	}
	,handleGetItem: function(index) {
		return null;
	}
	,handleIndexOf: function(item) {
		return 0;
	}
	,handleAddItem: function(item) {
		return -1;
	}
	,onDataItemChange: function() {
		if(this._filterFn != null) {
			this.handleFilter(this._filterFn);
		} else {
			this.onInternalChange();
		}
	}
	,onInternalChange: function() {
		if(this.onDataSourceChange != null) {
			this.onDataSourceChange();
		}
		if(this.onChange != null) {
			this.onChange();
		}
	}
	,__class__: haxe_ui_data_DataSource
	,__properties__: {get_size:"get_size"}
};
var haxe_ui_data_ArrayDataSource = function(transformer) {
	this._filteredArray = null;
	haxe_ui_data_DataSource.call(this,transformer);
	this._array = [];
};
$hxClasses["haxe.ui.data.ArrayDataSource"] = haxe_ui_data_ArrayDataSource;
haxe_ui_data_ArrayDataSource.__name__ = "haxe.ui.data.ArrayDataSource";
haxe_ui_data_ArrayDataSource.__super__ = haxe_ui_data_DataSource;
haxe_ui_data_ArrayDataSource.prototype = $extend(haxe_ui_data_DataSource.prototype,{
	_array: null
	,_filteredArray: null
	,handleClearFilter: function() {
		if(this._filteredArray == null) {
			return;
		}
		this._filteredArray = null;
		this.handleChanged();
	}
	,handleFilter: function(fn) {
		this._filteredArray = [];
		var index = 0;
		var _g = 0;
		var _g1 = this._array;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			if(fn(index,item) == true) {
				this._filteredArray.push(item);
			}
			++index;
		}
		this.handleChanged();
	}
	,handleGetSize: function() {
		if(this._filteredArray != null) {
			return this._filteredArray.length;
		}
		return this._array.length;
	}
	,handleGetItem: function(index) {
		if(this._filteredArray != null) {
			return this._filteredArray[index];
		}
		return this._array[index];
	}
	,handleIndexOf: function(item) {
		if(this._filteredArray != null) {
			return this._filteredArray.indexOf(item);
		}
		return this._array.indexOf(item);
	}
	,handleAddItem: function(item) {
		var index = this._array.push(item) - 1;
		if(this._filteredArray != null && this._filterFn != null) {
			if(this._filterFn(this._array.length - 1,item) == true) {
				this._filteredArray.push(item);
			}
		}
		return index;
	}
	,__class__: haxe_ui_data_ArrayDataSource
});
var haxe_ui_data_IDataItem = function() { };
$hxClasses["haxe.ui.data.IDataItem"] = haxe_ui_data_IDataItem;
haxe_ui_data_IDataItem.__name__ = "haxe.ui.data.IDataItem";
haxe_ui_data_IDataItem.__isInterface__ = true;
haxe_ui_data_IDataItem.prototype = {
	onDataSourceChanged: null
	,__class__: haxe_ui_data_IDataItem
};
var haxe_ui_data_transformation_IItemTransformer = function() { };
$hxClasses["haxe.ui.data.transformation.IItemTransformer"] = haxe_ui_data_transformation_IItemTransformer;
haxe_ui_data_transformation_IItemTransformer.__name__ = "haxe.ui.data.transformation.IItemTransformer";
haxe_ui_data_transformation_IItemTransformer.__isInterface__ = true;
haxe_ui_data_transformation_IItemTransformer.prototype = {
	transformFrom: null
	,__class__: haxe_ui_data_transformation_IItemTransformer
};
var haxe_ui_events_ActionEvent = function(type,action,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.repeater = false;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
	this.action = action;
};
$hxClasses["haxe.ui.events.ActionEvent"] = haxe_ui_events_ActionEvent;
haxe_ui_events_ActionEvent.__name__ = "haxe.ui.events.ActionEvent";
haxe_ui_events_ActionEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ActionEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	action: null
	,repeater: null
	,clone: function() {
		var c = new haxe_ui_events_ActionEvent(this.type,this.action);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		c.action = this.action;
		c.repeater = this.repeater;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(e) {
		var ae = js_Boot.__cast(e , haxe_ui_events_ActionEvent);
		this.action = ae.action;
		this.repeater = ae.repeater;
	}
	,__class__: haxe_ui_events_ActionEvent
});
var haxe_ui_events_AnimationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.AnimationEvent"] = haxe_ui_events_AnimationEvent;
haxe_ui_events_AnimationEvent.__name__ = "haxe.ui.events.AnimationEvent";
haxe_ui_events_AnimationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_AnimationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	currentTime: null
	,delta: null
	,position: null
	,clone: function() {
		var c = new haxe_ui_events_AnimationEvent(this.type);
		c.currentTime = this.currentTime;
		c.delta = this.delta;
		c.position = this.position;
		return c;
	}
	,__class__: haxe_ui_events_AnimationEvent
});
var haxe_ui_events_DragEvent = function(type,bubble,data) {
	this.top = 0;
	this.left = 0;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.DragEvent"] = haxe_ui_events_DragEvent;
haxe_ui_events_DragEvent.__name__ = "haxe.ui.events.DragEvent";
haxe_ui_events_DragEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_DragEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	left: null
	,top: null
	,clone: function() {
		var c = new haxe_ui_events_DragEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.left = this.left;
		c.top = this.top;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
		var d = js_Boot.__cast(c , haxe_ui_events_DragEvent);
		this.left = d.left;
		this.top = d.top;
	}
	,__class__: haxe_ui_events_DragEvent
});
var haxe_ui_events_FocusEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.FocusEvent"] = haxe_ui_events_FocusEvent;
haxe_ui_events_FocusEvent.__name__ = "haxe.ui.events.FocusEvent";
haxe_ui_events_FocusEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_FocusEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_FocusEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_FocusEvent
});
var haxe_ui_events_ItemEvent = function(type,bubble,data) {
	this.itemIndex = -1;
	this.sourceEvent = null;
	this.source = null;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ItemEvent"] = haxe_ui_events_ItemEvent;
haxe_ui_events_ItemEvent.__name__ = "haxe.ui.events.ItemEvent";
haxe_ui_events_ItemEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ItemEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	source: null
	,sourceEvent: null
	,itemIndex: null
	,clone: function() {
		var c = new haxe_ui_events_ItemEvent(this.type);
		c.source = this.source;
		c.sourceEvent = this.sourceEvent;
		c.itemIndex = this.itemIndex;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ItemEvent
});
var haxe_ui_events_KeyboardEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.KeyboardEvent"] = haxe_ui_events_KeyboardEvent;
haxe_ui_events_KeyboardEvent.__name__ = "haxe.ui.events.KeyboardEvent";
haxe_ui_events_KeyboardEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_KeyboardEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	keyCode: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
	,clone: function() {
		var c = new haxe_ui_events_KeyboardEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.keyCode = this.keyCode;
		c.altKey = this.altKey;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		return c;
	}
	,__class__: haxe_ui_events_KeyboardEvent
});
var haxe_ui_events_MouseEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.MouseEvent"] = haxe_ui_events_MouseEvent;
haxe_ui_events_MouseEvent.__name__ = "haxe.ui.events.MouseEvent";
haxe_ui_events_MouseEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_MouseEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	screenX: null
	,screenY: null
	,buttonDown: null
	,delta: null
	,touchEvent: null
	,ctrlKey: null
	,shiftKey: null
	,localX: null
	,get_localX: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenX * haxe_ui_Toolkit.get_scaleX() - this.target.get_screenLeft()) / haxe_ui_Toolkit.get_scaleX();
	}
	,localY: null
	,get_localY: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenY * haxe_ui_Toolkit.get_scaleY() - this.target.get_screenTop()) / haxe_ui_Toolkit.get_scaleY();
	}
	,clone: function() {
		var c = new haxe_ui_events_MouseEvent(this.type);
		c.data = this.data;
		c.type = this.type;
		c.target = this.target;
		c.screenX = this.screenX;
		c.screenY = this.screenY;
		c.buttonDown = this.buttonDown;
		c.delta = this.delta;
		c.touchEvent = this.touchEvent;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_MouseEvent
	,__properties__: {get_localY:"get_localY",get_localX:"get_localX"}
});
var haxe_ui_events_ScrollEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ScrollEvent"] = haxe_ui_events_ScrollEvent;
haxe_ui_events_ScrollEvent.__name__ = "haxe.ui.events.ScrollEvent";
haxe_ui_events_ScrollEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ScrollEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ScrollEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ScrollEvent
});
var haxe_ui_events_ThemeEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ThemeEvent"] = haxe_ui_events_ThemeEvent;
haxe_ui_events_ThemeEvent.__name__ = "haxe.ui.events.ThemeEvent";
haxe_ui_events_ThemeEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ThemeEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	__class__: haxe_ui_events_ThemeEvent
});
var haxe_ui_events_ValidationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ValidationEvent"] = haxe_ui_events_ValidationEvent;
haxe_ui_events_ValidationEvent.__name__ = "haxe.ui.events.ValidationEvent";
haxe_ui_events_ValidationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ValidationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ValidationEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ValidationEvent
});
var haxe_ui_filters_Filter = function() {
};
$hxClasses["haxe.ui.filters.Filter"] = haxe_ui_filters_Filter;
haxe_ui_filters_Filter.__name__ = "haxe.ui.filters.Filter";
haxe_ui_filters_Filter.prototype = {
	__class__: haxe_ui_filters_Filter
};
var haxe_ui_filters_Blur = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Blur"] = haxe_ui_filters_Blur;
haxe_ui_filters_Blur.__name__ = "haxe.ui.filters.Blur";
haxe_ui_filters_Blur.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Blur.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	__class__: haxe_ui_filters_Blur
});
var haxe_ui_filters_BoxShadow = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.BoxShadow"] = haxe_ui_filters_BoxShadow;
haxe_ui_filters_BoxShadow.__name__ = "haxe.ui.filters.BoxShadow";
haxe_ui_filters_BoxShadow.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_BoxShadow.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	__class__: haxe_ui_filters_BoxShadow
});
var haxe_ui_filters_DropShadow = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.DropShadow"] = haxe_ui_filters_DropShadow;
haxe_ui_filters_DropShadow.__name__ = "haxe.ui.filters.DropShadow";
haxe_ui_filters_DropShadow.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_DropShadow.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	distance: null
	,color: null
	,alpha: null
	,__class__: haxe_ui_filters_DropShadow
});
var haxe_ui_filters_Grayscale = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Grayscale"] = haxe_ui_filters_Grayscale;
haxe_ui_filters_Grayscale.__name__ = "haxe.ui.filters.Grayscale";
haxe_ui_filters_Grayscale.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Grayscale.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	__class__: haxe_ui_filters_Grayscale
});
var haxe_ui_filters_Outline = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Outline"] = haxe_ui_filters_Outline;
haxe_ui_filters_Outline.__name__ = "haxe.ui.filters.Outline";
haxe_ui_filters_Outline.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Outline.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	__class__: haxe_ui_filters_Outline
});
var haxe_ui_focus_IFocusApplicator = function() { };
$hxClasses["haxe.ui.focus.IFocusApplicator"] = haxe_ui_focus_IFocusApplicator;
haxe_ui_focus_IFocusApplicator.__name__ = "haxe.ui.focus.IFocusApplicator";
haxe_ui_focus_IFocusApplicator.__isInterface__ = true;
haxe_ui_focus_IFocusApplicator.prototype = {
	get_enabled: null
	,apply: null
	,unapply: null
	,__class__: haxe_ui_focus_IFocusApplicator
	,__properties__: {get_enabled:"get_enabled"}
};
var haxe_ui_focus_FocusApplicator = function() {
	this._enabled = true;
};
$hxClasses["haxe.ui.focus.FocusApplicator"] = haxe_ui_focus_FocusApplicator;
haxe_ui_focus_FocusApplicator.__name__ = "haxe.ui.focus.FocusApplicator";
haxe_ui_focus_FocusApplicator.__interfaces__ = [haxe_ui_focus_IFocusApplicator];
haxe_ui_focus_FocusApplicator.prototype = {
	apply: function(target) {
	}
	,unapply: function(target) {
	}
	,_enabled: null
	,get_enabled: function() {
		return this._enabled;
	}
	,__class__: haxe_ui_focus_FocusApplicator
	,__properties__: {get_enabled:"get_enabled"}
};
var haxe_ui_focus_FocusManager = function() {
	this._lastFocuses = new haxe_ds_ObjectMap();
	this._applicators = [];
	this.enabled = true;
	this.autoFocus = true;
	haxe_ui_backend_FocusManagerImpl.call(this);
	this._applicators.push(new haxe_ui_focus_StyleFocusApplicator());
};
$hxClasses["haxe.ui.focus.FocusManager"] = haxe_ui_focus_FocusManager;
haxe_ui_focus_FocusManager.__name__ = "haxe.ui.focus.FocusManager";
haxe_ui_focus_FocusManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_focus_FocusManager.get_instance = function() {
	if(haxe_ui_focus_FocusManager._instance == null) {
		haxe_ui_focus_FocusManager._instance = new haxe_ui_focus_FocusManager();
	}
	return haxe_ui_focus_FocusManager._instance;
};
haxe_ui_focus_FocusManager.__super__ = haxe_ui_backend_FocusManagerImpl;
haxe_ui_focus_FocusManager.prototype = $extend(haxe_ui_backend_FocusManagerImpl.prototype,{
	autoFocus: null
	,enabled: null
	,_applicators: null
	,pushView: function(view) {
		if(this.hasFocusableItem(view)) {
			var k = this._lastFocuses.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				this._lastFocuses.h[k1.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[k1.__id__]);
			}
		}
		if(this.autoFocus == true) {
			this.focusOnFirstInteractive(view);
			view.registerEvent("ready",$bind(this,this.onViewReady));
		}
	}
	,onViewReady: function(e) {
		e.target.unregisterEvent("ready",$bind(this,this.onViewReady));
		if(this.hasFocusableItem(e.target)) {
			var k = this._lastFocuses.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				this._lastFocuses.h[k1.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[k1.__id__]);
			}
			this.focusOnFirstInteractive(e.target);
		}
	}
	,hasFocusableItem: function(view) {
		var list = [];
		this.buildFocusableList(view,list);
		return list.length != 0;
	}
	,focusOnFirstInteractive: function(view) {
		var list = [];
		this.buildFocusableList(view,list,true);
		if(list.length > 0) {
			list[0].set_focus(true);
			return list[0];
		}
		return null;
	}
	,removeView: function(view) {
		this._lastFocuses.remove(view);
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		if(top == null) {
			return;
		}
		if(this._lastFocuses.h.__keys__[top.__id__] != null) {
			this.set_focus(this._lastFocuses.h[top.__id__]);
		}
	}
	,get_focus: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		if(top == null) {
			return null;
		}
		return this.buildFocusableList(top,null);
	}
	,_lastFocuses: null
	,set_focus: function(value) {
		if(value != null) {
			var c = js_Boot.__cast(value , haxe_ui_core_Component);
			var root = c.get_rootComponent();
			var currentFocus = this.buildFocusableList(root,null);
			if(currentFocus != null && currentFocus != value) {
				this.unapplyFocus(currentFocus);
				currentFocus.set_focus(false);
			}
			if(this._lastFocuses.h.__keys__[root.__id__] != null && this._lastFocuses.h[root.__id__] != value) {
				this._lastFocuses.h[root.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[root.__id__]);
			}
			this._lastFocuses.set(root,value);
			this.applyFocus(value);
		} else {
			var top = haxe_ui_core_Screen.get_instance().get_topComponent();
			if(this._lastFocuses.h.__keys__[top.__id__] != null) {
				this._lastFocuses.h[top.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[top.__id__]);
			}
		}
		return value;
	}
	,focusNext: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		var list = [];
		var currentFocus = this.buildFocusableList(top,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var nextIndex = index + 1;
		if(nextIndex > list.length - 1) {
			nextIndex = 0;
		}
		var nextFocus = list[nextIndex];
		this.set_focus(nextFocus);
		return nextFocus;
	}
	,focusPrev: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		var list = [];
		var currentFocus = this.buildFocusableList(top,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var prevIndex = index - 1;
		if(prevIndex < 0) {
			prevIndex = list.length - 1;
		}
		var prevFocus = list[prevIndex];
		this.set_focus(prevFocus);
		return prevFocus;
	}
	,buildFocusableList: function(c,list,considerAutoFocus) {
		if(considerAutoFocus == null) {
			considerAutoFocus = false;
		}
		if(!this.enabled) {
			return null;
		}
		var currentFocus = null;
		if(c == null || c._isDisposed == true) {
			return null;
		}
		if(c.get_hidden() == true) {
			return null;
		}
		if(js_Boot.__implements(c,haxe_ui_focus_IFocusable)) {
			var f = c;
			if(considerAutoFocus == true && f.get_autoFocus() == false) {
				return null;
			}
			if(f.get_allowFocus() == true && f.get_disabled() == false) {
				if(f.get_focus() == true) {
					currentFocus = f;
				}
				if(list != null) {
					list.push(f);
				}
			}
		}
		var childList = (c._children == null ? [] : c._children).slice();
		childList.sort(function(c1,c2) {
			return c1.componentTabIndex - c2.componentTabIndex;
		});
		var _g = 0;
		while(_g < childList.length) {
			var child = childList[_g];
			++_g;
			var f = this.buildFocusableList(child,list,considerAutoFocus);
			if(f != null) {
				currentFocus = f;
			}
		}
		return currentFocus;
	}
	,applyFocus: function(c) {
		haxe_ui_backend_FocusManagerImpl.prototype.applyFocus.call(this,c);
		(js_Boot.__cast(c , haxe_ui_focus_IFocusable)).set_focus(true);
		var _g = 0;
		var _g1 = this._applicators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.get_enabled() == true) {
				a.apply(c);
			}
		}
	}
	,unapplyFocus: function(c) {
		haxe_ui_backend_FocusManagerImpl.prototype.unapplyFocus.call(this,c);
		(js_Boot.__cast(c , haxe_ui_focus_IFocusable)).set_focus(false);
		var _g = 0;
		var _g1 = this._applicators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.get_enabled() == true) {
				a.unapply(c);
			}
		}
	}
	,__class__: haxe_ui_focus_FocusManager
	,__properties__: {set_focus:"set_focus",get_focus:"get_focus"}
});
var haxe_ui_focus_StyleFocusApplicator = function() {
	haxe_ui_focus_FocusApplicator.call(this);
};
$hxClasses["haxe.ui.focus.StyleFocusApplicator"] = haxe_ui_focus_StyleFocusApplicator;
haxe_ui_focus_StyleFocusApplicator.__name__ = "haxe.ui.focus.StyleFocusApplicator";
haxe_ui_focus_StyleFocusApplicator.__super__ = haxe_ui_focus_FocusApplicator;
haxe_ui_focus_StyleFocusApplicator.prototype = $extend(haxe_ui_focus_FocusApplicator.prototype,{
	apply: function(target) {
		target.addClass(":active");
	}
	,unapply: function(target) {
		target.removeClass(":active");
	}
	,__class__: haxe_ui_focus_StyleFocusApplicator
});
var haxe_ui_geom_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["haxe.ui.geom.Point"] = haxe_ui_geom_Point;
haxe_ui_geom_Point.__name__ = "haxe.ui.geom.Point";
haxe_ui_geom_Point.prototype = {
	x: null
	,y: null
	,__class__: haxe_ui_geom_Point
};
var haxe_ui_geom_Rectangle = function(left,top,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(top == null) {
		top = 0;
	}
	if(left == null) {
		left = 0;
	}
	this.left = left;
	this.top = top;
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Rectangle"] = haxe_ui_geom_Rectangle;
haxe_ui_geom_Rectangle.__name__ = "haxe.ui.geom.Rectangle";
haxe_ui_geom_Rectangle.prototype = {
	left: null
	,top: null
	,width: null
	,height: null
	,get_right: function() {
		return this.left + this.width;
	}
	,set_right: function(value) {
		this.width = value - this.left;
		return value;
	}
	,get_bottom: function() {
		return this.top + this.height;
	}
	,set_bottom: function(value) {
		this.height = value - this.top;
		return value;
	}
	,containsPoint: function(x,y) {
		if(x >= this.left && x < this.left + this.width && y >= this.top && y < this.top + this.height) {
			return true;
		}
		return false;
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) {
			if(rect.left > this.left && rect.top > this.top && rect.get_right() < this.get_right()) {
				return rect.get_bottom() < this.get_bottom();
			} else {
				return false;
			}
		} else if(rect.left >= this.left && rect.top >= this.top && rect.get_right() <= this.get_right()) {
			return rect.get_bottom() <= this.get_bottom();
		} else {
			return false;
		}
	}
	,toInts: function() {
		this.left = this.left | 0;
		this.top = this.top | 0;
		this.width = this.width | 0;
		this.height = this.height | 0;
	}
	,copy: function() {
		return new haxe_ui_geom_Rectangle(this.left,this.top,this.width,this.height);
	}
	,__class__: haxe_ui_geom_Rectangle
	,__properties__: {set_bottom:"set_bottom",get_bottom:"get_bottom",set_right:"set_right",get_right:"get_right"}
};
var haxe_ui_geom_Size = function(width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Size"] = haxe_ui_geom_Size;
haxe_ui_geom_Size.__name__ = "haxe.ui.geom.Size";
haxe_ui_geom_Size.prototype = {
	width: null
	,height: null
	,__class__: haxe_ui_geom_Size
};
var haxe_ui_geom_Slice9 = function() { };
$hxClasses["haxe.ui.geom.Slice9"] = haxe_ui_geom_Slice9;
haxe_ui_geom_Slice9.__name__ = "haxe.ui.geom.Slice9";
haxe_ui_geom_Slice9.buildRects = function(w,h,bitmapWidth,bitmapHeight,slice) {
	var srcRects = haxe_ui_geom_Slice9.buildSrcRects(bitmapWidth,bitmapHeight,slice);
	var dstRects = haxe_ui_geom_Slice9.buildDstRects(w,h,srcRects);
	return { src : srcRects, dst : dstRects};
};
haxe_ui_geom_Slice9.buildSrcRects = function(bitmapWidth,bitmapHeight,slice) {
	var x1 = slice.left;
	var y1 = slice.top;
	var x2 = slice.get_right();
	var y2 = slice.get_bottom();
	var srcRects = [];
	srcRects.push(new haxe_ui_geom_Rectangle(0,0,x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,0,x2 - x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,0,bitmapWidth - x2,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y1,x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y1,x2 - x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y1,bitmapWidth - x2,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y2,x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y2,x2 - x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y2,bitmapWidth - x2,bitmapHeight - y2));
	return srcRects;
};
haxe_ui_geom_Slice9.buildDstRects = function(w,h,srcRects) {
	var dstRects = [];
	dstRects.push(new haxe_ui_geom_Rectangle(0,0,srcRects[0].width,srcRects[0].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[0].width,0,w - srcRects[0].width - srcRects[2].width,srcRects[1].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[2].width,0,srcRects[2].width,srcRects[2].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,srcRects[0].height,srcRects[3].width,h - srcRects[0].height - srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[3].width,srcRects[0].height,w - srcRects[3].width - srcRects[5].width,h - srcRects[1].height - srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[5].width,srcRects[2].height,srcRects[5].width,h - srcRects[2].height - srcRects[8].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,h - srcRects[6].height,srcRects[6].width,srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[6].width,h - srcRects[7].height,w - srcRects[6].width - srcRects[8].width,srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[8].width,h - srcRects[8].height,srcRects[8].width,srcRects[8].height));
	return dstRects;
};
var haxe_ui_graphics_ComponentGraphics = function(component) {
	haxe_ui_backend_ComponentGraphicsImpl.call(this,component);
};
$hxClasses["haxe.ui.graphics.ComponentGraphics"] = haxe_ui_graphics_ComponentGraphics;
haxe_ui_graphics_ComponentGraphics.__name__ = "haxe.ui.graphics.ComponentGraphics";
haxe_ui_graphics_ComponentGraphics.__super__ = haxe_ui_backend_ComponentGraphicsImpl;
haxe_ui_graphics_ComponentGraphics.prototype = $extend(haxe_ui_backend_ComponentGraphicsImpl.prototype,{
	__class__: haxe_ui_graphics_ComponentGraphics
});
var haxe_ui_graphics_DrawCommand = $hxEnums["haxe.ui.graphics.DrawCommand"] = { __ename__:"haxe.ui.graphics.DrawCommand",__constructs__:null
	,Clear: {_hx_name:"Clear",_hx_index:0,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}
	,SetPixel: ($_=function(x,y,color) { return {_hx_index:1,x:x,y:y,color:color,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="SetPixel",$_.__params__ = ["x","y","color"],$_)
	,SetPixels: ($_=function(pixels) { return {_hx_index:2,pixels:pixels,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="SetPixels",$_.__params__ = ["pixels"],$_)
	,MoveTo: ($_=function(x,y) { return {_hx_index:3,x:x,y:y,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="MoveTo",$_.__params__ = ["x","y"],$_)
	,LineTo: ($_=function(x,y) { return {_hx_index:4,x:x,y:y,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="LineTo",$_.__params__ = ["x","y"],$_)
	,StrokeStyle: ($_=function(color,thickness,alpha) { return {_hx_index:5,color:color,thickness:thickness,alpha:alpha,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="StrokeStyle",$_.__params__ = ["color","thickness","alpha"],$_)
	,Circle: ($_=function(x,y,radius) { return {_hx_index:6,x:x,y:y,radius:radius,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Circle",$_.__params__ = ["x","y","radius"],$_)
	,FillStyle: ($_=function(color,alpha) { return {_hx_index:7,color:color,alpha:alpha,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="FillStyle",$_.__params__ = ["color","alpha"],$_)
	,CurveTo: ($_=function(controlX,controlY,anchorX,anchorY) { return {_hx_index:8,controlX:controlX,controlY:controlY,anchorX:anchorX,anchorY:anchorY,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="CurveTo",$_.__params__ = ["controlX","controlY","anchorX","anchorY"],$_)
	,CubicCurveTo: ($_=function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY) { return {_hx_index:9,controlX1:controlX1,controlY1:controlY1,controlX2:controlX2,controlY2:controlY2,anchorX:anchorX,anchorY:anchorY,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="CubicCurveTo",$_.__params__ = ["controlX1","controlY1","controlX2","controlY2","anchorX","anchorY"],$_)
	,Rectangle: ($_=function(x,y,width,height) { return {_hx_index:10,x:x,y:y,width:width,height:height,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Rectangle",$_.__params__ = ["x","y","width","height"],$_)
	,Image: ($_=function(resource,x,y,width,height) { return {_hx_index:11,resource:resource,x:x,y:y,width:width,height:height,__enum__:"haxe.ui.graphics.DrawCommand",toString:$estr}; },$_._hx_name="Image",$_.__params__ = ["resource","x","y","width","height"],$_)
};
haxe_ui_graphics_DrawCommand.__constructs__ = [haxe_ui_graphics_DrawCommand.Clear,haxe_ui_graphics_DrawCommand.SetPixel,haxe_ui_graphics_DrawCommand.SetPixels,haxe_ui_graphics_DrawCommand.MoveTo,haxe_ui_graphics_DrawCommand.LineTo,haxe_ui_graphics_DrawCommand.StrokeStyle,haxe_ui_graphics_DrawCommand.Circle,haxe_ui_graphics_DrawCommand.FillStyle,haxe_ui_graphics_DrawCommand.CurveTo,haxe_ui_graphics_DrawCommand.CubicCurveTo,haxe_ui_graphics_DrawCommand.Rectangle,haxe_ui_graphics_DrawCommand.Image];
haxe_ui_graphics_DrawCommand.__empty_constructs__ = [haxe_ui_graphics_DrawCommand.Clear];
var haxe_ui_layouts_AbsoluteLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.AbsoluteLayout"] = haxe_ui_layouts_AbsoluteLayout;
haxe_ui_layouts_AbsoluteLayout.__name__ = "haxe.ui.layouts.AbsoluteLayout";
haxe_ui_layouts_AbsoluteLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_AbsoluteLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_AbsoluteLayout();
	}
	,__class__: haxe_ui_layouts_AbsoluteLayout
});
var haxe_ui_layouts_DelegateLayout = function(size) {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._size = size;
};
$hxClasses["haxe.ui.layouts.DelegateLayout"] = haxe_ui_layouts_DelegateLayout;
haxe_ui_layouts_DelegateLayout.__name__ = "haxe.ui.layouts.DelegateLayout";
haxe_ui_layouts_DelegateLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DelegateLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	_size: null
	,calcAutoSize: function(exclusions) {
		this._size.component = this.get_component();
		var cx = this._size.get_width();
		var cy = this._size.get_height();
		if(this._size.getBool("includePadding",false) == true) {
			cx += this.get_paddingLeft() + this.get_paddingRight();
			cy += this.get_paddingTop() + this.get_paddingBottom();
		}
		var size = new haxe_ui_geom_Size(cx,cy);
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		this._size.component = this.get_component();
		size.width -= this._size.get_usableWidthModifier();
		size.height -= this._size.get_usableHeightModifier();
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		if(this._size != null) {
			c._size = this._size;
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_DelegateLayout();
	}
	,__class__: haxe_ui_layouts_DelegateLayout
});
var haxe_ui_layouts_DelegateLayoutSize = function() {
};
$hxClasses["haxe.ui.layouts.DelegateLayoutSize"] = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_layouts_DelegateLayoutSize.__name__ = "haxe.ui.layouts.DelegateLayoutSize";
haxe_ui_layouts_DelegateLayoutSize.prototype = {
	component: null
	,config: null
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,usableWidthModifier: null
	,get_usableWidthModifier: function() {
		return 0;
	}
	,usableHeightModifier: null
	,get_usableHeightModifier: function() {
		return 0;
	}
	,getString: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return v == "true";
	}
	,__class__: haxe_ui_layouts_DelegateLayoutSize
	,__properties__: {get_usableHeightModifier:"get_usableHeightModifier",get_usableWidthModifier:"get_usableWidthModifier",get_height:"get_height",get_width:"get_width"}
};
var haxe_ui_layouts_HorizontalContinuousLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalContinuousLayout"] = haxe_ui_layouts_HorizontalContinuousLayout;
haxe_ui_layouts_HorizontalContinuousLayout.__name__ = "haxe.ui.layouts.HorizontalContinuousLayout";
haxe_ui_layouts_HorizontalContinuousLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalContinuousLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
	}
	,repositionChildren: function() {
		if(this.get_component().get_autoWidth() == true) {
			haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
			return;
		}
		var ucx = this.get_usableWidth();
		if(ucx <= 0) {
			return;
		}
		var ucx = this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
		var ucy = this.get_component().get_componentHeight() - (this.get_paddingTop() + this.get_paddingBottom());
		var dimensions = [];
		var heights = [];
		var horizontalSpacing = this.get_horizontalSpacing();
		var row = 0;
		var usedCX = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var rowCY = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var rc = new haxe_ui_layouts_ComponentRectangle(child.get_left(),child.get_top(),child.get_componentWidth(),child.get_componentHeight());
			if(child.get_percentWidth() != null) {
				rc.width = ucx * child.get_percentWidth() / 100;
			} else {
				usedCX += horizontalSpacing;
			}
			if(child.get_percentHeight() != null) {
				rc.height = ucy * child.get_percentHeight() / 100;
			}
			rc.component = child;
			usedCX += rc.width;
			if(usedCX - horizontalSpacing > ucx) {
				heights.push(rowCY);
				ypos += rowCY + this.get_verticalSpacing();
				xpos = this.get_paddingLeft();
				usedCX = rc.width + horizontalSpacing;
				rowCY = 0;
				++row;
			}
			if(dimensions.length <= row) {
				dimensions.push([]);
			}
			if(dimensions[row] == null) {
				ypos -= this.get_verticalSpacing();
				--row;
				dimensions[row].pop();
			}
			rc.left = xpos;
			rc.top = ypos;
			dimensions[row].push(rc);
			xpos += rc.width;
			if(rc.height > rowCY) {
				rowCY = rc.height;
			}
		}
		if(rowCY > 0) {
			heights.push(rowCY);
		}
		var additionalSpacing = [];
		var varyingWidths = null;
		var evenlySpace = false;
		if(this.get_component().get_style() != null && (this.get_component().get_style().justifyContent == "space-evenly" || this.get_component().get_style().justifyContent == "space-around" || this.get_component().get_style().justifyContent == "space-between")) {
			evenlySpace = true;
		}
		if(evenlySpace) {
			var x = 0;
			var lastWidth = null;
			var _g = 0;
			while(_g < dimensions.length) {
				var r = dimensions[_g];
				++_g;
				var isLastRow = x == dimensions.length - 1;
				var total = 0;
				var _g1 = 0;
				while(_g1 < r.length) {
					var c = r[_g1];
					++_g1;
					total += c.width;
					if(lastWidth == null) {
						lastWidth = c.width;
						varyingWidths = false;
					} else if(lastWidth != c.width) {
						varyingWidths = true;
					}
				}
				total += horizontalSpacing * (r.length - 1);
				if(isLastRow) {
					if(ucx - total <= total) {
						additionalSpacing.push((ucx - total) / (r.length - 1));
					} else if(additionalSpacing[x - 1] != null) {
						additionalSpacing.push(additionalSpacing[x - 1]);
					}
				} else {
					additionalSpacing.push((ucx - total) / (r.length - 1));
				}
				++x;
			}
			if(x <= 1) {
				if(varyingWidths == false) {
					var max = Math.floor((ucx + horizontalSpacing) / (lastWidth + horizontalSpacing));
					var total = max * lastWidth + horizontalSpacing * (max - 1);
					additionalSpacing = [(ucx - total) / (max - 1)];
				} else {
					additionalSpacing = [];
				}
			}
		}
		var x = 0;
		var _g = 0;
		while(_g < dimensions.length) {
			var r = dimensions[_g];
			++_g;
			var height = heights[x];
			var rowSpacing = horizontalSpacing;
			if(varyingWidths) {
				if(additionalSpacing[x] != null) {
					rowSpacing += additionalSpacing[x];
				}
			} else if(additionalSpacing[0] != null) {
				rowSpacing += additionalSpacing[0];
			}
			var spaceX = (r.length - 1) / r.length * rowSpacing;
			var n = 0;
			var _g1 = 0;
			while(_g1 < r.length) {
				var c = r[_g1];
				++_g1;
				switch(this.verticalAlign(c.component)) {
				case "bottom":
					c.top += height - c.height;
					break;
				case "center":
					c.top += height / 2 - c.height / 2;
					break;
				default:
				}
				if(c.component.get_percentWidth() != null) {
					c.left += n * (rowSpacing - spaceX);
					c.width -= spaceX;
				} else {
					c.left += n * rowSpacing;
				}
				c.apply();
				++n;
			}
			++x;
		}
	}
	,get_usableSize: function() {
		if(this.get_component().get_autoWidth() == true) {
			return haxe_ui_layouts_HorizontalLayout.prototype.get_usableSize.call(this);
		}
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_HorizontalLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_HorizontalContinuousLayout();
	}
	,__class__: haxe_ui_layouts_HorizontalContinuousLayout
});
var haxe_ui_layouts_ComponentRectangle = function(left,top,width,height) {
	haxe_ui_geom_Rectangle.call(this,left,top,width,height);
};
$hxClasses["haxe.ui.layouts.ComponentRectangle"] = haxe_ui_layouts_ComponentRectangle;
haxe_ui_layouts_ComponentRectangle.__name__ = "haxe.ui.layouts.ComponentRectangle";
haxe_ui_layouts_ComponentRectangle.__super__ = haxe_ui_geom_Rectangle;
haxe_ui_layouts_ComponentRectangle.prototype = $extend(haxe_ui_geom_Rectangle.prototype,{
	component: null
	,apply: function() {
		this.component.moveComponent(this.left,this.top);
		this.component.resizeComponent(this.width,this.height);
	}
	,__class__: haxe_ui_layouts_ComponentRectangle
});
var haxe_ui_layouts_LayoutFactory = function() { };
$hxClasses["haxe.ui.layouts.LayoutFactory"] = haxe_ui_layouts_LayoutFactory;
haxe_ui_layouts_LayoutFactory.__name__ = "haxe.ui.layouts.LayoutFactory";
haxe_ui_layouts_LayoutFactory.createFromName = function(name) {
	var className = haxe_ui_layouts_LayoutFactory._map.h[name.toLowerCase()];
	if(className == null) {
		haxe_Log.trace("WARNING: layout '" + name + "' not found",{ fileName : "haxe/ui/layouts/LayoutFactory.hx", lineNumber : 10, className : "haxe.ui.layouts.LayoutFactory", methodName : "createFromName"});
		return new haxe_ui_layouts_DefaultLayout();
	}
	var cls = $hxClasses[className];
	if(cls == null) {
		haxe_Log.trace("WARNING: layout '" + name + "' not found",{ fileName : "haxe/ui/layouts/LayoutFactory.hx", lineNumber : 16, className : "haxe.ui.layouts.LayoutFactory", methodName : "createFromName"});
		return new haxe_ui_layouts_DefaultLayout();
	}
	var instance = Type.createInstance(cls,[]);
	return instance;
};
haxe_ui_layouts_LayoutFactory.register = function(name,className) {
	haxe_ui_layouts_LayoutFactory._map.h[name.toLowerCase()] = className;
};
var haxe_ui_layouts_ScrollViewLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.ScrollViewLayout"] = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_ScrollViewLayout.__name__ = "haxe.ui.layouts.ScrollViewLayout";
haxe_ui_layouts_ScrollViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_ScrollViewLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return;
		}
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var borderSize = this.get_borderSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.moveComponent(this.get_paddingLeft() + borderSize,Math.round(this.get_component().get_componentHeight() - hscroll.get_componentHeight() - this.get_paddingBottom() + this.marginTop(hscroll) - borderSize));
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.moveComponent(Math.round(this.get_component().get_componentWidth() - vscroll.get_componentWidth() - this.get_paddingRight() + this.marginLeft(vscroll)) - borderSize,this.get_paddingTop() + borderSize);
		}
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.moveComponent(this.get_paddingLeft() + borderSize,this.get_paddingTop() + borderSize);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scrollview = js_Boot.__cast(this._component , haxe_ui_containers_ScrollView);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != hscroll && child != vscroll) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				cx = usableSize.width * child.get_percentWidth() / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				cy = usableSize.height * child.get_percentHeight() / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			if(scrollview.get_autoHideScrolls() == true) {
				if(child == hscroll && vscroll != null && vscroll.get_hidden() == false) {
					cx -= vscroll.get_width();
				} else if(child == vscroll && hscroll != null && hscroll.get_hidden() == false) {
					cy -= hscroll.get_height();
				}
			}
			child.resizeComponent(cx,cy);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && hscroll.get_includeInLayout() == true && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight() - this.marginTop(hscroll);
		}
		if(vscroll != null && vscroll.get_includeInLayout() == true && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth() - this.marginLeft(vscroll);
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_componentWidth() > size.width) {
					size.height -= haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_componentHeight() > size.height) {
					size.width -= haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		var borderSize = this.get_borderSize();
		size.width -= borderSize * 2;
		size.height -= borderSize * 2;
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,[hscroll,vscroll]);
		if(hscroll != null && hscroll.get_hidden() == false) {
			size.height += hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			size.width += vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_width() > this.get_component().get_width()) {
					size.height += haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_height() > this.get_component().get_height()) {
					size.width += haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		size.width += this.get_borderSize() * 2;
		size.height += this.get_borderSize() * 2;
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_ScrollViewLayout();
	}
	,__class__: haxe_ui_layouts_ScrollViewLayout
});
var haxe_ui_layouts_VerticalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullHeights = true;
};
$hxClasses["haxe.ui.layouts.VerticalLayout"] = haxe_ui_layouts_VerticalLayout;
haxe_ui_layouts_VerticalLayout.__name__ = "haxe.ui.layouts.VerticalLayout";
haxe_ui_layouts_VerticalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_VerticalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var ypos = this.get_paddingTop();
		var usableSize = this.get_usableSize();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (usableSize.width - child.get_componentWidth()) / 2 + this.get_paddingLeft() + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				if(child.get_componentWidth() < this.get_component().get_componentWidth()) {
					xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginLeft(child));
				}
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			child.moveComponent(xpos,ypos + this.marginTop(child));
			ypos += child.get_componentHeight() + this.get_verticalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentHeight() > 0 && (child.get_percentHeight() == null || this.fixedMinHeight(child) == true)) {
				size.height -= child.get_componentHeight() + this.marginTop(child) + this.marginBottom(child);
			}
		}
		if(visibleChildren > 1) {
			size.height -= this.get_verticalSpacing() * (visibleChildren - 1);
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_DefaultLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_VerticalLayout();
	}
	,__class__: haxe_ui_layouts_VerticalLayout
});
var haxe_ui_layouts_VirtualLayout = function() {
	this._lastItemRenderer = null;
	this._firstPass = true;
	this._sizeCache = [];
	this._rendererPool = [];
	this._lastIndex = -1;
	this._firstIndex = -1;
	haxe_ui_layouts_ScrollViewLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VirtualLayout"] = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VirtualLayout.__name__ = "haxe.ui.layouts.VirtualLayout";
haxe_ui_layouts_VirtualLayout.__super__ = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_VirtualLayout.prototype = $extend(haxe_ui_layouts_ScrollViewLayout.prototype,{
	_firstIndex: null
	,_lastIndex: null
	,_rendererPool: null
	,_sizeCache: null
	,contents: null
	,get_contents: function() {
		if(this.contents == null) {
			this.contents = this.findComponent("scrollview-contents",null,false,"css");
		}
		return this.contents;
	}
	,get_dataSource: function() {
		return (js_Boot.__cast(this._component , haxe_ui_core_IDataComponent)).get_dataSource();
	}
	,_firstPass: null
	,itemHeight: null
	,get_itemHeight: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemHeight() > 0) {
			return comp.get_itemHeight();
		}
		var _this = this.get_contents();
		var childComponents = _this._children == null ? [] : _this._children;
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_height();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_height();
			}
		}
		if(result <= 0) {
			result = 25;
		} else if(comp.get_virtual() == true) {
			if(this._firstPass == false) {
				comp.set_itemHeight(result);
			}
			if(this._firstPass == true) {
				this._firstPass = false;
			}
		}
		return result;
	}
	,itemCount: null
	,get_itemCount: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() >= 0) {
			return comp.get_itemCount();
		} else {
			return 0;
		}
	}
	,refresh: function() {
		this.refreshData();
		haxe_ui_layouts_ScrollViewLayout.prototype.refresh.call(this);
	}
	,refreshData: function() {
		if(this.get_dataSource() == null) {
			return;
		}
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == false) {
			this.refreshNonVirtualData();
		} else {
			this.refreshVirtualData();
		}
	}
	,_lastItemRenderer: null
	,refreshNonVirtualData: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
		}
		var dataSource = this.get_dataSource();
		var contents = this.get_contents();
		var _g = 0;
		var _g1 = dataSource.get_size();
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			if(n < (contents._children == null ? [] : contents._children).length) {
				item = js_Boot.__cast((contents._children == null ? [] : contents._children)[n] , haxe_ui_core_ItemRenderer);
				if(item.get_data() == data) {
					item.invalidateComponent("data",false);
					continue;
				}
				var cls = this.itemClass(n,data);
				if(!js_Boot.__instanceof(item,cls)) {
					this.removeRenderer(item);
					item = this.getRenderer(cls,n);
					contents.addComponentAt(item,n);
				}
			} else {
				var cls1 = this.itemClass(n,data);
				item = this.getRenderer(cls1,n);
				contents.addComponent(item);
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(item.classes.indexOf(className) == -1) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.itemIndex = n;
			item.set_data(data);
		}
		while(dataSource.get_size() < (contents._children == null ? [] : contents._children).length) {
			var item = js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer);
			this.removeRenderer(item);
		}
	}
	,refreshVirtualData: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
			this._rendererPool = [];
		}
		this.removeInvisibleRenderers();
		this.calculateRangeVisible();
		this.updateScroll();
		var dataSource = this.get_dataSource();
		var i = 0;
		var _g = this._firstIndex;
		var _g1 = this._lastIndex;
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			var cls = this.itemClass(n,data);
			var _this = this.get_contents();
			if((_this._children == null ? [] : _this._children).length <= i) {
				item = this.getRenderer(cls,n);
				this.get_contents().addComponent(item);
			} else {
				var _this1 = this.get_contents();
				item = js_Boot.__cast((_this1._children == null ? [] : _this1._children)[i] , haxe_ui_core_ItemRenderer);
				if(!js_Boot.__instanceof(item,cls)) {
					item = this.getRenderer(cls,n);
					this.get_contents().addComponentAt(item,i);
				} else if(item.itemIndex != n) {
					if(this._component.hasEvent("rendererdestroyed")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererdestroyed",null,item));
					}
					this._component.setComponentIndex(item,i);
					item.itemIndex = n;
					if(this._component.hasEvent("renderercreated")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("renderercreated",null,item));
					}
				}
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(item.classes.indexOf(className) == -1) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.set_data(data);
			++i;
		}
		while(true) {
			var _this = this.get_contents();
			if(!((_this._children == null ? [] : _this._children).length > i)) {
				break;
			}
			var _this1 = this.get_contents();
			var tmp = _this1._children == null ? [] : _this1._children;
			var _this2 = this.get_contents();
			this.removeRenderer(js_Boot.__cast(tmp[(_this2._children == null ? [] : _this2._children).length - 1] , haxe_ui_core_ItemRenderer),false);
		}
	}
	,calculateRangeVisible: function() {
	}
	,updateScroll: function() {
	}
	,itemClass: function(index,data) {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRendererClass() != null) {
			return comp.get_itemRendererClass();
		} else if(comp.get_itemRenderer() != null) {
			return js_Boot.getClass(comp.get_itemRenderer());
		} else {
			return haxe_ui_core_BasicItemRenderer;
		}
	}
	,getRenderer: function(cls,index) {
		var instance = null;
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			var _g = 0;
			var _g1 = this._rendererPool.length;
			while(_g < _g1) {
				var i = _g++;
				var renderer = this._rendererPool[i];
				if(js_Boot.__instanceof(renderer,cls)) {
					this._rendererPool.splice(i,1);
					instance = renderer;
					break;
				}
			}
		}
		if(instance == null) {
			if(comp.get_itemRenderer() != null && js_Boot.getClass(comp.get_itemRenderer()) == cls) {
				instance = comp.get_itemRenderer().cloneComponent();
				instance.handleVisibility(true);
			} else {
				instance = Type.createInstance(cls,[]);
			}
		}
		instance.itemIndex = index;
		if(this._component.hasEvent("renderercreated")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("renderercreated",null,instance));
		}
		if(this._component.get_hidden() == false) {
			instance.handleVisibility(true);
		}
		return js_Boot.__cast(instance , haxe_ui_core_ItemRenderer);
	}
	,removeRenderer: function(renderer,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._component.removeComponent(renderer,dispose);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			this._rendererPool.push(js_Boot.__cast(renderer , haxe_ui_core_ItemRenderer));
		}
		if(this._component.hasEvent("rendererdestroyed")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererdestroyed",null,renderer));
		}
		renderer.itemIndex = -1;
	}
	,removeInvisibleRenderers: function() {
		var contents = this.get_contents();
		if(this._firstIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[0])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[0] , haxe_ui_core_ItemRenderer),false);
				++this._firstIndex;
			}
		}
		if(this._lastIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer),false);
				--this._lastIndex;
			}
		}
	}
	,isRendererVisible: function(renderer) {
		if(renderer == null) {
			return false;
		}
		if(renderer.get_top() < this._component.get_componentHeight() && renderer.get_top() + renderer.get_componentHeight() >= 0 && renderer.get_left() < this._component.get_componentWidth()) {
			return renderer.get_left() + renderer.get_componentWidth() >= 0;
		} else {
			return false;
		}
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_ScrollViewLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_VirtualLayout();
	}
	,__class__: haxe_ui_layouts_VirtualLayout
	,__properties__: $extend(haxe_ui_layouts_ScrollViewLayout.prototype.__properties__,{get_itemCount:"get_itemCount",get_itemHeight:"get_itemHeight",get_dataSource:"get_dataSource",get_contents:"get_contents"})
});
var haxe_ui_layouts_VerticalVirtualLayout = function() {
	haxe_ui_layouts_VirtualLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalVirtualLayout"] = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.__name__ = "haxe.ui.layouts.VerticalVirtualLayout";
haxe_ui_layouts_VerticalVirtualLayout.__super__ = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.prototype = $extend(haxe_ui_layouts_VirtualLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_VirtualLayout.prototype.repositionChildren.call(this);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var itemHeight = this.get_itemHeight();
		var contents = this.get_contents();
		var verticalSpacing = contents.get_layout().get_verticalSpacing();
		if(comp.get_virtual() == true) {
			var n = this._firstIndex;
			if(comp.get_variableItemSize() == true) {
				var pos = -comp.get_vscrollPos();
				var _g = 0;
				var _g1 = this._lastIndex;
				while(_g < _g1) {
					var i = _g++;
					if(i >= this._firstIndex) {
						var c = contents.getComponentAt(i - this._firstIndex);
						c.set_top(pos);
					}
					var size = this._sizeCache[i];
					pos += (size != null && size != 0 ? size : itemHeight) + verticalSpacing;
				}
			} else {
				var _g = 0;
				var _g1 = contents._children == null ? [] : contents._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.set_top(n * (itemHeight + verticalSpacing) - comp.get_vscrollPos());
					++n;
				}
			}
		}
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,calculateRangeVisible: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var itemHeight = this.get_itemHeight();
		var visibleItemsCount = 0;
		var contentsHeight = 0;
		if(this.get_contents().get_autoHeight() == true) {
			var itemCount = this.get_itemCount();
			if(itemCount > 0 || this._component.get_autoHeight() == true) {
				contentsHeight = itemCount * itemHeight - this.verticalConstraintModifier();
			} else {
				contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
			}
		} else {
			contentsHeight = this.get_contents().get_height() - this.verticalConstraintModifier();
		}
		if(contentsHeight > this._component.get_height() - this.verticalConstraintModifier()) {
			contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
		}
		if(comp.get_variableItemSize() == true) {
			var totalSize = 0;
			var requireInvalidation = false;
			var newFirstIndex = -1;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					if(i >= this._firstIndex && i <= this._lastIndex) {
						var c = this.get_contents().getComponentAt(i - this._firstIndex);
						if(c != null && c.get_componentHeight() > 0) {
							this._sizeCache[i] = c.get_componentHeight();
							size = c.get_componentHeight();
						} else {
							requireInvalidation = true;
							size = itemHeight;
						}
					} else {
						requireInvalidation = true;
						size = itemHeight;
					}
				}
				size += verticalSpacing;
				if(newFirstIndex == -1) {
					if(totalSize + size > comp.get_vscrollPos()) {
						newFirstIndex = i;
						totalSize += size - comp.get_vscrollPos();
						++visibleItemsCount;
					} else {
						totalSize += size;
					}
				} else if(totalSize + size > contentsHeight) {
					break;
				} else {
					++visibleItemsCount;
					totalSize += size;
				}
			}
			if(requireInvalidation == true) {
				var _this = this._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this._firstIndex = newFirstIndex;
		} else {
			visibleItemsCount = Math.ceil(contentsHeight / (itemHeight + verticalSpacing));
			this._firstIndex = comp.get_vscrollPos() / (itemHeight + verticalSpacing) | 0;
		}
		if(this._firstIndex < 0) {
			this._firstIndex = 0;
		}
		var rc = new haxe_ui_geom_Rectangle(0,0,this.get_contents().get_width(),contentsHeight - (this.get_paddingTop() + this.get_paddingBottom()) - this.get_borderSize() * 2);
		this.get_contents().set_componentClipRect(rc);
		this._lastIndex = this._firstIndex + visibleItemsCount + 1;
		if(this._lastIndex > this.get_dataSource().get_size()) {
			this._lastIndex = this.get_dataSource().get_size();
		}
	}
	,updateScroll: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var usableSize = this.get_usableSize();
		var dataSize = this.get_dataSource().get_size();
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var scrollMax = 0;
		var itemHeight = this.get_itemHeight();
		if(comp.get_variableItemSize() == true) {
			scrollMax = -usableSize.height;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					size = itemHeight;
				}
				scrollMax += size + verticalSpacing + this.verticalConstraintModifier();
			}
		} else {
			scrollMax = dataSize * itemHeight + (dataSize - 1) * verticalSpacing - usableSize.height + this.verticalConstraintModifier();
		}
		if(scrollMax < 0) {
			scrollMax = 0;
		}
		comp.set_vscrollMax(scrollMax);
		comp.set_vscrollPageSize(usableSize.height / (scrollMax + usableSize.height) * scrollMax);
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_VirtualLayout.prototype.calcAutoSize.call(this,exclusions);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() > 0 && this._component.get_autoHeight() == true) {
			var contents = this._component.findComponent("scrollview-contents",null,false);
			var contentsPadding = 0;
			if(contents != null) {
				var layout = contents.get_layout();
				if(layout != null) {
					contentsPadding = layout.get_paddingTop() + layout.get_paddingBottom();
				}
			}
			size.height = this.get_itemHeight() * comp.get_itemCount() + this.get_paddingTop() + this.get_paddingBottom() + contentsPadding + this.get_borderSize() * 2;
		}
		return size;
	}
	,cloneLayout: function() {
		var c = haxe_ui_layouts_VirtualLayout.prototype.cloneLayout.call(this);
		return c;
	}
	,self: function() {
		return new haxe_ui_layouts_VerticalVirtualLayout();
	}
	,__class__: haxe_ui_layouts_VerticalVirtualLayout
});
var haxe_ui_loaders_image_ImageLoaderBase = function() {
};
$hxClasses["haxe.ui.loaders.image.ImageLoaderBase"] = haxe_ui_loaders_image_ImageLoaderBase;
haxe_ui_loaders_image_ImageLoaderBase.__name__ = "haxe.ui.loaders.image.ImageLoaderBase";
haxe_ui_loaders_image_ImageLoaderBase.prototype = {
	load: function(resource,callback) {
	}
	,postProcess: function(resource,image) {
	}
	,__class__: haxe_ui_loaders_image_ImageLoaderBase
};
var haxe_ui_loaders_image_AssetImageLoader = function() {
	haxe_ui_loaders_image_ImageLoaderBase.call(this);
};
$hxClasses["haxe.ui.loaders.image.AssetImageLoader"] = haxe_ui_loaders_image_AssetImageLoader;
haxe_ui_loaders_image_AssetImageLoader.__name__ = "haxe.ui.loaders.image.AssetImageLoader";
haxe_ui_loaders_image_AssetImageLoader.__super__ = haxe_ui_loaders_image_ImageLoaderBase;
haxe_ui_loaders_image_AssetImageLoader.prototype = $extend(haxe_ui_loaders_image_ImageLoaderBase.prototype,{
	load: function(resource,callback) {
		haxe_ui_Toolkit.get_assets().getImage(haxe_ui_util_Variant.toString(resource),callback);
	}
	,__class__: haxe_ui_loaders_image_AssetImageLoader
});
var haxe_ui_loaders_image_FileImageLoader = function() {
	haxe_ui_loaders_image_ImageLoaderBase.call(this);
};
$hxClasses["haxe.ui.loaders.image.FileImageLoader"] = haxe_ui_loaders_image_FileImageLoader;
haxe_ui_loaders_image_FileImageLoader.__name__ = "haxe.ui.loaders.image.FileImageLoader";
haxe_ui_loaders_image_FileImageLoader.__super__ = haxe_ui_loaders_image_ImageLoaderBase;
haxe_ui_loaders_image_FileImageLoader.prototype = $extend(haxe_ui_loaders_image_ImageLoaderBase.prototype,{
	load: function(resource,callback) {
		var stringResource = haxe_ui_util_Variant.toString(resource);
		var tmp = HxOverrides.substr(stringResource,7,null);
		haxe_ui_Toolkit.get_assets().imageFromFile(tmp,function(imageInfo) {
			haxe_ui_ToolkitAssets.get_instance().cacheImage(stringResource,imageInfo);
			callback(imageInfo);
		});
	}
	,__class__: haxe_ui_loaders_image_FileImageLoader
});
var haxe_ui_loaders_image_HttpImageLoader = function() {
	haxe_ui_loaders_image_ImageLoaderBase.call(this);
};
$hxClasses["haxe.ui.loaders.image.HttpImageLoader"] = haxe_ui_loaders_image_HttpImageLoader;
haxe_ui_loaders_image_HttpImageLoader.__name__ = "haxe.ui.loaders.image.HttpImageLoader";
haxe_ui_loaders_image_HttpImageLoader.__super__ = haxe_ui_loaders_image_ImageLoaderBase;
haxe_ui_loaders_image_HttpImageLoader.prototype = $extend(haxe_ui_loaders_image_ImageLoaderBase.prototype,{
	load: function(resource,callback) {
		var stringResource = haxe_ui_util_Variant.toString(resource);
		this.loadFromHttp(stringResource,function(imageInfo) {
			haxe_ui_ToolkitAssets.get_instance().cacheImage(stringResource,imageInfo);
			callback(imageInfo);
		});
	}
	,loadFromHttp: function(url,callback) {
		var request = new XMLHttpRequest();
		request.open("GET",url);
		request.responseType = "arraybuffer";
		request.onreadystatechange = function(_) {
			if(request.readyState != 4) {
				return;
			}
			var s;
			try {
				s = request.status;
			} catch( _g ) {
				s = null;
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null && s >= 200 && s < 400) {
				haxe_ui_Toolkit.get_assets().imageFromBytes(haxe_io_Bytes.ofData(request.response),callback);
			} else if(s == null) {
				callback(null);
			} else {
				if(s == 0) {
					haxe_ui_Toolkit.get_assets().getImage(url,callback);
					return;
				}
				callback(null);
			}
		};
		request.onerror = function(x) {
		};
		request.send();
	}
	,__class__: haxe_ui_loaders_image_HttpImageLoader
});
var haxe_ui_loaders_image_ImageLoader = function() {
	this._defaultLoader = null;
	this._registeredLoaders = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.loaders.image.ImageLoader"] = haxe_ui_loaders_image_ImageLoader;
haxe_ui_loaders_image_ImageLoader.__name__ = "haxe.ui.loaders.image.ImageLoader";
haxe_ui_loaders_image_ImageLoader.__properties__ = {get_instance:"get_instance"};
haxe_ui_loaders_image_ImageLoader.get_instance = function() {
	if(haxe_ui_loaders_image_ImageLoader._instance == null) {
		haxe_ui_loaders_image_ImageLoader._instance = new haxe_ui_loaders_image_ImageLoader();
	}
	return haxe_ui_loaders_image_ImageLoader._instance;
};
haxe_ui_loaders_image_ImageLoader.prototype = {
	_registeredLoaders: null
	,_defaultLoader: null
	,load: function(resource,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		if(haxe_ui_util_Variant.get_isString(resource)) {
			var stringResource = haxe_ui_util_Variant.toString(resource);
			if(useCache == true) {
				var cachedImage = haxe_ui_ToolkitAssets.get_instance().getCachedImage(stringResource);
				if(cachedImage != null) {
					callback(cachedImage);
					return;
				}
			}
			stringResource = StringTools.trim(stringResource);
			var prefix = "";
			var n = stringResource.indexOf("://");
			if(n != -1) {
				prefix = stringResource.substring(0,n);
			}
			var loader = this.get(prefix);
			if(loader == null) {
				haxe_Log.trace("WARNING: no image loader could be found for '" + prefix + "'",{ fileName : "haxe/ui/loaders/image/ImageLoader.hx", lineNumber : 45, className : "haxe.ui.loaders.image.ImageLoader", methodName : "load"});
				callback(null);
				return;
			}
			loader.load(resource,function(imageInfo) {
				if(callback != null) {
					if(imageInfo != null) {
						imageInfo.loader = loader;
					}
					callback(imageInfo);
				}
			});
		} else if(haxe_ui_util_Variant.get_isImageData(resource)) {
			var imageData = haxe_ui_util_Variant.toImageData(resource);
			if(callback != null) {
				callback(haxe_ui_ToolkitAssets.get_instance().imageInfoFromImageData(imageData));
			}
		}
	}
	,register: function(prefix,ctor,isDefault,singleInstance) {
		if(singleInstance == null) {
			singleInstance = false;
		}
		if(isDefault == null) {
			isDefault = false;
		}
		var info = { prefix : prefix, ctor : ctor, isDefault : isDefault, singleInstance : singleInstance};
		this._registeredLoaders.h[prefix] = info;
		if(isDefault) {
			this._defaultLoader = info;
		}
	}
	,get: function(prefix) {
		var info = this._defaultLoader;
		if(Object.prototype.hasOwnProperty.call(this._registeredLoaders.h,prefix)) {
			info = this._registeredLoaders.h[prefix];
		}
		if(info == null) {
			return null;
		}
		var instance = null;
		if(info.singleInstance) {
			instance = info.instance;
		}
		if(instance == null) {
			instance = info.ctor();
			if(instance == null) {
				return null;
			}
			if(info.singleInstance) {
				info.instance = instance;
			}
		}
		return instance;
	}
	,__class__: haxe_ui_loaders_image_ImageLoader
};
var haxe_ui_locale_Formats = function() { };
$hxClasses["haxe.ui.locale.Formats"] = haxe_ui_locale_Formats;
haxe_ui_locale_Formats.__name__ = "haxe.ui.locale.Formats";
haxe_ui_locale_Formats.__properties__ = {get_dateFormatShort:"get_dateFormatShort"};
haxe_ui_locale_Formats.get_dateFormatShort = function() {
	if(haxe_ui_locale_Formats._dateFormatShort == null) {
		return haxe_ui_locale_LocaleManager.get_instance().lookupString("formats.date.short");
	}
	return haxe_ui_locale_Formats._dateFormatShort;
};
var haxe_ui_locale_LocaleEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.locale.LocaleEvent"] = haxe_ui_locale_LocaleEvent;
haxe_ui_locale_LocaleEvent.__name__ = "haxe.ui.locale.LocaleEvent";
haxe_ui_locale_LocaleEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_locale_LocaleEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_locale_LocaleEvent(this.type);
		return c;
	}
	,__class__: haxe_ui_locale_LocaleEvent
});
var haxe_ui_locale_LocaleManager = function() {
	this._localeStringMap = new haxe_ds_StringMap();
	this._localeMap = new haxe_ds_StringMap();
	this._language = "en";
	this._eventMap = null;
};
$hxClasses["haxe.ui.locale.LocaleManager"] = haxe_ui_locale_LocaleManager;
haxe_ui_locale_LocaleManager.__name__ = "haxe.ui.locale.LocaleManager";
haxe_ui_locale_LocaleManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_locale_LocaleManager.get_instance = function() {
	if(haxe_ui_locale_LocaleManager._instance == null) {
		haxe_ui_locale_LocaleManager._instance = new haxe_ui_locale_LocaleManager();
	}
	return haxe_ui_locale_LocaleManager._instance;
};
haxe_ui_locale_LocaleManager.prototype = {
	_eventMap: null
	,registerComponent: function(component,prop,callback,expr,fix) {
		if(fix == null) {
			fix = true;
		}
		if(callback == null && expr == null) {
			return;
		}
		var fixedExpr = null;
		if(fix == true) {
			if(expr != null) {
				fixedExpr = haxe_ui_util_ExpressionUtil.stringToLanguageExpression(expr,"LocaleManager");
				if(StringTools.endsWith(fixedExpr,";") == true) {
					fixedExpr = HxOverrides.substr(fixedExpr,0,fixedExpr.length - 1);
				}
			}
		} else {
			fixedExpr = expr;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			propMap = new haxe_ds_StringMap();
			haxe_ui_locale_LocaleManager._registeredComponents.set(component,propMap);
		}
		propMap.h[prop] = { callback : callback, expr : fixedExpr};
		this.refreshFor(component);
	}
	,unregisterComponent: function(component) {
		haxe_ui_locale_LocaleManager._registeredComponents.remove(component);
	}
	,findBindingExpr: function(component,prop) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return null;
		}
		var entry = propMap.h[prop];
		if(entry == null) {
			return null;
		}
		return entry.expr;
	}
	,cloneForComponent: function(from,to) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[from.__id__];
		if(propMap == null) {
			return;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			this.registerComponent(to,prop,entry.callback,entry.expr,false);
		}
	}
	,onComponentReady: function(e) {
		e.target.unregisterEvent("ready",$bind(this,this.onComponentReady));
		this.refreshFor(e.target);
	}
	,refreshFor: function(component) {
		if(component.get_isReady() == false) {
			component.registerEvent("ready",$bind(this,this.onComponentReady));
			return;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return;
		}
		var context = { LocaleManager : haxe_ui_locale_LocaleManager, MathUtil : haxe_ui_util_MathUtil};
		var root = this.findRoot(component);
		var _g = 0;
		var _g1 = root.get_namedComponents();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			if(k.get_scriptAccess() == false) {
				continue;
			}
			context[k.get_id()] = k;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			if(entry.callback != null) {
				var value = entry.callback();
				Reflect.setProperty(component,prop,value);
			} else if(entry.expr != null) {
				var value1 = haxe_ui_util_SimpleExpressionEvaluator.eval(entry.expr,context);
				Reflect.setProperty(component,prop,value1);
			}
		}
	}
	,refreshAll: function() {
		var c = haxe_ui_locale_LocaleManager._registeredComponents.keys();
		while(c.hasNext()) {
			var c1 = c.next();
			this.refreshFor(c1);
		}
	}
	,_language: null
	,get_language: function() {
		return this._language;
	}
	,set_language: function(value) {
		if(value == null) {
			return value;
		}
		if(this._language == value) {
			return value;
		}
		var tmp = this.getStrings(value) == null;
		this._language = value;
		this.refreshAll();
		if(this._eventMap != null) {
			var event = new haxe_ui_locale_LocaleEvent("localeChanged");
			this._eventMap.invoke("localeChanged",event);
		}
		return value;
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this._eventMap == null) {
			return false;
		}
		return this._eventMap.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap != null) {
			this._eventMap.remove(type,listener);
		}
	}
	,parseResource: function(localeId,resourceId) {
		var content = haxe_ui_ToolkitAssets.get_instance().getText(resourceId);
		if(content != null) {
			var parts = resourceId.split(".");
			var extension = parts.pop();
			var filename = parts.join(".");
			var n = filename.lastIndexOf("/");
			if(n != -1) {
				filename = HxOverrides.substr(filename,n + 1,null);
			}
			var parser = haxe_ui_parsers_locale_LocaleParser.get(extension);
			var map = parser.parse(content);
			this.addStrings(localeId,map,filename);
		}
	}
	,_localeMap: null
	,addStrings: function(localeId,map,filename) {
		var stringMap = this._localeMap.h[localeId];
		if(stringMap == null) {
			stringMap = new haxe_ds_StringMap();
			this._localeMap.h[localeId] = stringMap;
		}
		var h = map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = map.h[k];
			if(filename != null && filename != localeId && StringTools.startsWith(k,filename) == false) {
				var altKey = filename + "." + k;
				stringMap.h[altKey] = v;
			}
			stringMap.h[k] = v;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		if(parts.length > 1) {
			var parent = this._localeMap.h[parts[0]];
			if(parent != null) {
				var h = parent.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					if(Object.prototype.hasOwnProperty.call(stringMap.h,k) == false) {
						stringMap.h[k] = parent.h[k];
					}
				}
			}
		}
	}
	,getStrings: function(localeId) {
		var strings = this._localeMap.h[localeId];
		if(strings != null) {
			return strings;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		if(!Object.prototype.hasOwnProperty.call(this._localeMap.h,parts[0])) {
			return this._localeMap.h["en"];
		}
		return this._localeMap.h[parts[0]];
	}
	,hasString: function(id) {
		var strings = this.getStrings(this.get_language());
		if(strings == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(strings.h,id);
	}
	,lookupString: function(id,param0,param1,param2,param3) {
		return this.translateTo(this.get_language(),id,param0,param1,param2,param3);
	}
	,_localeStringMap: null
	,translateTo: function(lang,id,param0,param1,param2,param3) {
		var map = this._localeStringMap.h[lang];
		var localeString = null;
		if(map != null) {
			localeString = map.h[id];
		}
		if(localeString == null) {
			var strings = this.getStrings(lang);
			if(strings == null) {
				return id;
			}
			var value = strings.h[id];
			if(value == null) {
				return id;
			}
			var isCompound = false;
			if(value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
				isCompound = true;
				var n1 = value.indexOf("{{");
				while(n1 != -1) {
					var n2 = value.indexOf("}}",n1);
					var before = value.substring(0,n1);
					var part = value.substring(n1 + 2,n2);
					var after = value.substring(n2 + 2);
					var partValue = this.translateTo(lang,part,param0,param1,param2,param3);
					value = before + partValue + after;
					n1 = value.indexOf("{{",n1);
				}
			}
			localeString = new haxe_ui_locale_LocaleString();
			localeString.parse(id + "=" + value);
			if(!isCompound) {
				if(map == null) {
					map = new haxe_ds_StringMap();
					this._localeStringMap.h[lang] = map;
				}
				map.h[id] = localeString;
			}
		}
		var result = localeString.build(param0,param1,param2,param3);
		return result;
	}
	,findRoot: function(c) {
		var root = c;
		var ref = c;
		while(ref != null) {
			root = ref;
			if(root.bindingRoot) {
				break;
			}
			ref = ref.parentComponent;
		}
		return root;
	}
	,__class__: haxe_ui_locale_LocaleManager
	,__properties__: {set_language:"set_language",get_language:"get_language"}
};
var haxe_ui_locale_LocaleString = function() {
	this._cachedValue = null;
	this._isSimple = true;
	this.parts = [];
};
$hxClasses["haxe.ui.locale.LocaleString"] = haxe_ui_locale_LocaleString;
haxe_ui_locale_LocaleString.__name__ = "haxe.ui.locale.LocaleString";
haxe_ui_locale_LocaleString.prototype = {
	id: null
	,parts: null
	,_isSimple: null
	,_cachedValue: null
	,build: function(param0,param1,param2,param3) {
		if(this._isSimple == true && this._cachedValue != null) {
			return this._cachedValue;
		}
		var result = null;
		if(Type.typeof(param0)._hx_index == 4) {
			if(param0 != null && param0.text != null) {
				param0 = param0.text;
			}
			if(param1 != null && param1.text != null) {
				param1 = param1.text;
			}
			if(param2 != null && param2.text != null) {
				param2 = param2.text;
			}
			if(param3 != null && param3.text != null) {
				param3 = param3.text;
			}
		}
		var _g = 0;
		var _g1 = this.parts;
		while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			switch(part._hx_index) {
			case 0:
				var s = part.s;
				if(result == null) {
					result = "";
				}
				result += s;
				break;
			case 1:
				var expr = part.block;
				if(result == null) {
					result = "";
				}
				result += expr.evaluate(param0,param1,param2,param3);
				break;
			}
		}
		if(result == null) {
			result = this.id;
		}
		if(result != null) {
			if(this._isSimple == true) {
				if(result.indexOf("[0]") != -1) {
					this._isSimple = false;
				}
				if(result.indexOf("[1]") != -1) {
					this._isSimple = false;
				}
				if(result.indexOf("[2]") != -1) {
					this._isSimple = false;
				}
				if(result.indexOf("[3]") != -1) {
					this._isSimple = false;
				}
				if(result.indexOf("{{") != -1 && result.indexOf("}}") != -1) {
					this._isSimple = false;
				}
			}
			if(param0 != null) {
				result = StringTools.replace(result,"[0]",Std.string(param0));
			}
			if(param1 != null) {
				result = StringTools.replace(result,"[1]",Std.string(param1));
			}
			if(param2 != null) {
				result = StringTools.replace(result,"[2]",Std.string(param2));
			}
			if(param3 != null) {
				result = StringTools.replace(result,"[3]",Std.string(param3));
			}
			var n1 = result.indexOf("{{");
			var beforePos = 0;
			while(n1 != -1) {
				var before = result.substring(beforePos,n1);
				var n2 = result.indexOf("}}",n1);
				var code = result.substring(n1 + 2,n2);
				var after = result.substring(n2 + 2);
				var subResult = haxe_ui_locale_LocaleManager.get_instance().lookupString(code);
				if(subResult != null) {
					result = before + subResult + after;
				}
				n1 = result.indexOf("{{",n2);
				beforePos = n2 + 2;
			}
			if(this._isSimple) {
				this._cachedValue = result;
			}
		}
		return result;
	}
	,parse: function(s) {
		this.parts = [];
		var n = s.indexOf("=");
		if(n == -1) {
			return;
		}
		this.id = StringTools.trim(s.substring(0,n));
		s = StringTools.trim(HxOverrides.substr(s,n + 1,null));
		var inExpression = false;
		var part = "";
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var ch = s.charAt(i);
			switch(ch) {
			case "{":
				if(part.length > 0) {
					this.parts.push(haxe_ui_locale__$LocaleString_LocaleStringPart.Literal(part));
				}
				inExpression = true;
				part = "";
				break;
			case "}":
				if(part.length > 0) {
					var block = new haxe_ui_locale_LocaleStringExpressionBlock();
					block.parse(part);
					this.parts.push(haxe_ui_locale__$LocaleString_LocaleStringPart.ExpressionBlock(block));
				}
				inExpression = false;
				part = "";
				break;
			default:
				part += ch;
			}
		}
		if(part.length > 0) {
			this.parts.push(haxe_ui_locale__$LocaleString_LocaleStringPart.Literal(part));
		}
		var _g = 0;
		var _g1 = this.parts;
		_hx_loop2: while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			switch(part._hx_index) {
			case 0:
				var s = part.s;
				break;
			case 1:
				var block = part.block;
				if(block.expressions != null && block.expressions.length > 0) {
					this._isSimple = false;
					break _hx_loop2;
				}
				break;
			}
		}
	}
	,__class__: haxe_ui_locale_LocaleString
};
var haxe_ui_locale__$LocaleString_LocaleStringPart = $hxEnums["haxe.ui.locale._LocaleString.LocaleStringPart"] = { __ename__:"haxe.ui.locale._LocaleString.LocaleStringPart",__constructs__:null
	,Literal: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.locale._LocaleString.LocaleStringPart",toString:$estr}; },$_._hx_name="Literal",$_.__params__ = ["s"],$_)
	,ExpressionBlock: ($_=function(block) { return {_hx_index:1,block:block,__enum__:"haxe.ui.locale._LocaleString.LocaleStringPart",toString:$estr}; },$_._hx_name="ExpressionBlock",$_.__params__ = ["block"],$_)
};
haxe_ui_locale__$LocaleString_LocaleStringPart.__constructs__ = [haxe_ui_locale__$LocaleString_LocaleStringPart.Literal,haxe_ui_locale__$LocaleString_LocaleStringPart.ExpressionBlock];
haxe_ui_locale__$LocaleString_LocaleStringPart.__empty_constructs__ = [];
var haxe_ui_locale_LocaleStringExpression = function() {
	this.isDefault = false;
};
$hxClasses["haxe.ui.locale.LocaleStringExpression"] = haxe_ui_locale_LocaleStringExpression;
haxe_ui_locale_LocaleStringExpression.__name__ = "haxe.ui.locale.LocaleStringExpression";
haxe_ui_locale_LocaleStringExpression.prototype = {
	isDefault: null
	,varName: null
	,expression: null
	,expressionResult: null
	,evaluate: function(param0,param1,param2,param3) {
		if(this.expression == null) {
			return false;
		}
		var varValue = param0;
		if(this.varName == "[0]") {
			varValue = param0;
		}
		if(this.varName == "[1]") {
			varValue = param1;
		}
		if(this.varName == "[2]") {
			varValue = param2;
		}
		if(this.varName == "[3]") {
			varValue = param3;
		}
		var result = this.eval(varValue,this.expression);
		return result;
	}
	,'eval': function(varValue,expr) {
		switch(expr._hx_index) {
		case 0:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat((this.eval(floatValue,expr1) == null ? "null" : Std.string(this.eval(floatValue,expr1))));
				r = floatValue == floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(this.eval(intValue,expr1) == null ? "null" : Std.string(this.eval(intValue,expr1)));
				r = intValue == intResult;
			} else {
				var stringValue = Std.string(varValue);
				var stringResult = this.eval(stringValue,expr1) == null ? "null" : Std.string(this.eval(stringValue,expr1));
				r = stringValue == stringResult;
			}
			return r;
		case 1:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat((this.eval(floatValue,expr1) == null ? "null" : Std.string(this.eval(floatValue,expr1))));
				r = floatValue < floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(this.eval(intValue,expr1) == null ? "null" : Std.string(this.eval(intValue,expr1)));
				r = intValue < intResult;
			}
			return r;
		case 2:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat((this.eval(floatValue,expr1) == null ? "null" : Std.string(this.eval(floatValue,expr1))));
				r = floatValue > floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(this.eval(intValue,expr1) == null ? "null" : Std.string(this.eval(intValue,expr1)));
				r = intValue > intResult;
			}
			return r;
		case 3:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat((this.eval(floatValue,expr1) == null ? "null" : Std.string(this.eval(floatValue,expr1))));
				r = floatValue <= floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(this.eval(intValue,expr1) == null ? "null" : Std.string(this.eval(intValue,expr1)));
				r = intValue <= intResult;
			}
			return r;
		case 4:
			var expr1 = expr.expr;
			var r = false;
			if(Type.typeof(varValue) == ValueType.TFloat) {
				var floatValue = varValue;
				var floatResult = parseFloat((this.eval(floatValue,expr1) == null ? "null" : Std.string(this.eval(floatValue,expr1))));
				r = floatValue >= floatResult;
			} else if(Type.typeof(varValue) == ValueType.TInt) {
				var intValue = varValue;
				var intResult = Std.parseInt(this.eval(intValue,expr1) == null ? "null" : Std.string(this.eval(intValue,expr1)));
				r = intValue >= intResult;
			}
			return r;
		case 5:
			var start = expr.start;
			var end = expr.end;
			if(varValue >= start) {
				return varValue <= end;
			} else {
				return false;
			}
			break;
		case 6:
			var modulus = expr.modulus;
			var expr1 = expr.expr;
			var r = varValue % modulus;
			return this.eval(r,expr1);
		case 7:
			var values = expr.values;
			var found = null;
			var _g = 0;
			while(_g < values.length) {
				var v = values[_g];
				++_g;
				if(v == varValue) {
					found = v;
					break;
				}
			}
			return found;
		case 8:
			var value = expr.value;
			return value;
		}
	}
	,parse: function(s) {
		s = StringTools.trim(s);
		var n = s.indexOf(":");
		if(n == -1) {
			return;
		}
		var expr = StringTools.trim(s.substring(0,n));
		this.expressionResult = StringTools.trim(s.substring(n + 1));
		if(expr == "_") {
			this.isDefault = true;
			return;
		}
		this.expression = this.extractExpression(expr);
		if(this.expression == null) {
			var replacement = haxe_ui_locale_LocaleManager.get_instance().lookupString(expr);
			if(replacement != null) {
				this.expression = this.extractExpression(replacement);
			}
		}
	}
	,extractExpression: function(expr) {
		var n = -1;
		var _g = 0;
		var _g1 = expr.length;
		_hx_loop1: while(_g < _g1) {
			var i = _g++;
			var ch = expr.charAt(i);
			switch(ch) {
			case " ":case "%":case "<":case "=":case ">":
				n = i;
				break _hx_loop1;
			default:
			}
		}
		if(n == -1) {
			return null;
		}
		this.varName = StringTools.trim(expr.substring(0,n));
		expr = StringTools.trim(expr.substring(n));
		var expression = this.parseExpression(expr);
		return expression;
	}
	,parseExpression: function(s) {
		var expression = null;
		s = StringTools.trim(s);
		if(StringTools.startsWith(s,">=")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.GreaterThanOrEquals(this.parseExpression(s.substring(2)));
		} else if(StringTools.startsWith(s,"<=")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.LessThanOrEquals(this.parseExpression(s.substring(2)));
		} else if(StringTools.startsWith(s,">")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.GreaterThan(this.parseExpression(s.substring(1)));
		} else if(StringTools.startsWith(s,"<")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.LessThan(this.parseExpression(s.substring(1)));
		} else if(StringTools.startsWith(s,"=")) {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Equals(this.parseExpression(s.substring(1)));
		} else if(StringTools.startsWith(s,"mod ")) {
			var mod = StringTools.trim(s.substring(3));
			var n = -1;
			var _g = 0;
			var _g1 = mod.length;
			_hx_loop1: while(_g < _g1) {
				var i = _g++;
				var ch = mod.charAt(i);
				switch(ch) {
				case " ":case "%":case "<":case "=":case ">":
					n = i;
					break _hx_loop1;
				default:
				}
			}
			if(n != -1) {
				var rest = mod.substring(n);
				var mod1 = StringTools.trim(mod.substring(0,n));
				expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Modulus(parseFloat(mod1),this.parseExpression(rest));
			}
		} else if(StringTools.startsWith(s,"in ")) {
			var range = StringTools.trim(HxOverrides.substr(s,2,null)).split("...");
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Range(parseFloat(range[0]),parseFloat(range[1]));
		} else if(s.indexOf("|") != -1) {
			var valueParts = s.split("|");
			var values = [];
			var _g = 0;
			while(_g < valueParts.length) {
				var p = valueParts[_g];
				++_g;
				p = StringTools.trim(p);
				if(p.length == 0) {
					continue;
				}
				values.push(parseFloat(p));
			}
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.List(values);
		} else {
			expression = haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Value(s);
		}
		return expression;
	}
	,__class__: haxe_ui_locale_LocaleStringExpression
};
var haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation = $hxEnums["haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation"] = { __ename__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",__constructs__:null
	,Equals: ($_=function(expr) { return {_hx_index:0,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="Equals",$_.__params__ = ["expr"],$_)
	,LessThan: ($_=function(expr) { return {_hx_index:1,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="LessThan",$_.__params__ = ["expr"],$_)
	,GreaterThan: ($_=function(expr) { return {_hx_index:2,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="GreaterThan",$_.__params__ = ["expr"],$_)
	,LessThanOrEquals: ($_=function(expr) { return {_hx_index:3,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="LessThanOrEquals",$_.__params__ = ["expr"],$_)
	,GreaterThanOrEquals: ($_=function(expr) { return {_hx_index:4,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="GreaterThanOrEquals",$_.__params__ = ["expr"],$_)
	,Range: ($_=function(start,end) { return {_hx_index:5,start:start,end:end,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="Range",$_.__params__ = ["start","end"],$_)
	,Modulus: ($_=function(modulus,expr) { return {_hx_index:6,modulus:modulus,expr:expr,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="Modulus",$_.__params__ = ["modulus","expr"],$_)
	,List: ($_=function(values) { return {_hx_index:7,values:values,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="List",$_.__params__ = ["values"],$_)
	,Value: ($_=function(value) { return {_hx_index:8,value:value,__enum__:"haxe.ui.locale._LocaleStringExpression.LocalStringExpressionOperation",toString:$estr}; },$_._hx_name="Value",$_.__params__ = ["value"],$_)
};
haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.__constructs__ = [haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Equals,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.LessThan,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.GreaterThan,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.LessThanOrEquals,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.GreaterThanOrEquals,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Range,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Modulus,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.List,haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.Value];
haxe_ui_locale__$LocaleStringExpression_LocalStringExpressionOperation.__empty_constructs__ = [];
var haxe_ui_locale_LocaleStringExpressionBlock = function() {
	this.expressions = [];
};
$hxClasses["haxe.ui.locale.LocaleStringExpressionBlock"] = haxe_ui_locale_LocaleStringExpressionBlock;
haxe_ui_locale_LocaleStringExpressionBlock.__name__ = "haxe.ui.locale.LocaleStringExpressionBlock";
haxe_ui_locale_LocaleStringExpressionBlock.prototype = {
	expressions: null
	,evaluate: function(param0,param1,param2,param3) {
		var result = null;
		var _g = 0;
		var _g1 = this.expressions;
		while(_g < _g1.length) {
			var expr = _g1[_g];
			++_g;
			if(expr.isDefault) {
				continue;
			}
			if(expr.evaluate(param0,param1,param2,param3) == true) {
				result = expr.expressionResult;
				break;
			}
		}
		if(result == null) {
			var defaultExpression = this.findDefaultExpression();
			if(defaultExpression != null) {
				result = defaultExpression.expressionResult;
			}
		}
		return result;
	}
	,findDefaultExpression: function() {
		var _g = 0;
		var _g1 = this.expressions;
		while(_g < _g1.length) {
			var expr = _g1[_g];
			++_g;
			if(expr.isDefault) {
				return expr;
			}
		}
		return null;
	}
	,parse: function(s) {
		this.expressions = [];
		s = StringTools.trim(s);
		var lines = s.split("\n");
		var _g = 0;
		while(_g < lines.length) {
			var l = lines[_g];
			++_g;
			var expr = new haxe_ui_locale_LocaleStringExpression();
			expr.parse(l);
			this.expressions.push(expr);
		}
	}
	,__class__: haxe_ui_locale_LocaleStringExpressionBlock
};
var haxe_ui_parsers_locale_LocaleParser = function() {
};
$hxClasses["haxe.ui.parsers.locale.LocaleParser"] = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_LocaleParser.__name__ = "haxe.ui.parsers.locale.LocaleParser";
haxe_ui_parsers_locale_LocaleParser.get = function(extension) {
	haxe_ui_parsers_locale_LocaleParser.defaultParsers();
	var cls = haxe_ui_parsers_locale_LocaleParser._parsers.h[extension];
	if(cls == null) {
		throw haxe_Exception.thrown("No locale parser found for \"" + extension + "\"");
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw haxe_Exception.thrown("Could not create locale parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_locale_LocaleParser.defaultParsers = function() {
	haxe_ui_parsers_locale_LocaleParser.register("properties",haxe_ui_parsers_locale_PropertiesParser);
};
haxe_ui_parsers_locale_LocaleParser.register = function(extension,cls) {
	if(haxe_ui_parsers_locale_LocaleParser._parsers == null) {
		haxe_ui_parsers_locale_LocaleParser._parsers = new haxe_ds_StringMap();
	}
	haxe_ui_parsers_locale_LocaleParser._parsers.h[extension] = cls;
};
haxe_ui_parsers_locale_LocaleParser.prototype = {
	parse: function(data) {
		throw haxe_Exception.thrown("Locale parser not implemented!");
	}
	,__class__: haxe_ui_parsers_locale_LocaleParser
};
var haxe_ui_parsers_locale_PropertiesParser = function() {
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.PropertiesParser"] = haxe_ui_parsers_locale_PropertiesParser;
haxe_ui_parsers_locale_PropertiesParser.__name__ = "haxe.ui.parsers.locale.PropertiesParser";
haxe_ui_parsers_locale_PropertiesParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_PropertiesParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	parse: function(data) {
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var newLines = [];
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			if(StringTools.trim(line).length == 0 || StringTools.startsWith(StringTools.trim(line),"#")) {
				continue;
			}
			newLines.push(line);
		}
		data = newLines.join("\n");
		var inValue = false;
		var propName = "";
		var propValue = "";
		var _g = 0;
		var _g1 = data.length;
		while(_g < _g1) {
			var i = _g++;
			var ch = data.charAt(i);
			switch(ch) {
			case "\n":
				var hasSpace = false;
				var hasEquals = false;
				var _g2 = i + 1;
				var _g3 = data.length;
				while(_g2 < _g3) {
					var j = _g2++;
					var ch2 = data.charAt(j);
					if(ch2 == "=") {
						hasEquals = true;
						break;
					} else if(ch2 == " ") {
						hasSpace = true;
					} else if(ch2 == "\n") {
						break;
					}
				}
				if(hasEquals == true && hasSpace == false) {
					inValue = false;
					result.h[propName] = propValue;
					propName = "";
					propValue = "";
				} else {
					propValue += ch;
				}
				break;
			case "=":
				if(inValue == true) {
					propValue += ch;
				}
				inValue = true;
				break;
			default:
				if(inValue) {
					propValue += ch;
				} else {
					propName += ch;
				}
			}
		}
		if(propName.length > 0 && propValue.length > 0) {
			result.h[propName] = propValue;
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_PropertiesParser
});
var haxe_ui_styles_CssFilters = function() { };
$hxClasses["haxe.ui.styles.CssFilters"] = haxe_ui_styles_CssFilters;
haxe_ui_styles_CssFilters.__name__ = "haxe.ui.styles.CssFilters";
haxe_ui_styles_CssFilters.registerCssFilter = function(name,ctor) {
	haxe_ui_styles_CssFilters._cssFilters.h[name] = ctor;
};
var haxe_ui_styles_CssFunctions = function() { };
$hxClasses["haxe.ui.styles.CssFunctions"] = haxe_ui_styles_CssFunctions;
haxe_ui_styles_CssFunctions.__name__ = "haxe.ui.styles.CssFunctions";
haxe_ui_styles_CssFunctions.registerCssFunction = function(name,fn) {
	haxe_ui_styles_CssFunctions._cssFunctions.h[name] = fn;
};
haxe_ui_styles_CssFunctions.calc = function(vl) {
	return null;
};
haxe_ui_styles_CssFunctions.min = function(vl) {
	var minv = Infinity;
	var _g = 0;
	while(_g < vl.length) {
		var val = vl[_g];
		++_g;
		var num = haxe_ui_styles_ValueTools.calcDimension(val);
		if(num == null) {
			return null;
		} else if(num < minv) {
			minv = num;
		}
	}
	return minv;
};
haxe_ui_styles_CssFunctions.max = function(vl) {
	var maxv = -Infinity;
	var _g = 0;
	while(_g < vl.length) {
		var val = vl[_g];
		++_g;
		var num = haxe_ui_styles_ValueTools.calcDimension(val);
		if(num == null) {
			return null;
		} else if(num > maxv) {
			maxv = num;
		}
	}
	return maxv;
};
haxe_ui_styles_CssFunctions.clamp = function(vl) {
	var valNum = haxe_ui_styles_ValueTools.calcDimension(vl[0]);
	var minNum = haxe_ui_styles_ValueTools.calcDimension(vl[1]);
	var maxNum = haxe_ui_styles_ValueTools.calcDimension(vl[2]);
	if(valNum == null || minNum == null || maxNum == null) {
		return null;
	} else if(valNum < minNum) {
		return minNum;
	} else if(valNum > maxNum) {
		return maxNum;
	} else {
		return valNum;
	}
};
haxe_ui_styles_CssFunctions.platformColor = function(vl) {
	return haxe_ui_core_Platform.get_instance().getColor(haxe_ui_styles_ValueTools.string(vl[0]));
};
haxe_ui_styles_CssFunctions.themeIcon = function(vl) {
	return haxe_ui_themes_ThemeManager.get_instance().image(haxe_ui_styles_ValueTools.string(vl[0]));
};
haxe_ui_styles_CssFunctions.rgb = function(vl) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents(haxe_ui_styles_ValueTools.int(vl[0]),haxe_ui_styles_ValueTools.int(vl[1]),haxe_ui_styles_ValueTools.int(vl[2]),0));
};
haxe_ui_styles_CssFunctions.lookup = function(vl) {
	return haxe_ui_util_Variant.toDynamic(haxe_ui_styles_StyleLookupMap.get_instance().get(haxe_ui_styles_ValueTools.string(vl[0])));
};
var haxe_ui_styles_Dimension = $hxEnums["haxe.ui.styles.Dimension"] = { __ename__:"haxe.ui.styles.Dimension",__constructs__:null
	,PERCENT: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PERCENT",$_.__params__ = ["value"],$_)
	,PX: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PX",$_.__params__ = ["value"],$_)
	,VW: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VW",$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VH",$_.__params__ = ["value"],$_)
	,REM: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="REM",$_.__params__ = ["value"],$_)
	,CALC: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="CALC",$_.__params__ = ["s"],$_)
};
haxe_ui_styles_Dimension.__constructs__ = [haxe_ui_styles_Dimension.PERCENT,haxe_ui_styles_Dimension.PX,haxe_ui_styles_Dimension.VW,haxe_ui_styles_Dimension.VH,haxe_ui_styles_Dimension.REM,haxe_ui_styles_Dimension.CALC];
haxe_ui_styles_Dimension.__empty_constructs__ = [];
var haxe_ui_styles_Parser = function() {
};
$hxClasses["haxe.ui.styles.Parser"] = haxe_ui_styles_Parser;
haxe_ui_styles_Parser.__name__ = "haxe.ui.styles.Parser";
haxe_ui_styles_Parser.prototype = {
	parse: function(source) {
		var _gthis = this;
		source = source.replace(haxe_ui_styles_Parser.cssCommentsRegex.r,"");
		if(source.indexOf("$") != -1) {
			var n1 = source.indexOf("$");
			while(n1 != -1) {
				var n2 = n1;
				while(n2 <= source.length - 1) {
					var c = source.charAt(n2);
					if(c == " " || c == ";" || c == "\n" || c == ",") {
						break;
					}
					++n2;
				}
				if(n2 != source.length - 1) {
					var key = source.substring(n1 + 1,n2);
					var value = haxe_ui_themes_ThemeManager.get_instance().currentThemeVars.h[key];
					if(value != null) {
						var before = source.substring(0,n1);
						var after = source.substring(n2);
						source = before + value + after;
						n2 = n1 + value.length;
					} else {
						haxe_Log.trace("WARNING: css variable '" + key + "' not defined",{ fileName : "haxe/ui/styles/Parser.hx", lineNumber : 50, className : "haxe.ui.styles.Parser", methodName : "parse"});
					}
				}
				n1 = source.indexOf("$",n2);
			}
		}
		var styleSheet = new haxe_ui_styles_StyleSheet();
		source = haxe_ui_styles_Parser.cssImportStatementRegex.map(source,function(e) {
			var i = e.matched(0);
			i = HxOverrides.substr(i,7,null);
			var _this_r = new RegExp("\"|'|;","g".split("u").join(""));
			i = i.replace(_this_r,"");
			i = StringTools.trim(i);
			styleSheet.addImport(new haxe_ui_styles_elements_ImportElement(i));
			return "";
		});
		source = haxe_ui_styles_Parser.cssKeyframesRegex.map(source,function(e) {
			var id = e.matched(1);
			var data = e.matched(2);
			var keyframes = [];
			haxe_ui_styles_Parser.cssKeyframeSelectorRegex.map(data,function(e) {
				var selector = e.matched(1);
				var directives = e.matched(2);
				if(selector == "from") {
					selector = "0%";
				} else if(selector == "to") {
					selector = "100%";
				}
				var keyframe = new haxe_ui_styles_elements_AnimationKeyFrame();
				keyframe.time = haxe_ui_styles_ValueTools.parse(selector);
				keyframe.directives = _gthis.parseDirectives(directives);
				keyframes.push(keyframe);
				return null;
			});
			var animation = new haxe_ui_styles_elements_AnimationKeyFrames(id,keyframes);
			styleSheet.addAnimation(animation);
			return "";
		});
		haxe_ui_styles_Parser.combinedCSSMediaRegex.map(source,function(e) {
			var selector = "";
			if(e.matched(2) == null) {
				selector = StringTools.trim(e.matched(5).split("\r\n").join("\n"));
			} else {
				selector = StringTools.trim(e.matched(2).split("\r\n").join("\n"));
			}
			selector = selector.replace(haxe_ui_styles_Parser.newlineRegex.r,"\n");
			if(selector.indexOf("@media") != -1) {
				var n1 = selector.indexOf("(");
				var n2 = selector.lastIndexOf(")");
				var mediaQuery = selector.substring(n1 + 1,n2);
				var mediaStyleSheet = new haxe_ui_styles_Parser().parse(e.matched(3) + "\n}");
				var mq = new haxe_ui_styles_elements_MediaQuery(_gthis.parseDirectives(mediaQuery),mediaStyleSheet);
				styleSheet.addMediaQuery(mq);
			} else {
				var directives = _gthis.parseDirectives(e.matched(6));
				var selectors = selector.split(",");
				var _g = 0;
				while(_g < selectors.length) {
					var s = selectors[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length > 0) {
						styleSheet.addRule(new haxe_ui_styles_elements_RuleElement(s,directives));
					}
				}
			}
			return null;
		});
		return styleSheet;
	}
	,parseDirectives: function(rulesString) {
		rulesString = rulesString.split("\r\n").join("\n");
		var ret = [];
		var rules = rulesString.split(";");
		var _g = 0;
		while(_g < rules.length) {
			var line = rules[_g];
			++_g;
			var d = this.parseDirective(line);
			if(d != null) {
				ret.push(d);
			}
		}
		return ret;
	}
	,parseDirective: function(line) {
		var d = null;
		line = StringTools.trim(line);
		if(line.length == 0) {
			return null;
		}
		if(line.indexOf(":") != -1) {
			var parts = line.split(":");
			var cssDirective = StringTools.trim(parts[0]);
			var cssValue = StringTools.trim(parts.slice(1).join(":"));
			if(cssDirective.length < 1 || cssValue.length < 1) {
				return null;
			}
			d = new haxe_ui_styles_elements_Directive(cssDirective,haxe_ui_styles_ValueTools.parse(cssValue));
		} else {
			d = new haxe_ui_styles_elements_Directive("",haxe_ui_styles_ValueTools.parse(line),true);
		}
		return d;
	}
	,__class__: haxe_ui_styles_Parser
};
var haxe_ui_styles_StyleBorderType = $hxEnums["haxe.ui.styles.StyleBorderType"] = { __ename__:"haxe.ui.styles.StyleBorderType",__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:1,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Compound: {_hx_name:"Compound",_hx_index:2,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
};
haxe_ui_styles_StyleBorderType.__constructs__ = [haxe_ui_styles_StyleBorderType.None,haxe_ui_styles_StyleBorderType.Full,haxe_ui_styles_StyleBorderType.Compound];
haxe_ui_styles_StyleBorderType.__empty_constructs__ = [haxe_ui_styles_StyleBorderType.None,haxe_ui_styles_StyleBorderType.Full,haxe_ui_styles_StyleBorderType.Compound];
var haxe_ui_styles_Style = function(left,top,autoWidth,width,percentWidth,minWidth,minPercentWidth,maxWidth,maxPercentWidth,initialWidth,initialPercentWidth,autoHeight,height,percentHeight,minHeight,minPercentHeight,maxHeight,maxPercentHeight,initialHeight,initialPercentHeight,padding,paddingTop,paddingLeft,paddingRight,paddingBottom,marginTop,marginLeft,marginRight,marginBottom,horizontalSpacing,verticalSpacing,color,backgroundColor,backgroundOpacity,backgroundColorEnd,backgroundGradientStyle,backgroundImage,backgroundImageRepeat,backgroundPositionX,backgroundPositionY,backgroundImageClipTop,backgroundImageClipLeft,backgroundImageClipBottom,backgroundImageClipRight,backgroundImageSliceTop,backgroundImageSliceLeft,backgroundImageSliceBottom,backgroundImageSliceRight,borderColor,borderTopColor,borderLeftColor,borderBottomColor,borderRightColor,borderSize,borderTopSize,borderLeftSize,borderBottomSize,borderRightSize,borderRadius,borderRadiusTopLeft,borderRadiusTopRight,borderRadiusBottomLeft,borderRadiusBottomRight,borderOpacity,borderStyle,icon,iconPosition,horizontalAlign,verticalAlign,textAlign,opacity,clip,native,fontName,fontSize,fontBold,fontUnderline,fontItalic,fontStrikeThrough,cursor,hidden,filter,backdropFilter,resource,animationName,animationOptions,mode,pointerEvents,contentType,direction,contentWidth,contentWidthPercent,contentHeight,contentHeightPercent,wordWrap,imageRendering,backgroundWidth,backgroundWidthPercent,backgroundHeight,backgroundHeightPercent,layout,includeInLayout,justifyContent,borderType,hasBorder,fullBorderSize) {
	this.left = left;
	this.top = top;
	this.autoWidth = autoWidth;
	this.width = width;
	this.percentWidth = percentWidth;
	this.minWidth = minWidth;
	this.minPercentWidth = minPercentWidth;
	this.maxWidth = maxWidth;
	this.maxPercentWidth = maxPercentWidth;
	this.initialWidth = initialWidth;
	this.initialPercentWidth = initialPercentWidth;
	this.autoHeight = autoHeight;
	this.height = height;
	this.percentHeight = percentHeight;
	this.minHeight = minHeight;
	this.minPercentHeight = minPercentHeight;
	this.maxHeight = maxHeight;
	this.maxPercentHeight = maxPercentHeight;
	this.initialHeight = initialHeight;
	this.initialPercentHeight = initialPercentHeight;
	this.padding = padding;
	this.paddingTop = paddingTop;
	this.paddingLeft = paddingLeft;
	this.paddingRight = paddingRight;
	this.paddingBottom = paddingBottom;
	this.marginTop = marginTop;
	this.marginLeft = marginLeft;
	this.marginRight = marginRight;
	this.marginBottom = marginBottom;
	this.horizontalSpacing = horizontalSpacing;
	this.verticalSpacing = verticalSpacing;
	this.color = color;
	this.backgroundColor = backgroundColor;
	this.backgroundOpacity = backgroundOpacity;
	this.backgroundColorEnd = backgroundColorEnd;
	this.backgroundGradientStyle = backgroundGradientStyle;
	this.backgroundImage = backgroundImage;
	this.backgroundImageRepeat = backgroundImageRepeat;
	this.backgroundPositionX = backgroundPositionX;
	this.backgroundPositionY = backgroundPositionY;
	this.backgroundImageClipTop = backgroundImageClipTop;
	this.backgroundImageClipLeft = backgroundImageClipLeft;
	this.backgroundImageClipBottom = backgroundImageClipBottom;
	this.backgroundImageClipRight = backgroundImageClipRight;
	this.backgroundImageSliceTop = backgroundImageSliceTop;
	this.backgroundImageSliceLeft = backgroundImageSliceLeft;
	this.backgroundImageSliceBottom = backgroundImageSliceBottom;
	this.backgroundImageSliceRight = backgroundImageSliceRight;
	this.borderColor = borderColor;
	this.borderTopColor = borderTopColor;
	this.borderLeftColor = borderLeftColor;
	this.borderBottomColor = borderBottomColor;
	this.borderRightColor = borderRightColor;
	this.borderSize = borderSize;
	this.borderTopSize = borderTopSize;
	this.borderLeftSize = borderLeftSize;
	this.borderBottomSize = borderBottomSize;
	this.borderRightSize = borderRightSize;
	this.borderRadius = borderRadius;
	this.borderRadiusTopLeft = borderRadiusTopLeft;
	this.borderRadiusTopRight = borderRadiusTopRight;
	this.borderRadiusBottomLeft = borderRadiusBottomLeft;
	this.borderRadiusBottomRight = borderRadiusBottomRight;
	this.borderOpacity = borderOpacity;
	this.borderStyle = borderStyle;
	this.icon = icon;
	this.iconPosition = iconPosition;
	this.horizontalAlign = horizontalAlign;
	this.verticalAlign = verticalAlign;
	this.textAlign = textAlign;
	this.opacity = opacity;
	this.clip = clip;
	this.native = native;
	this.fontName = fontName;
	this.fontSize = fontSize;
	this.fontBold = fontBold;
	this.fontUnderline = fontUnderline;
	this.fontItalic = fontItalic;
	this.fontStrikeThrough = fontStrikeThrough;
	this.cursor = cursor;
	this.hidden = hidden;
	this.filter = filter;
	this.backdropFilter = backdropFilter;
	this.resource = resource;
	this.animationName = animationName;
	this.animationOptions = animationOptions;
	this.mode = mode;
	this.pointerEvents = pointerEvents;
	this.contentType = contentType;
	this.direction = direction;
	this.contentWidth = contentWidth;
	this.contentWidthPercent = contentWidthPercent;
	this.contentHeight = contentHeight;
	this.contentHeightPercent = contentHeightPercent;
	this.wordWrap = wordWrap;
	this.imageRendering = imageRendering;
	this.backgroundWidth = backgroundWidth;
	this.backgroundWidthPercent = backgroundWidthPercent;
	this.backgroundHeight = backgroundHeight;
	this.backgroundHeightPercent = backgroundHeightPercent;
	this.layout = layout;
	this.includeInLayout = includeInLayout;
	this.justifyContent = justifyContent;
	this.borderType = borderType;
	this.hasBorder = hasBorder;
	this.fullBorderSize = fullBorderSize;
};
$hxClasses["haxe.ui.styles.Style"] = haxe_ui_styles_Style;
haxe_ui_styles_Style.__name__ = "haxe.ui.styles.Style";
haxe_ui_styles_Style.prototype = {
	left: null
	,top: null
	,autoWidth: null
	,width: null
	,percentWidth: null
	,minWidth: null
	,minPercentWidth: null
	,maxWidth: null
	,maxPercentWidth: null
	,initialWidth: null
	,initialPercentWidth: null
	,autoHeight: null
	,height: null
	,percentHeight: null
	,minHeight: null
	,minPercentHeight: null
	,maxHeight: null
	,maxPercentHeight: null
	,initialHeight: null
	,initialPercentHeight: null
	,padding: null
	,paddingTop: null
	,paddingLeft: null
	,paddingRight: null
	,paddingBottom: null
	,marginTop: null
	,marginLeft: null
	,marginRight: null
	,marginBottom: null
	,horizontalSpacing: null
	,verticalSpacing: null
	,color: null
	,backgroundColor: null
	,backgroundOpacity: null
	,backgroundColorEnd: null
	,backgroundGradientStyle: null
	,backgroundImage: null
	,backgroundImageRepeat: null
	,backgroundPositionX: null
	,backgroundPositionY: null
	,backgroundImageClipTop: null
	,backgroundImageClipLeft: null
	,backgroundImageClipBottom: null
	,backgroundImageClipRight: null
	,backgroundImageSliceTop: null
	,backgroundImageSliceLeft: null
	,backgroundImageSliceBottom: null
	,backgroundImageSliceRight: null
	,borderColor: null
	,borderTopColor: null
	,borderLeftColor: null
	,borderBottomColor: null
	,borderRightColor: null
	,borderSize: null
	,borderTopSize: null
	,borderLeftSize: null
	,borderBottomSize: null
	,borderRightSize: null
	,borderRadius: null
	,borderRadiusTopLeft: null
	,borderRadiusTopRight: null
	,borderRadiusBottomLeft: null
	,borderRadiusBottomRight: null
	,borderOpacity: null
	,borderStyle: null
	,icon: null
	,iconPosition: null
	,horizontalAlign: null
	,verticalAlign: null
	,textAlign: null
	,opacity: null
	,clip: null
	,native: null
	,fontName: null
	,fontSize: null
	,fontBold: null
	,fontUnderline: null
	,fontItalic: null
	,fontStrikeThrough: null
	,cursor: null
	,hidden: null
	,filter: null
	,backdropFilter: null
	,resource: null
	,animationName: null
	,animationOptions: null
	,mode: null
	,pointerEvents: null
	,contentType: null
	,direction: null
	,contentWidth: null
	,contentWidthPercent: null
	,contentHeight: null
	,contentHeightPercent: null
	,wordWrap: null
	,imageRendering: null
	,backgroundWidth: null
	,backgroundWidthPercent: null
	,backgroundHeight: null
	,backgroundHeightPercent: null
	,layout: null
	,includeInLayout: null
	,justifyContent: null
	,borderType: null
	,get_borderType: function() {
		var t = haxe_ui_styles_StyleBorderType.Compound;
		if(this.borderLeftSize != null && this.borderLeftSize > 0 && this.borderLeftSize == this.borderRightSize && this.borderLeftSize == this.borderBottomSize && this.borderLeftSize == this.borderTopSize) {
			t = haxe_ui_styles_StyleBorderType.Full;
		} else if((this.borderLeftSize == null || this.borderLeftSize <= 0) && (this.borderRightSize == null || this.borderRightSize <= 0) && (this.borderBottomSize == null || this.borderRightSize <= 0) && (this.borderTopSize == null || this.borderTopSize <= 0)) {
			t = haxe_ui_styles_StyleBorderType.None;
		}
		return t;
	}
	,hasBorder: null
	,fullBorderSize: null
	,get_fullBorderSize: function() {
		if(this.get_borderType() == haxe_ui_styles_StyleBorderType.Full) {
			return this.borderLeftSize;
		}
		return 0;
	}
	,mergeDirectives: function(map) {
		var h = map.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var v = map.h[key];
			switch(key) {
			case "animation-delay":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.delay = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-direction":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-duration":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.duration = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-fill-mode":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.fillMode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-iteration-count":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				var _g = v.value;
				var tmp;
				if(_g._hx_index == 6) {
					var val = _g.v;
					tmp = val == "infinite" ? -1 : 0;
				} else {
					tmp = haxe_ui_styles_ValueTools.int(v.value);
				}
				this.animationOptions.iterationCount = tmp;
				break;
			case "animation-name":
				this.animationName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-timing-function":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.easingFunction = haxe_ui_styles_ValueTools.calcEasing(v.value);
				break;
			case "backdrop-filter":
				break;
			case "background-color":
				var _g1 = v.value;
				this.backgroundColor = haxe_ui_styles_ValueTools.int(v.value);
				if(Object.prototype.hasOwnProperty.call(map.h,"background-color-end")) {
					this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(map.h["background-color-end"].value);
				} else {
					this.backgroundColorEnd = null;
				}
				break;
			case "background-color-end":
				this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "background-gradient-style":
				this.backgroundGradientStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-height":
				this.backgroundHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.backgroundHeightPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "background-image":
				this.backgroundImage = haxe_ui_styles_ValueTools.variant(v.value);
				break;
			case "background-image-clip-bottom":
				this.backgroundImageClipBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-left":
				this.backgroundImageClipLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-right":
				this.backgroundImageClipRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-top":
				this.backgroundImageClipTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-repeat":
				this.backgroundImageRepeat = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-slice-bottom":
				this.backgroundImageSliceBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-left":
				this.backgroundImageSliceLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-right":
				this.backgroundImageSliceRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-top":
				this.backgroundImageSliceTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-opacity":
				this.backgroundOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "background-position-x":
				this.backgroundPositionX = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-position-y":
				this.backgroundPositionY = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-width":
				this.backgroundWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.backgroundWidthPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "border-bottom-color":
				this.borderBottomColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-bottom-left-radius":
				this.borderRadiusBottomLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-right-radius":
				this.borderRadiusBottomRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-size":case "border-bottom-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderBottomSize = 0;
				} else {
					this.borderBottomSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-color":
				this.borderColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-color":
				this.borderLeftColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-size":case "border-left-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderLeftSize = 0;
				} else {
					this.borderLeftSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-opacity":
				this.borderOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-radius":
				this.borderRadius = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-right-color":
				this.borderRightColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-right-size":case "border-right-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderRightSize = 0;
				} else {
					this.borderRightSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-style":
				this.borderStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "border-top-color":
				this.borderTopColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-top-left-radius":
				this.borderRadiusTopLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-right-radius":
				this.borderRadiusTopRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-size":case "border-top-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderTopSize = 0;
				} else {
					this.borderTopSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "clip":
				this.clip = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "color":
				this.color = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "content-height":
				this.contentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentHeightPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "content-type":
				this.contentType = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "content-width":
				this.contentWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentWidthPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "cursor":
				this.cursor = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "direction":
				this.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "display":
				this.hidden = haxe_ui_styles_ValueTools.none(v.value);
				break;
			case "filter":
				break;
			case "font-bold":
				this.fontBold = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-family":case "font-name":
				this.fontName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "font-italic":
				this.fontItalic = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-size":
				this.fontSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "font-style":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontItalic = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "italic";
				}
				break;
			case "font-underline":
				this.fontUnderline = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-weight":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontBold = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "bold";
				}
				break;
			case "height":
				this.autoHeight = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.height = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "hidden":
				this.hidden = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "horizontal-align":
				this.horizontalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "horizontal-spacing":
				this.horizontalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "icon":
				if(v.value._hx_index == 9) {
					this.icon = null;
				} else {
					this.icon = haxe_ui_styles_ValueTools.variant(v.value);
				}
				break;
			case "icon-position":
				this.iconPosition = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "image-rendering":
				if(v.value._hx_index == 9) {
					this.imageRendering = null;
				} else {
					this.imageRendering = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "include-in-layout":
				this.includeInLayout = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "initial-height":
				this.initialHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "initial-width":
				this.initialWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "justify-content":
				this.justifyContent = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "layout":
				if(v.value._hx_index == 9) {
					this.layout = null;
				} else {
					this.layout = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "left":
				this.left = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-bottom":
				this.marginBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-left":
				this.marginLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-right":
				this.marginRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-top":
				this.marginTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "max-height":
				this.maxHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "max-width":
				this.maxWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-height":
				this.minHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-width":
				this.minWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "mode":
				this.mode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "native":
				this.native = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "opacity":
				this.opacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "padding-bottom":
				this.paddingBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-left":
				this.paddingLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-right":
				this.paddingRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-top":
				this.paddingTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "pointer-events":
				if(v.value._hx_index == 9) {
					this.pointerEvents = "none";
				} else {
					this.pointerEvents = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "resource":
				this.resource = haxe_ui_styles_ValueTools.variant(v.value);
				break;
			case "text-align":
				this.textAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "text-decoration":
				if(haxe_ui_styles_ValueTools.string(v.value) != null) {
					this.fontUnderline = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "underline";
					this.fontStrikeThrough = haxe_ui_styles_ValueTools.string(v.value).toLowerCase() == "line-through";
				}
				break;
			case "top":
				this.top = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "vertical-align":
				this.verticalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "vertical-spacing":
				this.verticalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "width":
				this.autoWidth = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.width = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "word-wrap":
				this.wordWrap = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			}
		}
	}
	,apply: function(s) {
		if(s.cursor != null) {
			this.cursor = s.cursor;
		}
		if(s.hidden != null) {
			this.hidden = s.hidden;
		}
		if(s.left != null) {
			this.left = s.left;
		}
		if(s.top != null) {
			this.top = s.top;
		}
		if(s.autoWidth != null) {
			this.autoWidth = s.autoWidth;
		}
		if(s.autoHeight != null) {
			this.autoHeight = s.autoHeight;
		}
		if(s.verticalSpacing != null) {
			this.verticalSpacing = s.verticalSpacing;
		}
		if(s.horizontalSpacing != null) {
			this.horizontalSpacing = s.horizontalSpacing;
		}
		if(s.width != null) {
			this.width = s.width;
			this.autoWidth = false;
		}
		if(s.initialWidth != null) {
			this.initialWidth = s.initialWidth;
		}
		if(s.initialPercentWidth != null) {
			this.initialPercentWidth = s.initialPercentWidth;
		}
		if(s.minWidth != null) {
			this.minWidth = s.minWidth;
		}
		if(s.minPercentWidth != null) {
			this.minPercentWidth = s.minPercentWidth;
		}
		if(s.maxWidth != null) {
			this.maxWidth = s.maxWidth;
		}
		if(s.maxPercentWidth != null) {
			this.maxPercentWidth = s.maxPercentWidth;
		}
		if(s.height != null) {
			this.height = s.height;
			this.autoHeight = false;
		}
		if(s.initialHeight != null) {
			this.initialHeight = s.initialHeight;
		}
		if(s.initialPercentHeight != null) {
			this.initialPercentHeight = s.initialPercentHeight;
		}
		if(s.minHeight != null) {
			this.minHeight = s.minHeight;
		}
		if(s.minPercentHeight != null) {
			this.minPercentHeight = s.minPercentHeight;
		}
		if(s.maxHeight != null) {
			this.maxHeight = s.maxHeight;
		}
		if(s.maxPercentHeight != null) {
			this.maxPercentHeight = s.maxPercentHeight;
		}
		if(s.percentWidth != null) {
			this.percentWidth = s.percentWidth;
			this.autoWidth = false;
		}
		if(s.percentHeight != null) {
			this.percentHeight = s.percentHeight;
			this.autoHeight = false;
		}
		if(s.paddingTop != null) {
			this.paddingTop = s.paddingTop;
		}
		if(s.paddingLeft != null) {
			this.paddingLeft = s.paddingLeft;
		}
		if(s.paddingRight != null) {
			this.paddingRight = s.paddingRight;
		}
		if(s.paddingBottom != null) {
			this.paddingBottom = s.paddingBottom;
		}
		if(s.marginTop != null) {
			this.marginTop = s.marginTop;
		}
		if(s.marginLeft != null) {
			this.marginLeft = s.marginLeft;
		}
		if(s.marginRight != null) {
			this.marginRight = s.marginRight;
		}
		if(s.marginBottom != null) {
			this.marginBottom = s.marginBottom;
		}
		if(s.color != null) {
			this.color = s.color;
		}
		if(s.backgroundColor != null) {
			this.backgroundColor = s.backgroundColor;
			this.backgroundColorEnd = null;
		}
		if(s.backgroundColorEnd != null) {
			this.backgroundColorEnd = s.backgroundColorEnd;
		}
		if(s.backgroundGradientStyle != null) {
			this.backgroundGradientStyle = s.backgroundGradientStyle;
		}
		if(s.backgroundOpacity != null) {
			this.backgroundOpacity = s.backgroundOpacity;
		}
		if(s.backgroundImage != null) {
			this.backgroundImage = s.backgroundImage;
		}
		if(s.backgroundImageRepeat != null) {
			this.backgroundImageRepeat = s.backgroundImageRepeat;
		}
		if(s.backgroundImageClipTop != null) {
			this.backgroundImageClipTop = s.backgroundImageClipTop;
		}
		if(s.backgroundImageClipLeft != null) {
			this.backgroundImageClipLeft = s.backgroundImageClipLeft;
		}
		if(s.backgroundImageClipBottom != null) {
			this.backgroundImageClipBottom = s.backgroundImageClipBottom;
		}
		if(s.backgroundImageClipRight != null) {
			this.backgroundImageClipRight = s.backgroundImageClipRight;
		}
		if(s.backgroundImageSliceTop != null) {
			this.backgroundImageSliceTop = s.backgroundImageSliceTop;
		}
		if(s.backgroundImageSliceLeft != null) {
			this.backgroundImageSliceLeft = s.backgroundImageSliceLeft;
		}
		if(s.backgroundImageSliceBottom != null) {
			this.backgroundImageSliceBottom = s.backgroundImageSliceBottom;
		}
		if(s.backgroundImageSliceRight != null) {
			this.backgroundImageSliceRight = s.backgroundImageSliceRight;
		}
		if(s.borderColor != null) {
			this.borderColor = s.borderColor;
		}
		if(s.borderTopColor != null) {
			this.borderTopColor = s.borderTopColor;
		}
		if(s.borderLeftColor != null) {
			this.borderLeftColor = s.borderLeftColor;
		}
		if(s.borderBottomColor != null) {
			this.borderBottomColor = s.borderBottomColor;
		}
		if(s.borderRightColor != null) {
			this.borderRightColor = s.borderRightColor;
		}
		if(s.borderSize != null) {
			this.borderSize = s.borderSize;
		}
		if(s.borderTopSize != null) {
			this.borderTopSize = s.borderTopSize;
		}
		if(s.borderLeftSize != null) {
			this.borderLeftSize = s.borderLeftSize;
		}
		if(s.borderBottomSize != null) {
			this.borderBottomSize = s.borderBottomSize;
		}
		if(s.borderRightSize != null) {
			this.borderRightSize = s.borderRightSize;
		}
		if(s.borderRadius != null) {
			this.borderRadius = s.borderRadius;
		}
		if(s.borderRadiusTopLeft != null) {
			this.borderRadiusTopLeft = s.borderRadiusTopLeft;
		}
		if(s.borderRadiusTopRight != null) {
			this.borderRadiusTopRight = s.borderRadiusTopRight;
		}
		if(s.borderRadiusBottomLeft != null) {
			this.borderRadiusBottomLeft = s.borderRadiusBottomLeft;
		}
		if(s.borderRadiusBottomRight != null) {
			this.borderRadiusBottomRight = s.borderRadiusBottomRight;
		}
		if(s.borderOpacity != null) {
			this.borderOpacity = s.borderOpacity;
		}
		if(s.borderStyle != null) {
			this.borderStyle = s.borderStyle;
		}
		if(s.filter != null) {
			this.filter = s.filter.slice();
		}
		if(s.backdropFilter != null) {
			this.backdropFilter = s.backdropFilter.slice();
		}
		if(s.resource != null) {
			this.resource = s.resource;
		}
		if(s.icon != null) {
			this.icon = s.icon;
		}
		if(s.iconPosition != null) {
			this.iconPosition = s.iconPosition;
		}
		if(s.horizontalAlign != null) {
			this.horizontalAlign = s.horizontalAlign;
		}
		if(s.verticalAlign != null) {
			this.verticalAlign = s.verticalAlign;
		}
		if(s.textAlign != null) {
			this.textAlign = s.textAlign;
		}
		if(s.opacity != null) {
			this.opacity = s.opacity;
		}
		if(s.clip != null) {
			this.clip = s.clip;
		}
		if(s.native != null) {
			this.native = s.native;
		}
		if(s.fontName != null) {
			this.fontName = s.fontName;
		}
		if(s.fontSize != null) {
			this.fontSize = s.fontSize;
		}
		if(s.fontBold != null) {
			this.fontBold = s.fontBold;
		}
		if(s.fontUnderline != null) {
			this.fontUnderline = s.fontUnderline;
		}
		if(s.fontStrikeThrough != null) {
			this.fontStrikeThrough = s.fontStrikeThrough;
		}
		if(s.fontItalic != null) {
			this.fontItalic = s.fontItalic;
		}
		if(s.animationName != null) {
			this.animationName = s.animationName;
		}
		if(s.animationOptions != null) {
			if(this.animationOptions == null) {
				this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
			}
			if(s.animationOptions.duration != null) {
				this.animationOptions.duration = s.animationOptions.duration;
			}
			if(s.animationOptions.delay != null) {
				this.animationOptions.delay = s.animationOptions.delay;
			}
			if(s.animationOptions.iterationCount != null) {
				this.animationOptions.iterationCount = s.animationOptions.iterationCount;
			}
			if(s.animationOptions.easingFunction != null) {
				this.animationOptions.easingFunction = s.animationOptions.easingFunction;
			}
			if(s.animationOptions.direction != null) {
				this.animationOptions.direction = s.animationOptions.direction;
			}
			if(s.animationOptions.fillMode != null) {
				this.animationOptions.fillMode = s.animationOptions.fillMode;
			}
		}
		if(s.mode != null) {
			this.mode = s.mode;
		}
		if(s.pointerEvents != null) {
			this.pointerEvents = s.pointerEvents;
		}
		if(s.contentType != null) {
			this.contentType = s.contentType;
		}
		if(s.direction != null) {
			this.direction = s.direction;
		}
		if(s.contentWidth != null) {
			this.contentWidth = s.contentWidth;
		}
		if(s.contentWidthPercent != null) {
			this.contentWidthPercent = s.contentWidthPercent;
		}
		if(s.contentHeight != null) {
			this.contentHeight = s.contentHeight;
		}
		if(s.contentHeightPercent != null) {
			this.contentHeightPercent = s.contentHeightPercent;
		}
		if(s.wordWrap != null) {
			this.wordWrap = s.wordWrap;
		}
		if(s.imageRendering != null) {
			this.imageRendering = s.imageRendering;
		}
		if(s.backgroundWidth != null) {
			this.backgroundWidth = s.backgroundWidth;
		}
		if(s.backgroundWidthPercent != null) {
			this.backgroundWidthPercent = s.backgroundWidthPercent;
		}
		if(s.backgroundHeight != null) {
			this.backgroundHeight = s.backgroundHeight;
		}
		if(s.backgroundHeightPercent != null) {
			this.backgroundHeightPercent = s.backgroundHeightPercent;
		}
		if(s.layout != null) {
			this.layout = s.layout;
		}
		if(s.includeInLayout != null) {
			this.includeInLayout = s.includeInLayout;
		}
		if(s.justifyContent != null) {
			this.justifyContent = s.justifyContent;
		}
	}
	,equalTo: function(s) {
		if(s.backgroundColor != this.backgroundColor) {
			return false;
		}
		if(s.backgroundColorEnd != this.backgroundColorEnd) {
			return false;
		}
		if(s.backgroundGradientStyle != this.backgroundGradientStyle) {
			return false;
		}
		if(s.backgroundOpacity != this.backgroundOpacity) {
			return false;
		}
		if(s.borderColor != this.borderColor) {
			return false;
		}
		if(s.borderTopColor != this.borderTopColor) {
			return false;
		}
		if(s.borderLeftColor != this.borderLeftColor) {
			return false;
		}
		if(s.borderBottomColor != this.borderBottomColor) {
			return false;
		}
		if(s.borderRightColor != this.borderRightColor) {
			return false;
		}
		if(s.borderSize != this.borderSize) {
			return false;
		}
		if(s.borderTopSize != this.borderTopSize) {
			return false;
		}
		if(s.borderLeftSize != this.borderLeftSize) {
			return false;
		}
		if(s.borderBottomSize != this.borderBottomSize) {
			return false;
		}
		if(s.borderRightSize != this.borderRightSize) {
			return false;
		}
		if(s.borderRadius != this.borderRadius) {
			return false;
		}
		if(s.borderRadiusTopLeft != this.borderRadiusTopLeft) {
			return false;
		}
		if(s.borderRadiusTopRight != this.borderRadiusTopRight) {
			return false;
		}
		if(s.borderRadiusBottomLeft != this.borderRadiusBottomLeft) {
			return false;
		}
		if(s.borderRadiusBottomRight != this.borderRadiusBottomRight) {
			return false;
		}
		if(s.borderOpacity != this.borderOpacity) {
			return false;
		}
		if(s.borderStyle != this.borderStyle) {
			return false;
		}
		if(s.color != this.color) {
			return false;
		}
		if(s.cursor != this.cursor) {
			return false;
		}
		if(s.hidden != this.hidden) {
			return false;
		}
		if(s.left != this.left) {
			return false;
		}
		if(s.top != this.top) {
			return false;
		}
		if(s.autoWidth != this.autoWidth) {
			return false;
		}
		if(s.autoHeight != this.autoHeight) {
			return false;
		}
		if(s.verticalSpacing != this.verticalSpacing) {
			return false;
		}
		if(s.horizontalSpacing != this.horizontalSpacing) {
			return false;
		}
		if(s.width != this.width) {
			return false;
		}
		if(s.initialWidth != this.initialWidth) {
			return false;
		}
		if(s.initialPercentWidth != this.initialPercentWidth) {
			return false;
		}
		if(s.minWidth != this.minWidth) {
			return false;
		}
		if(s.minPercentWidth != this.minPercentWidth) {
			return false;
		}
		if(s.maxWidth != this.maxWidth) {
			return false;
		}
		if(s.maxPercentWidth != this.maxPercentWidth) {
			return false;
		}
		if(s.height != this.height) {
			return false;
		}
		if(s.initialHeight != this.initialHeight) {
			return false;
		}
		if(s.initialPercentHeight != this.initialPercentHeight) {
			return false;
		}
		if(s.minHeight != this.minHeight) {
			return false;
		}
		if(s.minPercentHeight != this.minPercentHeight) {
			return false;
		}
		if(s.maxHeight != this.maxHeight) {
			return false;
		}
		if(s.maxPercentHeight != this.maxPercentHeight) {
			return false;
		}
		if(s.percentWidth != this.percentWidth) {
			return false;
		}
		if(s.percentHeight != this.percentHeight) {
			return false;
		}
		if(s.paddingTop != this.paddingTop) {
			return false;
		}
		if(s.paddingLeft != this.paddingLeft) {
			return false;
		}
		if(s.paddingRight != this.paddingRight) {
			return false;
		}
		if(s.paddingBottom != this.paddingBottom) {
			return false;
		}
		if(s.marginTop != this.marginTop) {
			return false;
		}
		if(s.marginLeft != this.marginLeft) {
			return false;
		}
		if(s.marginRight != this.marginRight) {
			return false;
		}
		if(s.marginBottom != this.marginBottom) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.backgroundImage,this.backgroundImage)) {
			return false;
		}
		if(s.backgroundImageRepeat != this.backgroundImageRepeat) {
			return false;
		}
		if(s.backgroundImageClipTop != this.backgroundImageClipTop) {
			return false;
		}
		if(s.backgroundImageClipLeft != this.backgroundImageClipLeft) {
			return false;
		}
		if(s.backgroundImageClipBottom != this.backgroundImageClipBottom) {
			return false;
		}
		if(s.backgroundImageClipRight != this.backgroundImageClipRight) {
			return false;
		}
		if(s.backgroundImageSliceTop != this.backgroundImageSliceTop) {
			return false;
		}
		if(s.backgroundImageSliceLeft != this.backgroundImageSliceLeft) {
			return false;
		}
		if(s.backgroundImageSliceBottom != this.backgroundImageSliceBottom) {
			return false;
		}
		if(s.backgroundImageSliceRight != this.backgroundImageSliceRight) {
			return false;
		}
		if(s.filter != this.filter) {
			return false;
		}
		if(s.backdropFilter != this.backdropFilter) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.resource,this.resource)) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.icon,this.icon)) {
			return false;
		}
		if(s.iconPosition != this.iconPosition) {
			return false;
		}
		if(s.horizontalAlign != this.horizontalAlign) {
			return false;
		}
		if(s.verticalAlign != this.verticalAlign) {
			return false;
		}
		if(s.textAlign != this.textAlign) {
			return false;
		}
		if(s.opacity != this.opacity) {
			return false;
		}
		if(s.clip != this.clip) {
			return false;
		}
		if(s.native != this.native) {
			return false;
		}
		if(s.fontName != this.fontName) {
			return false;
		}
		if(s.fontSize != this.fontSize) {
			return false;
		}
		if(s.fontBold != this.fontBold) {
			return false;
		}
		if(s.fontUnderline != this.fontUnderline) {
			return false;
		}
		if(s.fontStrikeThrough != this.fontStrikeThrough) {
			return false;
		}
		if(s.fontItalic != this.fontItalic) {
			return false;
		}
		if(haxe_ui_util_Variant.neq(s.resource,this.resource)) {
			return false;
		}
		if(s.animationName != this.animationName) {
			return false;
		}
		if(this.animationOptions != null && this.animationOptions.compareTo(s.animationOptions) == false) {
			return false;
		}
		if(s.mode != this.mode) {
			return false;
		}
		if(s.pointerEvents != this.pointerEvents) {
			return false;
		}
		if(s.contentType != this.contentType) {
			return false;
		}
		if(s.direction != this.direction) {
			return false;
		}
		if(s.contentWidth != this.contentWidth) {
			return false;
		}
		if(s.contentWidthPercent != this.contentWidthPercent) {
			return false;
		}
		if(s.contentHeight != this.contentHeight) {
			return false;
		}
		if(s.contentHeightPercent != this.contentHeightPercent) {
			return false;
		}
		if(s.wordWrap != this.wordWrap) {
			return false;
		}
		if(s.imageRendering != this.imageRendering) {
			return false;
		}
		if(s.backgroundWidth != this.backgroundWidth) {
			return false;
		}
		if(s.backgroundWidthPercent != this.backgroundWidthPercent) {
			return false;
		}
		if(s.backgroundHeight != this.backgroundHeight) {
			return false;
		}
		if(s.backgroundHeightPercent != this.backgroundHeightPercent) {
			return false;
		}
		if(s.layout != this.layout) {
			return false;
		}
		if(s.includeInLayout != this.includeInLayout) {
			return false;
		}
		if(s.justifyContent != this.justifyContent) {
			return false;
		}
		return true;
	}
	,__class__: haxe_ui_styles_Style
	,__properties__: {get_fullBorderSize:"get_fullBorderSize",get_borderType:"get_borderType"}
};
var haxe_ui_styles_StyleLookupMap = function() {
	this._valueMap = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.styles.StyleLookupMap"] = haxe_ui_styles_StyleLookupMap;
haxe_ui_styles_StyleLookupMap.__name__ = "haxe.ui.styles.StyleLookupMap";
haxe_ui_styles_StyleLookupMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_styles_StyleLookupMap.get_instance = function() {
	if(haxe_ui_styles_StyleLookupMap._instance == null) {
		haxe_ui_styles_StyleLookupMap._instance = new haxe_ui_styles_StyleLookupMap();
	}
	return haxe_ui_styles_StyleLookupMap._instance;
};
haxe_ui_styles_StyleLookupMap.prototype = {
	_valueMap: null
	,get: function(name) {
		return this._valueMap.h[name];
	}
	,__class__: haxe_ui_styles_StyleLookupMap
};
var haxe_ui_styles_StyleSheet = function() {
	this._animations = new haxe_ds_StringMap();
	this._mediaQueries = [];
	this._rules = [];
	this._imports = [];
};
$hxClasses["haxe.ui.styles.StyleSheet"] = haxe_ui_styles_StyleSheet;
haxe_ui_styles_StyleSheet.__name__ = "haxe.ui.styles.StyleSheet";
haxe_ui_styles_StyleSheet.prototype = {
	name: null
	,_imports: null
	,_rules: null
	,_mediaQueries: null
	,_animations: null
	,get_animations: function() {
		return this._animations;
	}
	,addImport: function(el) {
		this._imports.push(el);
	}
	,imports: null
	,get_imports: function() {
		return this._imports;
	}
	,rules: null
	,get_rules: function() {
		var r = this._rules.slice();
		var _g = 0;
		var _g1 = this._mediaQueries;
		while(_g < _g1.length) {
			var mq = _g1[_g];
			++_g;
			if(mq.get_relevant()) {
				r = r.concat(mq.get_styleSheet().get_rules());
			}
		}
		return r;
	}
	,removeAllRules: function() {
		this._rules = [];
	}
	,clear: function() {
		this.removeAllRules();
		this._imports = [];
		this._mediaQueries = [];
		this._animations = new haxe_ds_StringMap();
	}
	,addRule: function(el) {
		if(el.directiveCount == 0) {
			return;
		}
		this._rules.push(el);
	}
	,addMediaQuery: function(el) {
		this._mediaQueries.push(el);
	}
	,addAnimation: function(el) {
		this._animations.h[el.id] = el;
	}
	,parse: function(css) {
		var parser = new haxe_ui_styles_Parser();
		var ss = parser.parse(css);
		var f = new haxe_ui_styles_StyleSheet();
		var _g = 0;
		var _g1 = ss.get_imports();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var importCss = haxe_ui_ToolkitAssets.get_instance().getText(i.url);
			var importStyleSheet = new haxe_ui_styles_Parser().parse(importCss);
			f.merge(importStyleSheet);
		}
		f.merge(ss);
		this.merge(f);
	}
	,merge: function(styleSheet) {
		this._imports = this._imports.concat(styleSheet._imports);
		this._rules = this._rules.concat(styleSheet._rules);
		this._mediaQueries = this._mediaQueries.concat(styleSheet._mediaQueries);
		var h = styleSheet._animations.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this._animations.h[k] = styleSheet._animations.h[k];
		}
	}
	,buildStyleFor: function(c,style) {
		if(style == null) {
			style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(!r.match(c)) {
				continue;
			}
			style.mergeDirectives(r.directives);
		}
		return style;
	}
	,__class__: haxe_ui_styles_StyleSheet
	,__properties__: {get_rules:"get_rules",get_imports:"get_imports",get_animations:"get_animations"}
};
var haxe_ui_styles_Value = $hxEnums["haxe.ui.styles.Value"] = { __ename__:"haxe.ui.styles.Value",__constructs__:null
	,VString: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VString",$_.__params__ = ["v"],$_)
	,VNumber: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VNumber",$_.__params__ = ["v"],$_)
	,VBool: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VBool",$_.__params__ = ["v"],$_)
	,VDimension: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VDimension",$_.__params__ = ["v"],$_)
	,VColor: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VColor",$_.__params__ = ["v"],$_)
	,VCall: ($_=function(f,vl) { return {_hx_index:5,f:f,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VCall",$_.__params__ = ["f","vl"],$_)
	,VConstant: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VConstant",$_.__params__ = ["v"],$_)
	,VComposite: ($_=function(vl) { return {_hx_index:7,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VComposite",$_.__params__ = ["vl"],$_)
	,VTime: ($_=function(v,unit) { return {_hx_index:8,v:v,unit:unit,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VTime",$_.__params__ = ["v","unit"],$_)
	,VNone: {_hx_name:"VNone",_hx_index:9,__enum__:"haxe.ui.styles.Value",toString:$estr}
};
haxe_ui_styles_Value.__constructs__ = [haxe_ui_styles_Value.VString,haxe_ui_styles_Value.VNumber,haxe_ui_styles_Value.VBool,haxe_ui_styles_Value.VDimension,haxe_ui_styles_Value.VColor,haxe_ui_styles_Value.VCall,haxe_ui_styles_Value.VConstant,haxe_ui_styles_Value.VComposite,haxe_ui_styles_Value.VTime,haxe_ui_styles_Value.VNone];
haxe_ui_styles_Value.__empty_constructs__ = [haxe_ui_styles_Value.VNone];
var haxe_ui_styles_ValueTools = function() { };
$hxClasses["haxe.ui.styles.ValueTools"] = haxe_ui_styles_ValueTools;
haxe_ui_styles_ValueTools.__name__ = "haxe.ui.styles.ValueTools";
haxe_ui_styles_ValueTools.parse = function(s) {
	var v = null;
	var hasSpace = s.indexOf(" ") != -1;
	if(StringTools.endsWith(s,"%") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PERCENT(parseFloat(s)));
	} else if(StringTools.endsWith(s,"px") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vw") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VW(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vh") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VH(parseFloat(s)));
	} else if(StringTools.endsWith(s,"rem") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.REM(parseFloat(s)));
	} else if(haxe_ui_util_Color.isValidColor(s)) {
		v = haxe_ui_styles_Value.VColor(haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromString(s)));
	} else if(s == "none") {
		v = haxe_ui_styles_Value.VNone;
	} else if(StringTools.startsWith(s,"\"") && StringTools.endsWith(s,"\"")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(StringTools.startsWith(s,"'") && StringTools.endsWith(s,"'")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(haxe_ui_styles_ValueTools.isNum(s) == true) {
		v = haxe_ui_styles_Value.VNumber(parseFloat(s));
	} else if(s == "true" || s == "false") {
		v = haxe_ui_styles_Value.VBool(s == "true");
	} else if(haxe_ui_styles_ValueTools.timeEReg.match(s)) {
		v = haxe_ui_styles_Value.VTime(parseFloat(haxe_ui_styles_ValueTools.timeEReg.matched(1)),haxe_ui_styles_ValueTools.timeEReg.matched(2));
	} else if(s.indexOf("(") != -1) {
		var calls = haxe_ui_styles_ValueTools.extractCalls(s);
		if(calls.length == 1) {
			var n = s.indexOf("(");
			var f = HxOverrides.substr(s,0,n);
			var params = HxOverrides.substr(s,n + 1,s.length - n - 2);
			if(f == "calc") {
				params = "'" + params + "'";
			}
			var vl = [];
			var _g = 0;
			var _g1 = params.split(",");
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				p = StringTools.trim(p);
				vl.push(haxe_ui_styles_ValueTools.parse(p));
			}
			v = haxe_ui_styles_Value.VCall(f,vl);
		} else {
			var vl = [];
			var _g = 0;
			while(_g < calls.length) {
				var a = calls[_g];
				++_g;
				a = StringTools.trim(a);
				vl.push(haxe_ui_styles_ValueTools.parse(a));
			}
			v = haxe_ui_styles_Value.VComposite(vl);
		}
	} else {
		var arr = s.split(" ");
		if(arr.length == 1) {
			v = haxe_ui_styles_Value.VConstant(s);
		} else {
			var vl = [];
			var _g = 0;
			while(_g < arr.length) {
				var a = arr[_g];
				++_g;
				a = StringTools.trim(a);
				vl.push(haxe_ui_styles_ValueTools.parse(a));
			}
			v = haxe_ui_styles_Value.VComposite(vl);
		}
	}
	return v;
};
haxe_ui_styles_ValueTools.extractCalls = function(s) {
	var calls = [];
	var counter = 0;
	var i = 0;
	var startCall = 0;
	var startParams = -1;
	while(i < s.length) {
		var char = s.charAt(i);
		if(char == "(") {
			if(startParams == -1) {
				startParams = i;
			}
			--counter;
		} else if(char == ")") {
			++counter;
		}
		if(startParams != -1 && counter == 0) {
			var preParams = s.substring(startCall,startParams);
			var words = preParams.split(" ");
			var _g = 0;
			var _g1 = words.length;
			while(_g < _g1) {
				var j = _g++;
				var word = StringTools.trim(words[j]);
				if(j == words.length - 1) {
					var func_params = s.substring(startParams,i + 1);
					calls.push(word + func_params);
				} else if(word != "") {
					calls.push(word);
				}
			}
			startCall = i + 1;
			startParams = -1;
		}
		++i;
	}
	return calls;
};
haxe_ui_styles_ValueTools.composite = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var _g = value.v;
		return [value];
	case 3:
		var _g = value.v;
		return [value];
	case 7:
		var vl = value.vl;
		return vl;
	case 9:
		return [];
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.isNum = function(s) {
	var b = true;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(s,i);
		if(!(c >= 48 && c <= 57 || c == 46 || c == 45)) {
			b = false;
			break;
		}
	}
	return b;
};
haxe_ui_styles_ValueTools.time = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 8) {
		var v = value.v;
		var unit = value.unit;
		switch(unit) {
		case "ms":
			return v / 1000;
		case "s":
			return v;
		default:
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.variant = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 1:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 2:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_util_Variant.fromDynamic(haxe_ui_styles_ValueTools.call(f,vl));
	case 6:
		var v = value.v;
		return haxe_ui_util_Variant.fromDynamic(v);
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.string = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return v;
	case 2:
		var v = value.v;
		if(v == null) {
			return "null";
		} else {
			return "" + v;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 6:
		var v = value.v;
		return v;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.bool = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 2) {
		var v = value.v;
		return v;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.none = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 9) {
		return true;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.int = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v | 0;
	case 4:
		var v = value.v;
		return v;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.float = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 4:
		var v = value.v;
		return v;
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.percent = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 3) {
		var v = value.v;
		if(v._hx_index == 0) {
			var d = v.value;
			return d;
		} else {
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.constant = function(value,required) {
	if(value == null) {
		return false;
	}
	if(value._hx_index == 6) {
		var v = value.v;
		return v == required;
	} else {
		return false;
	}
};
haxe_ui_styles_ValueTools.calcDimension = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 3:
		var v = value.v;
		switch(v._hx_index) {
		case 1:
			var d = v.value;
			return d;
		case 2:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_width();
		case 3:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_height();
		case 4:
			var d = v.value;
			return d * haxe_ui_Toolkit.pixelsPerRem;
		default:
			return null;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.calcEasing = function(value) {
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		switch(v) {
		case "ease":
			return "ease";
		case "ease-in":
			return "easeIn";
		case "ease-in-out":
			return "easeInOut";
		case "ease-out":
			return "easeOut";
		case "linear":
			return "linear";
		default:
			return null;
		}
		break;
	case 6:
		var v = value.v;
		switch(v) {
		case "ease":
			return "ease";
		case "ease-in":
			return "easeIn";
		case "ease-in-out":
			return "easeInOut";
		case "ease-out":
			return "easeOut";
		case "linear":
			return "linear";
		default:
			return null;
		}
		break;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.call = function(f,vl) {
	if(!Object.prototype.hasOwnProperty.call(haxe_ui_styles_CssFunctions._cssFunctions.h,f)) {
		haxe_Log.trace("unknown css function: " + f,{ fileName : "haxe/ui/styles/ValueTools.hx", lineNumber : 415, className : "haxe.ui.styles.ValueTools", methodName : "call"});
		return null;
	}
	return haxe_ui_styles_CssFunctions._cssFunctions.h[f](vl);
};
var haxe_ui_styles_animation_AnimationOptions = function(duration,delay,iterationCount,easingFunction,direction,fillMode) {
	this.duration = duration;
	this.delay = delay;
	this.iterationCount = iterationCount;
	this.easingFunction = easingFunction;
	this.direction = direction;
	this.fillMode = fillMode;
};
$hxClasses["haxe.ui.styles.animation.AnimationOptions"] = haxe_ui_styles_animation_AnimationOptions;
haxe_ui_styles_animation_AnimationOptions.__name__ = "haxe.ui.styles.animation.AnimationOptions";
haxe_ui_styles_animation_AnimationOptions.prototype = {
	duration: null
	,delay: null
	,iterationCount: null
	,easingFunction: null
	,direction: null
	,fillMode: null
	,compareTo: function(op) {
		if(op != null && op.duration == this.duration && op.delay == this.delay && op.iterationCount == this.iterationCount && op.easingFunction == this.easingFunction && op.direction == this.direction) {
			return op.fillMode == this.fillMode;
		} else {
			return false;
		}
	}
	,compareToAnimation: function(anim) {
		if((this.duration == null && anim.duration == 0 || this.duration != null && anim.duration == this.duration) && (this.delay == null && anim.delay == 0 || this.delay != null && anim.delay == this.delay) && (this.iterationCount == null && anim.iterationCount == 1 || this.iterationCount != null && anim.iterationCount == this.iterationCount) && (this.easingFunction == null && anim.easingFunction == haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION || this.easingFunction != null && anim.easingFunction == this.easingFunction) && (this.direction == null && anim.direction == "normal" || this.direction != null && anim.direction == this.direction)) {
			if(!(this.fillMode == null && anim.fillMode == "forwards")) {
				if(this.fillMode != null) {
					return anim.fillMode == this.fillMode;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_styles_animation_AnimationOptions
};
var haxe_ui_styles_animation_Animation = function(target,options) {
	this._initialized = false;
	this._currentIterationCount = -1;
	this._currentKeyFrameIndex = -1;
	this.iterationCount = 1;
	this.fillMode = "forwards";
	this.easingFunction = haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION;
	this.duration = 0;
	this.direction = "normal";
	this.delay = 0;
	this.target = target;
	if(options != null) {
		if(options.duration != null) {
			this.duration = options.duration;
		}
		if(options.easingFunction != null) {
			this.easingFunction = options.easingFunction;
		}
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.iterationCount != null) {
			this.iterationCount = options.iterationCount;
		}
		if(options.direction != null) {
			this.direction = options.direction;
		}
		if(options.fillMode != null) {
			this.fillMode = options.fillMode;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.Animation"] = haxe_ui_styles_animation_Animation;
haxe_ui_styles_animation_Animation.__name__ = "haxe.ui.styles.animation.Animation";
haxe_ui_styles_animation_Animation.createWithKeyFrames = function(animationKeyFrames,target,options) {
	var animation = new haxe_ui_styles_animation_Animation(target,options);
	animation.name = animationKeyFrames.id;
	if(animation._keyframes == null) {
		animation._keyframes = [];
	}
	var _g = 0;
	var _g1 = animationKeyFrames.get_keyFrames();
	while(_g < _g1.length) {
		var keyFrame = _g1[_g];
		++_g;
		var kf = new haxe_ui_styles_animation_KeyFrame();
		var _g2 = keyFrame.time;
		if(_g2._hx_index == 3) {
			var v = _g2.v;
			if(v._hx_index == 0) {
				var p = v.value;
				kf.time = p / 100;
				kf.easingFunction = animation.easingFunction;
				kf.directives = keyFrame.directives;
				animation._keyframes.push(kf);
			}
		}
	}
	return animation;
};
haxe_ui_styles_animation_Animation.prototype = {
	delay: null
	,direction: null
	,duration: null
	,easingFunction: null
	,fillMode: null
	,iterationCount: null
	,name: null
	,running: null
	,target: null
	,run: function(onFinish) {
		if(this.get_keyframeCount() == 0 || this.running) {
			return;
		}
		if(!this._initialized) {
			this._initialize();
		}
		this._currentKeyFrameIndex = -1;
		this._currentIterationCount = 0;
		this.running = true;
		this._saveState();
		this._runNextKeyframe(onFinish);
	}
	,stop: function() {
		if(this.running == false) {
			return;
		}
		this.running = false;
		var currentKF = this.get_currentKeyFrame();
		if(currentKF != null) {
			currentKF.stop();
			this._currentKeyFrameIndex = -1;
		}
		this._keyframes = null;
		this._restoreState();
	}
	,_currentKeyFrameIndex: null
	,_currentIterationCount: null
	,_initialState: null
	,_initialized: null
	,_keyframes: null
	,get_keyframeCount: function() {
		if(this._keyframes == null) {
			return 0;
		} else {
			return this._keyframes.length;
		}
	}
	,get_currentKeyFrame: function() {
		if(this._currentKeyFrameIndex >= 0) {
			return this._keyframes[this._currentKeyFrameIndex];
		} else {
			return null;
		}
	}
	,_initialize: function() {
		switch(this.direction) {
		case "alternate":
			this._addAlternateKeyframes();
			break;
		case "alternate-reverse":
			this._reverseCurrentKeyframes();
			this._addAlternateKeyframes();
			break;
		case "normal":
			break;
		case "reverse":
			this._reverseCurrentKeyframes();
			break;
		}
		var currentTime = 0;
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			switch(this.direction) {
			case "alternate":case "normal":
				break;
			case "alternate-reverse":case "reverse":
				keyframe.time = 1 - keyframe.time;
				break;
			}
			keyframe.time = this.duration * keyframe.time - currentTime;
			currentTime += keyframe.time;
		}
		if(this.delay > 0) {
			var keyframe = new haxe_ui_styles_animation_KeyFrame();
			keyframe.time = this.delay;
			keyframe.easingFunction = this.easingFunction;
			this._keyframes.unshift(keyframe);
		} else if(this.delay < 0) {
			currentTime = 0;
			var lastKeyframe = null;
			while(this._keyframes.length > 0) {
				var keyframe = this._keyframes[0];
				currentTime -= keyframe.time;
				if(currentTime >= this.delay) {
					lastKeyframe = keyframe;
					this._keyframes.splice(0,1);
				} else {
					keyframe.delay = -(currentTime - this.delay + keyframe.time);
					if(lastKeyframe != null) {
						lastKeyframe.time = 0;
						this._keyframes.unshift(lastKeyframe);
					}
					break;
				}
			}
		}
		this._initialized = true;
	}
	,_runNextKeyframe: function(onFinish) {
		if(this.running == false) {
			return;
		}
		if(++this._currentKeyFrameIndex >= this._keyframes.length) {
			this._currentKeyFrameIndex = -1;
			this._restoreState();
			if(this.iterationCount == -1 || ++this._currentIterationCount < this.iterationCount) {
				this._saveState();
				this._runNextKeyframe(onFinish);
			} else {
				this.running = false;
				if(onFinish != null) {
					onFinish();
				}
			}
			return;
		} else {
			var _g = this;
			var onFinish1 = onFinish;
			var tmp = function() {
				_g._runNextKeyframe(onFinish1);
			};
			this.get_currentKeyFrame().run(this.target,tmp);
		}
	}
	,_addAlternateKeyframes: function() {
		var i = this._keyframes.length;
		while(--i >= 0) {
			var keyframe = this._keyframes[i];
			var newKeyframe = new haxe_ui_styles_animation_KeyFrame();
			newKeyframe.time = 1 - keyframe.time;
			newKeyframe.easingFunction = this._getReverseEasingFunction(keyframe.easingFunction);
			newKeyframe.directives = keyframe.directives;
			this._keyframes.push(newKeyframe);
		}
	}
	,_reverseCurrentKeyframes: function() {
		this._keyframes.reverse();
		var func = this._getReverseEasingFunction(this.easingFunction);
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			keyframe.easingFunction = func;
		}
	}
	,_getReverseEasingFunction: function(easingFunction) {
		switch(easingFunction) {
		case "easeIn":
			return "easeOut";
		case "easeOut":
			return "easeIn";
		default:
			return easingFunction;
		}
	}
	,_saveState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState == null) {
			this._initialState = new haxe_ds_StringMap();
		}
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = keyframe.directives;
			while(_g2 < _g3.length) {
				var directive = _g3[_g2];
				++_g2;
				var property = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(directive.directive);
				if(!Object.prototype.hasOwnProperty.call(this._initialState.h,property)) {
					var this1 = this._initialState;
					var value = Reflect.getProperty(this.target,property);
					this1.h[property] = value;
				}
			}
		}
	}
	,_restoreState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState != null) {
			var h = this._initialState.h;
			var property_h = h;
			var property_keys = Object.keys(h);
			var property_length = property_keys.length;
			var property_current = 0;
			while(property_current < property_length) {
				var property = property_keys[property_current++];
				Reflect.setProperty(this.target,property,this._initialState.h[property]);
			}
			this._initialState = null;
		}
	}
	,_shouldRestoreState: function() {
		if(!(this.fillMode == "none" || this.fillMode == "forwards" && this.direction != "normal" && this.direction != "alternate")) {
			if(this.fillMode == "backwards" && this.direction != "reverse") {
				return this.direction != "alternate-reverse";
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: haxe_ui_styles_animation_Animation
	,__properties__: {get_keyframeCount:"get_keyframeCount",get_currentKeyFrame:"get_currentKeyFrame"}
};
var haxe_ui_styles_animation_KeyFrame = function() {
	this.delay = 0;
	this.time = 0;
	this.directives = [];
};
$hxClasses["haxe.ui.styles.animation.KeyFrame"] = haxe_ui_styles_animation_KeyFrame;
haxe_ui_styles_animation_KeyFrame.__name__ = "haxe.ui.styles.animation.KeyFrame";
haxe_ui_styles_animation_KeyFrame.prototype = {
	directives: null
	,time: null
	,delay: null
	,easingFunction: null
	,_actuator: null
	,stop: function() {
		if(this._actuator != null) {
			this._actuator.stop();
			this._actuator = null;
		}
	}
	,run: function(target,cb) {
		var _gthis = this;
		if(this._actuator != null) {
			return;
		}
		var properties = { };
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			properties[d.directive] = d.value;
		}
		var hasFrameEvent = target.hasEvent("animationframe");
		this._actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,this.time,new haxe_ui_styles_animation_util_ActuatorOptions(this.delay,this.easingFunction,function() {
			_gthis._actuator = null;
			cb();
		},function(time,delta,position) {
			if(hasFrameEvent) {
				var event = new haxe_ui_events_AnimationEvent("animationframe");
				event.currentTime = time;
				event.delta = delta;
				event.position = position;
				target.dispatch(event);
			}
		}));
		this._actuator.run();
	}
	,__class__: haxe_ui_styles_animation_KeyFrame
};
var haxe_ui_styles_animation_util_ActuatorOptions = function(delay,easingFunction,onComplete,onUpdate) {
	this.delay = delay;
	this.easingFunction = easingFunction;
	this.onComplete = onComplete;
	this.onUpdate = onUpdate;
};
$hxClasses["haxe.ui.styles.animation.util.ActuatorOptions"] = haxe_ui_styles_animation_util_ActuatorOptions;
haxe_ui_styles_animation_util_ActuatorOptions.__name__ = "haxe.ui.styles.animation.util.ActuatorOptions";
haxe_ui_styles_animation_util_ActuatorOptions.prototype = {
	delay: null
	,easingFunction: null
	,onComplete: null
	,onUpdate: null
	,__class__: haxe_ui_styles_animation_util_ActuatorOptions
};
var haxe_ui_styles_animation_util_Actuator = function(target,properties,duration,options) {
	this.delay = 0;
	this.duration = 0;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	if(options != null) {
		this._easeFunc = haxe_ui_styles_animation_util__$Actuator_Ease.get(options.easingFunction != null ? options.easingFunction : "ease");
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.onComplete != null) {
			this._onComplete = options.onComplete;
		}
		if(options.onUpdate != null) {
			this._onUpdate = options.onUpdate;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.util.Actuator"] = haxe_ui_styles_animation_util_Actuator;
haxe_ui_styles_animation_util_Actuator.__name__ = "haxe.ui.styles.animation.util.Actuator";
haxe_ui_styles_animation_util_Actuator.registerFrameCallback = function(fn) {
	haxe_ui_styles_animation_util_Actuator.frameCallbacks.push(fn);
	if(haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks == false) {
		haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks = true;
		haxe_ui_styles_animation_util_Actuator.processCallbacks();
	}
};
haxe_ui_styles_animation_util_Actuator.unregisterFrameCallback = function(fn) {
	new haxe_ui_CallLater(function() {
		HxOverrides.remove(haxe_ui_styles_animation_util_Actuator.frameCallbacks,fn);
		if(haxe_ui_styles_animation_util_Actuator.frameCallbacks.length == 0) {
			haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks = false;
		}
	});
};
haxe_ui_styles_animation_util_Actuator.processCallbacks = function() {
	if(haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks == false) {
		return;
	}
	new haxe_ui_CallLater(function() {
		var stamp = HxOverrides.now() / 1000;
		var _g = 0;
		var _g1 = haxe_ui_styles_animation_util_Actuator.frameCallbacks;
		while(_g < _g1.length) {
			var cb = _g1[_g];
			++_g;
			cb(stamp);
		}
		haxe_ui_styles_animation_util_Actuator.processCallbacks();
	});
};
haxe_ui_styles_animation_util_Actuator.prototype = {
	target: null
	,properties: null
	,duration: null
	,delay: null
	,stop: function() {
		this._stopped = true;
		this.target = null;
	}
	,run: function() {
		var _gthis = this;
		this._initialize();
		this._stopped = false;
		if(((this.target) instanceof haxe_ui_core_Component) && (js_Boot.__cast(this.target , haxe_ui_core_Component)).get_animatable() == false) {
			this.duration = 0;
		}
		if(this.duration == 0) {
			this._apply(1);
			this._finish();
		} else {
			var precision = 2;
			if(precision == null) {
				precision = 0;
			}
			this._currentTime = Math.round(HxOverrides.now() / 1000 * Math.pow(10,precision)) / Math.pow(10,precision);
			if(this.delay > 0) {
				haxe_ui_util_Timer.delay(function() {
					haxe_ui_styles_animation_util_Actuator.registerFrameCallback($bind(_gthis,_gthis._nextFrame));
				},this.delay * 1000 | 0);
			} else {
				haxe_ui_styles_animation_util_Actuator.registerFrameCallback($bind(this,this._nextFrame));
			}
		}
	}
	,_currentTime: null
	,_easeFunc: null
	,_onComplete: null
	,_onUpdate: null
	,_stopped: null
	,_propertyDetails: null
	,_colorPropertyDetails: null
	,_stringPropertyDetails: null
	,_initialize: function() {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		this._propertyDetails = [];
		this._colorPropertyDetails = [];
		this._stringPropertyDetails = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var componentProperty = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(p);
			var end = Reflect.getProperty(this.properties,p);
			if(end._hx_index == 3) {
				var _g2 = end.v;
				if(_g2._hx_index == 0) {
					var v = _g2.value;
					componentProperty = "percent" + haxe_ui_util_StringUtil.capitalizeFirstLetter(componentProperty);
				}
			}
			var start = Reflect.getProperty(this.target,componentProperty);
			if(start == null) {
				switch(end._hx_index) {
				case 0:
					var v1 = end.v;
					start = v1;
					break;
				case 1:
					var v2 = end.v;
					start = 0;
					break;
				case 3:
					var _g3 = end.v;
					if(_g3._hx_index == 0) {
						var v3 = _g3.value;
						start = 0;
					}
					break;
				default:
				}
			}
			var isVariant = false;
			if(start != null) {
				try {
					if(start._hx_index == 2) {
						var v4 = start.s;
						start = v4;
						isVariant = true;
					}
				} catch( _g4 ) {
				}
			}
			if(end != null) {
				try {
					if(end._hx_index == 2) {
						var v5 = end.s;
						end = v5;
						isVariant = true;
					}
				} catch( _g5 ) {
				}
			}
			if(start == null || end == null) {
				continue;
			}
			switch(end._hx_index) {
			case 0:
				var v6 = end.v;
				var startVal = start;
				var endVal = haxe_ui_styles_ValueTools.string(end);
				if(endVal.indexOf("[[") != -1) {
					var n1 = endVal.indexOf("[[");
					var n2 = endVal.indexOf("]]") + 2;
					var before = HxOverrides.substr(endVal,0,n1);
					var after = HxOverrides.substr(endVal,n2,null);
					var s = StringTools.replace(startVal,before,"");
					s = StringTools.replace(s,after,"");
					var startInt = Std.parseInt(s);
					var s1 = StringTools.replace(endVal,before + "[[","");
					s1 = StringTools.replace(s1,"]]" + after,"");
					var endInt = Std.parseInt(s1);
					var details = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					details.pattern = before + "[[n]]" + after;
					details.startInt = startInt;
					details.changeInt = endInt - startInt;
					var c = js_Boot.getClass(this.target);
					var typeInfo = haxe_ui_core_TypeMap.getTypeInfo(c.__name__,componentProperty);
					if(typeInfo != null && isVariant == false && typeInfo == "Variant") {
						isVariant = true;
					}
					details.isVariant = isVariant;
					this._stringPropertyDetails.push(details);
				} else {
					var details1 = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					this._stringPropertyDetails.push(details1);
				}
				break;
			case 3:
				var _g6 = end.v;
				if(_g6._hx_index == 0) {
					var v7 = _g6.value;
					var val = v7;
					if(val != null) {
						var details2 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start);
						this._propertyDetails.push(details2);
					}
				} else {
					var val1 = haxe_ui_styles_ValueTools.calcDimension(end);
					if(val1 != null) {
						var details3 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val1 - start);
						this._propertyDetails.push(details3);
					} else {
						var details4 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
						this._propertyDetails.push(details4);
					}
				}
				break;
			case 4:
				var v8 = end.v;
				var startColor = js_Boot.__cast(start , Int);
				var endColor = v8;
				var details5 = new haxe_ui_styles_animation_util_ColorPropertyDetails(this.target,componentProperty,startColor,(endColor >> 16 & 255) - (startColor >> 16 & 255),(endColor >> 8 & 255) - (startColor >> 8 & 255),(endColor & 255) - (startColor & 255),(endColor >> 24 & 255) - (startColor >> 24 & 255));
				if(this._colorPropertyDetails == null) {
					this._colorPropertyDetails = [];
				}
				this._colorPropertyDetails.push(details5);
				break;
			default:
				var val2 = haxe_ui_styles_ValueTools.calcDimension(end);
				if(val2 != null) {
					var details6 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val2 - start);
					this._propertyDetails.push(details6);
				} else {
					var details7 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
					this._propertyDetails.push(details7);
				}
			}
		}
	}
	,_nextFrame: function(stamp) {
		if(this._stopped == true) {
			return;
		}
		var currentTime = stamp;
		var delta = currentTime - this._currentTime;
		if(this.delay < 0) {
			delta += -this.delay;
		}
		var tweenPosition = delta / this.duration;
		if(tweenPosition > 1) {
			tweenPosition = 1;
		}
		this._apply(tweenPosition);
		if(this._onUpdate != null) {
			this._onUpdate(currentTime,delta,tweenPosition);
		}
		if(delta >= this.duration) {
			this._finish();
		}
	}
	,_isValid: function() {
		if(this.target == null) {
			return false;
		}
		if(((this.target) instanceof haxe_ui_core_Component)) {
			var c = this.target;
			if(c._isDisposed == true) {
				return false;
			}
		}
		return true;
	}
	,_apply: function(position) {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		position = this._easeFunc(position);
		var _g = 0;
		var _g1 = this._propertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			var newPos = details.start + details.change * position;
			Reflect.setProperty(this.target,details.propertyName,newPos);
			details.lastValue = newPos;
		}
		var _g = 0;
		var _g1 = this._stringPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			if(details.pattern != null) {
				var newInt = details.startInt + position * details.changeInt | 0;
				var newString = StringTools.replace(details.pattern,"[[n]]","" + newInt);
				if(details.isVariant) {
					var v = haxe_ui_util_Variant.fromString(newString);
					Reflect.setProperty(this.target,details.propertyName,v);
				} else {
					Reflect.setProperty(this.target,details.propertyName,newString);
				}
			} else if(position != 1) {
				Reflect.setProperty(this.target,details.propertyName,details.start);
			} else {
				Reflect.setProperty(this.target,details.propertyName,details.end);
			}
		}
		var _g = 0;
		var _g1 = this._colorPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			var currentColor = haxe_ui_util_Color.fromComponents((details.start >> 16 & 255) + details.changeR * position | 0,(details.start >> 8 & 255) + details.changeG * position | 0,(details.start & 255) + details.changeB * position | 0,(details.start >> 24 & 255) + details.changeA * position | 0);
			Reflect.setProperty(details.target,details.propertyName,currentColor);
		}
	}
	,_finish: function() {
		this._stopped = true;
		this.target = null;
		haxe_ui_styles_animation_util_Actuator.unregisterFrameCallback($bind(this,this._nextFrame));
		if(this._onComplete != null) {
			this._onComplete();
		}
	}
	,__class__: haxe_ui_styles_animation_util_Actuator
};
var haxe_ui_styles_animation_util__$Actuator_Ease = function() { };
$hxClasses["haxe.ui.styles.animation.util._Actuator.Ease"] = haxe_ui_styles_animation_util__$Actuator_Ease;
haxe_ui_styles_animation_util__$Actuator_Ease.__name__ = "haxe.ui.styles.animation.util._Actuator.Ease";
haxe_ui_styles_animation_util__$Actuator_Ease.get = function(easingFunction) {
	switch(easingFunction) {
	case "easeIn":
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeIn;
	case "ease":case "easeInOut":
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut;
	case "easeOut":
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeOut;
	case "linear":
		return haxe_ui_styles_animation_util__$Actuator_Ease.linear;
	}
};
haxe_ui_styles_animation_util__$Actuator_Ease.linear = function(k) {
	return k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeIn = function(k) {
	return k * k * k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeOut = function(k) {
	return --k * k * k + 1;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut = function(k) {
	if((k /= 0.5) < 1) {
		return 0.5 * k * k * k;
	} else {
		return 0.5 * ((k -= 2) * k * k + 2);
	}
};
var haxe_ui_styles_animation_util_ColorPropertyDetails = function(target,propertyName,start,changeR,changeG,changeB,changeA) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.changeR = changeR;
	this.changeG = changeG;
	this.changeB = changeB;
	this.changeA = changeA;
};
$hxClasses["haxe.ui.styles.animation.util.ColorPropertyDetails"] = haxe_ui_styles_animation_util_ColorPropertyDetails;
haxe_ui_styles_animation_util_ColorPropertyDetails.__name__ = "haxe.ui.styles.animation.util.ColorPropertyDetails";
haxe_ui_styles_animation_util_ColorPropertyDetails.prototype = {
	changeR: null
	,changeG: null
	,changeB: null
	,changeA: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_ColorPropertyDetails
};
var haxe_ui_styles_animation_util_PropertyDetails = function(target,propertyName,start,change) {
	this.lastValue = null;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
};
$hxClasses["haxe.ui.styles.animation.util.PropertyDetails"] = haxe_ui_styles_animation_util_PropertyDetails;
haxe_ui_styles_animation_util_PropertyDetails.__name__ = "haxe.ui.styles.animation.util.PropertyDetails";
haxe_ui_styles_animation_util_PropertyDetails.prototype = {
	change: null
	,propertyName: null
	,start: null
	,target: null
	,lastValue: null
	,__class__: haxe_ui_styles_animation_util_PropertyDetails
};
var haxe_ui_styles_animation_util_StringPropertyDetails = function(target,propertyName,start,end) {
	this.isVariant = false;
	this.pattern = null;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.end = end;
};
$hxClasses["haxe.ui.styles.animation.util.StringPropertyDetails"] = haxe_ui_styles_animation_util_StringPropertyDetails;
haxe_ui_styles_animation_util_StringPropertyDetails.__name__ = "haxe.ui.styles.animation.util.StringPropertyDetails";
haxe_ui_styles_animation_util_StringPropertyDetails.prototype = {
	propertyName: null
	,start: null
	,end: null
	,target: null
	,startInt: null
	,changeInt: null
	,pattern: null
	,isVariant: null
	,__class__: haxe_ui_styles_animation_util_StringPropertyDetails
};
var haxe_ui_styles_elements_AnimationKeyFrame = function() {
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrame"] = haxe_ui_styles_elements_AnimationKeyFrame;
haxe_ui_styles_elements_AnimationKeyFrame.__name__ = "haxe.ui.styles.elements.AnimationKeyFrame";
haxe_ui_styles_elements_AnimationKeyFrame.prototype = {
	time: null
	,directives: null
	,__class__: haxe_ui_styles_elements_AnimationKeyFrame
};
var haxe_ui_styles_elements_AnimationKeyFrames = function(id,keyframes) {
	this._keyframes = [];
	this.id = id;
	this._keyframes = keyframes;
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrames"] = haxe_ui_styles_elements_AnimationKeyFrames;
haxe_ui_styles_elements_AnimationKeyFrames.__name__ = "haxe.ui.styles.elements.AnimationKeyFrames";
haxe_ui_styles_elements_AnimationKeyFrames.prototype = {
	id: null
	,_keyframes: null
	,keyFrames: null
	,get_keyFrames: function() {
		return this._keyframes;
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrames
	,__properties__: {get_keyFrames:"get_keyFrames"}
};
var haxe_ui_styles_elements_Directive = function(directive,value,defective) {
	if(defective == null) {
		defective = false;
	}
	this.defective = false;
	this.value = null;
	this.directive = null;
	this.directive = directive;
	this.value = value;
	this.defective = defective;
};
$hxClasses["haxe.ui.styles.elements.Directive"] = haxe_ui_styles_elements_Directive;
haxe_ui_styles_elements_Directive.__name__ = "haxe.ui.styles.elements.Directive";
haxe_ui_styles_elements_Directive.prototype = {
	directive: null
	,value: null
	,defective: null
	,__class__: haxe_ui_styles_elements_Directive
};
var haxe_ui_styles_elements_ImportElement = function(url) {
	this.url = url;
};
$hxClasses["haxe.ui.styles.elements.ImportElement"] = haxe_ui_styles_elements_ImportElement;
haxe_ui_styles_elements_ImportElement.__name__ = "haxe.ui.styles.elements.ImportElement";
haxe_ui_styles_elements_ImportElement.prototype = {
	url: null
	,__class__: haxe_ui_styles_elements_ImportElement
};
var haxe_ui_styles_elements_MediaQuery = function(directives,styleSheet) {
	this._directives = [];
	this._directives = directives;
	this._styleSheet = styleSheet;
};
$hxClasses["haxe.ui.styles.elements.MediaQuery"] = haxe_ui_styles_elements_MediaQuery;
haxe_ui_styles_elements_MediaQuery.__name__ = "haxe.ui.styles.elements.MediaQuery";
haxe_ui_styles_elements_MediaQuery.prototype = {
	_directives: null
	,_styleSheet: null
	,relevant: null
	,get_relevant: function() {
		var b = true;
		var _g = 0;
		var _g1 = this._directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			switch(d.directive) {
			case "backend":
				b = b && haxe_ui_Backend.get_id() == haxe_ui_styles_ValueTools.string(d.value);
				break;
			case "max-aspect-ratio":
				var sr = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr < this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "max-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "max-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-aspect-ratio":
				var sr1 = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr1 > this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "min-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "orientation":
				var v = haxe_ui_styles_ValueTools.string(d.value);
				if(v == "landscape") {
					b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_core_Screen.get_instance().get_height();
				} else if(v == "portrait") {
					b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_core_Screen.get_instance().get_width();
				}
				break;
			default:
			}
		}
		return b;
	}
	,buildRatio: function(s) {
		var p = s.split("/");
		var w = Std.parseInt(StringTools.trim(p[0]));
		var h = Std.parseInt(StringTools.trim(p[1]));
		return w / h;
	}
	,styleSheet: null
	,get_styleSheet: function() {
		return this._styleSheet;
	}
	,__class__: haxe_ui_styles_elements_MediaQuery
	,__properties__: {get_styleSheet:"get_styleSheet",get_relevant:"get_relevant"}
};
var haxe_ui_styles_elements_RuleElement = function(selector,directives) {
	this.directiveCount = 0;
	this.directives = new haxe_ds_StringMap();
	this.selector = new haxe_ui_styles_elements_Selector(selector);
	var _g = 0;
	while(_g < directives.length) {
		var d = directives[_g];
		++_g;
		this.processDirective(d);
		this.directiveCount++;
	}
};
$hxClasses["haxe.ui.styles.elements.RuleElement"] = haxe_ui_styles_elements_RuleElement;
haxe_ui_styles_elements_RuleElement.__name__ = "haxe.ui.styles.elements.RuleElement";
haxe_ui_styles_elements_RuleElement.ruleMatch = function(c,d) {
	if(c.nodeName == "*") {
		return true;
	}
	if(c.id != null && c.id != d.get_id()) {
		return false;
	}
	if(c.className != null) {
		var _g = 0;
		var _g1 = c.get_classNameParts();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(d.classes.indexOf(p) != -1 == false) {
				return false;
			}
		}
	}
	if(c.pseudoClass != null) {
		var pc = ":" + c.pseudoClass;
		if(d.classes.indexOf(pc) != -1 == false) {
			return false;
		}
	}
	if(c.nodeName != null) {
		var classNodeName = d.get_nodeName();
		if(c.nodeName != classNodeName) {
			return false;
		}
	}
	if(c.parent != null) {
		if(c.direct == true) {
			var p = d.parentComponent;
			if(p == null) {
				return false;
			}
			if(!haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
				return false;
			}
		} else {
			var p = d.parentComponent;
			while(p != null) {
				if(haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
					break;
				}
				p = p.parentComponent;
			}
			if(p == null) {
				return false;
			}
		}
	}
	return true;
};
haxe_ui_styles_elements_RuleElement.prototype = {
	selector: null
	,directives: null
	,directiveCount: null
	,match: function(d) {
		return haxe_ui_styles_elements_RuleElement.ruleMatch(this.selector.parts[this.selector.parts.length - 1],d);
	}
	,processDirective: function(d) {
		switch(d.directive) {
		case "animation":
			this.processComposite(d,["animation-name","animation-duration","animation-timing-function","animation-delay","animation-iteration-count","animation-direction","animation-fill-mode"]);
			break;
		case "background":
			this.processComposite(d,["background-color","background-color-end","background-gradient-style"]);
			break;
		case "background-image-clip":
			this.processComposite(d,["background-image-clip-top","background-image-clip-left","background-image-clip-bottom","background-image-clip-right"]);
			break;
		case "background-image-slice":
			this.processComposite(d,["background-image-slice-top","background-image-slice-left","background-image-slice-bottom","background-image-slice-right"]);
			break;
		case "background-position":
			this.processComposite(d,["background-position-x","background-position-y"]);
			break;
		case "background-size":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 1) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["background-width","background-height"]);
			} else if(vl.length == 2) {
				this.processComposite(d,["background-width","background-height"]);
			}
			break;
		case "border":
			this.processComposite(d,["border-size","border-style","border-color"]);
			break;
		case "border-bottom":
			this.processComposite(d,["border-bottom-size","border-style","border-bottom-color"]);
			break;
		case "border-color":
			this.processComposite(d,["border-top-color","border-left-color","border-right-color","border-bottom-color"],true);
			break;
		case "border-left":
			this.processComposite(d,["border-left-size","border-style","border-left-color"]);
			break;
		case "border-right":
			this.processComposite(d,["border-right-size","border-style","border-right-color"]);
			break;
		case "border-size":
			this.processComposite(d,["border-top-size","border-left-size","border-right-size","border-bottom-size"]);
			break;
		case "border-top":
			this.processComposite(d,["border-top-size","border-style","border-top-color"]);
			break;
		case "font-style":
			var v1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(v1 == null) {
				v1 = [d.value];
			}
			var _g = 0;
			while(_g < v1.length) {
				var v = v1[_g];
				++_g;
				var s = haxe_ui_styles_ValueTools.string(v).toLowerCase();
				if(s == "bold") {
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive("font-bold",haxe_ui_styles_Value.VBool(true));
					this1.h["font-bold"] = value;
				} else if(s == "italic") {
					var this2 = this.directives;
					var value1 = new haxe_ui_styles_elements_Directive("font-italic",haxe_ui_styles_Value.VBool(true));
					this2.h["font-italic"] = value1;
				} else if(s == "underline") {
					var this3 = this.directives;
					var value2 = new haxe_ui_styles_elements_Directive("font-underline",haxe_ui_styles_Value.VBool(true));
					this3.h["font-underline"] = value2;
				}
			}
			break;
		case "margin":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["margin-top","margin-left","margin-right","margin-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["margin-top","margin-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["margin-left","margin-right"]);
			}
			break;
		case "padding":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["padding-top","padding-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["padding-left","padding-right"]);
			} else if(vl.length == 0) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			}
			break;
		case "spacing":
			this.processComposite(d,["horizontal-spacing","vertical-spacing"]);
			break;
		default:
			this.directives.h[d.directive] = d;
		}
	}
	,processComposite: function(d,parts,duplicate) {
		if(duplicate == null) {
			duplicate = false;
		}
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			var _this = this.directives;
			if(Object.prototype.hasOwnProperty.call(_this.h,p)) {
				delete(_this.h[p]);
			}
		}
		var _g = d.value;
		switch(_g._hx_index) {
		case 1:
			var _g1 = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,d.value);
				this1.h[p] = value;
			}
			break;
		case 3:
			var v = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,haxe_ui_styles_Value.VDimension(v));
				this1.h[p] = value;
			}
			break;
		case 4:
			var _g1 = _g.v;
			if(duplicate == false) {
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(parts[0],d.value);
				this1.h[parts[0]] = value;
			} else {
				var _g1 = 0;
				while(_g1 < parts.length) {
					var p = parts[_g1];
					++_g1;
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive(p,d.value);
					this1.h[p] = value;
				}
			}
			break;
		case 5:
			var f = _g.f;
			var vl = _g.vl;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,d.value);
				this1.h[p] = value;
			}
			break;
		case 6:
			var _g1 = _g.v;
			break;
		case 7:
			var vl = _g.vl;
			var n = 0;
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				if(vl[n] != null) {
					var nd = new haxe_ui_styles_elements_Directive(p,vl[n]);
					this.processDirective(nd);
					this.directives.h[p] = nd;
				}
				++n;
			}
			break;
		case 9:
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				var nd = new haxe_ui_styles_elements_Directive(p,d.value);
				this.processDirective(nd);
				this.directives.h[p] = nd;
			}
			break;
		default:
			haxe_Log.trace("unknown value type",{ fileName : "haxe/ui/styles/elements/RuleElement.hx", lineNumber : 205, className : "haxe.ui.styles.elements.RuleElement", methodName : "processComposite", customParams : [d.value]});
		}
	}
	,__class__: haxe_ui_styles_elements_RuleElement
};
var haxe_ui_styles_elements_Selector = function(s) {
	this.parts = [];
	s = StringTools.replace(s,">"," > ");
	var p = s.split(" ");
	var parent = null;
	var nextDirect = false;
	var _g = 0;
	while(_g < p.length) {
		var i = p[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0) {
			continue;
		}
		if(i == ">") {
			nextDirect = true;
			continue;
		}
		var current = new haxe_ui_styles_elements_SelectorPart();
		if(nextDirect == true) {
			current.direct = true;
			nextDirect = false;
		}
		current.parent = parent;
		var p1 = i.split(":");
		current.pseudoClass = p1[1];
		var main = p1[0];
		if(main.charAt(0) == ".") {
			current.className = main.substring(1);
		} else {
			var p2 = main.split(".");
			if(p2[0].charAt(0) == "#") {
				current.id = p2[0].substring(1);
			} else {
				current.nodeName = p2[0].toLowerCase();
			}
			current.className = p2[1];
		}
		this.parts.push(current);
		parent = current;
	}
};
$hxClasses["haxe.ui.styles.elements.Selector"] = haxe_ui_styles_elements_Selector;
haxe_ui_styles_elements_Selector.__name__ = "haxe.ui.styles.elements.Selector";
haxe_ui_styles_elements_Selector.prototype = {
	parts: null
	,__class__: haxe_ui_styles_elements_Selector
};
var haxe_ui_styles_elements_SelectorPart = function() {
	this._parts = null;
	this.direct = false;
	this.nodeName = null;
	this.id = null;
	this.className = null;
	this.pseudoClass = null;
	this.parent = null;
};
$hxClasses["haxe.ui.styles.elements.SelectorPart"] = haxe_ui_styles_elements_SelectorPart;
haxe_ui_styles_elements_SelectorPart.__name__ = "haxe.ui.styles.elements.SelectorPart";
haxe_ui_styles_elements_SelectorPart.prototype = {
	parent: null
	,pseudoClass: null
	,className: null
	,id: null
	,nodeName: null
	,direct: null
	,_parts: null
	,classNameParts: null
	,get_classNameParts: function() {
		if(this.className == null) {
			return null;
		}
		if(this._parts == null) {
			this._parts = this.className.split(".");
		}
		return this._parts;
	}
	,__class__: haxe_ui_styles_elements_SelectorPart
	,__properties__: {get_classNameParts:"get_classNameParts"}
};
var haxe_ui_themes_Theme = function() {
	this.styles = [];
	this.images = [];
	this.vars = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.Theme"] = haxe_ui_themes_Theme;
haxe_ui_themes_Theme.__name__ = "haxe.ui.themes.Theme";
haxe_ui_themes_Theme.prototype = {
	parent: null
	,styles: null
	,images: null
	,vars: null
	,__class__: haxe_ui_themes_Theme
};
var haxe_ui_themes_ThemeManager = function() {
	this.currentThemeVars = new haxe_ds_StringMap();
	this._eventMap = null;
	this._themes = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.ThemeManager"] = haxe_ui_themes_ThemeManager;
haxe_ui_themes_ThemeManager.__name__ = "haxe.ui.themes.ThemeManager";
haxe_ui_themes_ThemeManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_themes_ThemeManager.get_instance = function() {
	if(haxe_ui_themes_ThemeManager._instance == null) {
		haxe_ui_themes_ThemeManager._instance = new haxe_ui_themes_ThemeManager();
	}
	return haxe_ui_themes_ThemeManager._instance;
};
haxe_ui_themes_ThemeManager.prototype = {
	_themes: null
	,_themeImages: null
	,_eventMap: null
	,dispatch: function(event) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.invoke(event.type,new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,getTheme: function(themeName) {
		var theme = this.findTheme(themeName);
		if(theme == null) {
			theme = new haxe_ui_themes_Theme();
			this._themes.h[themeName] = theme;
		}
		return theme;
	}
	,findTheme: function(themeName) {
		var t = null;
		var h = this._themes.h;
		var name_h = h;
		var name_keys = Object.keys(h);
		var name_length = name_keys.length;
		var name_current = 0;
		while(name_current < name_length) {
			var name = name_keys[name_current++];
			if(name.toLowerCase() == themeName.toLowerCase()) {
				t = this._themes.h[name];
				break;
			}
		}
		return t;
	}
	,addStyleResource: function(themeName,resourceId,priority,styleData) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).styles.push({ resourceId : resourceId, priority : priority, styleData : styleData});
	}
	,setThemeVar: function(themeName,varName,varValue) {
		var theme = this.getTheme(themeName);
		if(theme == null) {
			return;
		}
		theme.vars.h[varName] = varValue;
	}
	,currentThemeVars: null
	,applyTheme: function(themeName) {
		if(this.findTheme(themeName) == null) {
			haxe_Log.trace("WARNING: theme '" + themeName + "' not found, falling back to default theme",{ fileName : "haxe/ui/themes/ThemeManager.hx", lineNumber : 105, className : "haxe.ui.themes.ThemeManager", methodName : "applyTheme"});
			themeName = "default";
		}
		haxe_ui_Toolkit.styleSheet.clear("default");
		var finalVars = new haxe_ds_StringMap();
		this.buildThemeVars("global",finalVars);
		this.buildThemeVars(themeName,finalVars);
		this.currentThemeVars = new haxe_ds_StringMap();
		var h = finalVars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.currentThemeVars.h[k] = finalVars.h[k];
		}
		var entries = [];
		this.buildThemeEntries("global",entries);
		this.buildThemeEntries(themeName,entries);
		haxe_ds_ArraySort.sort(entries,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			this.applyResource(e.resourceId,e.styleData);
		}
		var images = [];
		this.buildThemeImages("global",images);
		this.buildThemeImages(themeName,images);
		haxe_ds_ArraySort.sort(images,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < images.length) {
			var i = images[_g];
			++_g;
			if(this._themeImages == null) {
				this._themeImages = new haxe_ds_StringMap();
			}
			this._themeImages.h[i.id] = i;
		}
		this.dispatch(new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,applyResource: function(resourceId,styleData) {
		var style = "";
		if(resourceId != null) {
			style = haxe_ui_Toolkit.get_assets().getText(resourceId);
		}
		if(styleData != null) {
			if(style == null) {
				style = "";
			}
			style += "\n" + styleData;
		}
		if(style != null) {
			this.addStyleString(style);
		}
	}
	,addStyleString: function(style) {
		haxe_ui_Toolkit.styleSheet.parse(style);
	}
	,buildThemeVars: function(themeName,vars) {
		var theme = this.findTheme(themeName);
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeVars(theme.parent,vars);
		}
		var h = theme.vars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = theme.vars.h[k];
			vars.h[k] = v;
		}
	}
	,buildThemeEntries: function(themeName,arr) {
		var theme = this.findTheme(themeName);
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeEntries(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.styles;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,buildThemeImages: function(themeName,arr) {
		var theme = this.findTheme(themeName);
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeImages(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.images;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,image: function(id) {
		var image = this._themeImages.h[id];
		if(image == null) {
			return null;
		}
		return image.resourceId;
	}
	,__class__: haxe_ui_themes_ThemeManager
};
var haxe_ui_tooltips_ToolTip = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.tooltips.ToolTip"] = haxe_ui_tooltips_ToolTip;
haxe_ui_tooltips_ToolTip.__name__ = "haxe.ui.tooltips.ToolTip";
haxe_ui_tooltips_ToolTip.__super__ = haxe_ui_containers_Box;
haxe_ui_tooltips_ToolTip.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		this.postCloneComponent(c);
		return c;
	}
	,self: function() {
		return new haxe_ui_tooltips_ToolTip();
	}
	,__class__: haxe_ui_tooltips_ToolTip
});
var haxe_ui_tooltips_ToolTipManager = function() {
	this._toolTipContents = null;
	this._toolTip = null;
	this._timer = null;
	this._currentComponent = null;
	this._lastMouseEvent = null;
	this._toolTipOptions = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.tooltips.ToolTipManager"] = haxe_ui_tooltips_ToolTipManager;
haxe_ui_tooltips_ToolTipManager.__name__ = "haxe.ui.tooltips.ToolTipManager";
haxe_ui_tooltips_ToolTipManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_tooltips_ToolTipManager.get_instance = function() {
	if(haxe_ui_tooltips_ToolTipManager._instance == null) {
		haxe_ui_tooltips_ToolTipManager._instance = new haxe_ui_tooltips_ToolTipManager();
	}
	return haxe_ui_tooltips_ToolTipManager._instance;
};
haxe_ui_tooltips_ToolTipManager.prototype = {
	_lastMouseEvent: null
	,_toolTipOptions: null
	,registerTooltip: function(target,options) {
		if(this._toolTipOptions.h.__keys__[target.__id__] != null) {
			return;
		}
		if(options == null) {
			options = { };
		}
		if(options.tipData == null) {
			options.tipData = { text : target.get_tooltip()};
		}
		this._toolTipOptions.set(target,options);
		target.registerEvent("mouseover",$bind(this,this.onTargetMouseOver));
	}
	,unregisterTooltip: function(target) {
		target.unregisterEvent("mouseover",$bind(this,this.onTargetMouseOver));
		target.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
		target.unregisterEvent("mousemove",$bind(this,this.onTargetMouseMove));
		this._toolTipOptions.remove(target);
	}
	,getTooltipOptions: function(target) {
		return this._toolTipOptions.h[target.__id__];
	}
	,updateTooltipRenderer: function(target,renderer) {
		if(this._toolTipOptions.h.__keys__[target.__id__] == null) {
			return;
		}
		var options = this._toolTipOptions.h[target.__id__];
		options.renderer = renderer;
	}
	,_currentComponent: null
	,_timer: null
	,onTargetMouseOver: function(event) {
		event.cancel();
		this.stopCurrent();
		this._lastMouseEvent = event;
		this._currentComponent = event.target;
		event.target.registerEvent("mouseout",$bind(this,this.onTargetMouseOut));
		event.target.registerEvent("mousemove",$bind(this,this.onTargetMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		this.startTimer();
	}
	,onTargetMouseMove: function(event) {
		if(this._toolTip != null && this._toolTip.get_hidden() == false) {
			return;
		}
		this.stopTimer();
		this.startTimer();
	}
	,onTargetMouseOut: function(event) {
		this.stopCurrent();
		this.hideToolTip();
	}
	,onDelayTimer: function() {
		this._timer.stop();
		this._timer = null;
		this.showToolTip();
	}
	,onScreenMouseMove: function(event) {
		this._lastMouseEvent = event;
	}
	,onScreenMouseDown: function(event) {
		this.hideToolTip();
	}
	,startTimer: function() {
		this._timer = new haxe_ui_util_Timer(haxe_ui_tooltips_ToolTipManager.defaultDelay,$bind(this,this.onDelayTimer));
	}
	,stopTimer: function() {
		if(this._timer != null) {
			this._timer.stop();
			this._timer = null;
		}
	}
	,stopCurrent: function() {
		if(this._currentComponent != null) {
			this._currentComponent.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
			this._currentComponent = null;
		}
		this.stopTimer();
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,_toolTip: null
	,_toolTipContents: null
	,createToolTip: function() {
		if(this._toolTip != null) {
			return;
		}
		this._toolTip = new haxe_ui_tooltips_ToolTip();
	}
	,showToolTip: function() {
		var _gthis = this;
		if(this._currentComponent == null) {
			return;
		}
		if(this._currentComponent.get_disabled() == true || this._currentComponent.get_hidden() == true) {
			this.stopCurrent();
			return;
		}
		this.createToolTip();
		this._toolTip.hide();
		var options = this._toolTipOptions.h[this._currentComponent.__id__];
		var renderer = this.createToolTipRenderer(options);
		var _this = this._toolTip;
		if((_this._children == null ? [] : _this._children)[0] != renderer) {
			var _this = this._toolTip;
			if((_this._children == null ? [] : _this._children).length > 0) {
				this._toolTip.removeComponentAt(0,false);
			}
			this._toolTip.addComponent(renderer);
		}
		renderer.set_data(options.tipData);
		haxe_ui_core_Screen.get_instance().addComponent(this._toolTip);
		haxe_ui_core_Screen.get_instance().setComponentIndex(this._toolTip,haxe_ui_core_Screen.get_instance().rootComponents.length - 1);
		this._toolTip.validateNow();
		this.positionToolTip();
		haxe_ui_Toolkit.callLater(function() {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				_gthis._toolTip.fadeIn();
			} else {
				_gthis._toolTip.show();
			}
		});
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,positionToolTip: function() {
		var x = this._lastMouseEvent.screenX + this._toolTip.get_marginLeft();
		var y = this._lastMouseEvent.screenY + this._toolTip.get_marginTop();
		var w = this._toolTip.get_width();
		var h = this._toolTip.get_height();
		var maxX = haxe_ui_core_Screen.get_instance().get_width();
		var maxY = haxe_ui_core_Screen.get_instance().get_height();
		if(x + w > maxX) {
			x -= w;
		}
		if(y + h > maxY) {
			y = this._lastMouseEvent.screenY - h - this._toolTip.get_marginTop() / 2;
		}
		this._toolTip.set_left(x * haxe_ui_Toolkit.get_scale());
		this._toolTip.set_top(y * haxe_ui_Toolkit.get_scale());
	}
	,hideToolTip: function() {
		if(this._toolTip != null) {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				this._toolTip.fadeOut();
			} else {
				this._toolTip.hide();
			}
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,createToolTipRenderer: function(options) {
		if(options.renderer != null) {
			return options.renderer;
		}
		if(haxe_ui_tooltips_ToolTipManager.defaultRenderer != null) {
			return haxe_ui_tooltips_ToolTipManager.defaultRenderer;
		}
		if(this._toolTipContents != null) {
			return this._toolTipContents;
		}
		this._toolTipContents = new haxe_ui_core_ItemRenderer();
		var label = new haxe_ui_components_Label();
		label.set_id("text");
		this._toolTipContents.addComponent(label);
		return this._toolTipContents;
	}
	,__class__: haxe_ui_tooltips_ToolTipManager
};
var haxe_ui_util_CallbackMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.CallbackMap"] = haxe_ui_util_CallbackMap;
haxe_ui_util_CallbackMap.__name__ = "haxe.ui.util.CallbackMap";
haxe_ui_util_CallbackMap.prototype = {
	_map: null
	,add: function(key,callback,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(callback == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[key];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(callback,priority);
			this._map.h[key] = arr;
			b = true;
		} else if(arr.contains(callback) == false) {
			arr.push(callback,priority);
		}
		return b;
	}
	,remove: function(key,callback) {
		var b = false;
		var arr = this._map.h[key];
		if(arr != null) {
			arr.remove(callback);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
				b = true;
			}
		}
		return b;
	}
	,removeAll: function(key) {
		var arr = this._map.h[key];
		if(arr != null) {
			while(arr.get_length() > 0) arr.remove(arr.get(0));
			var _this = this._map;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,invokeAndRemove: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			this.removeAll(key);
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,count: function(key) {
		var n = 0;
		var arr = this._map.h[key];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,__class__: haxe_ui_util_CallbackMap
};
var haxe_ui_util_Color = {};
haxe_ui_util_Color.isValidColor = function(s) {
	if(StringTools.startsWith(s,"#") && (s.length == 7 || s.length == 4)) {
		return true;
	} else if(StringTools.startsWith(s,"0x") && s.length == 8) {
		return true;
	}
	return Object.prototype.hasOwnProperty.call(haxe_ui_util_Color.colors.h,s);
};
haxe_ui_util_Color.fromString = function(s) {
	if(StringTools.startsWith(s,"0x") || StringTools.startsWith(s,"#")) {
		return Std.parseInt("0x" + s.substring(s.length - 6));
	}
	if(StringTools.startsWith(s,"#") && s.length == 4) {
		return Std.parseInt("0x" + s.substring(s.length - 3));
	}
	if(Object.prototype.hasOwnProperty.call(haxe_ui_util_Color.colors.h,s)) {
		return haxe_ui_util_Color.colors.h[s];
	}
	return 0;
};
haxe_ui_util_Color.fromComponents = function(r,g,b,a) {
	var result = 0;
	result = (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return result;
};
haxe_ui_util_Color.toInt = function(this1) {
	return this1;
};
haxe_ui_util_Color.toHex = function(this1) {
	return "#" + StringTools.hex(this1 >> 16 & 255,2) + StringTools.hex(this1 >> 8 & 255,2) + StringTools.hex(this1 & 255,2);
};
var haxe_ui_util_ColorUtil = function() { };
$hxClasses["haxe.ui.util.ColorUtil"] = haxe_ui_util_ColorUtil;
haxe_ui_util_ColorUtil.__name__ = "haxe.ui.util.ColorUtil";
haxe_ui_util_ColorUtil.toHSV = function(color) {
	var r = (color >> 16 & 255) / 255;
	var g = (color >> 8 & 255) / 255;
	var b = (color & 255) / 255;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r1) {
			r1 = n;
		}
	}
	var min = r1;
	var numbers = [r,g,b];
	var r1 = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r1) {
			r1 = n;
		}
	}
	var max = r1;
	var delta = max - min;
	var h = 0;
	var s = 0;
	var v = max;
	if(delta != 0) {
		s = delta / max;
	} else {
		s = 0;
		h = 0;
		return { h : Math.round(h), s : s * 100, v : v * 100};
	}
	if(r == max) {
		h = (g - b) / delta;
	} else if(g == max) {
		h = 2 + (b - r) / delta;
	} else {
		h = 4 + (r - g) / delta;
	}
	h *= 60;
	if(h < 0) {
		h += 360;
	}
	return { h : Math.round(h), s : s * 100, v : v * 100};
};
haxe_ui_util_ColorUtil.hsvToRGBF = function(hue,saturation,value) {
	var tmp = hue == 0 && saturation == 0 && value == 100;
	var tmp = saturation == 0;
	saturation /= 100;
	value /= 100;
	var r;
	var g;
	var b;
	var h = hue / 60;
	var i = Math.floor(h);
	var f = h - i;
	var p = value * (1 - saturation);
	var q = value * (1 - f * saturation);
	var t = value * (1 - (1 - f) * saturation);
	switch(i) {
	case 0:
		r = value;
		g = t;
		b = p;
		break;
	case 1:
		r = q;
		g = value;
		b = p;
		break;
	case 2:
		r = p;
		g = value;
		b = t;
		break;
	case 3:
		r = p;
		g = q;
		b = value;
		break;
	case 4:
		r = t;
		g = p;
		b = value;
		break;
	default:
		r = value;
		g = p;
		b = q;
	}
	return { r : r * 255, g : g * 255, b : b * 255};
};
haxe_ui_util_ColorUtil.rgbToGray = function(r,g,b) {
	var g1 = 0.3 * r + 0.59 * g + 0.11 * b;
	return Math.round(g1);
};
haxe_ui_util_ColorUtil.rgbfToHSV = function(r,g,b) {
	var tmp = Math.round(r) == 255 && Math.round(g) == 255 && Math.round(b) == 255;
	var r1 = r / 255;
	var g1 = g / 255;
	var b1 = b / 255;
	var numbers = [r1,g1,b1];
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n < r) {
			r = n;
		}
	}
	var min = r;
	var numbers = [r1,g1,b1];
	var r = numbers[0];
	var _g = 0;
	while(_g < numbers.length) {
		var n = numbers[_g];
		++_g;
		if(n > r) {
			r = n;
		}
	}
	var max = r;
	var delta = max - min;
	var h = 0;
	var s = 0;
	var v = max;
	if(delta != 0) {
		s = delta / max;
	} else {
		s = 0;
		h = 0;
		return { h : h, s : s * 100, v : v * 100};
	}
	if(r1 == max) {
		h = (g1 - b1) / delta;
	} else if(g1 == max) {
		h = 2 + (b1 - r1) / delta;
	} else {
		h = 4 + (r1 - g1) / delta;
	}
	h *= 60;
	if(h < 0) {
		h += 360;
	}
	if(Math.round(r1) == 255 && Math.round(g1) == 255 && Math.round(b1) == 255) {
		return { h : h, s : 0, v : 100};
	}
	return { h : h, s : s * 100, v : v * 100};
};
haxe_ui_util_ColorUtil.buildColorArray = function(startColor,endColor,size) {
	var array = [];
	var r1 = startColor >> 16 & 255;
	var g1 = startColor >> 8 & 255;
	var b1 = startColor & 255;
	var r2 = endColor >> 16 & 255;
	var g2 = endColor >> 8 & 255;
	var b2 = endColor & 255;
	var rd = r2 - r1;
	var gd = g2 - g1;
	var bd = b2 - b1;
	var ri = rd / (size - 1);
	var gi = gd / (size - 1);
	var bi = bd / (size - 1);
	var r = r1;
	var g = g1;
	var b = b1;
	var c = 0;
	var _g = 0;
	var _g1 = size;
	while(_g < _g1) {
		var n = _g++;
		c = (Math.round(r) & 255) << 16 | (Math.round(g) & 255) << 8 | Math.round(b) & 255;
		array.push(haxe_ui_util_Color.toInt(c));
		r += ri;
		g += gi;
		b += bi;
	}
	return array;
};
var haxe_ui_util_ComponentUtil = function() { };
$hxClasses["haxe.ui.util.ComponentUtil"] = haxe_ui_util_ComponentUtil;
haxe_ui_util_ComponentUtil.__name__ = "haxe.ui.util.ComponentUtil";
haxe_ui_util_ComponentUtil.getDepth = function(target) {
	var count = 0;
	while(target.parentComponent != null) {
		target = target.parentComponent;
		++count;
	}
	return count;
};
var haxe_ui_util_Defines = function() { };
$hxClasses["haxe.ui.util.Defines"] = haxe_ui_util_Defines;
haxe_ui_util_Defines.__name__ = "haxe.ui.util.Defines";
haxe_ui_util_Defines.set = function(name,value,overwrite) {
	if(overwrite == null) {
		overwrite = false;
	}
	haxe_ui_util_Defines.popuplate();
	if(overwrite == false && Object.prototype.hasOwnProperty.call(haxe_ui_util_Defines._map.h,name)) {
		return;
	}
	haxe_ui_util_Defines._map.h[name] = value;
};
haxe_ui_util_Defines.popuplate = function() {
	if(haxe_ui_util_Defines._map != null) {
		return;
	}
	haxe_ui_util_Defines._map = new haxe_ds_StringMap();
	if(haxe_ui_core_Platform.get_instance().get_isWindows()) {
		haxe_ui_util_Defines.set("windows","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isLinux()) {
		haxe_ui_util_Defines.set("linux","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isMac()) {
		haxe_ui_util_Defines.set("mac","1");
	}
};
var haxe_ui_util_EventMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.EventMap"] = haxe_ui_util_EventMap;
haxe_ui_util_EventMap.__name__ = "haxe.ui.util.EventMap";
haxe_ui_util_EventMap.prototype = {
	_map: null
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._map.h);
	}
	,add: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(listener,priority);
			this._map.h[type] = arr;
			b = true;
		} else if(arr.contains(listener) == false) {
			arr.push(listener,priority);
		}
		return b;
	}
	,remove: function(type,listener) {
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			arr.remove(listener);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				b = true;
			}
		}
		return b;
	}
	,contains: function(type,listener) {
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			b = listener != null ? arr.contains(listener) : true;
		}
		return b;
	}
	,invoke: function(type,event,target) {
		if(event.bubble && event.target == null) {
			event.target = target;
		}
		var arr = this._map.h[type];
		if(arr != null && arr.get_length() > 0) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				if(event.canceled) {
					break;
				}
				var c = event.clone();
				if(c.target == null) {
					c.target = target;
				}
				listener1.callback(c);
				event.copyFrom(c);
				event.canceled = c.canceled;
			}
		}
	}
	,listeners: function(type) {
		var arr = this._map.h[type];
		if(arr == null) {
			return null;
		}
		return arr;
	}
	,__class__: haxe_ui_util_EventMap
};
var haxe_ui_util_ExpressionUtil = function() { };
$hxClasses["haxe.ui.util.ExpressionUtil"] = haxe_ui_util_ExpressionUtil;
haxe_ui_util_ExpressionUtil.__name__ = "haxe.ui.util.ExpressionUtil";
haxe_ui_util_ExpressionUtil.stringToLanguageExpression = function(s,localeManager) {
	if(localeManager == null) {
		localeManager = "haxe.ui.locale.LocaleManager";
	}
	var fixedParts = [];
	var beforePos = 0;
	var n1 = s.indexOf("{{");
	while(n1 != -1) {
		var before = s.substring(beforePos,n1);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
		var n2 = s.indexOf("}}",n1);
		var code = s.substring(n1 + 2,n2);
		var parts = code.split(",");
		var stringId = parts.shift();
		var callString = localeManager + ".instance.lookupString('";
		callString += stringId;
		callString += "'";
		if(parts.length > 0) {
			callString += ", ";
			callString += parts.join(", ");
		}
		callString += ")";
		fixedParts.push(callString);
		n1 = s.indexOf("{{",n2);
		beforePos = n2 + 2;
	}
	if(beforePos < s.length) {
		var before = s.substring(beforePos,s.length);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
	}
	var fixedCode = fixedParts.join(" + ");
	return fixedCode;
};
var haxe_ui_util_FunctionArray = function() {
	this._array = [];
};
$hxClasses["haxe.ui.util.FunctionArray"] = haxe_ui_util_FunctionArray;
haxe_ui_util_FunctionArray.__name__ = "haxe.ui.util.FunctionArray";
haxe_ui_util_FunctionArray.prototype = {
	_array: null
	,get: function(index) {
		return this._array[index].callback;
	}
	,length: null
	,get_length: function() {
		return this._array.length;
	}
	,push: function(x,priority) {
		if(priority == null) {
			priority = 0;
		}
		var listener = new haxe_ui_util__$Listener_ListenerInternal(x,priority);
		var _g = 0;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].priority < priority) {
				this._array.splice(i,0,listener);
				return i;
			}
		}
		return this._array.push(listener);
	}
	,indexOf: function(x,fromIndex) {
		if(fromIndex == null) {
			fromIndex = 0;
		}
		var _g = fromIndex;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].callback == x) {
				return i;
			}
		}
		return -1;
	}
	,remove: function(x) {
		var index = this.indexOf(x);
		if(index != -1) {
			this._array.splice(index,1);
		}
		return index != -1;
	}
	,contains: function(x) {
		return this.indexOf(x) != -1;
	}
	,iterator: function() {
		return new haxe_iterators_ArrayIterator(this._array);
	}
	,copy: function() {
		var fa = new haxe_ui_util_FunctionArray();
		fa._array = this._array.slice();
		return fa;
	}
	,__class__: haxe_ui_util_FunctionArray
	,__properties__: {get_length:"get_length"}
};
var haxe_ui_util_GUID = function() { };
$hxClasses["haxe.ui.util.GUID"] = haxe_ui_util_GUID;
haxe_ui_util_GUID.__name__ = "haxe.ui.util.GUID";
haxe_ui_util_GUID.createRandomIdentifier = function(length,radix) {
	if(radix == null) {
		radix = 61;
	}
	var characters = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
	var id = [];
	if(radix > 61) {
		radix = 61;
	}
	while(length-- > 0) id.push(characters[Math.floor(Math.random() * (1 + radix))]);
	return id.join("");
};
haxe_ui_util_GUID.uuid = function() {
	var specialChars = ["8","9","A","B"];
	return haxe_ui_util_GUID.createRandomIdentifier(8,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(4,15) + "-4" + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + specialChars[Math.floor(Math.random() * 4)] + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(12,15);
};
var haxe_ui_util_Listener = {};
haxe_ui_util_Listener.toFunc = function(this1) {
	return this1.callback;
};
var haxe_ui_util__$Listener_ListenerInternal = function(callback,priority) {
	this.callback = callback;
	this.priority = priority;
};
$hxClasses["haxe.ui.util._Listener.ListenerInternal"] = haxe_ui_util__$Listener_ListenerInternal;
haxe_ui_util__$Listener_ListenerInternal.__name__ = "haxe.ui.util._Listener.ListenerInternal";
haxe_ui_util__$Listener_ListenerInternal.prototype = {
	callback: null
	,priority: null
	,__class__: haxe_ui_util__$Listener_ListenerInternal
};
var haxe_ui_util_MathUtil = function() { };
$hxClasses["haxe.ui.util.MathUtil"] = haxe_ui_util_MathUtil;
haxe_ui_util_MathUtil.__name__ = "haxe.ui.util.MathUtil";
var haxe_ui_util_RTTI = function() { };
$hxClasses["haxe.ui.util.RTTI"] = haxe_ui_util_RTTI;
haxe_ui_util_RTTI.__name__ = "haxe.ui.util.RTTI";
haxe_ui_util_RTTI.load = function() {
	if(haxe_ui_util_RTTI.classInfo != null) {
		return;
	}
	var s = haxe_Resource.getString("haxeui_rtti");
	if(s == null) {
		return;
	}
	var unserializer = new haxe_Unserializer(s);
	haxe_ui_util_RTTI.classInfo = unserializer.unserialize();
};
haxe_ui_util_RTTI.getClassInfo = function(className) {
	haxe_ui_util_RTTI.load();
	if(haxe_ui_util_RTTI.classInfo == null) {
		return null;
	}
	className = className.toLowerCase();
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	return entry;
};
haxe_ui_util_RTTI.getClassProperty = function(className,propertyName) {
	if(className == null || propertyName == null) {
		return null;
	}
	className = className.toLowerCase();
	propertyName = propertyName.toLowerCase();
	var entry = haxe_ui_util_RTTI.getClassInfo(className);
	if(entry == null) {
		return null;
	}
	var propInfo = null;
	if(entry.properties != null && Object.prototype.hasOwnProperty.call(entry.properties.h,propertyName)) {
		propInfo = entry.properties.h[propertyName];
	}
	if(propInfo == null && entry.superClass != null) {
		propInfo = haxe_ui_util_RTTI.getClassProperty(entry.superClass,propertyName);
	}
	return propInfo;
};
var haxe_ui_util_SimpleExpressionEvaluatorOperation = $hxEnums["haxe.ui.util.SimpleExpressionEvaluatorOperation"] = { __ename__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",__constructs__:null
	,Add: {_hx_name:"Add",_hx_index:0,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Subtract: {_hx_name:"Subtract",_hx_index:1,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Multiply: {_hx_name:"Multiply",_hx_index:2,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Divide: {_hx_name:"Divide",_hx_index:3,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Equals: {_hx_name:"Equals",_hx_index:4,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,NotEquals: {_hx_name:"NotEquals",_hx_index:5,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThan: {_hx_name:"GreaterThan",_hx_index:6,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThanOrEquals: {_hx_name:"GreaterThanOrEquals",_hx_index:7,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThan: {_hx_name:"LessThan",_hx_index:8,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThanOrEquals: {_hx_name:"LessThanOrEquals",_hx_index:9,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalAnd: {_hx_name:"LogicalAnd",_hx_index:10,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalOr: {_hx_name:"LogicalOr",_hx_index:11,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
};
haxe_ui_util_SimpleExpressionEvaluatorOperation.__constructs__ = [haxe_ui_util_SimpleExpressionEvaluatorOperation.Add,haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract,haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply,haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide,haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals,haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr];
haxe_ui_util_SimpleExpressionEvaluatorOperation.__empty_constructs__ = [haxe_ui_util_SimpleExpressionEvaluatorOperation.Add,haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract,haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply,haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide,haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals,haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr];
var haxe_ui_util_SimpleExpressionEvaluator = function() { };
$hxClasses["haxe.ui.util.SimpleExpressionEvaluator"] = haxe_ui_util_SimpleExpressionEvaluator;
haxe_ui_util_SimpleExpressionEvaluator.__name__ = "haxe.ui.util.SimpleExpressionEvaluator";
haxe_ui_util_SimpleExpressionEvaluator.eval = function(s,context) {
	var r = null;
	if(s.indexOf("||") != -1) {
		var parts = s.split("||");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r || haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else if(s.indexOf("&&") != -1) {
		var parts = s.split("&&");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r && haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	return r;
};
haxe_ui_util_SimpleExpressionEvaluator.evalSingle = function(s,context) {
	var result = null;
	var operation = null;
	var token = "";
	var inString = false;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var ch = s.charAt(i);
		var next = s.charAt(i + 1);
		if(ch == "'" || ch == "\"") {
			inString = !inString;
		}
		if(inString == false) {
			if(ch == "+") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Add;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "-") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "*") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "/") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == ">" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "<" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "=" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "!" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == ">" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "<" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "&" && next == "&") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "|" && next == "|") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			}
		}
		token += ch;
		if(i == s.length - 1) {
			s = "";
			break;
		}
	}
	var r = null;
	if(s.length > 0) {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	var trimmedToken = StringTools.trim(token);
	var v = parseFloat(trimmedToken);
	if(!isNaN(v) && isFinite(v)) {
		result = parseFloat(trimmedToken);
	} else {
		var value = trimmedToken;
		value = value.toLowerCase();
		if(value == "true" || value == "false") {
			result = trimmedToken.toLowerCase() == "true";
		} else if(StringTools.startsWith(trimmedToken,"'") && StringTools.endsWith(trimmedToken,"'") ? true : StringTools.startsWith(trimmedToken,"\"") && StringTools.endsWith(trimmedToken,"\"")) {
			result = HxOverrides.substr(trimmedToken,1,trimmedToken.length - 2);
		} else {
			var token = "";
			var bracketsOpen = 0;
			var call = null;
			var callParams = null;
			var _g = 0;
			var _g1 = trimmedToken.length;
			while(_g < _g1) {
				var i = _g++;
				var ch = trimmedToken.charAt(i);
				if(ch == "(") {
					++bracketsOpen;
					if(bracketsOpen == 1) {
						call = token;
						token = "";
					} else {
						token += ch;
					}
				} else if(ch == ")") {
					--bracketsOpen;
					if(bracketsOpen == 0) {
						callParams = token;
					} else {
						token += ")";
					}
				} else {
					token += ch;
				}
			}
			var prop = null;
			if(call == null) {
				prop = token;
			}
			var parsedCallParams = [];
			if(callParams != null) {
				bracketsOpen = 0;
				token = "";
				var _g = 0;
				var _g1 = callParams.length;
				while(_g < _g1) {
					var i = _g++;
					var ch = callParams.charAt(i);
					if(ch == "(") {
						++bracketsOpen;
					} else if(ch == ")") {
						--bracketsOpen;
					}
					if(ch == ",") {
						if(bracketsOpen == 0) {
							parsedCallParams.push(token);
							token = "";
						} else {
							token += ch;
						}
					} else {
						token += ch;
					}
				}
				if(token.length != 0) {
					parsedCallParams.push(token);
				}
			}
			if(call != null) {
				var trimmedCall = StringTools.trim(call);
				if(trimmedCall.length > 0) {
					var callParts = trimmedCall.split(".");
					var ref = context;
					var prevRef = null;
					var _g = 0;
					while(_g < callParts.length) {
						var callPart = callParts[_g];
						++_g;
						prevRef = ref;
						if(Object.prototype.hasOwnProperty.call(ref,callPart)) {
							ref = Reflect.field(ref,callPart);
						} else {
							ref = Reflect.getProperty(ref,callPart);
						}
						if(ref == null) {
							throw haxe_Exception.thrown(callPart + " not found");
						}
					}
					if(ref != null && Reflect.isFunction(ref)) {
						var paramValues = [];
						var _g = 0;
						while(_g < parsedCallParams.length) {
							var param = parsedCallParams[_g];
							++_g;
							var paramResult = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(param,context);
							paramValues.push(paramResult);
						}
						result = ref.apply(prevRef,paramValues);
					}
				}
			} else if(prop != null) {
				var trimmedProp = StringTools.trim(prop);
				if(trimmedProp.length > 0) {
					var propParts = trimmedProp.split(".");
					var propName = propParts.pop();
					var ref = context;
					var _g = 0;
					while(_g < propParts.length) {
						var propPart = propParts[_g];
						++_g;
						ref = Reflect.field(ref,propPart);
					}
					if(Object.prototype.hasOwnProperty.call(ref,propName)) {
						result = Reflect.field(ref,propName);
					} else {
						result = Reflect.getProperty(ref,propName);
					}
				}
			}
		}
	}
	if(r != null) {
		switch(operation._hx_index) {
		case 0:
			result += r;
			break;
		case 1:
			result -= r;
			break;
		case 2:
			result *= r;
			break;
		case 3:
			result /= r;
			break;
		case 4:
			result = result == r;
			break;
		case 5:
			result = result != r;
			break;
		case 6:
			result = result > r;
			break;
		case 7:
			result = result >= r;
			break;
		case 8:
			result = result < r;
			break;
		case 9:
			result = result <= r;
			break;
		case 10:
			result = result && r;
			break;
		case 11:
			result = result || r;
			break;
		}
	}
	return result;
};
var haxe_ui_util_StringUtil = function() { };
$hxClasses["haxe.ui.util.StringUtil"] = haxe_ui_util_StringUtil;
haxe_ui_util_StringUtil.__name__ = "haxe.ui.util.StringUtil";
haxe_ui_util_StringUtil.capitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.toDashes = function(s,toLower) {
	if(toLower == null) {
		toLower = true;
	}
	var s1 = new EReg("([a-zA-Z])(?=[A-Z])","g").map(s,function(re) {
		return "" + re.matched(1) + "-";
	});
	if(toLower == true) {
		s1 = s1.toLowerCase();
	}
	return s1;
};
var haxe_ui_util_StyleUtil = function() { };
$hxClasses["haxe.ui.util.StyleUtil"] = haxe_ui_util_StyleUtil;
haxe_ui_util_StyleUtil.__name__ = "haxe.ui.util.StyleUtil";
haxe_ui_util_StyleUtil.styleProperty2ComponentProperty = function(property) {
	return haxe_ui_util_StyleUtil.style2ComponentEReg.map(property,function(re) {
		return re.matched(1).toUpperCase();
	});
};
var haxe_ui_util_Timer = function(delay,callback) {
	haxe_ui_backend_TimerImpl.call(this,delay,callback);
};
$hxClasses["haxe.ui.util.Timer"] = haxe_ui_util_Timer;
haxe_ui_util_Timer.__name__ = "haxe.ui.util.Timer";
haxe_ui_util_Timer.delay = function(f,timeMs) {
	var t = null;
	t = new haxe_ui_util_Timer(timeMs,function() {
		t.stop();
		f();
	});
	return t;
};
haxe_ui_util_Timer.__super__ = haxe_ui_backend_TimerImpl;
haxe_ui_util_Timer.prototype = $extend(haxe_ui_backend_TimerImpl.prototype,{
	stop: function() {
		haxe_ui_backend_TimerImpl.prototype.stop.call(this);
	}
	,__class__: haxe_ui_util_Timer
});
var haxe_ui_util_TypeConverter = function() { };
$hxClasses["haxe.ui.util.TypeConverter"] = haxe_ui_util_TypeConverter;
haxe_ui_util_TypeConverter.__name__ = "haxe.ui.util.TypeConverter";
haxe_ui_util_TypeConverter.convertTo = function(input,type) {
	if(type == null) {
		return input;
	}
	switch(type.toLowerCase()) {
	case "bool":
		return (input == null ? "null" : Std.string(input)) == "true";
	case "float":
		if(input == null) {
			return 0;
		}
		var r = parseFloat((input == null ? "null" : Std.string(input)));
		if(isNaN(r)) {
			return 0;
		}
		return r;
	case "int":
		if(input == null) {
			return 0;
		}
		var r = Std.parseInt(input == null ? "null" : Std.string(input));
		if(r == null) {
			return 0;
		}
		return r;
	case "dynamic":case "scalemode":case "scrollmode":case "scrollpolicy":case "selectionmode":case "variant":
		return input;
	case "string":
		if(input == null) {
			return "null";
		} else {
			return Std.string(input);
		}
		break;
	default:
	}
	return input;
};
var haxe_ui_util_VariantType = $hxEnums["haxe.ui.util.VariantType"] = { __ename__:"haxe.ui.util.VariantType",__constructs__:null
	,VT_Int: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Int",$_.__params__ = ["s"],$_)
	,VT_Float: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Float",$_.__params__ = ["s"],$_)
	,VT_String: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_String",$_.__params__ = ["s"],$_)
	,VT_Bool: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Bool",$_.__params__ = ["s"],$_)
	,VT_Array: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Array",$_.__params__ = ["s"],$_)
	,VT_DataSource: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_DataSource",$_.__params__ = ["s"],$_)
	,VT_Component: ($_=function(s) { return {_hx_index:6,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Component",$_.__params__ = ["s"],$_)
	,VT_Date: ($_=function(s) { return {_hx_index:7,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Date",$_.__params__ = ["s"],$_)
	,VT_ImageData: ($_=function(s) { return {_hx_index:8,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_ImageData",$_.__params__ = ["s"],$_)
};
haxe_ui_util_VariantType.__constructs__ = [haxe_ui_util_VariantType.VT_Int,haxe_ui_util_VariantType.VT_Float,haxe_ui_util_VariantType.VT_String,haxe_ui_util_VariantType.VT_Bool,haxe_ui_util_VariantType.VT_Array,haxe_ui_util_VariantType.VT_DataSource,haxe_ui_util_VariantType.VT_Component,haxe_ui_util_VariantType.VT_Date,haxe_ui_util_VariantType.VT_ImageData];
haxe_ui_util_VariantType.__empty_constructs__ = [];
var haxe_ui_util_Variant = {};
haxe_ui_util_Variant.__properties__ = {get_isNull:"get_isNull",get_isImageData:"get_isImageData",get_isComponent:"get_isComponent",get_isBool:"get_isBool",get_isString:"get_isString"};
haxe_ui_util_Variant.fromString = function(s) {
	return haxe_ui_util_VariantType.VT_String(s);
};
haxe_ui_util_Variant.toString = function(this1) {
	if(this1 == null) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 1:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 2:
		var s = this1.s;
		return s;
	case 3:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 4:
		var s = this1.s;
		return Std.string(s);
	case 5:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	case 6:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	case 7:
		var s = this1.s;
		return Std.string(s);
	case 8:
		var s = this1.s;
		if(s == null) {
			return null;
		} else {
			return "";
		}
		break;
	}
};
haxe_ui_util_Variant.get_isString = function(this1) {
	if(this1._hx_index == 2) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromFloat = function(s) {
	return haxe_ui_util_VariantType.VT_Float(s);
};
haxe_ui_util_Variant.toFloat = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.fromInt = function(s) {
	return haxe_ui_util_VariantType.VT_Int(s);
};
haxe_ui_util_Variant.toInt = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s | 0;
	default:
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.toNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.fromBool = function(s) {
	return haxe_ui_util_VariantType.VT_Bool(s);
};
haxe_ui_util_Variant.toBool = function(this1) {
	if(this1 == null) {
		return false;
	}
	switch(this1._hx_index) {
	case 2:
		var s = this1.s;
		return s == "true";
	case 3:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isBool = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromArray = function(s) {
	if(s == null) {
		return null;
	} else {
		return haxe_ui_util_VariantType.VT_Array(s);
	}
};
haxe_ui_util_Variant.toArray = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 4) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.fromDate = function(s) {
	return haxe_ui_util_VariantType.VT_Date(s);
};
haxe_ui_util_Variant.toDate = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 7) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.fromComponent = function(s) {
	return haxe_ui_util_VariantType.VT_Component(s);
};
haxe_ui_util_Variant.toComponent = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 6) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isComponent = function(this1) {
	if(this1._hx_index == 6) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromImageData = function(s) {
	return haxe_ui_util_VariantType.VT_ImageData(s);
};
haxe_ui_util_Variant.toImageData = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 8) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.get_isImageData = function(this1) {
	if(this1._hx_index == 8) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDataSource = function(s) {
	return haxe_ui_util_VariantType.VT_DataSource(s);
};
haxe_ui_util_Variant.toDataSource = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 5) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error (" + Std.string(this1) + ")");
	}
};
haxe_ui_util_Variant.gt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) > haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) > haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) >= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) >= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) < haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) < haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.eq = function(this1,rhs) {
	if(haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return true;
	}
	if(haxe_ui_util_Variant.get_isNull(this1) && !haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	if(!haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) == haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isBool(this1) && haxe_ui_util_Variant.get_isBool(rhs)) {
		return haxe_ui_util_Variant.toBool(this1) == haxe_ui_util_Variant.toBool(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.toString(this1) == haxe_ui_util_Variant.toString(rhs);
	}
	return false;
};
haxe_ui_util_Variant.neq = function(this1,rhs) {
	return !haxe_ui_util_Variant.eq(this1,rhs);
};
haxe_ui_util_Variant.get_isNull = function(this1) {
	if(this1 == null) {
		return true;
	}
	return haxe_ui_util_Variant.toString(this1) == null;
};
haxe_ui_util_Variant.fromDynamic = function(r) {
	var v = null;
	if(r != null) {
		var unstringable = ((r) instanceof haxe_ui_core_Component) || ((r) instanceof hxd_BitmapData) || ((r) instanceof Array) || ((r) instanceof haxe_ui_data_DataSource);
		if(unstringable == false) {
			var tmp;
			if(haxe_ui_util_Variant.containsOnlyDigits(r)) {
				var f = parseFloat(("" + Std.string(r)));
				tmp = isNaN(f) == false;
			} else {
				tmp = false;
			}
			if(tmp) {
				if(Std.string(r).indexOf(".") != -1) {
					v = haxe_ui_util_Variant.fromFloat(parseFloat(("" + Std.string(r))));
				} else {
					v = haxe_ui_util_Variant.fromInt(Std.parseInt("" + Std.string(r)));
				}
			} else if("" + Std.string(r) == "true" || Std.string(r) + "" == "false") {
				v = haxe_ui_util_Variant.fromBool("" + Std.string(r) == "true");
			} else if(typeof(r) == "string") {
				v = haxe_ui_util_Variant.fromString(js_Boot.__cast(r , String));
			} else {
				v = r;
			}
		} else if(((r) instanceof haxe_ui_core_Component)) {
			v = haxe_ui_util_Variant.fromComponent(js_Boot.__cast(r , haxe_ui_core_Component));
		} else if(((r) instanceof haxe_ui_data_DataSource)) {
			v = r;
		} else if(((r) instanceof Array)) {
			v = r;
		} else if(((r) instanceof Date)) {
			v = haxe_ui_util_Variant.fromDate(js_Boot.__cast(r , Date));
		} else if(((r) instanceof hxd_BitmapData)) {
			v = haxe_ui_util_Variant.fromImageData(js_Boot.__cast(r , hxd_BitmapData));
		} else {
			v = r;
		}
	}
	return v;
};
haxe_ui_util_Variant.containsOnlyDigits = function(s) {
	if(((s) instanceof haxe_ui_core_Component) || ((s) instanceof hxd_BitmapData) || ((s) instanceof Array) || ((s) instanceof haxe_ui_data_DataSource)) {
		return false;
	}
	if(typeof(s) == "number" && ((s | 0) === s) || typeof(s) == "number") {
		return true;
	}
	var t = Std.string(s);
	var _g = 0;
	var _g1 = t.length;
	while(_g < _g1) {
		var i = _g++;
		var c = t.charAt(i);
		if(c != "0" && c != "1" && c != "2" && c != "3" && c != "4" && c != "5" && c != "6" && c != "7" && c != "8" && c != "9" && c != "." && c != "-") {
			return false;
		}
	}
	return true;
};
haxe_ui_util_Variant.toDynamic = function(v) {
	var d = v;
	if(v != null) {
		switch(v._hx_index) {
		case 0:
			var y = v.s;
			d = y;
			break;
		case 1:
			var y = v.s;
			d = y;
			break;
		case 2:
			var y = v.s;
			d = y;
			break;
		case 3:
			var y = v.s;
			d = y;
			break;
		case 4:
			var y = v.s;
			d = y;
			break;
		case 5:
			var y = v.s;
			d = y;
			break;
		case 6:
			var y = v.s;
			d = y;
			break;
		case 7:
			var y = v.s;
			d = y;
			break;
		case 8:
			var y = v.s;
			d = y;
			break;
		}
	}
	return d;
};
var haxe_ui_validation_ValidationManager = function() {
	this._displayQueue = [];
	this._queue = [];
	this.isValidating = false;
	this.isPending = false;
};
$hxClasses["haxe.ui.validation.ValidationManager"] = haxe_ui_validation_ValidationManager;
haxe_ui_validation_ValidationManager.__name__ = "haxe.ui.validation.ValidationManager";
haxe_ui_validation_ValidationManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validation_ValidationManager.get_instance = function() {
	if(haxe_ui_validation_ValidationManager.instance == null) {
		haxe_ui_validation_ValidationManager.instance = new haxe_ui_validation_ValidationManager();
	}
	return haxe_ui_validation_ValidationManager.instance;
};
haxe_ui_validation_ValidationManager.prototype = {
	isValidating: null
	,isPending: null
	,_queue: null
	,_displayQueue: null
	,_events: null
	,dispatch: function(event) {
		if(this._events != null) {
			this._events.invoke(event.type,event);
		}
	}
	,add: function(object) {
		if(this._queue.indexOf(object) != -1) {
			return;
		}
		var queueLength = this._queue.length;
		if(this.isValidating == true) {
			var depth = object.get_depth();
			var min = 0;
			var max = queueLength;
			var i = 0;
			var otherDepth = 0;
			while(max > min) {
				i = min + max >>> 1;
				otherDepth = this._queue[i].get_depth();
				if(otherDepth == depth) {
					break;
				} else if(otherDepth < depth) {
					max = i;
				} else {
					min = i + 1;
				}
			}
			if(otherDepth >= depth) {
				++i;
			}
			this._queue.splice(i,0,object);
		} else {
			this._queue[queueLength] = object;
			if(this.isPending == false) {
				this.isPending = true;
				haxe_ui_Toolkit.callLater($bind(this,this.process));
			}
		}
	}
	,addDisplay: function(item,nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._displayQueue.indexOf(item) == -1) {
			this._displayQueue.push(item);
		}
		if(nextFrame == false) {
			this.process();
		}
	}
	,process: function() {
		if(this.isValidating == true || this.isPending == false) {
			return;
		}
		var queueLength = this._queue.length;
		if(queueLength == 0) {
			this.isPending = false;
			return;
		}
		this.isValidating = true;
		if(queueLength > 1) {
			this._queue.sort($bind(this,this.queueSortFunction));
		}
		this.dispatch(new haxe_ui_events_ValidationEvent("validationstart"));
		while(this._queue.length > 0) {
			var item = this._queue.shift();
			if(item.get_depth() < 0) {
				continue;
			}
			item.validateComponent();
		}
		var _g = 0;
		var _g1 = this._displayQueue.length;
		while(_g < _g1) {
			var i = _g++;
			var item = this._displayQueue[i];
			item.updateComponentDisplay();
		}
		this._displayQueue.splice(0,this._displayQueue.length);
		this.isValidating = false;
		this.isPending = false;
		this.dispatch(new haxe_ui_events_ValidationEvent("validationstop"));
	}
	,queueSortFunction: function(first,second) {
		var difference = second.get_depth() - first.get_depth();
		if(difference > 0) {
			return 1;
		} else if(difference < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	,__class__: haxe_ui_validation_ValidationManager
};
var haxe_ui_validators_IValidator = function() { };
$hxClasses["haxe.ui.validators.IValidator"] = haxe_ui_validators_IValidator;
haxe_ui_validators_IValidator.__name__ = "haxe.ui.validators.IValidator";
haxe_ui_validators_IValidator.__isInterface__ = true;
var haxe_ui_validators_Validator = function() {
	this.invalidStyleName = "invalid-value";
};
$hxClasses["haxe.ui.validators.Validator"] = haxe_ui_validators_Validator;
haxe_ui_validators_Validator.__name__ = "haxe.ui.validators.Validator";
haxe_ui_validators_Validator.__interfaces__ = [haxe_ui_validators_IValidator];
haxe_ui_validators_Validator.prototype = {
	invalidMessage: null
	,invalidStyleName: null
	,__class__: haxe_ui_validators_Validator
};
var haxe_ui_validators_PatternValidator = function() {
	this.pattern = null;
	haxe_ui_validators_Validator.call(this);
};
$hxClasses["haxe.ui.validators.PatternValidator"] = haxe_ui_validators_PatternValidator;
haxe_ui_validators_PatternValidator.__name__ = "haxe.ui.validators.PatternValidator";
haxe_ui_validators_PatternValidator.__super__ = haxe_ui_validators_Validator;
haxe_ui_validators_PatternValidator.prototype = $extend(haxe_ui_validators_Validator.prototype,{
	pattern: null
	,__class__: haxe_ui_validators_PatternValidator
});
var haxe_ui_validators_EmailValidator = function() {
	haxe_ui_validators_PatternValidator.call(this);
	this.invalidMessage = "Invalid email address";
	this.pattern = new EReg("^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$","gm");
};
$hxClasses["haxe.ui.validators.EmailValidator"] = haxe_ui_validators_EmailValidator;
haxe_ui_validators_EmailValidator.__name__ = "haxe.ui.validators.EmailValidator";
haxe_ui_validators_EmailValidator.__super__ = haxe_ui_validators_PatternValidator;
haxe_ui_validators_EmailValidator.prototype = $extend(haxe_ui_validators_PatternValidator.prototype,{
	__class__: haxe_ui_validators_EmailValidator
});
var haxe_ui_validators_RequiredValidator = function() {
	haxe_ui_validators_Validator.call(this);
	this.invalidMessage = "Field is required";
	this.invalidStyleName = "required-value";
};
$hxClasses["haxe.ui.validators.RequiredValidator"] = haxe_ui_validators_RequiredValidator;
haxe_ui_validators_RequiredValidator.__name__ = "haxe.ui.validators.RequiredValidator";
haxe_ui_validators_RequiredValidator.__super__ = haxe_ui_validators_Validator;
haxe_ui_validators_RequiredValidator.prototype = $extend(haxe_ui_validators_Validator.prototype,{
	__class__: haxe_ui_validators_RequiredValidator
});
var haxe_ui_validators_ValidatorManager = function() {
	this._registeredValidators = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.validators.ValidatorManager"] = haxe_ui_validators_ValidatorManager;
haxe_ui_validators_ValidatorManager.__name__ = "haxe.ui.validators.ValidatorManager";
haxe_ui_validators_ValidatorManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validators_ValidatorManager.get_instance = function() {
	if(haxe_ui_validators_ValidatorManager.instance == null) {
		haxe_ui_validators_ValidatorManager.instance = new haxe_ui_validators_ValidatorManager();
	}
	return haxe_ui_validators_ValidatorManager.instance;
};
haxe_ui_validators_ValidatorManager.prototype = {
	_registeredValidators: null
	,registerValidator: function(id,ctor,defaultProperties) {
		this._registeredValidators.h[id] = { ctor : ctor, defaultProperties : defaultProperties};
	}
	,__class__: haxe_ui_validators_ValidatorManager
};
var haxe_xml__$Access_NodeAccess = {};
haxe_xml__$Access_NodeAccess.resolve = function(this1,name) {
	var x = this1.elementsNamed(name).next();
	if(x == null) {
		var xname;
		if(this1.nodeType == Xml.Document) {
			xname = "Document";
		} else {
			if(this1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
			}
			xname = this1.nodeName;
		}
		throw haxe_Exception.thrown(xname + " is missing element " + name);
	}
	if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
	}
	return x;
};
var haxe_xml__$Access_AttribAccess = {};
haxe_xml__$Access_AttribAccess.resolve = function(this1,name) {
	if(this1.nodeType == Xml.Document) {
		throw haxe_Exception.thrown("Cannot access document attribute " + name);
	}
	var v = this1.get(name);
	if(v == null) {
		if(this1.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this1.nodeType == null ? "null" : XmlType.toString(this1.nodeType)));
		}
		throw haxe_Exception.thrown(this1.nodeName + " is missing attribute " + name);
	}
	return v;
};
var haxe_xml__$Access_HasNodeAccess = {};
haxe_xml__$Access_HasNodeAccess.resolve = function(this1,name) {
	return this1.elementsNamed(name).hasNext();
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	var _g1 = position;
	while(_g < _g1) {
		var i = _g++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	message: null
	,lineNumber: null
	,positionAtLine: null
	,position: null
	,xml: null
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(p < str.length) {
		var c = str.charCodeAt(p);
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
					}
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else if(!Object.prototype.hasOwnProperty.call(haxe_xml_Parser.escapes.h,s)) {
					if(strict) {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
					}
					buf.b += Std.string("&" + s + ";");
				} else {
					buf.b += Std.string(haxe_xml_Parser.escapes.h[s]);
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		++p;
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
			}
			throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len = p - start;
			buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len = p - start;
		buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	output: null
	,pretty: null
	,writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				var _g_current = 0;
				var _g_array = value.children;
				while(_g_current < _g_array.length) {
					var child = _g_array[_g_current++];
					this.writeNode(child,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input = StringTools.trim(commentContent);
			this.output.b += Std.string(input);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var _g_current = 0;
			var _g_array = value.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.writeNode(child,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
		}
		var _g_current = 0;
		var _g_array = value.children;
		while(_g_current < _g_array.length) {
			var child = _g_array[_g_current++];
			switch(child.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				if(StringTools.ltrim(child.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var haxe_zip_ExtraField = $hxEnums["haxe.zip.ExtraField"] = { __ename__:"haxe.zip.ExtraField",__constructs__:null
	,FUnknown: ($_=function(tag,bytes) { return {_hx_index:0,tag:tag,bytes:bytes,__enum__:"haxe.zip.ExtraField",toString:$estr}; },$_._hx_name="FUnknown",$_.__params__ = ["tag","bytes"],$_)
	,FInfoZipUnicodePath: ($_=function(name,crc) { return {_hx_index:1,name:name,crc:crc,__enum__:"haxe.zip.ExtraField",toString:$estr}; },$_._hx_name="FInfoZipUnicodePath",$_.__params__ = ["name","crc"],$_)
	,FUtf8: {_hx_name:"FUtf8",_hx_index:2,__enum__:"haxe.zip.ExtraField",toString:$estr}
};
haxe_zip_ExtraField.__constructs__ = [haxe_zip_ExtraField.FUnknown,haxe_zip_ExtraField.FInfoZipUnicodePath,haxe_zip_ExtraField.FUtf8];
haxe_zip_ExtraField.__empty_constructs__ = [haxe_zip_ExtraField.FUtf8];
var haxe_zip_Huffman = $hxEnums["haxe.zip.Huffman"] = { __ename__:"haxe.zip.Huffman",__constructs__:null
	,Found: ($_=function(i) { return {_hx_index:0,i:i,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_._hx_name="Found",$_.__params__ = ["i"],$_)
	,NeedBit: ($_=function(left,right) { return {_hx_index:1,left:left,right:right,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_._hx_name="NeedBit",$_.__params__ = ["left","right"],$_)
	,NeedBits: ($_=function(n,table) { return {_hx_index:2,n:n,table:table,__enum__:"haxe.zip.Huffman",toString:$estr}; },$_._hx_name="NeedBits",$_.__params__ = ["n","table"],$_)
};
haxe_zip_Huffman.__constructs__ = [haxe_zip_Huffman.Found,haxe_zip_Huffman.NeedBit,haxe_zip_Huffman.NeedBits];
haxe_zip_Huffman.__empty_constructs__ = [];
var haxe_zip_HuffTools = function() {
};
$hxClasses["haxe.zip.HuffTools"] = haxe_zip_HuffTools;
haxe_zip_HuffTools.__name__ = "haxe.zip.HuffTools";
haxe_zip_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t._hx_index) {
		case 0:
			var _g = t.i;
			return 0;
		case 1:
			var a = t.left;
			var b = t.right;
			var da = this.treeDepth(a);
			var db = this.treeDepth(b);
			return 1 + (da < db ? da : db);
		case 2:
			var _g = t.n;
			var _g = t.table;
			throw haxe_Exception.thrown("assert");
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) {
			return t;
		}
		if(d == 1) {
			if(t._hx_index == 1) {
				var a = t.left;
				var b = t.right;
				return haxe_zip_Huffman.NeedBit(this.treeCompress(a),this.treeCompress(b));
			} else {
				throw haxe_Exception.thrown("assert");
			}
		}
		var size = 1 << d;
		var table = [];
		var _g = 0;
		var _g1 = size;
		while(_g < _g1) {
			var i = _g++;
			table.push(haxe_zip_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return haxe_zip_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		if(t._hx_index == 1) {
			var a = t.left;
			var b = t.right;
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,a);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,b);
			} else {
				table[p] = this.treeCompress(t);
			}
		} else {
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) {
			throw haxe_Exception.thrown("Invalid huffman");
		}
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) {
			return haxe_zip_Huffman.Found(bits.h[idx]);
		}
		v <<= 1;
		++len;
		return haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		if(nlengths == 1) {
			return haxe_zip_Huffman.NeedBit(haxe_zip_Huffman.Found(0),haxe_zip_Huffman.Found(0));
		}
		var counts = [];
		var tmp = [];
		if(maxbits > 32) {
			throw haxe_Exception.thrown("Invalid huffman");
		}
		var _g = 0;
		var _g1 = maxbits;
		while(_g < _g1) {
			var i = _g++;
			counts.push(0);
			tmp.push(0);
		}
		var _g = 0;
		var _g1 = nlengths;
		while(_g < _g1) {
			var i = _g++;
			var p = lengths[i + pos];
			if(p >= maxbits) {
				throw haxe_Exception.thrown("Invalid huffman");
			}
			counts[p]++;
		}
		var code = 0;
		var _g = 1;
		var _g1 = maxbits - 1;
		while(_g < _g1) {
			var i = _g++;
			code = code + counts[i] << 1;
			tmp[i] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = nlengths;
		while(_g < _g1) {
			var i = _g++;
			var l = lengths[i + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i;
			}
		}
		return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: haxe_zip_HuffTools
};
var haxe_zip__$InflateImpl_Window = function(hasCrc) {
	this.buffer = new haxe_io_Bytes(new ArrayBuffer(65536));
	this.pos = 0;
	if(hasCrc) {
		this.crc = new haxe_crypto_Adler32();
	}
};
$hxClasses["haxe.zip._InflateImpl.Window"] = haxe_zip__$InflateImpl_Window;
haxe_zip__$InflateImpl_Window.__name__ = "haxe.zip._InflateImpl.Window";
haxe_zip__$InflateImpl_Window.prototype = {
	buffer: null
	,pos: null
	,crc: null
	,slide: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,32768);
		}
		var b = new haxe_io_Bytes(new ArrayBuffer(65536));
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) {
			this.slide();
		}
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) {
			this.slide();
		}
		this.buffer.b[this.pos] = c;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) {
			this.crc.update(this.buffer,0,this.pos);
		}
		return this.crc;
	}
	,__class__: haxe_zip__$InflateImpl_Window
};
var haxe_zip__$InflateImpl_State = $hxEnums["haxe.zip._InflateImpl.State"] = { __ename__:"haxe.zip._InflateImpl.State",__constructs__:null
	,Head: {_hx_name:"Head",_hx_index:0,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Block: {_hx_name:"Block",_hx_index:1,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,CData: {_hx_name:"CData",_hx_index:2,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Flat: {_hx_name:"Flat",_hx_index:3,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Crc: {_hx_name:"Crc",_hx_index:4,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Dist: {_hx_name:"Dist",_hx_index:5,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,DistOne: {_hx_name:"DistOne",_hx_index:6,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
	,Done: {_hx_name:"Done",_hx_index:7,__enum__:"haxe.zip._InflateImpl.State",toString:$estr}
};
haxe_zip__$InflateImpl_State.__constructs__ = [haxe_zip__$InflateImpl_State.Head,haxe_zip__$InflateImpl_State.Block,haxe_zip__$InflateImpl_State.CData,haxe_zip__$InflateImpl_State.Flat,haxe_zip__$InflateImpl_State.Crc,haxe_zip__$InflateImpl_State.Dist,haxe_zip__$InflateImpl_State.DistOne,haxe_zip__$InflateImpl_State.Done];
haxe_zip__$InflateImpl_State.__empty_constructs__ = [haxe_zip__$InflateImpl_State.Head,haxe_zip__$InflateImpl_State.Block,haxe_zip__$InflateImpl_State.CData,haxe_zip__$InflateImpl_State.Flat,haxe_zip__$InflateImpl_State.Crc,haxe_zip__$InflateImpl_State.Dist,haxe_zip__$InflateImpl_State.DistOne,haxe_zip__$InflateImpl_State.Done];
var haxe_zip_InflateImpl = function(i,header,crc) {
	if(crc == null) {
		crc = true;
	}
	if(header == null) {
		header = true;
	}
	this.isFinal = false;
	this.htools = new haxe_zip_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	this.state = header ? haxe_zip__$InflateImpl_State.Head : haxe_zip__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.lengths.push(-1);
	this.window = new haxe_zip__$InflateImpl_Window(crc);
};
$hxClasses["haxe.zip.InflateImpl"] = haxe_zip_InflateImpl;
haxe_zip_InflateImpl.__name__ = "haxe.zip.InflateImpl";
haxe_zip_InflateImpl.run = function(i,bufsize) {
	if(bufsize == null) {
		bufsize = 65536;
	}
	var buf = new haxe_io_Bytes(new ArrayBuffer(bufsize));
	var output = new haxe_io_BytesBuffer();
	var inflate = new haxe_zip_InflateImpl(i);
	while(true) {
		var len = inflate.readBytes(buf,0,bufsize);
		output.addBytes(buf,0,len);
		if(len < bufsize) {
			break;
		}
	}
	return output.getBytes();
};
haxe_zip_InflateImpl.prototype = {
	nbits: null
	,bits: null
	,state: null
	,isFinal: null
	,huffman: null
	,huffdist: null
	,htools: null
	,len: null
	,dist: null
	,needed: null
	,output: null
	,outpos: null
	,input: null
	,lengths: null
	,window: null
	,buildFixedHuffman: function() {
		if(haxe_zip_InflateImpl.FIXED_HUFFMAN != null) {
			return haxe_zip_InflateImpl.FIXED_HUFFMAN;
		}
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143 ? 8 : n <= 255 ? 9 : n <= 279 ? 7 : 8);
		}
		haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return haxe_zip_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) {
			while(this.inflateLoop()) {
			}
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) {
			return 0;
		} else if(this.getBit()) {
			return 1 << n - 1 | this.getRevBits(n - 1);
		} else {
			return this.getRevBits(n - 1);
		}
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h._hx_index) {
		case 0:
			var n = h.i;
			return n;
		case 1:
			var a = h.left;
			var b = h.right;
			return this.applyHuffman(this.getBit() ? b : a);
		case 2:
			var n = h.n;
			var tbl = h.table;
			return this.applyHuffman(tbl[this.getBits(n)]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				++i;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				while(i < end) {
					a[i] = prev;
					++i;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) {
					throw haxe_Exception.thrown("Invalid data");
				}
				break;
			default:
				throw haxe_Exception.thrown("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		switch(this.state._hx_index) {
		case 0:
			var cmf = this.input.readByte();
			var cm = cmf & 15;
			var cinfo = cmf >> 4;
			if(cm != 8) {
				throw haxe_Exception.thrown("Invalid data");
			}
			var flg = this.input.readByte();
			var fdict = (flg & 32) != 0;
			if(((cmf << 8) + flg) % 31 != 0) {
				throw haxe_Exception.thrown("Invalid data");
			}
			if(fdict) {
				throw haxe_Exception.thrown("Unsupported dictionary");
			}
			this.state = haxe_zip__$InflateImpl_State.Block;
			return true;
		case 1:
			this.isFinal = this.getBit();
			switch(this.getBits(2)) {
			case 0:
				this.len = this.input.readUInt16();
				var nlen = this.input.readUInt16();
				if(nlen != 65535 - this.len) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.state = haxe_zip__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g = 0;
				var _g1 = hclen;
				while(_g < _g1) {
					var i = _g++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i]] = this.getBits(3);
				}
				var _g = hclen;
				var _g1 = 19;
				while(_g < _g1) {
					var i = _g++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i]] = 0;
				}
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g = 0;
				var _g1 = hlit + hdist;
				while(_g < _g1) {
					var i = _g++;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			default:
				throw haxe_Exception.thrown("Invalid data");
			}
			break;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				this.state = this.isFinal ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code = this.huffdist == null ? this.getRevBits(5) : this.applyHuffman(this.huffdist);
				extra_bits = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) {
					throw haxe_Exception.thrown("Invalid data");
				}
				this.state = this.dist == 1 ? haxe_zip__$InflateImpl_State.DistOne : haxe_zip__$InflateImpl_State.Dist;
				return true;
			}
			break;
		case 3:
			var rlen = this.len < this.needed ? this.len : this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) {
				this.state = this.isFinal ? haxe_zip__$InflateImpl_State.Crc : haxe_zip__$InflateImpl_State.Block;
			}
			return this.needed > 0;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = haxe_zip__$InflateImpl_State.Done;
				return true;
			}
			var crc = haxe_crypto_Adler32.read(this.input);
			if(!calc.equals(crc)) {
				throw haxe_Exception.thrown("Invalid CRC");
			}
			this.state = haxe_zip__$InflateImpl_State.Done;
			return true;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist = this.len < this.dist ? this.len : this.dist;
				var rlen = this.needed < rdist ? this.needed : rdist;
				this.addDist(this.dist,rlen);
				this.len -= rlen;
			}
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 6:
			var rlen = this.len < this.needed ? this.len : this.needed;
			this.addDistOne(rlen);
			this.len -= rlen;
			if(this.len == 0) {
				this.state = haxe_zip__$InflateImpl_State.CData;
			}
			return this.needed > 0;
		case 7:
			return false;
		}
	}
	,__class__: haxe_zip_InflateImpl
};
var haxe_zip_Uncompress = function() { };
$hxClasses["haxe.zip.Uncompress"] = haxe_zip_Uncompress;
haxe_zip_Uncompress.__name__ = "haxe.zip.Uncompress";
haxe_zip_Uncompress.run = function(src,bufsize) {
	return haxe_zip_InflateImpl.run(new haxe_io_BytesInput(src),bufsize);
};
var haxe_zip_Writer = function(o) {
	this.o = o;
	this.files = new haxe_ds_List();
};
$hxClasses["haxe.zip.Writer"] = haxe_zip_Writer;
haxe_zip_Writer.__name__ = "haxe.zip.Writer";
haxe_zip_Writer.prototype = {
	o: null
	,files: null
	,writeZipDate: function(date) {
		var hour = date.getHours();
		var min = date.getMinutes();
		var sec = date.getSeconds() >> 1;
		this.o.writeUInt16(hour << 11 | min << 5 | sec);
		var year = date.getFullYear() - 1980;
		var month = date.getMonth() + 1;
		var day = date.getDate();
		this.o.writeUInt16(year << 9 | month << 5 | day);
	}
	,writeEntryHeader: function(f) {
		var o = this.o;
		var flags = 0;
		if(f.extraFields != null) {
			var _g_head = f.extraFields.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var e = val;
				if(e._hx_index == 2) {
					flags |= 2048;
				}
			}
		}
		o.writeInt32(67324752);
		o.writeUInt16(20);
		o.writeUInt16(flags);
		if(f.data == null) {
			f.fileSize = 0;
			f.dataSize = 0;
			f.crc32 = 0;
			f.compressed = false;
			f.data = new haxe_io_Bytes(new ArrayBuffer(0));
		} else {
			if(f.crc32 == null) {
				if(f.compressed) {
					throw haxe_Exception.thrown("CRC32 must be processed before compression");
				}
				f.crc32 = haxe_crypto_Crc32.make(f.data);
			}
			if(!f.compressed) {
				f.fileSize = f.data.length;
			}
			f.dataSize = f.data.length;
		}
		o.writeUInt16(f.compressed ? 8 : 0);
		this.writeZipDate(f.fileTime);
		o.writeInt32(f.crc32);
		o.writeInt32(f.dataSize);
		o.writeInt32(f.fileSize);
		o.writeUInt16(f.fileName.length);
		var e = new haxe_io_BytesOutput();
		if(f.extraFields != null) {
			var _g_head = f.extraFields.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var f1 = val;
				switch(f1._hx_index) {
				case 0:
					var tag = f1.tag;
					var bytes = f1.bytes;
					e.writeUInt16(tag);
					e.writeUInt16(bytes.length);
					e.write(bytes);
					break;
				case 1:
					var name = f1.name;
					var crc = f1.crc;
					var namebytes = haxe_io_Bytes.ofString(name);
					e.writeUInt16(28789);
					e.writeUInt16(namebytes.length + 5);
					e.writeByte(1);
					e.writeInt32(crc);
					e.write(namebytes);
					break;
				case 2:
					break;
				}
			}
		}
		var ebytes = e.getBytes();
		o.writeUInt16(ebytes.length);
		o.writeString(f.fileName);
		o.write(ebytes);
		this.files.add({ name : f.fileName, compressed : f.compressed, clen : f.data.length, size : f.fileSize, crc : f.crc32, date : f.fileTime, fields : ebytes});
	}
	,write: function(files) {
		var _g_head = files.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var f = val;
			this.writeEntryHeader(f);
			this.o.writeFullBytes(f.data,0,f.data.length);
		}
		this.writeCDR();
	}
	,writeCDR: function() {
		var cdr_size = 0;
		var cdr_offset = 0;
		var _g_head = this.files.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var f = val;
			var namelen = f.name.length;
			var extraFieldsLength = f.fields.length;
			this.o.writeInt32(33639248);
			this.o.writeUInt16(20);
			this.o.writeUInt16(20);
			this.o.writeUInt16(0);
			this.o.writeUInt16(f.compressed ? 8 : 0);
			this.writeZipDate(f.date);
			this.o.writeInt32(f.crc);
			this.o.writeInt32(f.clen);
			this.o.writeInt32(f.size);
			this.o.writeUInt16(namelen);
			this.o.writeUInt16(extraFieldsLength);
			this.o.writeUInt16(0);
			this.o.writeUInt16(0);
			this.o.writeUInt16(0);
			this.o.writeInt32(0);
			this.o.writeInt32(cdr_offset);
			this.o.writeString(f.name);
			this.o.write(f.fields);
			cdr_size += 46 + namelen + extraFieldsLength;
			cdr_offset += 30 + namelen + extraFieldsLength + f.clen;
		}
		this.o.writeInt32(101010256);
		this.o.writeUInt16(0);
		this.o.writeUInt16(0);
		this.o.writeUInt16(this.files.length);
		this.o.writeUInt16(this.files.length);
		this.o.writeInt32(cdr_size);
		this.o.writeInt32(cdr_offset);
		this.o.writeUInt16(0);
	}
	,__class__: haxe_zip_Writer
};
var hxd_BitmapData = function(width,height) {
	if(!(width == -101 && height == -102)) {
		var canvas = window.document.createElement("canvas");
		canvas.width = width;
		canvas.height = height;
		this.ctx = canvas.getContext("2d",null);
	}
};
$hxClasses["hxd.BitmapData"] = hxd_BitmapData;
hxd_BitmapData.__name__ = "hxd.BitmapData";
hxd_BitmapData.prototype = {
	ctx: null
	,lockImage: null
	,pixel: null
	,line: function(x0,y0,x1,y1,color) {
		var dx = x1 - x0;
		var dy = y1 - y0;
		if(dx == 0) {
			if(y1 < y0) {
				var tmp = y0;
				y0 = y1;
				y1 = tmp;
			}
			if(y0 < 0) {
				y0 = 0;
			}
			if(y1 > this.ctx.canvas.height - 1) {
				y1 = this.ctx.canvas.height - 1;
			}
			var _g = y0;
			var _g1 = y1 + 1;
			while(_g < _g1) {
				var y = _g++;
				this.setPixel(x0,y,color);
			}
		} else if(dy == 0) {
			if(x1 < x0) {
				var tmp = x0;
				x0 = x1;
				x1 = tmp;
			}
			if(x0 < 0) {
				x0 = 0;
			}
			if(x1 > this.ctx.canvas.width - 1) {
				x1 = this.ctx.canvas.width - 1;
			}
			var _g = x0;
			var _g1 = x1 + 1;
			while(_g < _g1) {
				var x = _g++;
				this.setPixel(x,y0,color);
			}
		} else {
			var sx;
			var sy;
			var clip_x0;
			var clip_y0;
			var clip_x1;
			var clip_y1;
			if(x0 < x1) {
				if(x0 >= this.ctx.canvas.width || x1 < 0) {
					return;
				}
				sx = 1;
				clip_x0 = 0;
				clip_x1 = this.ctx.canvas.width - 1;
			} else {
				if(x1 >= this.ctx.canvas.width || x0 < 0) {
					return;
				}
				sx = -1;
				x1 = -x1;
				x0 = -x0;
				clip_x0 = 1 - this.ctx.canvas.width;
				clip_x1 = 0;
			}
			if(y0 < y1) {
				if(y0 >= this.ctx.canvas.height || y1 < 0) {
					return;
				}
				sy = 1;
				clip_y0 = 0;
				clip_y1 = this.ctx.canvas.height - 1;
			} else {
				if(y1 >= this.ctx.canvas.width || y0 < 0) {
					return;
				}
				sy = -1;
				y1 = -y1;
				y0 = -y0;
				clip_y0 = 1 - this.ctx.canvas.height;
				clip_y1 = 0;
			}
			dx = x1 - x0;
			dy = y1 - y0;
			var d2x = dx << 1;
			var d2y = dy << 1;
			var x = x0;
			var y = y0;
			if(dx >= dy) {
				var delta = d2y - dx;
				var tracing_can_start = false;
				if(y0 < clip_y0) {
					var temp = d2x;
					temp = temp * (clip_y0 - y0) - dx;
					var xinc = temp / d2y;
					x += xinc | 0;
					if(x > clip_x1) {
						return;
					}
					if(x >= clip_x0) {
						temp -= xinc * d2y;
						delta -= (temp | 0) + dx;
						y = clip_y0;
						if(temp > 0) {
							++x;
							delta += d2y;
						}
						tracing_can_start = true;
					}
				}
				if(!tracing_can_start && x0 < clip_x0) {
					var temp = d2y;
					temp *= clip_x0 - x0;
					var yinc = temp / d2x;
					y += yinc | 0;
					temp %= d2x;
					if(y > clip_y1 || y == clip_y1 && temp > dx) {
						return;
					}
					x = clip_x0;
					delta += temp | 0;
					if(temp >= dx) {
						++y;
						delta -= d2x;
					}
				}
				var xend = x1;
				if(y1 > clip_y1) {
					var temp = d2x;
					temp = temp * (clip_y1 - y1) + dx;
					var xinc = temp / d2y;
					xend += xinc | 0;
					if(temp - xinc * d2y == 0) {
						--xend;
					}
				}
				if(xend > clip_x1) {
					xend = clip_x1 + 1;
				} else {
					++xend;
				}
				if(sx == -1) {
					x = -x;
					xend = -xend;
				}
				if(sy == -1) {
					y = -y;
				}
				d2x -= d2y;
				while(x != xend) {
					this.setPixel(x,y,color);
					if(delta >= 0) {
						y += sy;
						delta -= d2x;
					} else {
						delta += d2y;
					}
					x += sx;
				}
			} else {
				var delta = d2x - dy;
				var tracing_can_start = false;
				if(x0 < clip_x0) {
					var temp = d2y;
					temp = temp * (clip_x0 - x0) - dy;
					var yinc = temp / d2x;
					y += yinc | 0;
					if(y > clip_y1) {
						return;
					}
					if(y >= clip_y0) {
						temp -= yinc * d2x;
						delta -= (temp | 0) + dy;
						x = clip_x0;
						if(temp > 0) {
							++y;
							delta += d2x;
						}
						tracing_can_start = true;
					}
				}
				if(!tracing_can_start && y0 < clip_y0) {
					var temp = d2x;
					temp *= clip_y0 - y0;
					var xinc = temp / d2y;
					x += xinc | 0;
					temp %= d2y;
					if(x > clip_x1 || x == clip_x1 && temp > dy) {
						return;
					}
					y = clip_y0;
					delta += temp | 0;
					if(temp >= dy) {
						++x;
						delta -= d2y;
					}
				}
				var yend = y1;
				if(x1 > clip_x1) {
					var temp = d2y;
					temp = temp * (clip_x1 - x1) + dy;
					var yinc = temp / d2x;
					yend += yinc | 0;
					if(temp - yinc * d2x == 0) {
						--yend;
					}
				}
				if(yend > clip_y1) {
					yend = clip_y1 + 1;
				} else {
					++yend;
				}
				if(sx == -1) {
					x = -x;
				}
				if(sy == -1) {
					y = -y;
					yend = -yend;
				}
				d2y -= d2x;
				while(y != yend) {
					this.setPixel(x,y,color);
					if(delta >= 0) {
						x += sx;
						delta -= d2y;
					} else {
						delta += d2x;
					}
					y += sy;
				}
			}
		}
	}
	,setPixel: function(x,y,c) {
		var i = this.lockImage;
		if(i != null) {
			var a = x + y * i.width << 2;
			i.data[a] = c >> 16 & 255;
			i.data[a | 1] = c >> 8 & 255;
			i.data[a | 2] = c & 255;
			i.data[a | 3] = c >>> 24 & 255;
			return;
		}
		var i = this.pixel;
		if(i == null) {
			i = this.ctx.createImageData(1,1);
			this.pixel = i;
		}
		i.data[0] = c >> 16 & 255;
		i.data[1] = c >> 8 & 255;
		i.data[2] = c & 255;
		i.data[3] = c >>> 24 & 255;
		this.ctx.putImageData(i,x,y);
	}
	,getPixels: function() {
		var w = this.ctx.canvas.width;
		var h = this.ctx.canvas.height;
		var data = this.ctx.getImageData(0,0,w,h).data;
		var pixels = data.buffer;
		return new hxd_Pixels(w,h,haxe_io_Bytes.ofData(pixels),hxd_PixelFormat.RGBA);
	}
	,setPixels: function(pixels) {
		if(pixels.width != this.ctx.canvas.width || pixels.height != this.ctx.canvas.height) {
			throw haxe_Exception.thrown("Invalid pixels size");
		}
		var img = this.ctx.createImageData(pixels.width,pixels.height);
		pixels.convert(hxd_PixelFormat.RGBA);
		var _g = 0;
		var _g1 = pixels.width * pixels.height * 4;
		while(_g < _g1) {
			var i = _g++;
			img.data[i] = pixels.bytes.b[i];
		}
		this.ctx.putImageData(img,0,0);
	}
	,__class__: hxd_BitmapData
};
var hxd_Precision = {};
var hxd_InputFormat = {};
hxd_InputFormat.toString = function(this1) {
	switch(this1) {
	case 1:
		return "DFloat";
	case 2:
		return "DVec2";
	case 3:
		return "DVec3";
	case 4:
		return "DVec4";
	case 9:
		return "DBytes4";
	}
};
hxd_InputFormat.fromHXSL = function(t) {
	switch(t._hx_index) {
	case 3:
		return 1;
	case 5:
		var _g = t.t;
		switch(t.size) {
		case 2:
			if(_g._hx_index == 1) {
				return 2;
			} else {
				throw haxe_Exception.thrown("Unsupported buffer type " + Std.string(t));
			}
			break;
		case 3:
			if(_g._hx_index == 1) {
				return 3;
			} else {
				throw haxe_Exception.thrown("Unsupported buffer type " + Std.string(t));
			}
			break;
		case 4:
			if(_g._hx_index == 1) {
				return 4;
			} else {
				throw haxe_Exception.thrown("Unsupported buffer type " + Std.string(t));
			}
			break;
		default:
			throw haxe_Exception.thrown("Unsupported buffer type " + Std.string(t));
		}
		break;
	case 9:
		if(t.size == 4) {
			return 9;
		} else {
			throw haxe_Exception.thrown("Unsupported buffer type " + Std.string(t));
		}
		break;
	default:
		throw haxe_Exception.thrown("Unsupported buffer type " + Std.string(t));
	}
};
var hxd_BufferInput = function(name,type,precision) {
	if(precision == null) {
		precision = 0;
	}
	this.name = name;
	this.type = type;
	this.precision = precision;
};
$hxClasses["hxd.BufferInput"] = hxd_BufferInput;
hxd_BufferInput.__name__ = "hxd.BufferInput";
hxd_BufferInput.prototype = {
	name: null
	,type: null
	,precision: null
	,__class__: hxd_BufferInput
};
var hxd_BufferMapping = {};
hxd_BufferMapping._new = function(index,offset,prec) {
	return index << 3 | prec | offset << 16;
};
var hxd_BufferFormat = function(inputs) {
	this.uid = hxd_BufferFormat._UID++;
	this.stride = this.strideBytes = 0;
	this.inputs = inputs.slice();
	this.hasLowPrecision = false;
	var _g = 0;
	while(_g < inputs.length) {
		var i = inputs[_g];
		++_g;
		this.stride += i.type & 7;
		this.strideBytes += (i.type & 7) * hxd_Precision.SIZES[i.precision];
		if((this.strideBytes & 3) != 0) {
			this.strideBytes += 4 - (this.strideBytes & 3);
		}
		if(i.precision != 0) {
			this.hasLowPrecision = true;
		}
	}
};
$hxClasses["hxd.BufferFormat"] = hxd_BufferFormat;
hxd_BufferFormat.__name__ = "hxd.BufferFormat";
hxd_BufferFormat.__properties__ = {get_XY_UV:"get_XY_UV",get_XY_UV_RGBA:"get_XY_UV_RGBA"};
hxd_BufferFormat.get_XY_UV_RGBA = function() {
	if(hxd_BufferFormat.XY_UV_RGBA == null) {
		hxd_BufferFormat.XY_UV_RGBA = hxd_BufferFormat.make([new hxd_BufferInput("position",2,0),new hxd_BufferInput("uv",2,0),new hxd_BufferInput("color",4,0)]);
	}
	return hxd_BufferFormat.XY_UV_RGBA;
};
hxd_BufferFormat.get_XY_UV = function() {
	if(hxd_BufferFormat.XY_UV == null) {
		hxd_BufferFormat.XY_UV = hxd_BufferFormat.make([new hxd_BufferInput("position",2,0),new hxd_BufferInput("uv",2,0)]);
	}
	return hxd_BufferFormat.XY_UV;
};
hxd_BufferFormat.make = function(inputs) {
	var names = [];
	var _g = 0;
	while(_g < inputs.length) {
		var b = inputs[_g];
		++_g;
		names.push(b.name);
	}
	var key = names.join("|");
	var arr = hxd_BufferFormat.ALL_FORMATS.h[key];
	if(arr == null) {
		arr = [];
		hxd_BufferFormat.ALL_FORMATS.h[key] = arr;
	}
	var _g = 0;
	while(_g < arr.length) {
		var fmt = arr[_g];
		++_g;
		var found = true;
		var _g1 = 0;
		var _g2 = inputs.length;
		while(_g1 < _g2) {
			var i = _g1++;
			var _this = inputs[i];
			var b = fmt.inputs[i];
			if(!(_this.type == b.type && _this.name == b.name && _this.precision == b.precision)) {
				found = false;
				break;
			}
		}
		if(found) {
			return fmt;
		}
	}
	var fmt = new hxd_BufferFormat(inputs);
	arr.push(fmt);
	return fmt;
};
hxd_BufferFormat.prototype = {
	uid: null
	,stride: null
	,strideBytes: null
	,hasLowPrecision: null
	,inputs: null
	,mappings: null
	,getInput: function(name) {
		var _g = 0;
		var _g1 = this.inputs;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.name == name) {
				return i;
			}
		}
		return null;
	}
	,calculateInputOffset: function(name) {
		var offset = 0;
		var _g = 0;
		var _g1 = this.inputs;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.name == name) {
				return offset;
			}
			offset += (i.type & 7) * hxd_Precision.SIZES[i.precision];
			if((offset & 3) != 0) {
				offset += 4 - (offset & 3);
			}
		}
		throw haxe_Exception.thrown("Input not found : " + name);
	}
	,resolveMapping: function(target) {
		var m = this.mappings == null ? null : this.mappings[target.uid];
		if(m != null) {
			return m;
		}
		m = [];
		var _g = 0;
		var _g1 = target.inputs;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var found = false;
			var _g2 = 0;
			var _g3 = this.inputs;
			while(_g2 < _g3.length) {
				var i2 = _g3[_g2];
				++_g2;
				if(i2.name == i.name && i2.type == i.type) {
					m.push(hxd_BufferMapping._new(0,this.calculateInputOffset(i2.name),i2.precision));
					found = true;
					break;
				}
			}
			if(!found) {
				throw haxe_Exception.thrown("Missing buffer input '" + i.name + "'");
			}
		}
		if(this.mappings == null) {
			this.mappings = [];
		}
		this.mappings[target.uid] = m;
		return m;
	}
	,__class__: hxd_BufferFormat
};
var hxd_MultiFormat = function(formats) {
	this.mappings = [];
	this.uid = hxd_MultiFormat._UID++;
	this.formats = formats;
};
$hxClasses["hxd.MultiFormat"] = hxd_MultiFormat;
hxd_MultiFormat.__name__ = "hxd.MultiFormat";
hxd_MultiFormat.prototype = {
	uid: null
	,formats: null
	,mappings: null
	,makeMapping: function(format) {
		var m = [];
		var _g_current = 0;
		var _g_array = format.inputs;
		while(_g_current < _g_array.length) {
			var input = _g_array[_g_current++];
			var found = false;
			var match = null;
			var _g_current1 = 0;
			var _g_array1 = this.formats;
			while(_g_current1 < _g_array1.length) {
				var _g_value = _g_array1[_g_current1];
				var _g_key = _g_current1++;
				var idx = _g_key;
				var f = _g_value;
				var i = f.getInput(input.name);
				if(i != null) {
					match = i;
					if(i.type != input.type) {
						continue;
					}
					var offset = f.calculateInputOffset(i.name);
					m.push(hxd_BufferMapping._new(idx,offset,i.precision));
					found = true;
					break;
				}
			}
			if(!found) {
				if(match != null) {
					throw haxe_Exception.thrown("Shader buffer " + input.name + " was requested with " + (input.type == null ? "null" : hxd_InputFormat.toString(input.type)) + " but found with " + (match.type == null ? "null" : hxd_InputFormat.toString(match.type)));
				}
				throw haxe_Exception.thrown("Missing shader buffer " + input.name);
			}
		}
		this.mappings[format.uid] = m;
		return m;
	}
	,__class__: hxd_MultiFormat
};
var hxd_Charset = function() {
	var _gthis = this;
	this.map = new haxe_ds_IntMap();
	var _g = 0;
	while(_g < 94) {
		var i = _g++;
		_gthis.map.h[65281 + i] = 33 + i;
	}
	var _g = 192;
	var _g1 = 199;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 65;
	}
	var _g = 224;
	var _g1 = 231;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 97;
	}
	var _g = 200;
	var _g1 = 204;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 69;
	}
	var _g = 232;
	var _g1 = 236;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 101;
	}
	var _g = 204;
	var _g1 = 208;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 73;
	}
	var _g = 236;
	var _g1 = 240;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 105;
	}
	var _g = 210;
	var _g1 = 215;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 79;
	}
	var _g = 242;
	var _g1 = 247;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 111;
	}
	var _g = 217;
	var _g1 = 221;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 85;
	}
	var _g = 249;
	var _g1 = 253;
	while(_g < _g1) {
		var i = _g++;
		_gthis.map.h[i] = 117;
	}
	_gthis.map.h[199] = 67;
	_gthis.map.h[231] = 67;
	_gthis.map.h[208] = 68;
	_gthis.map.h[222] = 100;
	_gthis.map.h[209] = 78;
	_gthis.map.h[241] = 110;
	_gthis.map.h[221] = 89;
	_gthis.map.h[253] = 121;
	_gthis.map.h[255] = 121;
	_gthis.map.h[8364] = 69;
	_gthis.map.h[12288] = 32;
	_gthis.map.h[160] = 32;
	_gthis.map.h[171] = 34;
	_gthis.map.h[187] = 34;
	_gthis.map.h[8220] = 34;
	_gthis.map.h[8221] = 34;
	_gthis.map.h[8222] = 34;
	_gthis.map.h[8216] = 39;
	_gthis.map.h[8217] = 39;
	_gthis.map.h[180] = 39;
	_gthis.map.h[8216] = 39;
	_gthis.map.h[8249] = 60;
	_gthis.map.h[8250] = 62;
	_gthis.map.h[8211] = 45;
};
$hxClasses["hxd.Charset"] = hxd_Charset;
hxd_Charset.__name__ = "hxd.Charset";
hxd_Charset.getDefault = function() {
	if(hxd_Charset.inst == null) {
		hxd_Charset.inst = new hxd_Charset();
	}
	return hxd_Charset.inst;
};
hxd_Charset.prototype = {
	map: null
	,resolveChar: function(code,glyphs) {
		var c = code;
		while(c != null) {
			var g = glyphs.h[c];
			if(g != null) {
				return g;
			}
			c = this.map.h[c];
		}
		return null;
	}
	,isCJK: function(code) {
		if(!(code >= 11904 && code <= 42191 || code >= 63744 && code <= 64255)) {
			if(code >= 131072) {
				return code <= 262141;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,isSpace: function(code) {
		if(code != 32) {
			return code == 12288;
		} else {
			return true;
		}
	}
	,isBreakChar: function(code) {
		if(!this.isSpace(code)) {
			return this.isCJK(code);
		} else {
			return true;
		}
	}
	,isComplementChar: function(code) {
		return hxd_Charset.complementChars.h.hasOwnProperty(code);
	}
	,__class__: hxd_Charset
};
var hxd_Cursor = $hxEnums["hxd.Cursor"] = { __ename__:"hxd.Cursor",__constructs__:null
	,Default: {_hx_name:"Default",_hx_index:0,__enum__:"hxd.Cursor",toString:$estr}
	,Button: {_hx_name:"Button",_hx_index:1,__enum__:"hxd.Cursor",toString:$estr}
	,Move: {_hx_name:"Move",_hx_index:2,__enum__:"hxd.Cursor",toString:$estr}
	,TextInput: {_hx_name:"TextInput",_hx_index:3,__enum__:"hxd.Cursor",toString:$estr}
	,Hide: {_hx_name:"Hide",_hx_index:4,__enum__:"hxd.Cursor",toString:$estr}
	,Custom: ($_=function(custom) { return {_hx_index:5,custom:custom,__enum__:"hxd.Cursor",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["custom"],$_)
	,Callback: ($_=function(f) { return {_hx_index:6,f:f,__enum__:"hxd.Cursor",toString:$estr}; },$_._hx_name="Callback",$_.__params__ = ["f"],$_)
};
hxd_Cursor.__constructs__ = [hxd_Cursor.Default,hxd_Cursor.Button,hxd_Cursor.Move,hxd_Cursor.TextInput,hxd_Cursor.Hide,hxd_Cursor.Custom,hxd_Cursor.Callback];
hxd_Cursor.__empty_constructs__ = [hxd_Cursor.Default,hxd_Cursor.Button,hxd_Cursor.Move,hxd_Cursor.TextInput,hxd_Cursor.Hide];
var hxd_CustomCursor = function(frames,speed,offsetX,offsetY) {
	this.frames = frames;
	this.speed = speed;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
	this.frameDelay = 1 / speed;
	this.frameTime = 0;
	this.frameIndex = 0;
};
$hxClasses["hxd.CustomCursor"] = hxd_CustomCursor;
hxd_CustomCursor.__name__ = "hxd.CustomCursor";
hxd_CustomCursor.prototype = {
	frames: null
	,speed: null
	,offsetX: null
	,offsetY: null
	,alloc: null
	,frameDelay: null
	,frameTime: null
	,frameIndex: null
	,reset: function() {
		this.frameTime = 0;
		this.frameIndex = 0;
	}
	,update: function(dt) {
		var newTime = this.frameTime + dt;
		var delay = this.frameDelay;
		var index = this.frameIndex;
		while(newTime >= delay) {
			newTime -= delay;
			++index;
		}
		this.frameTime = newTime;
		if(index >= this.frames.length) {
			index %= this.frames.length;
		}
		if(index != this.frameIndex) {
			this.frameIndex = index;
			return index;
		}
		return -1;
	}
	,__class__: hxd_CustomCursor
};
var hxd_EventKind = $hxEnums["hxd.EventKind"] = { __ename__:"hxd.EventKind",__constructs__:null
	,EPush: {_hx_name:"EPush",_hx_index:0,__enum__:"hxd.EventKind",toString:$estr}
	,ERelease: {_hx_name:"ERelease",_hx_index:1,__enum__:"hxd.EventKind",toString:$estr}
	,EMove: {_hx_name:"EMove",_hx_index:2,__enum__:"hxd.EventKind",toString:$estr}
	,EOver: {_hx_name:"EOver",_hx_index:3,__enum__:"hxd.EventKind",toString:$estr}
	,EOut: {_hx_name:"EOut",_hx_index:4,__enum__:"hxd.EventKind",toString:$estr}
	,EWheel: {_hx_name:"EWheel",_hx_index:5,__enum__:"hxd.EventKind",toString:$estr}
	,EFocus: {_hx_name:"EFocus",_hx_index:6,__enum__:"hxd.EventKind",toString:$estr}
	,EFocusLost: {_hx_name:"EFocusLost",_hx_index:7,__enum__:"hxd.EventKind",toString:$estr}
	,EKeyDown: {_hx_name:"EKeyDown",_hx_index:8,__enum__:"hxd.EventKind",toString:$estr}
	,EKeyUp: {_hx_name:"EKeyUp",_hx_index:9,__enum__:"hxd.EventKind",toString:$estr}
	,EReleaseOutside: {_hx_name:"EReleaseOutside",_hx_index:10,__enum__:"hxd.EventKind",toString:$estr}
	,ETextInput: {_hx_name:"ETextInput",_hx_index:11,__enum__:"hxd.EventKind",toString:$estr}
	,ECheck: {_hx_name:"ECheck",_hx_index:12,__enum__:"hxd.EventKind",toString:$estr}
};
hxd_EventKind.__constructs__ = [hxd_EventKind.EPush,hxd_EventKind.ERelease,hxd_EventKind.EMove,hxd_EventKind.EOver,hxd_EventKind.EOut,hxd_EventKind.EWheel,hxd_EventKind.EFocus,hxd_EventKind.EFocusLost,hxd_EventKind.EKeyDown,hxd_EventKind.EKeyUp,hxd_EventKind.EReleaseOutside,hxd_EventKind.ETextInput,hxd_EventKind.ECheck];
hxd_EventKind.__empty_constructs__ = [hxd_EventKind.EPush,hxd_EventKind.ERelease,hxd_EventKind.EMove,hxd_EventKind.EOver,hxd_EventKind.EOut,hxd_EventKind.EWheel,hxd_EventKind.EFocus,hxd_EventKind.EFocusLost,hxd_EventKind.EKeyDown,hxd_EventKind.EKeyUp,hxd_EventKind.EReleaseOutside,hxd_EventKind.ETextInput,hxd_EventKind.ECheck];
var hxd_Event = function(k,x,y) {
	if(y == null) {
		y = 0.;
	}
	if(x == null) {
		x = 0.;
	}
	this.button = 0;
	this.kind = k;
	this.relX = x;
	this.relY = y;
};
$hxClasses["hxd.Event"] = hxd_Event;
hxd_Event.__name__ = "hxd.Event";
hxd_Event.prototype = {
	kind: null
	,relX: null
	,relY: null
	,relZ: null
	,propagate: null
	,cancel: null
	,button: null
	,touchId: null
	,keyCode: null
	,charCode: null
	,wheelDelta: null
	,__class__: hxd_Event
};
var hxd__$FloatBuffer_Float32Expand = {};
hxd__$FloatBuffer_Float32Expand._new = function(length) {
	return { pos : length, array : new Float32Array(new ArrayBuffer(length << 2))};
};
var hxd_Key = function() { };
$hxClasses["hxd.Key"] = hxd_Key;
hxd_Key.__name__ = "hxd.Key";
hxd_Key.isDown = function(code) {
	return hxd_Key.keyPressed[code] > 0;
};
hxd_Key.initialize = function() {
	if(hxd_Key.initDone) {
		hxd_Key.dispose();
	}
	hxd_Key.initDone = true;
	hxd_Key.keyPressed = [];
	hxd_Window.getInstance().addEventTarget(hxd_Key.onEvent);
};
hxd_Key.dispose = function() {
	if(hxd_Key.initDone) {
		hxd_Window.getInstance().removeEventTarget(hxd_Key.onEvent);
		hxd_Key.initDone = false;
		hxd_Key.keyPressed = [];
	}
};
hxd_Key.onEvent = function(e) {
	switch(e.kind._hx_index) {
	case 0:
		if(e.button < 5) {
			hxd_Key.keyPressed[e.button] = hxd_Timer.frameCount + 2;
		}
		break;
	case 1:
		if(e.button < 5) {
			hxd_Key.keyPressed[e.button] = -(hxd_Timer.frameCount + 2);
		}
		break;
	case 5:
		hxd_Key.keyPressed[e.wheelDelta > 0 ? 6 : 5] = hxd_Timer.frameCount + 2;
		break;
	case 8:
		if(!hxd_Key.ALLOW_KEY_REPEAT && hxd_Key.keyPressed[e.keyCode] > 0) {
			return;
		}
		hxd_Key.keyPressed[e.keyCode] = hxd_Timer.frameCount + 2;
		break;
	case 9:
		hxd_Key.keyPressed[e.keyCode] = -(hxd_Timer.frameCount + 2);
		break;
	case 10:
		hxd_Key.keyPressed = [];
		break;
	default:
	}
};
var hxd_Flags = $hxEnums["hxd.Flags"] = { __ename__:"hxd.Flags",__constructs__:null
	,ReadOnly: {_hx_name:"ReadOnly",_hx_index:0,__enum__:"hxd.Flags",toString:$estr}
	,AlphaPremultiplied: {_hx_name:"AlphaPremultiplied",_hx_index:1,__enum__:"hxd.Flags",toString:$estr}
};
hxd_Flags.__constructs__ = [hxd_Flags.ReadOnly,hxd_Flags.AlphaPremultiplied];
hxd_Flags.__empty_constructs__ = [hxd_Flags.ReadOnly,hxd_Flags.AlphaPremultiplied];
var hxd_PixelsARGB = {};
hxd_PixelsARGB.fromPixels = function(p) {
	p.convert(hxd_PixelFormat.ARGB);
	return p;
};
var hxd_Pixels = function(width,height,bytes,format,offset) {
	if(offset == null) {
		offset = 0;
	}
	this.width = width;
	this.height = height;
	this.bytes = bytes;
	this.set_innerFormat(format);
	this.offset = offset;
	var i = 0;
	if(i == null) {
		i = 0;
	}
	this.flags = i;
};
$hxClasses["hxd.Pixels"] = hxd_Pixels;
hxd_Pixels.__name__ = "hxd.Pixels";
hxd_Pixels.calcDataSize = function(width,height,format) {
	if(format._hx_index == 22) {
		var _g = format.v;
		return (height + 3 >> 2 << 2) * hxd_Pixels.calcStride(width,format);
	} else {
		return height * hxd_Pixels.calcStride(width,format);
	}
};
hxd_Pixels.calcStride = function(width,format) {
	var tmp;
	switch(format._hx_index) {
	case 3:case 21:
		tmp = 8;
		break;
	case 4:
		tmp = 16;
		break;
	case 5:
		tmp = 1;
		break;
	case 6:case 18:
		tmp = 2;
		break;
	case 7:
		tmp = 4;
		break;
	case 8:
		tmp = 2;
		break;
	case 9:case 19:
		tmp = 4;
		break;
	case 10:
		tmp = 8;
		break;
	case 11:
		tmp = 3;
		break;
	case 12:case 20:
		tmp = 6;
		break;
	case 13:
		tmp = 12;
		break;
	case 0:case 1:case 2:case 14:case 15:
		tmp = 4;
		break;
	case 16:
		tmp = 4;
		break;
	case 17:
		tmp = 4;
		break;
	case 22:
		var n = format.v;
		var blocks = width + 3 >> 2;
		if(n == 1 || n == 4) {
			return blocks << 1;
		}
		return blocks << 2;
	case 23:case 24:case 25:
		throw haxe_Exception.thrown("Not a pixel format");
	}
	return width * tmp;
};
hxd_Pixels.alloc = function(width,height,format) {
	return new hxd_Pixels(width,height,new haxe_io_Bytes(new ArrayBuffer(hxd_Pixels.calcDataSize(width,height,format))),format);
};
hxd_Pixels.prototype = {
	bytes: null
	,width: null
	,height: null
	,dataSize: null
	,offset: null
	,flags: null
	,stride: null
	,bytesPerPixel: null
	,innerFormat: null
	,set_innerFormat: function(fmt) {
		this.innerFormat = fmt;
		this.stride = hxd_Pixels.calcStride(this.width,fmt);
		this.dataSize = hxd_Pixels.calcDataSize(this.width,this.height,fmt);
		this.bytesPerPixel = hxd_Pixels.calcStride(1,fmt);
		return fmt;
	}
	,invalidFormat: function() {
		throw haxe_Exception.thrown("Unsupported format for this operation : " + Std.string(this.innerFormat));
	}
	,copyInner: function() {
		var old = this.bytes;
		this.bytes = new haxe_io_Bytes(new ArrayBuffer(this.dataSize));
		this.bytes.blit(0,old,this.offset,this.dataSize);
		this.offset = 0;
		this.flags &= -1 - (1 << hxd_Flags.ReadOnly._hx_index);
	}
	,flipY: function() {
		if((this.flags & 1 << hxd_Flags.ReadOnly._hx_index) != 0) {
			this.copyInner();
		}
		if(this.stride % 4 != 0) {
			this.invalidFormat();
		}
		var _g = 0;
		var _g1 = this.height >> 1;
		while(_g < _g1) {
			var y = _g++;
			var p1 = y * this.stride + this.offset;
			var p2 = (this.height - 1 - y) * this.stride + this.offset;
			var _g2 = 0;
			var _g3 = this.stride >> 2;
			while(_g2 < _g3) {
				var x = _g2++;
				var a = this.bytes.getInt32(p1);
				var b = this.bytes.getInt32(p2);
				this.bytes.setInt32(p1,b);
				this.bytes.setInt32(p2,a);
				p1 += 4;
				p2 += 4;
			}
		}
	}
	,convert: function(target) {
		if(this.innerFormat == target || Type.enumEq(this.innerFormat,target)) {
			return;
		}
		if((this.flags & 1 << hxd_Flags.ReadOnly._hx_index) != 0) {
			this.copyInner();
		}
		var bytes = this.bytes.b;
		var _g = this.innerFormat;
		switch(_g._hx_index) {
		case 0:
			switch(target._hx_index) {
			case 1:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var a = bytes[p];
					var r = bytes[p + 1];
					var g = bytes[p + 2];
					var b = bytes[p + 3];
					bytes[p++] = b;
					bytes[p++] = g;
					bytes[p++] = r;
					bytes[p] = a;
				}
				break;
			case 2:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var a = bytes[p];
					var v = bytes[p + 1];
					bytes[p] = v;
					var v1 = bytes[p + 2];
					bytes[p + 1] = v1;
					var v2 = bytes[p + 3];
					bytes[p + 2] = v2;
					bytes[p + 3] = a;
				}
				break;
			default:
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 1:
			switch(target._hx_index) {
			case 0:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var a = bytes[p];
					var r = bytes[p + 1];
					var g = bytes[p + 2];
					var b = bytes[p + 3];
					bytes[p++] = b;
					bytes[p++] = g;
					bytes[p++] = r;
					bytes[p] = a;
				}
				break;
			case 2:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var b = bytes[p];
					var r = bytes[p + 2];
					bytes[p] = r;
					bytes[p + 2] = b;
				}
				break;
			default:
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 2:
			switch(target._hx_index) {
			case 0:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var a = bytes[p + 3];
					var v = bytes[p + 2];
					bytes[p + 3] = v;
					var v1 = bytes[p + 1];
					bytes[p + 2] = v1;
					var v2 = bytes[p];
					bytes[p + 1] = v2;
					bytes[p] = a;
				}
				break;
			case 1:
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var p = (i << 2) + this.offset;
					var b = bytes[p];
					var r = bytes[p + 2];
					bytes[p] = r;
					bytes[p + 2] = b;
				}
				break;
			case 5:
				var nbytes = new haxe_io_Bytes(new ArrayBuffer(this.width * this.height));
				var out = nbytes.b;
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var v = bytes[i << 2];
					out[i] = v;
				}
				this.bytes = nbytes;
				break;
			default:
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 4:
			if(target._hx_index == 7) {
				var nbytes = new haxe_io_Bytes(new ArrayBuffer(this.height * this.width * 4));
				var out = nbytes.b;
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					nbytes.setFloat(i << 2,this.bytes.getFloat(i << 4));
				}
				this.bytes = nbytes;
			} else {
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 7:
			switch(target._hx_index) {
			case 1:case 2:
				var fbytes = this.bytes;
				var p = 0;
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var v = fbytes.getFloat(p) * 255 | 0;
					if(v < 0) {
						v = 0;
					} else if(v > 255) {
						v = 255;
					}
					bytes[p++] = v;
					bytes[p++] = v;
					bytes[p++] = v;
					bytes[p++] = 255;
				}
				break;
			default:
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 18:
			if(target._hx_index == 7) {
				var nbytes = new haxe_io_Bytes(new ArrayBuffer(this.width * this.height * 4));
				var fbytes = this.bytes;
				var _g1 = 0;
				var _g2 = this.width * this.height;
				while(_g1 < _g2) {
					var i = _g1++;
					var nv = fbytes.getUInt16(i << 1);
					nbytes.setFloat(i << 2,nv / 65535.0);
				}
				this.bytes = nbytes;
			} else {
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		case 22:
			if(target._hx_index == 22) {
				var b = target.v;
				var a = _g.v;
				if(a != b) {
					throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
				}
			} else {
				throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
			}
			break;
		default:
			throw haxe_Exception.thrown("Cannot convert from " + Std.string(this.innerFormat) + " to " + Std.string(target));
		}
		this.set_innerFormat(target);
	}
	,dispose: function() {
		this.bytes = null;
	}
	,toString: function() {
		return "Pixels(" + this.width + "x" + this.height + " " + Std.string(this.innerFormat) + ")";
	}
	,__class__: hxd_Pixels
	,__properties__: {set_innerFormat:"set_innerFormat"}
};
var hxd_Res = function() { };
$hxClasses["hxd.Res"] = hxd_Res;
hxd_Res.__name__ = "hxd.Res";
hxd_Res.__properties__ = {get_loader:"get_loader"};
hxd_Res.get_loader = function() {
	var l = hxd_res_Loader.currentInstance;
	if(l == null) {
		throw haxe_Exception.thrown("Resource loader not initialized: call to hxd.Res.initXXX() required");
	}
	return l;
};
var hxd_Save = function() { };
$hxClasses["hxd.Save"] = hxd_Save;
hxd_Save.__name__ = "hxd.Save";
hxd_Save.makeCRC = function(data) {
	return HxOverrides.substr(haxe_crypto_Sha1.encode(data + haxe_crypto_Sha1.encode(data + hxd_Save.SALT)),4,32);
};
hxd_Save.saveData = function(value,checkSum) {
	var data = haxe_Serializer.run(value);
	if(checkSum) {
		return data + "#" + hxd_Save.makeCRC(data);
	} else {
		return data;
	}
};
hxd_Save.readSaveData = function(name) {
	return window.localStorage.getItem(name);
};
hxd_Save.writeSaveData = function(name,data) {
	window.localStorage.setItem(name,data);
};
hxd_Save.save = function(val,name,checkSum) {
	if(checkSum == null) {
		checkSum = false;
	}
	if(name == null) {
		name = "save";
	}
	var data = hxd_Save.saveData(val,checkSum);
	try {
		if(hxd_Save.readSaveData(name) == data) {
			return false;
		}
	} catch( _g ) {
	}
	hxd_Save.writeSaveData(name,data);
	return true;
};
var hxd_SceneEvents = function($window) {
	this.defaultCursor = hxd_Cursor.Default;
	this.mouseCheckMove = true;
	this.enablePhysicalMouse = true;
	this.isOut = false;
	this.onOver = new hxd_Event(hxd_EventKind.EOver);
	this.onOut = new hxd_Event(hxd_EventKind.EOut);
	this.checkPos = new hxd_Event(hxd_EventKind.ECheck);
	this.focusLost = new hxd_Event(hxd_EventKind.EFocusLost);
	this.lastTouch = 0;
	this.mouseY = -1.;
	this.mouseX = -1.;
	this.overIndex = -1;
	this.scenes = [];
	this.pendingEvents = [];
	this.pushList = [];
	this.overList = [];
	this.overCandidates = [];
	if($window == null) {
		$window = hxd_Window.getInstance();
	}
	this.window = $window;
	$window.addEventTarget($bind(this,this.onEvent));
};
$hxClasses["hxd.SceneEvents"] = hxd_SceneEvents;
hxd_SceneEvents.__name__ = "hxd.SceneEvents";
hxd_SceneEvents.prototype = {
	window: null
	,scenes: null
	,overList: null
	,overCandidates: null
	,overIndex: null
	,currentFocus: null
	,pendingEvents: null
	,pushList: null
	,currentDrag: null
	,mouseX: null
	,mouseY: null
	,lastTouch: null
	,focusLost: null
	,checkPos: null
	,onOut: null
	,onOver: null
	,isOut: null
	,enablePhysicalMouse: null
	,mouseCheckMove: null
	,defaultCursor: null
	,onRemove: function(i) {
		if(i == this.currentFocus) {
			this.currentFocus = null;
		}
		if(this.overIndex >= 0) {
			var index = this.overList.indexOf(i);
			if(index >= 0) {
				HxOverrides.remove(this.overList,i);
				if(index < this.overIndex) {
					this.overIndex--;
				}
			}
		} else {
			HxOverrides.remove(this.overList,i);
			this.selectCursor();
		}
		HxOverrides.remove(this.pushList,i);
	}
	,addScene: function(s,index) {
		s.setEvents(this);
		if(index == null) {
			this.scenes.push(s);
		} else {
			this.scenes.splice(index,0,s);
		}
	}
	,focus: function(i) {
		if(this.currentFocus == i) {
			return;
		}
		if(i == null) {
			this.blur();
			return;
		}
		if(this.currentFocus != null) {
			this.blur();
			if(this.currentFocus != null) {
				return;
			}
		}
		var e = new hxd_Event(hxd_EventKind.EFocus);
		i.handleEvent(e);
		if(!e.cancel) {
			this.currentFocus = i;
		}
	}
	,blur: function() {
		if(this.currentFocus == null) {
			return;
		}
		this.focusLost.cancel = false;
		this.currentFocus.handleEvent(this.focusLost);
		if(!this.focusLost.cancel) {
			this.currentFocus = null;
		}
	}
	,checkFocus: function() {
		if(this.currentFocus == null) {
			return;
		}
		var s = this.currentFocus.getInteractiveScene();
		if(s == null) {
			this.currentFocus = null;
			return;
		}
		if(!s.isInteractiveVisible(this.currentFocus)) {
			this.blur();
		}
	}
	,emitEvent: function(event) {
		var oldX = event.relX;
		var oldY = event.relY;
		var overCandidateCount = 0;
		var handled = false;
		var checkOver = false;
		var fillOver = false;
		var checkPush = false;
		var cancelFocus = false;
		var updateCursor = false;
		this.overIndex = 0;
		switch(event.kind._hx_index) {
		case 0:
			cancelFocus = true;
			checkPush = true;
			break;
		case 1:
			checkPush = true;
			break;
		case 5:case 8:case 9:case 11:
			if(this.currentFocus != null) {
				event.relX = event.relY = 0;
				this.currentFocus.handleEvent(event);
				event.relX = oldX;
				event.relY = oldY;
				if(!event.propagate) {
					return;
				}
			}
			break;
		case 2:case 12:
			checkOver = true;
			fillOver = true;
			break;
		default:
		}
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var last = null;
			while(true) {
				var i = s.handleEvent(event,last);
				if(i == null) {
					event.relX = oldX;
					event.relY = oldY;
					break;
				}
				if(checkOver) {
					if(fillOver) {
						var idx = this.overList.indexOf(i);
						if(idx == -1) {
							if(this.overCandidates.length == overCandidateCount) {
								this.overCandidates[overCandidateCount] = { i : i, s : s, x : event.relX, y : event.relY, z : event.relZ};
							} else {
								var info = this.overCandidates[overCandidateCount];
								info.i = i;
								info.s = s;
								info.x = event.relX;
								info.y = event.relY;
								info.z = event.relZ;
							}
							++overCandidateCount;
							this.overList.splice(this.overIndex++,0,i);
							updateCursor = true;
						} else {
							if(idx < this.overIndex) {
								do {
									this.overList[idx] = this.overList[idx + 1];
									++idx;
								} while(idx < this.overIndex);
								this.overList[this.overIndex] = i;
								updateCursor = true;
							} else if(idx > this.overIndex) {
								do {
									this.overList[idx] = this.overList[idx - 1];
									--idx;
								} while(idx > this.overIndex);
								this.overList[this.overIndex] = i;
								updateCursor = true;
							}
							this.overIndex++;
						}
						fillOver = event.propagate;
					}
				} else {
					if(checkPush) {
						if(event.kind == hxd_EventKind.EPush) {
							this.pushList.push(i);
						} else {
							HxOverrides.remove(this.pushList,i);
						}
					}
					if(cancelFocus && i == this.currentFocus) {
						cancelFocus = false;
					}
				}
				event.relX = oldX;
				event.relY = oldY;
				if(!event.propagate) {
					handled = true;
					break;
				}
				last = i;
				event.propagate = false;
			}
			if(handled) {
				break;
			}
		}
		if(cancelFocus && this.currentFocus != null) {
			this.blur();
		}
		if(checkOver) {
			if(this.overIndex < this.overList.length) {
				while(this.overIndex < this.overList.length) {
					var e = this.overList.pop();
					e.handleEvent(this.onOut);
				}
				updateCursor = true;
			}
			if(overCandidateCount != 0) {
				var i = 0;
				var ev = this.onOver;
				do {
					var info = this.overCandidates[i++];
					ev.relX = info.x;
					ev.relY = info.y;
					ev.relZ = info.z;
					if(info.s.isInteractiveVisible(info.i)) {
						info.i.handleEvent(ev);
					} else {
						HxOverrides.remove(this.overList,info.i);
					}
					info.i = null;
					info.s = null;
				} while(i < overCandidateCount);
			}
		}
		this.overIndex = -1;
		if(updateCursor) {
			this.selectCursor();
		}
		if(!handled && event != this.checkPos) {
			if(event.kind == hxd_EventKind.EPush) {
				this.pushList.push(null);
			} else if(event.kind == hxd_EventKind.ERelease) {
				HxOverrides.remove(this.pushList,null);
			}
			this.dispatchListeners(event);
		}
		if(event.kind == hxd_EventKind.ERelease && this.pushList.length > 0) {
			var _g = 0;
			var _g1 = this.pushList;
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(i == null) {
					event.kind = hxd_EventKind.EReleaseOutside;
					this.dispatchListeners(event);
					event.kind = hxd_EventKind.ERelease;
				} else {
					var s = i.getInteractiveScene();
					if(s == null) {
						continue;
					}
					event.kind = hxd_EventKind.EReleaseOutside;
					s.dispatchEvent(event,i);
					event.kind = hxd_EventKind.ERelease;
					event.relX = oldX;
					event.relY = oldY;
				}
			}
			this.pushList = [];
		}
	}
	,checkEvents: function() {
		var old = this.pendingEvents;
		var checkMoved = !this.mouseCheckMove;
		var checkFocused = this.currentFocus == null;
		if(old.length > 0) {
			this.pendingEvents = [];
			var _g = 0;
			while(_g < old.length) {
				var e = old[_g];
				++_g;
				var ox = e.relX;
				var oy = e.relY;
				switch(e.kind._hx_index) {
				case 0:case 1:
					this.mouseX = e.relX;
					this.mouseY = e.relY;
					this.lastTouch = e.touchId;
					break;
				case 2:
					checkMoved = true;
					this.mouseX = e.relX;
					this.mouseY = e.relY;
					this.lastTouch = e.touchId;
					break;
				case 3:
					this.isOut = false;
					this.selectCursor();
					continue;
				case 4:
					this.isOut = true;
					if(this.overList.length > 0) {
						var i = this.overList.length - 1;
						while(i >= 0) {
							this.onOut.cancel = false;
							this.overList[i].handleEvent(this.onOut);
							HxOverrides.remove(this.overList,this.overList[i]);
							--i;
						}
						this.selectCursor();
					}
					continue;
				case 5:case 8:case 9:case 11:
					if(!checkFocused) {
						checkFocused = true;
						this.checkFocus();
					}
					break;
				default:
				}
				if(this.currentDrag != null && (this.currentDrag.ref == null || this.currentDrag.ref == e.touchId)) {
					e.propagate = true;
					e.cancel = false;
					this.currentDrag.f(e);
					e.relX = ox;
					e.relY = oy;
					if(!e.propagate) {
						continue;
					}
				}
				this.emitEvent(e);
			}
		}
		if(!checkFocused) {
			this.checkFocus();
		}
		if(!checkMoved && !this.isOut && this.currentDrag == null) {
			this.checkPos.relX = this.mouseX;
			this.checkPos.relY = this.mouseY;
			this.checkPos.touchId = this.lastTouch;
			this.checkPos.cancel = false;
			this.checkPos.propagate = false;
			this.emitEvent(this.checkPos);
		}
	}
	,startCapture: function(f,onCancel,touchId) {
		if(this.currentDrag != null && this.currentDrag.onCancel != null) {
			this.currentDrag.onCancel();
		}
		this.currentDrag = { f : f, ref : touchId, onCancel : onCancel};
	}
	,stopCapture: function() {
		if(this.currentDrag != null && this.currentDrag.onCancel != null) {
			this.currentDrag.onCancel();
		}
		this.currentDrag = null;
	}
	,updateCursor: function(i) {
		if(this.overList.indexOf(i) != -1) {
			this.selectCursor();
		}
	}
	,selectCursor: function() {
		var cur = this.defaultCursor;
		var _g = 0;
		var _g1 = this.overList;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			if(o.cursor != null) {
				cur = o.cursor;
				break;
			}
		}
		if(cur._hx_index == 6) {
			var f = cur.f;
			f();
		} else {
			hxd_System.setCursor(cur);
		}
	}
	,onEvent: function(e) {
		if(!this.enablePhysicalMouse && e.kind == hxd_EventKind.EMove) {
			return;
		}
		this.pendingEvents.push(e);
	}
	,dispatchListeners: function(event) {
		var ox = event.relX;
		var oy = event.relY;
		event.propagate = true;
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			event.cancel = false;
			s.dispatchListeners(event);
			event.relX = ox;
			event.relY = oy;
			if(!event.propagate) {
				break;
			}
		}
	}
	,__class__: hxd_SceneEvents
};
var hxd_Platform = $hxEnums["hxd.Platform"] = { __ename__:"hxd.Platform",__constructs__:null
	,IOS: {_hx_name:"IOS",_hx_index:0,__enum__:"hxd.Platform",toString:$estr}
	,Android: {_hx_name:"Android",_hx_index:1,__enum__:"hxd.Platform",toString:$estr}
	,WebGL: {_hx_name:"WebGL",_hx_index:2,__enum__:"hxd.Platform",toString:$estr}
	,PC: {_hx_name:"PC",_hx_index:3,__enum__:"hxd.Platform",toString:$estr}
	,Console: {_hx_name:"Console",_hx_index:4,__enum__:"hxd.Platform",toString:$estr}
	,FlashPlayer: {_hx_name:"FlashPlayer",_hx_index:5,__enum__:"hxd.Platform",toString:$estr}
};
hxd_Platform.__constructs__ = [hxd_Platform.IOS,hxd_Platform.Android,hxd_Platform.WebGL,hxd_Platform.PC,hxd_Platform.Console,hxd_Platform.FlashPlayer];
hxd_Platform.__empty_constructs__ = [hxd_Platform.IOS,hxd_Platform.Android,hxd_Platform.WebGL,hxd_Platform.PC,hxd_Platform.Console,hxd_Platform.FlashPlayer];
var hxd_SystemValue = $hxEnums["hxd.SystemValue"] = { __ename__:"hxd.SystemValue",__constructs__:null
	,IsTouch: {_hx_name:"IsTouch",_hx_index:0,__enum__:"hxd.SystemValue",toString:$estr}
	,IsWindowed: {_hx_name:"IsWindowed",_hx_index:1,__enum__:"hxd.SystemValue",toString:$estr}
	,IsMobile: {_hx_name:"IsMobile",_hx_index:2,__enum__:"hxd.SystemValue",toString:$estr}
};
hxd_SystemValue.__constructs__ = [hxd_SystemValue.IsTouch,hxd_SystemValue.IsWindowed,hxd_SystemValue.IsMobile];
hxd_SystemValue.__empty_constructs__ = [hxd_SystemValue.IsTouch,hxd_SystemValue.IsWindowed,hxd_SystemValue.IsMobile];
var hxd_Timer = function() { };
$hxClasses["hxd.Timer"] = hxd_Timer;
hxd_Timer.__name__ = "hxd.Timer";
hxd_Timer.update = function() {
	hxd_Timer.frameCount++;
	var newTime = HxOverrides.now() / 1000;
	hxd_Timer.elapsedTime = newTime - hxd_Timer.lastTimeStamp;
	hxd_Timer.lastTimeStamp = newTime;
	if(hxd_Timer.elapsedTime < hxd_Timer.maxDeltaTime) {
		var a = hxd_Timer.elapsedTime;
		hxd_Timer.currentDT = a + hxd_Timer.smoothFactor * (hxd_Timer.currentDT - a);
	} else {
		hxd_Timer.elapsedTime = 1 / hxd_Timer.wantedFPS;
	}
	hxd_Timer.dt = hxd_Timer.currentDT;
};
hxd_Timer.skip = function() {
	hxd_Timer.lastTimeStamp = HxOverrides.now() / 1000;
};
var hxd_Window = function(canvas,globalEvents) {
	this.canLockMouse = true;
	this.discardMouseUp = -1;
	this.discardMouseCaptureEvent = true;
	this.useScreenPixels = js_Browser.get_supported();
	this.curMouseY = 0.;
	this.curMouseX = 0.;
	this.mouseMode = hxd_impl_MouseMode.Absolute;
	var _gthis = this;
	var customCanvas = canvas != null;
	this.eventTargets = new haxe_ds_List();
	this.resizeEvents = new haxe_ds_List();
	if(!js_Browser.get_supported()) {
		this.canvasPos = { "width" : 0, "top" : 0, "left" : 0, "height" : 0};
		return;
	}
	if(canvas == null) {
		canvas = window.document.getElementById("webgl");
		if(canvas == null) {
			throw haxe_Exception.thrown("Missing canvas #webgl");
		}
		if(canvas.getAttribute("globalEvents") == "1") {
			globalEvents = true;
		}
	}
	this.canvas = canvas;
	this.propagateKeyEvents = globalEvents;
	var propagate = canvas.getAttribute("propagateKeyEvents");
	if(propagate != null) {
		this.propagateKeyEvents = propagate != "0" && propagate != "false";
	}
	this.focused = globalEvents;
	this.element = globalEvents ? window : canvas;
	this.canvasPos = canvas.getBoundingClientRect();
	if(customCanvas) {
		canvas.addEventListener("mousemove",$bind(this,this.onMouseMove));
	} else {
		window.addEventListener("mousemove",$bind(this,this.onMouseMove));
	}
	this.element.addEventListener("mousedown",$bind(this,this.onMouseDown));
	this.element.addEventListener("mouseup",$bind(this,this.onMouseUp));
	this.element.addEventListener("mouseleave",$bind(this,this.onMouseLeave));
	this.element.addEventListener("wheel",$bind(this,this.onMouseWheel));
	this.element.addEventListener("touchstart",$bind(this,this.onTouchStart));
	this.element.addEventListener("touchmove",$bind(this,this.onTouchMove));
	this.element.addEventListener("touchend",$bind(this,this.onTouchEnd));
	this.element.addEventListener("keydown",$bind(this,this.onKeyDown));
	this.element.addEventListener("keyup",$bind(this,this.onKeyUp));
	this.element.addEventListener("keypress",$bind(this,this.onKeyPress));
	var _g = this;
	var b = false;
	var tmp = function() {
		_g.onFocus(b);
	};
	this.element.addEventListener("blur",tmp);
	var _g1 = this;
	var b1 = true;
	var tmp = function() {
		_g1.onFocus(b1);
	};
	this.element.addEventListener("focus",tmp);
	if(window.ResizeObserver != null) {
		this.observer = new ResizeObserver(function(e) {
			_gthis.checkResize();
		});
		this.observer.observe(canvas);
	}
	window.addEventListener("resize",$bind(this,this.checkResize));
	window.document.addEventListener("pointerlockchange",$bind(this,this.onPointerLockChange));
	canvas.addEventListener("contextmenu",function(e) {
		e.stopPropagation();
		if(e.button == 2) {
			e.preventDefault();
		}
		return false;
	});
	if(globalEvents) {
		canvas.addEventListener("mousedown",function(e) {
			_gthis.onMouseDown(e);
			e.stopPropagation();
			e.preventDefault();
		});
		this.element.addEventListener("contextmenu",function(e) {
			e.stopPropagation();
			e.preventDefault();
			return false;
		});
	} else {
		if(canvas.getAttribute("tabindex") == null) {
			canvas.setAttribute("tabindex","1");
		}
		canvas.style.outline = "none";
	}
	this.curW = this.get_width();
	this.curH = this.get_height();
};
$hxClasses["hxd.Window"] = hxd_Window;
hxd_Window.__name__ = "hxd.Window";
hxd_Window.getInstance = function() {
	if(hxd_Window.inst == null) {
		hxd_Window.inst = new hxd_Window();
	}
	return hxd_Window.inst;
};
hxd_Window.prototype = {
	resizeEvents: null
	,eventTargets: null
	,mouseMode: null
	,propagateKeyEvents: null
	,curMouseX: null
	,curMouseY: null
	,pointerLockTarget: null
	,canvas: null
	,element: null
	,canvasPos: null
	,curW: null
	,curH: null
	,focused: null
	,observer: null
	,useScreenPixels: null
	,discardMouseCaptureEvent: null
	,discardMouseUp: null
	,canLockMouse: null
	,checkResize: function() {
		this.canvasPos = this.canvas.getBoundingClientRect();
		var cw = this.get_width();
		var ch = this.get_height();
		if(this.curW != cw || this.curH != ch) {
			this.curW = cw;
			this.curH = ch;
			this.onResize(null);
		}
	}
	,onMouseModeChange: function(from,to) {
		return null;
	}
	,event: function(e) {
		var _g_head = this.eventTargets.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var et = val;
			et(e);
		}
	}
	,addEventTarget: function(et) {
		this.eventTargets.add(et);
	}
	,removeEventTarget: function(et) {
		var _g_head = this.eventTargets.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var e = val;
			if(e == et) {
				this.eventTargets.remove(e);
				break;
			}
		}
	}
	,addResizeEvent: function(f) {
		this.resizeEvents.push(f);
	}
	,removeResizeEvent: function(f) {
		var _g_head = this.resizeEvents.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var e = val;
			if(e == f) {
				this.resizeEvents.remove(f);
				break;
			}
		}
	}
	,onResize: function(e) {
		var _g_head = this.resizeEvents.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var r = val;
			r();
		}
	}
	,getPixelRatio: function() {
		if(this.useScreenPixels) {
			return window.devicePixelRatio;
		} else {
			return 1;
		}
	}
	,get_width: function() {
		return Math.round(this.canvasPos.width * this.getPixelRatio());
	}
	,get_height: function() {
		return Math.round(this.canvasPos.height * this.getPixelRatio());
	}
	,get_mouseX: function() {
		return Math.round((this.curMouseX - this.canvasPos.left) * this.getPixelRatio());
	}
	,get_mouseY: function() {
		return Math.round((this.curMouseY - this.canvasPos.top) * this.getPixelRatio());
	}
	,set_mouseMode: function(v) {
		if(Type.enumEq(v,this.mouseMode)) {
			return v;
		}
		var forced = this.onMouseModeChange(this.mouseMode,v);
		if(forced != null) {
			v = forced;
		}
		var target = this.pointerLockTarget = this.canvas != null ? this.canvas : window.document.documentElement;
		if(v == hxd_impl_MouseMode.Absolute) {
			if(target.ownerDocument.pointerLockElement == target) {
				target.ownerDocument.exitPointerLock();
			}
		} else if(this.canLockMouse) {
			if(target.ownerDocument.pointerLockElement != target) {
				target.requestPointerLock();
			}
		}
		return this.mouseMode = v;
	}
	,onPointerLockChange: function(e) {
		if(this.mouseMode != hxd_impl_MouseMode.Absolute && this.pointerLockTarget.ownerDocument.pointerLockElement != this.pointerLockTarget) {
			this.canLockMouse = false;
			this.set_mouseMode(hxd_impl_MouseMode.Absolute);
			this.canLockMouse = true;
		}
	}
	,onMouseDown: function(e) {
		if(this.mouseMode == hxd_impl_MouseMode.Absolute) {
			if(e.clientX != this.curMouseX || e.clientY != this.curMouseY) {
				this.onMouseMove(e);
			}
		} else {
			if(this.pointerLockTarget.ownerDocument.pointerLockElement != this.pointerLockTarget) {
				this.pointerLockTarget.requestPointerLock();
				if(this.discardMouseCaptureEvent) {
					this.discardMouseUp = e.button;
					return;
				}
			}
			if(e.movementX != 0 || e.movementY != 0) {
				this.onMouseMove(e);
			}
		}
		var ev = new hxd_Event(hxd_EventKind.EPush,this.get_mouseX(),this.get_mouseY());
		var _g = e.button;
		var tmp;
		switch(_g) {
		case 1:
			tmp = 2;
			break;
		case 2:
			tmp = 1;
			break;
		default:
			var x = _g;
			tmp = x;
		}
		ev.button = tmp;
		this.event(ev);
	}
	,onMouseUp: function(e) {
		if(this.discardMouseUp == e.button) {
			this.discardMouseUp = -1;
			return;
		}
		if(this.mouseMode == hxd_impl_MouseMode.Absolute ? e.clientX != this.curMouseX || e.clientY != this.curMouseY : e.movementX != 0 || e.movementY != 0) {
			this.onMouseMove(e);
		}
		var ev = new hxd_Event(hxd_EventKind.ERelease,this.get_mouseX(),this.get_mouseY());
		var _g = e.button;
		var tmp;
		switch(_g) {
		case 1:
			tmp = 2;
			break;
		case 2:
			tmp = 1;
			break;
		default:
			var x = _g;
			tmp = x;
		}
		ev.button = tmp;
		this.event(ev);
	}
	,onMouseLeave: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EReleaseOutside,this.get_mouseX(),this.get_mouseY());
		var _g = e.button;
		var tmp;
		switch(_g) {
		case 1:
			tmp = 2;
			break;
		case 2:
			tmp = 1;
			break;
		default:
			var x = _g;
			tmp = x;
		}
		ev.button = tmp;
		this.event(ev);
	}
	,onMouseMove: function(e) {
		var _g = this.mouseMode;
		switch(_g._hx_index) {
		case 0:
			this.curMouseX = e.clientX;
			this.curMouseY = e.clientY;
			this.event(new hxd_Event(hxd_EventKind.EMove,this.get_mouseX(),this.get_mouseY()));
			break;
		case 1:
			var _g1 = _g.restorePos;
			var callback = _g.callback;
			if(this.pointerLockTarget.ownerDocument.pointerLockElement != this.pointerLockTarget) {
				return;
			}
			var ev = new hxd_Event(hxd_EventKind.EMove,e.movementX,e.movementY);
			callback(ev);
			if(!ev.cancel && ev.propagate) {
				ev.cancel = false;
				ev.propagate = false;
				ev.relX = this.curMouseX;
				ev.relY = this.curMouseY;
				this.event(ev);
			}
			break;
		case 2:
			var _g1 = _g.restorePos;
			if(this.pointerLockTarget.ownerDocument.pointerLockElement != this.pointerLockTarget) {
				return;
			}
			this.curMouseX += e.movementX;
			this.curMouseY += e.movementY;
			this.event(new hxd_Event(hxd_EventKind.EMove,this.get_mouseX(),this.get_mouseY()));
			break;
		}
	}
	,onMouseWheel: function(e) {
		e.preventDefault();
		var ev = new hxd_Event(hxd_EventKind.EWheel,this.get_mouseX(),this.get_mouseY());
		ev.wheelDelta = e.deltaY / 120;
		this.event(ev);
	}
	,onTouchStart: function(e) {
		e.preventDefault();
		var x;
		var y;
		var ev;
		var _g = 0;
		var _g1 = e.changedTouches;
		while(_g < _g1.length) {
			var touch = _g1[_g];
			++_g;
			x = Math.round((touch.clientX - this.canvasPos.left) * this.getPixelRatio());
			y = Math.round((touch.clientY - this.canvasPos.top) * this.getPixelRatio());
			ev = new hxd_Event(hxd_EventKind.EPush,x,y);
			ev.touchId = touch.identifier;
			this.event(ev);
		}
	}
	,onTouchMove: function(e) {
		e.preventDefault();
		var x;
		var y;
		var ev;
		var _g = 0;
		var _g1 = e.changedTouches;
		while(_g < _g1.length) {
			var touch = _g1[_g];
			++_g;
			x = Math.round((touch.clientX - this.canvasPos.left) * this.getPixelRatio());
			y = Math.round((touch.clientY - this.canvasPos.top) * this.getPixelRatio());
			ev = new hxd_Event(hxd_EventKind.EMove,x,y);
			ev.touchId = touch.identifier;
			this.event(ev);
		}
	}
	,onTouchEnd: function(e) {
		e.preventDefault();
		var x;
		var y;
		var ev;
		var _g = 0;
		var _g1 = e.changedTouches;
		while(_g < _g1.length) {
			var touch = _g1[_g];
			++_g;
			x = Math.round((touch.clientX - this.canvasPos.left) * this.getPixelRatio());
			y = Math.round((touch.clientY - this.canvasPos.top) * this.getPixelRatio());
			ev = new hxd_Event(hxd_EventKind.ERelease,x,y);
			ev.touchId = touch.identifier;
			this.event(ev);
		}
	}
	,onKeyUp: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EKeyUp,this.get_mouseX(),this.get_mouseY());
		ev.keyCode = e.keyCode;
		this.event(ev);
		if(!this.propagateKeyEvents) {
			e.preventDefault();
			e.stopPropagation();
		}
	}
	,onKeyDown: function(e) {
		var ev = new hxd_Event(hxd_EventKind.EKeyDown,this.get_mouseX(),this.get_mouseY());
		ev.keyCode = e.keyCode;
		this.event(ev);
		if(!this.propagateKeyEvents) {
			switch(ev.keyCode) {
			case 8:case 9:case 16:case 17:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:
				e.preventDefault();
				break;
			default:
			}
			e.stopPropagation();
		}
	}
	,onKeyPress: function(e) {
		var ev = new hxd_Event(hxd_EventKind.ETextInput,this.get_mouseX(),this.get_mouseY());
		ev.charCode = e.charCode;
		this.event(ev);
		if(!this.propagateKeyEvents) {
			e.preventDefault();
			e.stopPropagation();
		}
	}
	,onFocus: function(b) {
		this.event(new hxd_Event(b ? hxd_EventKind.EFocus : hxd_EventKind.EFocusLost));
		this.focused = b;
	}
	,set_displayMode: function(m) {
		if(!js_Browser.get_supported()) {
			return m;
		}
		var doc = window.document;
		var elt = doc.documentElement;
		var fullscreen = m != hxd_DisplayMode.Windowed;
		if(doc.fullscreenElement == elt == fullscreen) {
			return hxd_DisplayMode.Windowed;
		}
		if(m != hxd_DisplayMode.Windowed) {
			elt.requestFullscreen();
		} else {
			doc.exitFullscreen();
		}
		return m;
	}
	,__class__: hxd_Window
	,__properties__: {set_displayMode:"set_displayMode",set_mouseMode:"set_mouseMode",get_mouseY:"get_mouseY",get_mouseX:"get_mouseX",get_height:"get_height",get_width:"get_width"}
};
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = "js.Browser";
js_Browser.__properties__ = {get_supported:"get_supported"};
js_Browser.get_supported = function() {
	if(typeof(window) != "undefined" && typeof(window.location) != "undefined") {
		return typeof(window.location.protocol) == "string";
	} else {
		return false;
	}
};
var hxd_System = function() { };
$hxClasses["hxd.System"] = hxd_System;
hxd_System.__name__ = "hxd.System";
hxd_System.__properties__ = {get_platform:"get_platform"};
hxd_System.setLoop = function(f) {
	if(!hxd_System.loopInit) {
		hxd_System.loopInit = true;
		hxd_System.browserLoop();
	}
	hxd_System.loopFunc = f;
};
hxd_System.browserLoop = function() {
	if(js_Browser.get_supported()) {
		var $window = window;
		var rqf = $window.requestAnimationFrame || $window.webkitRequestAnimationFrame || $window.mozRequestAnimationFrame;
		if(hxd_System.fpsLimit > 0) {
			window.setTimeout(function() {
				return rqf(hxd_System.browserLoop);
			},1000 / hxd_System.fpsLimit);
		} else {
			rqf(hxd_System.browserLoop);
		}
	} else {
		throw haxe_Exception.thrown("Cannot use browserLoop without Browser support nor defining nodejs + hxnodejs");
	}
	if(hxd_System.loopFunc != null) {
		hxd_System.loopFunc();
	}
};
hxd_System.start = function(callb) {
	callb();
};
hxd_System.setNativeCursor = function(c) {
	if(hxd_System.currentNativeCursor != null && Type.enumEq(c,hxd_System.currentNativeCursor)) {
		return;
	}
	hxd_System.currentNativeCursor = c;
	hxd_System.currentCustomCursor = null;
	var canvas = hxd_Window.getInstance().canvas;
	if(canvas != null) {
		var tmp;
		switch(c._hx_index) {
		case 0:
			tmp = "default";
			break;
		case 1:
			tmp = "pointer";
			break;
		case 2:
			tmp = "move";
			break;
		case 3:
			tmp = "text";
			break;
		case 4:
			tmp = "none";
			break;
		case 5:
			var cur = c.custom;
			if(cur.alloc == null) {
				cur.alloc = [];
				var _g = 0;
				var _g1 = cur.frames;
				while(_g < _g1.length) {
					var frame = _g1[_g];
					++_g;
					cur.alloc.push("url(\"" + frame.ctx.canvas.toDataURL("image/png") + "\") " + cur.offsetX + " " + cur.offsetY + ", default");
				}
			}
			if(cur.frames.length > 1) {
				hxd_System.currentCustomCursor = cur;
				cur.reset();
			}
			tmp = cur.alloc[cur.frameIndex];
			break;
		case 6:
			var _g = c.f;
			throw haxe_Exception.thrown("assert");
		}
		canvas.style.cursor = tmp;
	}
};
hxd_System.getDefaultFrameRate = function() {
	return 60.;
};
hxd_System.getValue = function(s) {
	switch(s._hx_index) {
	case 0:
		if(hxd_System.get_platform() != hxd_Platform.Android) {
			return hxd_System.get_platform() == hxd_Platform.IOS;
		} else {
			return true;
		}
		break;
	case 1:
		return true;
	case 2:
		if(hxd_System.get_platform() != hxd_Platform.Android) {
			return hxd_System.get_platform() == hxd_Platform.IOS;
		} else {
			return true;
		}
		break;
	}
};
hxd_System.openURL = function(url) {
	window.open(url,"_blank");
};
hxd_System.updateCursor = function() {
	if(hxd_System.currentCustomCursor != null) {
		var change = hxd_System.currentCustomCursor.update(hxd_Timer.elapsedTime);
		if(change != -1) {
			var canvas = hxd_Window.getInstance().canvas;
			if(canvas != null) {
				canvas.style.cursor = hxd_System.currentCustomCursor.alloc[change];
			}
		}
	}
};
hxd_System.getClipboardText = function() {
	return null;
};
hxd_System.setClipboardText = function(text) {
	return false;
};
hxd_System.get_platform = function() {
	var ua = $global.navigator.userAgent.toLowerCase();
	if(ua.indexOf("android") >= 0) {
		return hxd_Platform.Android;
	} else if(ua.indexOf("ipad") >= 0 || ua.indexOf("iphone") >= 0 || ua.indexOf("ipod") >= 0) {
		return hxd_Platform.IOS;
	} else {
		return hxd_Platform.PC;
	}
};
var hxd_DisplayMode = $hxEnums["hxd.DisplayMode"] = { __ename__:"hxd.DisplayMode",__constructs__:null
	,Windowed: {_hx_name:"Windowed",_hx_index:0,__enum__:"hxd.DisplayMode",toString:$estr}
	,Borderless: {_hx_name:"Borderless",_hx_index:1,__enum__:"hxd.DisplayMode",toString:$estr}
	,Fullscreen: {_hx_name:"Fullscreen",_hx_index:2,__enum__:"hxd.DisplayMode",toString:$estr}
	,FullscreenResize: {_hx_name:"FullscreenResize",_hx_index:3,__enum__:"hxd.DisplayMode",toString:$estr}
};
hxd_DisplayMode.__constructs__ = [hxd_DisplayMode.Windowed,hxd_DisplayMode.Borderless,hxd_DisplayMode.Fullscreen,hxd_DisplayMode.FullscreenResize];
hxd_DisplayMode.__empty_constructs__ = [hxd_DisplayMode.Windowed,hxd_DisplayMode.Borderless,hxd_DisplayMode.Fullscreen,hxd_DisplayMode.FullscreenResize];
var hxd_clipper_Rect = function(l,t,r,b) {
	if(b == null) {
		b = 0;
	}
	if(r == null) {
		r = 0;
	}
	if(t == null) {
		t = 0;
	}
	if(l == null) {
		l = 0;
	}
	this.left = l;
	this.top = t;
	this.right = r;
	this.bottom = b;
};
$hxClasses["hxd.clipper.Rect"] = hxd_clipper_Rect;
hxd_clipper_Rect.__name__ = "hxd.clipper.Rect";
hxd_clipper_Rect.prototype = {
	left: null
	,top: null
	,right: null
	,bottom: null
	,__class__: hxd_clipper_Rect
};
var hxd_earcut_EarNode = function() {
};
$hxClasses["hxd.earcut.EarNode"] = hxd_earcut_EarNode;
hxd_earcut_EarNode.__name__ = "hxd.earcut.EarNode";
hxd_earcut_EarNode.prototype = {
	next: null
	,prev: null
	,nextZ: null
	,prevZ: null
	,allocNext: null
	,x: null
	,y: null
	,i: null
	,z: null
	,steiner: null
	,__class__: hxd_earcut_EarNode
};
var hxd_earcut_Earcut = function() {
};
$hxClasses["hxd.earcut.Earcut"] = hxd_earcut_Earcut;
hxd_earcut_Earcut.__name__ = "hxd.earcut.Earcut";
hxd_earcut_Earcut.prototype = {
	triangulate_h2d_GPoint: function(points,holes) {
		var hasHoles = holes != null && holes.length > 0;
		var outerLen = hasHoles ? holes[0] : points.length;
		if(outerLen < 3) {
			return [];
		}
		var root = this.setLinkedList_triangulate_T(points,0,outerLen,true);
		if(holes != null) {
			root = this.eliminateHoles_triangulate_T(points,holes,root);
		}
		return this.triangulateNode(root,points.length > 80);
	}
	,eliminateHoles_triangulate_T: function(points,holes,root) {
		var queue = [];
		var _g = 0;
		var _g1 = holes.length;
		while(_g < _g1) {
			var i = _g++;
			var s = holes[i];
			var e = i == holes.length - 1 ? points.length : holes[i + 1];
			var node = this.setLinkedList_eliminateHoles_T(points,s,e,false);
			if(node == node.next) {
				node.steiner = true;
			}
			queue.push(this.getLeftmost(node));
		}
		queue.sort($bind(this,this.compareX));
		var _g = 0;
		while(_g < queue.length) {
			var q = queue[_g];
			++_g;
			this.eliminateHole(q,root);
			root = this.filterPoints(root,root.next);
		}
		return root;
	}
	,setLinkedList_eliminateHoles_T: function(points,start,end,clockwise) {
		var sum = 0.;
		var j = end - 1;
		var _g = start;
		var _g1 = end;
		while(_g < _g1) {
			var i = _g++;
			sum += (points[j].x - points[i].x) * (points[i].y + points[j].y);
			j = i;
		}
		var last = null;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = -1;
		n.z = -1;
		n.x = 0;
		n.y = 0;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		var node = n;
		var first = node;
		if(clockwise == sum > 0) {
			var _g = start;
			var _g1 = end;
			while(_g < _g1) {
				var i = _g++;
				var p = points[i];
				var x = p.x;
				var y = p.y;
				var n = this.cache;
				if(n == null) {
					n = new hxd_earcut_EarNode();
					n.allocNext = this.allocated;
					this.allocated = n;
				} else {
					this.cache = n.next;
				}
				n.i = i;
				n.z = -1;
				n.x = x;
				n.y = y;
				n.next = null;
				n.prev = node;
				n.steiner = false;
				n.prevZ = null;
				n.nextZ = null;
				if(node != null) {
					node.next = n;
				}
				node = n;
			}
		} else {
			var i = end - 1;
			while(i >= start) {
				var p = points[i];
				var x = p.x;
				var y = p.y;
				var n = this.cache;
				if(n == null) {
					n = new hxd_earcut_EarNode();
					n.allocNext = this.allocated;
					this.allocated = n;
				} else {
					this.cache = n.next;
				}
				n.i = i;
				n.z = -1;
				n.x = x;
				n.y = y;
				n.next = null;
				n.prev = node;
				n.steiner = false;
				n.prevZ = null;
				n.nextZ = null;
				if(node != null) {
					node.next = n;
				}
				node = n;
				--i;
			}
		}
		node.next = first.next;
		node.next.prev = node;
		return node;
	}
	,setLinkedList_triangulate_T: function(points,start,end,clockwise) {
		var sum = 0.;
		var j = end - 1;
		var _g = start;
		var _g1 = end;
		while(_g < _g1) {
			var i = _g++;
			sum += (points[j].x - points[i].x) * (points[i].y + points[j].y);
			j = i;
		}
		var last = null;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = -1;
		n.z = -1;
		n.x = 0;
		n.y = 0;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		var node = n;
		var first = node;
		if(clockwise == sum > 0) {
			var _g = start;
			var _g1 = end;
			while(_g < _g1) {
				var i = _g++;
				var p = points[i];
				var x = p.x;
				var y = p.y;
				var n = this.cache;
				if(n == null) {
					n = new hxd_earcut_EarNode();
					n.allocNext = this.allocated;
					this.allocated = n;
				} else {
					this.cache = n.next;
				}
				n.i = i;
				n.z = -1;
				n.x = x;
				n.y = y;
				n.next = null;
				n.prev = node;
				n.steiner = false;
				n.prevZ = null;
				n.nextZ = null;
				if(node != null) {
					node.next = n;
				}
				node = n;
			}
		} else {
			var i = end - 1;
			while(i >= start) {
				var p = points[i];
				var x = p.x;
				var y = p.y;
				var n = this.cache;
				if(n == null) {
					n = new hxd_earcut_EarNode();
					n.allocNext = this.allocated;
					this.allocated = n;
				} else {
					this.cache = n.next;
				}
				n.i = i;
				n.z = -1;
				n.x = x;
				n.y = y;
				n.next = null;
				n.prev = node;
				n.steiner = false;
				n.prevZ = null;
				n.nextZ = null;
				if(node != null) {
					node.next = n;
				}
				node = n;
				--i;
			}
		}
		node.next = first.next;
		node.next.prev = node;
		return node;
	}
	,triangles: null
	,cache: null
	,allocated: null
	,minX: null
	,minY: null
	,size: null
	,hasSize: null
	,triangulateNode: function(root,useZOrder) {
		this.triangles = [];
		root = this.filterPoints(root);
		if(useZOrder && root != null) {
			var maxX = root.x;
			this.minX = maxX;
			var maxY = root.y;
			this.minY = maxY;
			var p = root.next;
			while(p != root) {
				var x = p.x;
				var y = p.y;
				if(x < this.minX) {
					this.minX = x;
				}
				if(y < this.minY) {
					this.minY = y;
				}
				if(x > maxX) {
					maxX = x;
				}
				if(y > maxY) {
					maxY = y;
				}
				p = p.next;
			}
			var a = maxX - this.minX;
			var b = maxY - this.minY;
			this.size = a < b ? b : a;
			this.hasSize = true;
		} else {
			this.hasSize = false;
		}
		this.earcutLinked(root);
		var result = this.triangles;
		this.triangles = null;
		var n = this.allocated;
		if(this.cache != null) {
			while(n != this.cache) n = n.allocNext;
			n = n.allocNext;
		}
		while(n != null) {
			n.next = this.cache;
			this.cache = n;
			n = n.allocNext;
		}
		return result;
	}
	,eliminateHole: function(hole,root) {
		root = this.findHoleBridge(hole,root);
		if(root != null) {
			var b = this.splitPolygon(root,hole);
			this.filterPoints(b,b.next);
		}
	}
	,findHoleBridge: function(hole,root) {
		var p = root;
		var hx = hole.x;
		var hy = hole.y;
		var qx = -Infinity;
		var m = null;
		do {
			if(hy <= p.y && hy >= p.next.y) {
				var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);
				if(x <= hx && x > qx) {
					qx = x;
					m = p.x < p.next.x ? p : p.next;
				}
			}
			p = p.next;
		} while(p != root);
		if(m == null) {
			return null;
		}
		var stop = m;
		var tanMin = Infinity;
		var tan;
		p = m.next;
		while(p != stop) {
			var tmp;
			if(hx >= p.x && p.x >= m.x) {
				var ax = hy < m.y ? hx : qx;
				var bx = m.x;
				var by = m.y;
				var cx = hy < m.y ? qx : hx;
				var px = p.x;
				var py = p.y;
				tmp = (cx - px) * (hy - py) - (ax - px) * (hy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (hy - py) >= 0 && (bx - px) * (hy - py) - (cx - px) * (by - py) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				var f = hy - p.y;
				tan = (f < 0 ? -f : f) / (hx - p.x);
				var tmp1;
				if(tan < tanMin || tan == tanMin && p.x > m.x) {
					var p1 = p.prev;
					var r = p.next;
					if((p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) < 0) {
						var r1 = p.next;
						if((hole.y - p.y) * (r1.x - hole.x) - (hole.x - p.x) * (r1.y - hole.y) >= 0) {
							var q = p.prev;
							tmp1 = (q.y - p.y) * (hole.x - q.x) - (q.x - p.x) * (hole.y - q.y) >= 0;
						} else {
							tmp1 = false;
						}
					} else {
						var r2 = p.prev;
						if(!((hole.y - p.y) * (r2.x - hole.x) - (hole.x - p.x) * (r2.y - hole.y) < 0)) {
							var q1 = p.next;
							tmp1 = (q1.y - p.y) * (hole.x - q1.x) - (q1.x - p.x) * (hole.y - q1.y) < 0;
						} else {
							tmp1 = true;
						}
					}
				} else {
					tmp1 = false;
				}
				if(tmp1) {
					m = p;
					tanMin = tan;
				}
			}
			p = p.next;
		}
		return m;
	}
	,getLeftmost: function(node) {
		var p = node;
		var leftmost = node;
		do {
			if(p.x < leftmost.x) {
				leftmost = p;
			}
			p = p.next;
		} while(p != node);
		return leftmost;
	}
	,compareX: function(a,b) {
		if(a.x - b.x > 0) {
			return 1;
		} else {
			return -1;
		}
	}
	,filterPoints: function(start,end) {
		if(start == null) {
			return start;
		}
		if(end == null) {
			end = start;
		}
		var p = start;
		var again;
		do {
			again = false;
			var tmp;
			if(!p.steiner) {
				var p2 = p.next;
				if(!(p.x == p2.x && p.y == p2.y)) {
					var p1 = p.prev;
					var r = p.next;
					tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) == 0;
				} else {
					tmp = true;
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				p.next.prev = p.prev;
				p.prev.next = p.next;
				if(p.prevZ != null) {
					p.prevZ.nextZ = p.nextZ;
				}
				if(p.nextZ != null) {
					p.nextZ.prevZ = p.prevZ;
				}
				end = p.prev;
				p = end;
				if(p == p.next) {
					return null;
				}
				again = true;
			} else {
				p = p.next;
			}
		} while(again || p != end);
		return end;
	}
	,earcutLinked: function(ear,pass) {
		if(pass == null) {
			pass = 0;
		}
		if(ear == null) {
			return;
		}
		if(pass == 0 && this.hasSize) {
			this.indexCurve(ear);
		}
		var stop = ear;
		var prev;
		var next;
		while(ear.prev != ear.next) {
			prev = ear.prev;
			next = ear.next;
			if(this.hasSize ? this.isEarHashed(ear) : this.isEar(ear)) {
				this.triangles.push(prev.i);
				this.triangles.push(ear.i);
				this.triangles.push(next.i);
				ear.next.prev = ear.prev;
				ear.prev.next = ear.next;
				if(ear.prevZ != null) {
					ear.prevZ.nextZ = ear.nextZ;
				}
				if(ear.nextZ != null) {
					ear.nextZ.prevZ = ear.prevZ;
				}
				ear = next.next;
				stop = next.next;
				continue;
			}
			ear = next;
			if(ear == stop) {
				switch(pass) {
				case 0:
					this.earcutLinked(this.filterPoints(ear),1);
					break;
				case 1:
					ear = this.cureLocalIntersections(ear);
					this.earcutLinked(ear,2);
					break;
				case 2:
					this.splitEarcut(ear);
					break;
				}
				break;
			}
		}
	}
	,isEar: function(ear) {
		var a = ear.prev;
		var b = ear;
		var c = ear.next;
		if((b.y - a.y) * (c.x - b.x) - (b.x - a.x) * (c.y - b.y) >= 0) {
			return false;
		}
		var p = ear.next.next;
		while(p != ear.prev) {
			var tmp;
			var ax = a.x;
			var ay = a.y;
			var bx = b.x;
			var by = b.y;
			var cx = c.x;
			var cy = c.y;
			var px = p.x;
			var py = p.y;
			if((cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0) {
				var p1 = p.prev;
				var r = p.next;
				tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.next;
		}
		return true;
	}
	,isEarHashed: function(ear) {
		var a = ear.prev;
		var b = ear;
		var c = ear.next;
		if((b.y - a.y) * (c.x - b.x) - (b.x - a.x) * (c.y - b.y) >= 0) {
			return false;
		}
		var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x;
		var minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y;
		var maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x;
		var maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y;
		var x = 32767 * (minTX - this.minX) / this.size | 0;
		var y = 32767 * (minTY - this.minY) / this.size | 0;
		x = (x | x << 8) & 16711935;
		x = (x | x << 4) & 252645135;
		x = (x | x << 2) & 858993459;
		x = (x | x << 1) & 1431655765;
		y = (y | y << 8) & 16711935;
		y = (y | y << 4) & 252645135;
		y = (y | y << 2) & 858993459;
		y = (y | y << 1) & 1431655765;
		var minZ = x | y << 1;
		var x = 32767 * (maxTX - this.minX) / this.size | 0;
		var y = 32767 * (maxTY - this.minY) / this.size | 0;
		x = (x | x << 8) & 16711935;
		x = (x | x << 4) & 252645135;
		x = (x | x << 2) & 858993459;
		x = (x | x << 1) & 1431655765;
		y = (y | y << 8) & 16711935;
		y = (y | y << 4) & 252645135;
		y = (y | y << 2) & 858993459;
		y = (y | y << 1) & 1431655765;
		var maxZ = x | y << 1;
		var p = ear.nextZ;
		while(p != null && p.z <= maxZ) {
			var tmp;
			var tmp1;
			if(p != ear.prev && p != ear.next) {
				var ax = a.x;
				var ay = a.y;
				var bx = b.x;
				var by = b.y;
				var cx = c.x;
				var cy = c.y;
				var px = p.x;
				var py = p.y;
				tmp1 = (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p1 = p.prev;
				var r = p.next;
				tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.nextZ;
		}
		p = ear.prevZ;
		while(p != null && p.z >= minZ) {
			var tmp;
			var tmp1;
			if(p != ear.prev && p != ear.next) {
				var ax = a.x;
				var ay = a.y;
				var bx = b.x;
				var by = b.y;
				var cx = c.x;
				var cy = c.y;
				var px = p.x;
				var py = p.y;
				tmp1 = (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p1 = p.prev;
				var r = p.next;
				tmp = (p.y - p1.y) * (r.x - p.x) - (p.x - p1.x) * (r.y - p.y) >= 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return false;
			}
			p = p.prevZ;
		}
		return true;
	}
	,cureLocalIntersections: function(start) {
		var p = start;
		do {
			var a = p.prev;
			var b = p.next.next;
			var tmp;
			var tmp1;
			var p2 = p.next;
			if((p.y - a.y) * (p2.x - p.x) - (p.x - a.x) * (p2.y - p.y) > 0 != (p.y - a.y) * (b.x - p.x) - (p.x - a.x) * (b.y - p.y) > 0 && (b.y - p2.y) * (a.x - b.x) - (b.x - p2.x) * (a.y - b.y) > 0 != (b.y - p2.y) * (p.x - b.x) - (b.x - p2.x) * (p.y - b.y) > 0) {
				var p1 = a.prev;
				var r = a.next;
				if((a.y - p1.y) * (r.x - a.x) - (a.x - p1.x) * (r.y - a.y) < 0) {
					var r1 = a.next;
					if((b.y - a.y) * (r1.x - b.x) - (b.x - a.x) * (r1.y - b.y) >= 0) {
						var q = a.prev;
						tmp1 = (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) >= 0;
					} else {
						tmp1 = false;
					}
				} else {
					var r2 = a.prev;
					if(!((b.y - a.y) * (r2.x - b.x) - (b.x - a.x) * (r2.y - b.y) < 0)) {
						var q1 = a.next;
						tmp1 = (q1.y - a.y) * (b.x - q1.x) - (q1.x - a.x) * (b.y - q1.y) < 0;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p3 = b.prev;
				var r3 = b.next;
				if((b.y - p3.y) * (r3.x - b.x) - (b.x - p3.x) * (r3.y - b.y) < 0) {
					var r4 = b.next;
					if((a.y - b.y) * (r4.x - a.x) - (a.x - b.x) * (r4.y - a.y) >= 0) {
						var q2 = b.prev;
						tmp = (q2.y - b.y) * (a.x - q2.x) - (q2.x - b.x) * (a.y - q2.y) >= 0;
					} else {
						tmp = false;
					}
				} else {
					var r5 = b.prev;
					if(!((a.y - b.y) * (r5.x - a.x) - (a.x - b.x) * (r5.y - a.y) < 0)) {
						var q3 = b.next;
						tmp = (q3.y - b.y) * (a.x - q3.x) - (q3.x - b.x) * (a.y - q3.y) < 0;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				this.triangles.push(a.i);
				this.triangles.push(p.i);
				this.triangles.push(b.i);
				p.next.prev = p.prev;
				p.prev.next = p.next;
				if(p.prevZ != null) {
					p.prevZ.nextZ = p.nextZ;
				}
				if(p.nextZ != null) {
					p.nextZ.prevZ = p.prevZ;
				}
				var p4 = p.next;
				p4.next.prev = p4.prev;
				p4.prev.next = p4.next;
				if(p4.prevZ != null) {
					p4.prevZ.nextZ = p4.nextZ;
				}
				if(p4.nextZ != null) {
					p4.nextZ.prevZ = p4.prevZ;
				}
				start = b;
				p = start;
			}
			p = p.next;
		} while(p != start);
		return p;
	}
	,splitEarcut: function(start) {
		var a = start;
		do {
			var b = a.next.next;
			while(b != a.prev) {
				if(a.i != b.i && this.isValidDiagonal(a,b)) {
					var c = this.splitPolygon(a,b);
					a = this.filterPoints(a,a.next);
					c = this.filterPoints(c,c.next);
					this.earcutLinked(a);
					this.earcutLinked(c);
					return;
				}
				b = b.next;
			}
			a = a.next;
		} while(a != start);
	}
	,splitPolygon: function(a,b) {
		var i = a.i;
		var x = a.x;
		var y = a.y;
		var last = null;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = i;
		n.z = -1;
		n.x = x;
		n.y = y;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		var a2 = n;
		var i = b.i;
		var x = b.x;
		var y = b.y;
		var last = null;
		var n = this.cache;
		if(n == null) {
			n = new hxd_earcut_EarNode();
			n.allocNext = this.allocated;
			this.allocated = n;
		} else {
			this.cache = n.next;
		}
		n.i = i;
		n.z = -1;
		n.x = x;
		n.y = y;
		n.next = null;
		n.prev = last;
		n.steiner = false;
		n.prevZ = null;
		n.nextZ = null;
		if(last != null) {
			last.next = n;
		}
		var b2 = n;
		var an = a.next;
		var bp = b.prev;
		a.next = b;
		b.prev = a;
		a2.next = an;
		an.prev = a2;
		b2.next = a2;
		a2.prev = b2;
		bp.next = b2;
		b2.prev = bp;
		return b2;
	}
	,isValidDiagonal: function(a,b) {
		if(!(a.x == b.x && a.y == b.y)) {
			var tmp;
			var tmp1;
			if(a.next.i != b.i && a.prev.i != b.i && !this.intersectsPolygon(a,b)) {
				var p = a.prev;
				var r = a.next;
				if((a.y - p.y) * (r.x - a.x) - (a.x - p.x) * (r.y - a.y) < 0) {
					var r = a.next;
					if((b.y - a.y) * (r.x - b.x) - (b.x - a.x) * (r.y - b.y) >= 0) {
						var q = a.prev;
						tmp1 = (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) >= 0;
					} else {
						tmp1 = false;
					}
				} else {
					var r = a.prev;
					if(!((b.y - a.y) * (r.x - b.x) - (b.x - a.x) * (r.y - b.y) < 0)) {
						var q = a.next;
						tmp1 = (q.y - a.y) * (b.x - q.x) - (q.x - a.x) * (b.y - q.y) < 0;
					} else {
						tmp1 = true;
					}
				}
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				var p = b.prev;
				var r = b.next;
				if((b.y - p.y) * (r.x - b.x) - (b.x - p.x) * (r.y - b.y) < 0) {
					var r = b.next;
					if((a.y - b.y) * (r.x - a.x) - (a.x - b.x) * (r.y - a.y) >= 0) {
						var q = b.prev;
						tmp = (q.y - b.y) * (a.x - q.x) - (q.x - b.x) * (a.y - q.y) >= 0;
					} else {
						tmp = false;
					}
				} else {
					var r = b.prev;
					if(!((a.y - b.y) * (r.x - a.x) - (a.x - b.x) * (r.y - a.y) < 0)) {
						var q = b.next;
						tmp = (q.y - b.y) * (a.x - q.x) - (q.x - b.x) * (a.y - q.y) < 0;
					} else {
						tmp = true;
					}
				}
			} else {
				tmp = false;
			}
			if(tmp) {
				return this.middleInside(a,b);
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,middleInside: function(a,b) {
		var p = a;
		var inside = false;
		var px = (a.x + b.x) / 2;
		var py = (a.y + b.y) / 2;
		do {
			if(p.y > py != p.next.y > py && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) {
				inside = !inside;
			}
			p = p.next;
		} while(p != a);
		return inside;
	}
	,intersectsPolygon: function(a,b) {
		var p = a;
		do {
			var tmp;
			if(p.i != a.i && p.next.i != a.i && p.i != b.i && p.next.i != b.i) {
				var q1 = p.next;
				tmp = (q1.y - p.y) * (a.x - q1.x) - (q1.x - p.x) * (a.y - q1.y) > 0 != (q1.y - p.y) * (b.x - q1.x) - (q1.x - p.x) * (b.y - q1.y) > 0 && (b.y - a.y) * (p.x - b.x) - (b.x - a.x) * (p.y - b.y) > 0 != (b.y - a.y) * (q1.x - b.x) - (b.x - a.x) * (q1.y - b.y) > 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				return true;
			}
			p = p.next;
		} while(p != a);
		return false;
	}
	,indexCurve: function(start) {
		var p = start;
		do {
			if(p.z < 0) {
				var x = 32767 * (p.x - this.minX) / this.size | 0;
				var y = 32767 * (p.y - this.minY) / this.size | 0;
				x = (x | x << 8) & 16711935;
				x = (x | x << 4) & 252645135;
				x = (x | x << 2) & 858993459;
				x = (x | x << 1) & 1431655765;
				y = (y | y << 8) & 16711935;
				y = (y | y << 4) & 252645135;
				y = (y | y << 2) & 858993459;
				y = (y | y << 1) & 1431655765;
				p.z = x | y << 1;
			}
			p.prevZ = p.prev;
			p.nextZ = p.next;
			p = p.next;
		} while(p != start);
		p.prevZ.nextZ = null;
		p.prevZ = null;
		this.sortLinked(p);
	}
	,sortLinked: function(list) {
		var p;
		var q;
		var e;
		var tail;
		var numMerges;
		var pSize;
		var qSize;
		var inSize = 1;
		do {
			p = list;
			list = null;
			tail = null;
			numMerges = 0;
			while(p != null) {
				++numMerges;
				q = p;
				pSize = 0;
				var _g = 0;
				var _g1 = inSize;
				while(_g < _g1) {
					var i = _g++;
					++pSize;
					q = q.nextZ;
					if(q == null) {
						break;
					}
				}
				qSize = inSize;
				while(pSize > 0 || qSize > 0 && q != null) {
					if(pSize == 0) {
						e = q;
						q = q.nextZ;
						--qSize;
					} else if(qSize == 0 || q == null) {
						e = p;
						p = p.nextZ;
						--pSize;
					} else if(p.z <= q.z) {
						e = p;
						p = p.nextZ;
						--pSize;
					} else {
						e = q;
						q = q.nextZ;
						--qSize;
					}
					if(tail != null) {
						tail.nextZ = e;
					} else {
						list = e;
					}
					e.prevZ = tail;
					tail = e;
				}
				p = q;
			}
			tail.nextZ = null;
			inSize *= 2;
		} while(numMerges > 1);
		return list;
	}
	,__class__: hxd_earcut_Earcut
};
var hxd_fmt_bfnt_FontParser = function() { };
$hxClasses["hxd.fmt.bfnt.FontParser"] = hxd_fmt_bfnt_FontParser;
hxd_fmt_bfnt_FontParser.__name__ = "hxd.fmt.bfnt.FontParser";
hxd_fmt_bfnt_FontParser.parse = function(bytes,path,resolveTile) {
	var tile = null;
	var font = new h2d_Font(null,0);
	var glyphs = font.glyphs;
	font.baseLine = 0;
	var _g = bytes.getInt32(0);
	switch(_g) {
	case 54938946:
		var bytes1 = new haxe_io_BytesInput(bytes);
		bytes1.set_position(bytes1.pos + 4);
		var pageCount = 0;
		while(bytes1.pos < bytes1.totlen) {
			var id = bytes1.readByte();
			var length = bytes1.readInt32();
			var pos = bytes1.pos;
			switch(id) {
			case 1:
				font.size = font.initSize = bytes1.readInt16();
				bytes1.set_position(bytes1.pos + 12);
				font.name = bytes1.readUntil(0);
				break;
			case 2:
				font.lineHeight = bytes1.readUInt16();
				font.baseLine = bytes1.readUInt16();
				bytes1.set_position(bytes1.pos + 4);
				pageCount = bytes1.readUInt16();
				if(pageCount != 1) {
					haxe_Log.trace("Warning: BMF format only supports one page at the moment.",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 224, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
				}
				break;
			case 3:
				var name = bytes1.readUntil(0);
				try {
					font.tilePath = name;
					tile = resolveTile(haxe_io_Path.join([haxe_io_Path.directory(path),name]));
				} catch( _g1 ) {
					haxe_Log.trace("Warning: Could not find referenced font texture at \"" + name + "\", trying to resolve same name as fnt!",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 30, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
					font.tilePath = new haxe_io_Path(path).file + ".png";
					tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
				}
				break;
			case 4:
				var count = length / 20 | 0;
				while(count > 0) {
					var cid = bytes1.readInt32();
					var t = tile.sub(bytes1.readUInt16(),bytes1.readUInt16(),bytes1.readUInt16(),bytes1.readUInt16(),bytes1.readInt16(),bytes1.readInt16());
					var fc = new h2d_FontChar(t,bytes1.readInt16());
					glyphs.h[cid] = fc;
					bytes1.set_position(bytes1.pos + 2);
					--count;
				}
				break;
			case 5:
				var count1 = length / 10 | 0;
				while(count1 > 0) {
					var first = bytes1.readInt32();
					var key = bytes1.readInt32();
					var fc1 = glyphs.h[key];
					if(fc1 != null) {
						fc1.addKerning(first,bytes1.readInt16());
					} else {
						bytes1.set_position(bytes1.pos + 2);
					}
					--count1;
				}
				break;
			}
			bytes1.set_position(pos + length);
		}
		break;
	case 1414415938:
		return new hxd_fmt_bfnt_Reader(new haxe_io_BytesInput(bytes)).read(function(tp) {
			try {
				font.tilePath = tp;
				tile = resolveTile(haxe_io_Path.join([haxe_io_Path.directory(path),tp]));
			} catch( _g ) {
				haxe_Log.trace("Warning: Could not find referenced font texture at \"" + tp + "\", trying to resolve same name as fnt!",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 30, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
				font.tilePath = new haxe_io_Path(path).file + ".png";
				tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
			}
			return tile;
		});
	case 1836597052:case 1852794428:
		var xml = Xml.parse(bytes.toString());
		var x = xml.firstElement();
		if(x.nodeType != Xml.Document && x.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Invalid nodeType " + (x.nodeType == null ? "null" : XmlType.toString(x.nodeType)));
		}
		var xml = x;
		if(haxe_xml__$Access_HasNodeAccess.resolve(xml,"info")) {
			var tmp = haxe_xml__$Access_NodeAccess.resolve(xml,"info");
			font.name = haxe_xml__$Access_AttribAccess.resolve(tmp,"face");
			var tmp = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"info"),"size");
			font.size = font.initSize = Std.parseInt(tmp);
			var tmp = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"common"),"lineHeight");
			font.lineHeight = Std.parseInt(tmp);
			var tmp = haxe_xml__$Access_AttribAccess.resolve(haxe_xml__$Access_NodeAccess.resolve(xml,"common"),"base");
			font.baseLine = Std.parseInt(tmp);
			var p = haxe_xml__$Access_NodeAccess.resolve(xml,"pages").elements();
			while(p.hasNext()) {
				var p1 = p.next();
				if(haxe_xml__$Access_AttribAccess.resolve(p1,"id") == "0") {
					var tilePath = haxe_xml__$Access_AttribAccess.resolve(p1,"file");
					try {
						font.tilePath = tilePath;
						tile = resolveTile(haxe_io_Path.join([haxe_io_Path.directory(path),tilePath]));
					} catch( _g1 ) {
						haxe_Log.trace("Warning: Could not find referenced font texture at \"" + tilePath + "\", trying to resolve same name as fnt!",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 30, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
						font.tilePath = new haxe_io_Path(path).file + ".png";
						tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
					}
				} else {
					haxe_Log.trace("Warning: BMF format only supports one page at the moment.",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 66, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
				}
			}
			var chars = haxe_xml__$Access_NodeAccess.resolve(xml,"chars").elements();
			var c = chars;
			while(c.hasNext()) {
				var c1 = c.next();
				var t = tile.sub(Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"x")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"y")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"width")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"height")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"xoffset")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"yoffset")));
				var fc = new h2d_FontChar(t,Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"xadvance")));
				var kerns = haxe_xml__$Access_NodeAccess.resolve(xml,"kernings").elements();
				var k = kerns;
				while(k.hasNext()) {
					var k1 = k.next();
					if(haxe_xml__$Access_AttribAccess.resolve(k1,"second") == haxe_xml__$Access_AttribAccess.resolve(c1,"id")) {
						fc.addKerning(Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(k1,"first")),Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(k1,"amount")));
					}
				}
				var key = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"id"));
				glyphs.h[key] = fc;
			}
		} else {
			font.tilePath = new haxe_io_Path(path).file + ".png";
			tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
			font.name = haxe_xml__$Access_AttribAccess.resolve(xml,"family");
			var tmp = haxe_xml__$Access_AttribAccess.resolve(xml,"size");
			font.size = font.initSize = Std.parseInt(tmp);
			var tmp = haxe_xml__$Access_AttribAccess.resolve(xml,"height");
			font.lineHeight = Std.parseInt(tmp);
			var kernings = [];
			var c = xml.elements();
			while(c.hasNext()) {
				var c1 = c.next();
				var r = haxe_xml__$Access_AttribAccess.resolve(c1,"rect").split(" ");
				var o = haxe_xml__$Access_AttribAccess.resolve(c1,"offset").split(" ");
				var t = tile.sub(Std.parseInt(r[0]),Std.parseInt(r[1]),Std.parseInt(r[2]),Std.parseInt(r[3]),Std.parseInt(o[0]),Std.parseInt(o[1]));
				var fc = new h2d_FontChar(t,Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(c1,"width")));
				var code = haxe_xml__$Access_AttribAccess.resolve(c1,"code");
				var code1 = StringTools.startsWith(code,"&#") ? Std.parseInt(HxOverrides.substr(code,2,code.length - 3)) : HxOverrides.cca(code,0);
				var k = c1.elements();
				while(k.hasNext()) {
					var k1 = k.next();
					var code2 = haxe_xml__$Access_AttribAccess.resolve(k1,"id");
					var next = StringTools.startsWith(code2,"&#") ? Std.parseInt(HxOverrides.substr(code2,2,code2.length - 3)) : HxOverrides.cca(code2,0);
					var adv = Std.parseInt(haxe_xml__$Access_AttribAccess.resolve(k1,"advance"));
					if(glyphs.h.hasOwnProperty(next)) {
						glyphs.h[next].addKerning(code1,adv);
					} else {
						kernings.push({ prev : code1, next : next, adv : adv});
					}
				}
				glyphs.h[code1] = fc;
			}
			var _g1 = 0;
			while(_g1 < kernings.length) {
				var k = kernings[_g1];
				++_g1;
				var g = glyphs.h[k.next];
				if(g == null) {
					continue;
				}
				g.addKerning(k.prev,k.adv);
			}
		}
		break;
	case 1868983913:
		var lines = bytes.toString().split("\n");
		var reg = new EReg(" *?([0-9a-zA-Z]+)=(\"[^\"]+\"|.+?)(?:[ \r]|$)","");
		var idx;
		var pageCount = 0;
		var _g1 = 0;
		while(_g1 < lines.length) {
			var line = lines[_g1];
			++_g1;
			idx = line.indexOf(" ");
			switch(HxOverrides.substr(line,0,idx)) {
			case "char":
				var id = 0;
				var x = 0;
				var y = 0;
				var width = 0;
				var height = 0;
				var xoffset = 0;
				var yoffset = 0;
				var xadvance = 0;
				while(idx < line.length && reg.matchSub(line,idx)) {
					switch(reg.matched(1)) {
					case "height":
						var v = reg.matched(2);
						height = Std.parseInt(HxOverrides.cca(v,0) == 34 ? v.substring(1,v.length - 1) : v);
						break;
					case "id":
						var v1 = reg.matched(2);
						id = Std.parseInt(HxOverrides.cca(v1,0) == 34 ? v1.substring(1,v1.length - 1) : v1);
						break;
					case "width":
						var v2 = reg.matched(2);
						width = Std.parseInt(HxOverrides.cca(v2,0) == 34 ? v2.substring(1,v2.length - 1) : v2);
						break;
					case "x":
						var v3 = reg.matched(2);
						x = Std.parseInt(HxOverrides.cca(v3,0) == 34 ? v3.substring(1,v3.length - 1) : v3);
						break;
					case "xadvance":
						var v4 = reg.matched(2);
						xadvance = Std.parseInt(HxOverrides.cca(v4,0) == 34 ? v4.substring(1,v4.length - 1) : v4);
						break;
					case "xoffset":
						var v5 = reg.matched(2);
						xoffset = Std.parseInt(HxOverrides.cca(v5,0) == 34 ? v5.substring(1,v5.length - 1) : v5);
						break;
					case "y":
						var v6 = reg.matched(2);
						y = Std.parseInt(HxOverrides.cca(v6,0) == 34 ? v6.substring(1,v6.length - 1) : v6);
						break;
					case "yoffset":
						var v7 = reg.matched(2);
						yoffset = Std.parseInt(HxOverrides.cca(v7,0) == 34 ? v7.substring(1,v7.length - 1) : v7);
						break;
					}
					var pos = reg.matchedPos();
					idx = pos.pos + pos.len;
				}
				var t = tile.sub(x,y,width,height,xoffset,yoffset);
				var fc = new h2d_FontChar(t,xadvance);
				glyphs.h[id] = fc;
				break;
			case "common":
				while(idx < line.length && reg.matchSub(line,idx)) {
					switch(reg.matched(1)) {
					case "base":
						var v8 = reg.matched(2);
						font.baseLine = Std.parseInt(HxOverrides.cca(v8,0) == 34 ? v8.substring(1,v8.length - 1) : v8);
						break;
					case "lineHeight":
						var v9 = reg.matched(2);
						font.lineHeight = Std.parseInt(HxOverrides.cca(v9,0) == 34 ? v9.substring(1,v9.length - 1) : v9);
						break;
					case "pages":
						var v10 = reg.matched(2);
						pageCount = Std.parseInt(HxOverrides.cca(v10,0) == 34 ? v10.substring(1,v10.length - 1) : v10);
						if(pageCount != 1) {
							haxe_Log.trace("Warning: BMF format only supports one page at the moment.",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 157, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
						}
						break;
					}
					var pos1 = reg.matchedPos();
					idx = pos1.pos + pos1.len;
				}
				break;
			case "info":
				while(idx < line.length && reg.matchSub(line,idx)) {
					switch(reg.matched(1)) {
					case "face":
						var v11 = reg.matched(2);
						font.name = HxOverrides.cca(v11,0) == 34 ? v11.substring(1,v11.length - 1) : v11;
						break;
					case "size":
						var v12 = reg.matched(2);
						font.size = font.initSize = Std.parseInt(HxOverrides.cca(v12,0) == 34 ? v12.substring(1,v12.length - 1) : v12);
						break;
					}
					var pos2 = reg.matchedPos();
					idx = pos2.pos + pos2.len;
				}
				break;
			case "kerning":
				var first = 0;
				var second = 0;
				var advance = 0;
				while(idx < line.length && reg.matchSub(line,idx)) {
					switch(reg.matched(1)) {
					case "amount":
						var v13 = reg.matched(2);
						advance = Std.parseInt(HxOverrides.cca(v13,0) == 34 ? v13.substring(1,v13.length - 1) : v13);
						break;
					case "first":
						var v14 = reg.matched(2);
						first = Std.parseInt(HxOverrides.cca(v14,0) == 34 ? v14.substring(1,v14.length - 1) : v14);
						break;
					case "second":
						var v15 = reg.matched(2);
						second = Std.parseInt(HxOverrides.cca(v15,0) == 34 ? v15.substring(1,v15.length - 1) : v15);
						break;
					}
					var pos3 = reg.matchedPos();
					idx = pos3.pos + pos3.len;
				}
				var fc1 = glyphs.h[second];
				if(fc1 != null) {
					fc1.addKerning(first,advance);
				}
				break;
			case "page":
				while(idx < line.length && reg.matchSub(line,idx)) {
					if(reg.matched(1) == "file") {
						var v16 = reg.matched(2);
						var tilePath = HxOverrides.cca(v16,0) == 34 ? v16.substring(1,v16.length - 1) : v16;
						try {
							font.tilePath = tilePath;
							tile = resolveTile(haxe_io_Path.join([haxe_io_Path.directory(path),tilePath]));
						} catch( _g2 ) {
							haxe_Log.trace("Warning: Could not find referenced font texture at \"" + tilePath + "\", trying to resolve same name as fnt!",{ fileName : "hxd/fmt/bfnt/FontParser.hx", lineNumber : 30, className : "hxd.fmt.bfnt.FontParser", methodName : "parse"});
							font.tilePath = new haxe_io_Path(path).file + ".png";
							tile = resolveTile(haxe_io_Path.withExtension(path,"png"));
						}
					}
					var pos4 = reg.matchedPos();
					idx = pos4.pos + pos4.len;
				}
				break;
			}
		}
		break;
	default:
		var sign = _g;
		throw haxe_Exception.thrown("Unknown font signature " + StringTools.hex(sign,8));
	}
	if(glyphs.h[32] == null) {
		var value = new h2d_FontChar(tile.sub(0,0,0,0),font.size >> 1);
		glyphs.h[32] = value;
	}
	font.tile = tile;
	if(font.baseLine == 0) {
		font.baseLine = font.calcBaseLine();
	}
	var fallback = glyphs.h[65533];
	if(fallback == null) {
		fallback = glyphs.h[9633];
	}
	if(fallback == null) {
		fallback = glyphs.h[63];
	}
	if(fallback != null) {
		font.defaultChar = fallback;
	}
	return font;
};
var hxd_fmt_bfnt_Reader = function(i) {
	this.i = i;
};
$hxClasses["hxd.fmt.bfnt.Reader"] = hxd_fmt_bfnt_Reader;
hxd_fmt_bfnt_Reader.__name__ = "hxd.fmt.bfnt.Reader";
hxd_fmt_bfnt_Reader.prototype = {
	i: null
	,read: function(resolveTile) {
		if(this.i.readString(4) != "BFNT" || this.i.readByte() != 0) {
			throw haxe_Exception.thrown("Not a BFNT file!");
		}
		var font = null;
		var _g = this.i.readByte();
		if(_g == 1) {
			font = new h2d_Font(this.i.readString(this.i.readUInt16()),this.i.readInt16());
			font.tilePath = this.i.readString(this.i.readUInt16());
			var tile = font.tile = resolveTile(font.tilePath);
			font.lineHeight = this.i.readInt16();
			font.baseLine = this.i.readInt16();
			var defaultChar = this.i.readInt32();
			var id;
			while(true) {
				id = this.i.readInt32();
				if(!(id != 0)) {
					break;
				}
				var t = tile.sub(this.i.readUInt16(),this.i.readUInt16(),this.i.readUInt16(),this.i.readUInt16(),this.i.readInt16(),this.i.readInt16());
				var glyph = new h2d_FontChar(t,this.i.readInt16());
				font.glyphs.h[id] = glyph;
				if(id == defaultChar) {
					font.defaultChar = glyph;
				}
				var prevChar;
				while(true) {
					prevChar = this.i.readInt32();
					if(!(prevChar != 0)) {
						break;
					}
					glyph.addKerning(prevChar,this.i.readInt16());
				}
			}
		} else {
			var ver = _g;
			throw haxe_Exception.thrown("Unknown BFNT version: " + ver);
		}
		return font;
	}
	,__class__: hxd_fmt_bfnt_Reader
};
var hxd_fmt_hdr_Reader = function() { };
$hxClasses["hxd.fmt.hdr.Reader"] = hxd_fmt_hdr_Reader;
hxd_fmt_hdr_Reader.__name__ = "hxd.fmt.hdr.Reader";
hxd_fmt_hdr_Reader.decode = function(bytes,sRGB) {
	var f = new haxe_io_BytesInput(bytes);
	var width = 0;
	var height = 0;
	var keys_h = Object.create(null);
	while(true) {
		var line = f.readLine();
		if(line == "") {
			break;
		}
		if(HxOverrides.cca(line,0) == 35) {
			continue;
		}
		var nameValue = line.split("=");
		if(nameValue.length > 1) {
			keys_h[nameValue.shift()] = nameValue.join("=");
		}
	}
	var parts = f.readLine().split(" ");
	height = Std.parseInt(parts[1]);
	width = Std.parseInt(parts[3]);
	var gamma = keys_h["GAMMA"] == "1";
	var data = new haxe_io_Bytes(new ArrayBuffer(width * height * 4 * 4));
	var exposure = 1.0;
	var exp = keys_h["EXPOSURE"];
	if(exp != null) {
		var exp1 = parseFloat(exp);
		if(exp1 < 1e-12 || exp1 < 1e12) {
			exposure = exp1;
		}
	}
	var gammaCorrect = sRGB ? 1 : 0.45454545454545453;
	var _g = [];
	var _g1 = 0;
	while(_g1 < 256) {
		var e = _g1++;
		_g.push(Math.pow(e,gammaCorrect));
	}
	var gammaVals = _g;
	var _g = [];
	var _g1 = 0;
	while(_g1 < 256) {
		var e = _g1++;
		_g.push(Math.pow(Math.pow(2,e - 128) / (256 * exposure),gammaCorrect));
	}
	var exps = _g;
	var _g = keys_h["FORMAT"];
	if(_g == null) {
		var fmt = _g;
		throw haxe_Exception.thrown("Unsupported HDR format " + fmt);
	} else if(_g == "32-bit_rle_rgbe") {
		var dataPos = f.pos;
		var scanLen = width * 4;
		var scanLine = new haxe_io_Bytes(new ArrayBuffer(scanLen));
		var widthBE = width >> 8 | (width & 255) << 8;
		var _g1 = 0;
		var _g2 = height;
		while(_g1 < _g2) {
			var y = _g1++;
			var h = bytes.getInt32(dataPos);
			if((h & 65535) != 514 || h >>> 16 != widthBE) {
				scanLine.blit(0,bytes,dataPos,width * 4);
				dataPos += width * 4;
			} else {
				dataPos += 4;
				var p = 0;
				var end = width * 4;
				while(p < end) {
					var len = bytes.b[dataPos++];
					if(len > 128) {
						len -= 128;
						scanLine.fill(p,len,bytes.b[dataPos++]);
					} else {
						scanLine.blit(p,bytes,dataPos,len);
						dataPos += len;
					}
					p += len;
				}
			}
			var pos = y * width * 16;
			var _g3 = 0;
			var _g4 = width;
			while(_g3 < _g4) {
				var x = _g3++;
				var e = exps[scanLine.b[x + width * 3]];
				data.setFloat(pos,gammaVals[scanLine.b[x]] * e);
				pos += 4;
				data.setFloat(pos,gammaVals[scanLine.b[x + width]] * e);
				pos += 4;
				data.setFloat(pos,gammaVals[scanLine.b[x + (width << 1)]] * e);
				pos += 4;
				data.setFloat(pos,1.0);
				pos += 4;
			}
		}
	} else {
		var fmt = _g;
		throw haxe_Exception.thrown("Unsupported HDR format " + fmt);
	}
	return { width : width, height : height, bytes : data, gamma : gamma};
};
var hxd_fs_FileEntry = function() { };
$hxClasses["hxd.fs.FileEntry"] = hxd_fs_FileEntry;
hxd_fs_FileEntry.__name__ = "hxd.fs.FileEntry";
hxd_fs_FileEntry.prototype = {
	name: null
	,getBytes: function() {
		return null;
	}
	,readBytes: function(out,outPos,pos,len) {
		throw haxe_Exception.thrown("readBytes() not implemented");
	}
	,fetchBytes: function(pos,len) {
		var bytes = hxd_fs_FileEntry.TMP_BYTES;
		if(bytes == null || bytes.length < len) {
			var allocSize = len + 65535 & -65536;
			bytes = new haxe_io_Bytes(new ArrayBuffer(allocSize));
			hxd_fs_FileEntry.TMP_BYTES = bytes;
		}
		this.readFull(bytes,pos,len);
		return bytes;
	}
	,readFull: function(bytes,pos,len) {
		if(this.readBytes(bytes,0,pos,len) < len) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
	}
	,open: function() {
		return new hxd_fs_FileInput(this);
	}
	,load: function(onReady) {
		if(!this.get_isAvailable()) {
			throw haxe_Exception.thrown("load() not implemented");
		} else if(onReady != null) {
			onReady();
		}
	}
	,loadBitmap: function(onLoaded) {
		throw haxe_Exception.thrown("loadBitmap() not implemented");
	}
	,watch: function(onChanged) {
	}
	,get_isAvailable: function() {
		return true;
	}
	,get_size: function() {
		return 0;
	}
	,get_path: function() {
		throw haxe_Exception.thrown("path() not implemented");
	}
	,get_extension: function() {
		var idx = this.name.lastIndexOf(".");
		if(idx < 0) {
			return "";
		}
		return HxOverrides.substr(this.name,idx + 1,null).toLowerCase();
	}
	,__class__: hxd_fs_FileEntry
	,__properties__: {get_isAvailable:"get_isAvailable",get_size:"get_size",get_extension:"get_extension",get_path:"get_path"}
};
var hxd_fs_BytesFileEntry = function(path,bytes) {
	this.fullPath = path;
	this.name = path.split("/").pop();
	this.bytes = bytes;
};
$hxClasses["hxd.fs.BytesFileEntry"] = hxd_fs_BytesFileEntry;
hxd_fs_BytesFileEntry.__name__ = "hxd.fs.BytesFileEntry";
hxd_fs_BytesFileEntry.__super__ = hxd_fs_FileEntry;
hxd_fs_BytesFileEntry.prototype = $extend(hxd_fs_FileEntry.prototype,{
	fullPath: null
	,bytes: null
	,get_path: function() {
		return this.fullPath;
	}
	,getBytes: function() {
		return this.bytes;
	}
	,readBytes: function(out,outPos,pos,len) {
		if(pos + len > this.bytes.length) {
			len = this.bytes.length - pos;
		}
		if(len < 0) {
			len = 0;
		}
		out.blit(outPos,this.bytes,pos,len);
		return len;
	}
	,load: function(onReady) {
		haxe_Timer.delay(onReady,1);
	}
	,loadBitmap: function(onLoaded) {
		var mime;
		switch(haxe_io_Path.extension(this.fullPath).toLowerCase()) {
		case "gif":
			mime = "image/gif";
			break;
		case "jpeg":case "jpg":
			mime = "image/jpeg";
			break;
		case "png":
			mime = "image/png";
			break;
		default:
			throw haxe_Exception.thrown("Cannot determine image encoding, try adding an extension to the resource path");
		}
		var img = new Image();
		img.onload = function() {
			onLoaded(img);
		};
		var tmp = haxe_crypto_Base64.encode(this.bytes);
		img.src = "data:" + mime + ";base64," + tmp;
	}
	,get_size: function() {
		return this.bytes.length;
	}
	,__class__: hxd_fs_BytesFileEntry
});
var hxd_fs_FileSystem = function() { };
$hxClasses["hxd.fs.FileSystem"] = hxd_fs_FileSystem;
hxd_fs_FileSystem.__name__ = "hxd.fs.FileSystem";
hxd_fs_FileSystem.__isInterface__ = true;
hxd_fs_FileSystem.prototype = {
	get: null
	,exists: null
	,__class__: hxd_fs_FileSystem
};
var hxd_fs_BytesFileSystem = function() {
};
$hxClasses["hxd.fs.BytesFileSystem"] = hxd_fs_BytesFileSystem;
hxd_fs_BytesFileSystem.__name__ = "hxd.fs.BytesFileSystem";
hxd_fs_BytesFileSystem.__interfaces__ = [hxd_fs_FileSystem];
hxd_fs_BytesFileSystem.prototype = {
	getBytes: function(path) {
		throw haxe_Exception.thrown("Not implemented");
	}
	,exists: function(path) {
		return this.getBytes(path) != null;
	}
	,get: function(path) {
		var bytes = this.getBytes(path);
		if(bytes == null) {
			throw haxe_Exception.thrown("Resource not found '" + path + "'");
		}
		return new hxd_fs_BytesFileEntry(path,bytes);
	}
	,__class__: hxd_fs_BytesFileSystem
};
var hxd_fs_FileInput = function(entry) {
	this.nextReadPos = 0;
	this.cacheLen = 0;
	this.cachePos = 0;
	this.entry = entry;
};
$hxClasses["hxd.fs.FileInput"] = hxd_fs_FileInput;
hxd_fs_FileInput.__name__ = "hxd.fs.FileInput";
hxd_fs_FileInput.__super__ = haxe_io_Input;
hxd_fs_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	entry: null
	,cache: null
	,cachePos: null
	,cacheLen: null
	,nextReadPos: null
	,fetch: function(dataSize) {
		if(dataSize == null) {
			dataSize = 256;
		}
		var prev = this.cache;
		if(this.cache == null || this.cache.length < dataSize) {
			this.cache = hxd_fs_FileInput.PREFETCH_CACHE;
			if(this.cache != null && this.cache.length >= dataSize) {
				hxd_fs_FileInput.PREFETCH_CACHE = null;
			} else {
				this.cache = new haxe_io_Bytes(new ArrayBuffer(dataSize));
			}
		}
		var startPos = 0;
		if(this.cacheLen > 0) {
			startPos = this.cacheLen;
			dataSize -= this.cacheLen;
			this.cache.blit(0,prev,this.cachePos,this.cacheLen);
		}
		var read = this.entry.readBytes(this.cache,startPos,this.nextReadPos,dataSize);
		this.cachePos = 0;
		this.cacheLen = startPos + read;
		this.nextReadPos += read;
		if(this.cacheLen == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
	}
	,skip: function(nbytes) {
		if(this.cacheLen > 0) {
			var a = this.cacheLen;
			var k = a > nbytes ? nbytes : a;
			this.cachePos += k;
			this.cacheLen -= k;
			nbytes -= k;
		}
		this.nextReadPos += nbytes;
	}
	,readByte: function() {
		if(this.cacheLen == 0) {
			this.fetch();
		}
		var b = this.cache.b[this.cachePos++];
		this.cacheLen--;
		return b;
	}
	,readBytes: function(b,pos,len) {
		var tot = 0;
		if(len < 256 && this.cacheLen < len) {
			this.fetch();
		}
		if(this.cacheLen > 0) {
			var b1 = this.cacheLen;
			var k = len > b1 ? b1 : len;
			b.blit(pos,this.cache,this.cachePos,k);
			this.cachePos += k;
			this.cacheLen -= k;
			len -= k;
			if(len == 0) {
				return k;
			}
			pos += k;
			tot += k;
		}
		if(len > 0) {
			var k = this.entry.readBytes(b,pos,this.nextReadPos,len);
			this.nextReadPos += k;
			tot += k;
		}
		return tot;
	}
	,close: function() {
		if(this.cache != null && (hxd_fs_FileInput.PREFETCH_CACHE == null || hxd_fs_FileInput.PREFETCH_CACHE.length < this.cache.length)) {
			hxd_fs_FileInput.PREFETCH_CACHE = this.cache;
		}
		this.cache = null;
		this.cacheLen = 0;
	}
	,__class__: hxd_fs_FileInput
});
var hxd_fs_LoadedBitmap = {};
hxd_fs_LoadedBitmap.toBitmap = function(this1) {
	var bmp = new hxd_BitmapData(this1.width,this1.height);
	bmp.ctx.drawImage(this1,0,0);
	return bmp;
};
var hxd_fs_NotFound = function(path) {
	this.path = path;
};
$hxClasses["hxd.fs.NotFound"] = hxd_fs_NotFound;
hxd_fs_NotFound.__name__ = "hxd.fs.NotFound";
hxd_fs_NotFound.prototype = {
	path: null
	,toString: function() {
		return "Resource file not found '" + this.path + "'";
	}
	,__class__: hxd_fs_NotFound
};
var hxd_impl_Allocator = function() {
};
$hxClasses["hxd.impl.Allocator"] = hxd_impl_Allocator;
hxd_impl_Allocator.__name__ = "hxd.impl.Allocator";
hxd_impl_Allocator.get = function() {
	if(hxd_impl_Allocator.inst == null) {
		hxd_impl_Allocator.inst = new hxd_impl_Allocator();
	}
	return hxd_impl_Allocator.inst;
};
hxd_impl_Allocator.prototype = {
	allocBuffer: function(vertices,format,flags) {
		if(flags == null) {
			flags = 0;
		}
		var tmp;
		switch(flags) {
		case 0:
			tmp = [h3d_BufferFlag.Dynamic];
			break;
		case 1:
			tmp = null;
			break;
		case 2:
			tmp = [h3d_BufferFlag.UniformBuffer,h3d_BufferFlag.Dynamic];
			break;
		}
		return new h3d_Buffer(vertices,format,tmp);
	}
	,ofFloats: function(v,format,flags) {
		if(flags == null) {
			flags = 0;
		}
		var nvert = v.pos / format.stride | 0;
		return this.ofSubFloats(v,nvert,format,flags);
	}
	,ofSubFloats: function(v,vertices,format,flags) {
		if(flags == null) {
			flags = 0;
		}
		var b = this.allocBuffer(vertices,format,flags);
		b.uploadFloats(v,0,vertices);
		return b;
	}
	,disposeBuffer: function(b) {
		b.dispose();
	}
	,allocIndexBuffer: function(count) {
		return new h3d_Indexes(count);
	}
	,ofIndexes: function(ib,length) {
		if(length == null) {
			length = -1;
		}
		if(length < 0 && ib != null) {
			length = ib.length;
		}
		var idx = this.allocIndexBuffer(length);
		idx.upload(ib,0,length);
		return idx;
	}
	,disposeIndexBuffer: function(i) {
		i.dispose();
	}
	,onContextLost: function() {
	}
	,__class__: hxd_impl_Allocator
};
var hxd_impl_AsyncLoader = function() { };
$hxClasses["hxd.impl.AsyncLoader"] = hxd_impl_AsyncLoader;
hxd_impl_AsyncLoader.__name__ = "hxd.impl.AsyncLoader";
hxd_impl_AsyncLoader.__isInterface__ = true;
hxd_impl_AsyncLoader.prototype = {
	load: null
	,isSupported: null
	,__class__: hxd_impl_AsyncLoader
};
var hxd_impl_MouseMode = $hxEnums["hxd.impl.MouseMode"] = { __ename__:"hxd.impl.MouseMode",__constructs__:null
	,Absolute: {_hx_name:"Absolute",_hx_index:0,__enum__:"hxd.impl.MouseMode",toString:$estr}
	,Relative: ($_=function(callback,restorePos) { return {_hx_index:1,callback:callback,restorePos:restorePos,__enum__:"hxd.impl.MouseMode",toString:$estr}; },$_._hx_name="Relative",$_.__params__ = ["callback","restorePos"],$_)
	,AbsoluteUnbound: ($_=function(restorePos) { return {_hx_index:2,restorePos:restorePos,__enum__:"hxd.impl.MouseMode",toString:$estr}; },$_._hx_name="AbsoluteUnbound",$_.__params__ = ["restorePos"],$_)
};
hxd_impl_MouseMode.__constructs__ = [hxd_impl_MouseMode.Absolute,hxd_impl_MouseMode.Relative,hxd_impl_MouseMode.AbsoluteUnbound];
hxd_impl_MouseMode.__empty_constructs__ = [hxd_impl_MouseMode.Absolute];
var hxd_res__$Any_SingleFileSystem = function(path,bytes) {
	hxd_fs_BytesFileSystem.call(this);
	this.path = path;
	this.bytes = bytes;
};
$hxClasses["hxd.res._Any.SingleFileSystem"] = hxd_res__$Any_SingleFileSystem;
hxd_res__$Any_SingleFileSystem.__name__ = "hxd.res._Any.SingleFileSystem";
hxd_res__$Any_SingleFileSystem.__super__ = hxd_fs_BytesFileSystem;
hxd_res__$Any_SingleFileSystem.prototype = $extend(hxd_fs_BytesFileSystem.prototype,{
	path: null
	,bytes: null
	,getBytes: function(p) {
		if(p == this.path) {
			return this.bytes;
		} else {
			return null;
		}
	}
	,__class__: hxd_res__$Any_SingleFileSystem
});
var hxd_res_Resource = function(entry) {
	this.entry = entry;
};
$hxClasses["hxd.res.Resource"] = hxd_res_Resource;
hxd_res_Resource.__name__ = "hxd.res.Resource";
hxd_res_Resource.prototype = {
	entry: null
	,toString: function() {
		return this.entry.get_path();
	}
	,watch: function(onChanged) {
		if(hxd_res_Resource.LIVE_UPDATE) {
			this.entry.watch(onChanged);
		}
	}
	,__class__: hxd_res_Resource
};
var hxd_res_Any = function(loader,entry) {
	hxd_res_Resource.call(this,entry);
	this.loader = loader;
};
$hxClasses["hxd.res.Any"] = hxd_res_Any;
hxd_res_Any.__name__ = "hxd.res.Any";
hxd_res_Any.fromBytes = function(path,bytes) {
	var fs = new hxd_res__$Any_SingleFileSystem(path,bytes);
	return new hxd_res_Loader(fs).load(path);
};
hxd_res_Any.__super__ = hxd_res_Resource;
hxd_res_Any.prototype = $extend(hxd_res_Resource.prototype,{
	loader: null
	,toTexture: function() {
		return this.toImage().toTexture();
	}
	,toTile: function() {
		return this.toImage().toTile();
	}
	,toImage: function() {
		return this.loader.loadCache(this.entry.get_path(),hxd_res_Image);
	}
	,__class__: hxd_res_Any
});
var hxd_res_BitmapFont = function(entry) {
	hxd_res_Resource.call(this,entry);
	this.loader = hxd_res_Loader.currentInstance;
};
$hxClasses["hxd.res.BitmapFont"] = hxd_res_BitmapFont;
hxd_res_BitmapFont.__name__ = "hxd.res.BitmapFont";
hxd_res_BitmapFont.__super__ = hxd_res_Resource;
hxd_res_BitmapFont.prototype = $extend(hxd_res_Resource.prototype,{
	loader: null
	,font: null
	,sdfFonts: null
	,toFont: function() {
		if(this.font == null) {
			this.font = hxd_fmt_bfnt_FontParser.parse(this.entry.getBytes(),this.entry.get_path(),$bind(this,this.resolveTile));
		}
		return this.font;
	}
	,toSdfFont: function(size,channel,alphaCutoff,smoothing) {
		if(smoothing == null) {
			smoothing = -1;
		}
		if(alphaCutoff == null) {
			alphaCutoff = 0.5;
		}
		if(channel == null) {
			channel = 0;
		}
		if(this.sdfFonts == null) {
			this.sdfFonts = [];
		}
		if(size == null) {
			size = this.toFont().size;
		}
		var _g = 0;
		var _g1 = this.sdfFonts;
		while(_g < _g1.length) {
			var font = _g1[_g];
			++_g;
			var _g2 = font.type;
			if(_g2._hx_index == 1) {
				var fchannel = _g2.channel;
				var falphaCutoff = _g2.alphaCutoff;
				var fsmoothing = _g2.smoothing;
				if(font.size == size && fchannel == channel && falphaCutoff == alphaCutoff && fsmoothing == smoothing) {
					return font;
				}
			}
		}
		var font = hxd_fmt_bfnt_FontParser.parse(this.entry.getBytes(),this.entry.get_path(),$bind(this,this.resolveSdfTile));
		font.type = h2d_FontType.SignedDistanceField(channel,alphaCutoff,smoothing);
		font.resizeTo(size);
		this.sdfFonts.push(font);
		return font;
	}
	,resolveSdfTile: function(path) {
		var tex = this.loader.load(path).toTexture();
		tex.set_filter(h3d_mat_Filter.Linear);
		return h2d_Tile.fromTexture(tex);
	}
	,resolveTile: function(path) {
		return this.loader.load(path).toTile();
	}
	,__class__: hxd_res_BitmapFont
});
var hxd_res_DefaultFont = function() { };
$hxClasses["hxd.res.DefaultFont"] = hxd_res_DefaultFont;
hxd_res_DefaultFont.__name__ = "hxd.res.DefaultFont";
hxd_res_DefaultFont.get = function() {
	var engine = h3d_Engine.CURRENT;
	var fnt = engine.resCache.h[hxd_res_DefaultFont.__id__];
	if(fnt == null) {
		var BYTES = hxd_res_Any.fromBytes("hxd/res/defaultFont.png",haxe_Unserializer.run("s3176:iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAOxAAADsQBlSsOGwAACPBJREFUeJztnelypDoMRp2p%:6v3PNjhrlCLX1aLIPBPlWppI03bCG0QOfn8:m0zbr8KupnS9FDqRKAzUOhAvBRfqO:tfrSZ86H:ET79o6Rhc%JzzNSD7Xn:XyEH9RPtP4X:6GDDj6ttR:Hb62d9pmX8b487StA4:DFlup5z5MSWS%tL:f6eG4BXDppGQdtApJEtPm0zkf427Oo1fAxtfO2hDIruGXCLgnAD:jNyzSsKxa18yBphyqQ1jqwBN1zHmgcU3V3jHui9xaArkS0%XzTohOX%jvGauzvjMrlUJXuqSeV07G0ekgTovWS1t61vr0CQAez7nkj7uFIELJqmdN7RWvzil7hnnXV5qLOzSMAmlcQub9ZRuEsaNoq0w5RZbN0rye1ASzplWyAiGEXQVK3kZOdRcgy9:FLoRogI02WNc7rRQw3jzsZAfWB7skR44%3jdo6Wv2qfr4rFuUCZlftrT1jjpezSih4b75ClQDMvrizz%82uA1wMCqsKvUv3YO045rxma2vjY3mpPUvuV1WKDzbLtqfNu9:AjA6tl69QM3Zn1Wfl1M8G:CUW4s6b%sWIEXWtM:omNeXrnaDRm:OyIsE1UOfQ1gCwMOLdFCqWnj8Grl5nsjVakRjHMj1DgnEcQvw%OV0AE0wGisfqTKrbBYrZ4BiB:T4ldE8dPsMxU2oEWgZZtoAyMCq2GxtLlWCFbEB%PGIYWv1kxECq0%TbDKITjpirVr9SW2zC:skqqKdUp%QwwbILKwlgZk2mkBlmUVgPPOI3IbL0GwASY2PiMdbPrfVF6:vVctIq5SoVqNdxtrvWXt1:EguYHVL:ZV4Q8F781%KVwD25r8UagTyYE4TjkllmfrU4udtI%XZdrRcm5c1T%3cPXjq9RqEYTewIrau1a%ODVSBomgeL4cLudedG%H2pah4KBQx8gSnWMC:8AvDKwS0fXU5n59Uf7gAXA1dfG1TtM1Bm2ZtKi%PCGaVlpXKrf67ngeI%uFXoW1WdvNH0ztuV3vNBvAOrC30wR0LG7kX0:p3MjoCqPYfiQNI3BK%BEhq31vfYtS5UkN5lCD%NGWMSBxAWyyeyKkAJYc2Z6JrfqpvGYF0IzxqNWoDoPrSeNJ8POMgtJg76rtSEyDNErGzUF5F3ZOq9wI2D%VtbuBsaFfkNGwBGMtUmy3BjUAtxs3x3LOk8mi7zWB6Xw7leCNlb%LRXkrk%wEOpESIlezxlvM%uSWuzQXNx1Ofjqd5Aah:qW5PGDfbjpZzRCGlbwZ5T0TqMHMVoLgCP56Nj0fqo7mhLOeMGoDPx4wE0sW64mRmXLSDaCZvxPjSeNnAGKx:hxcw8%a3Zkc7tTqjyWgbs:4d3w8wW:7AC42l3zF:dH9H9SGedwO9rmEEz4nMpCXuznFoSS5tf9x9e24ByFjqodKAQio6EjfP9C8duzLHoZ0r8oD%LzRyAZY1XN2umux8n0L3OkeygcdnDzMYTSvQvc47G7g4q3xL2EqE8jhbAN6H9YDJ6TaxBeCduJNy3AjkrghySay8QXOU84lZSQ8plj:ioYuIG%axvLUrcoRxHHGHXelgKzkTWSxtLK:7whM8UaGLzs3qJ7P5IxNI0axh%hbAgxhWMGJ01M%KVKIASXQcipVR7MEz524XboQNoKVwPZPNhkpRjD5yRdM53B0c0qKDvE4X9PVw78JYWPc7usEo9cm1TAa0%R:hh44n1UXz1sjaB0dbJATdGoB:R1Dv:c4DGktSez33TNqW96MZtVo:R53sPLQxvGseCWu7y2d7Kji70MgQRUIwM5nNb%1bc8HyK%MAHiMtq2q5ypaOS39rdTz9jMaac4kg87eDpSsp4%bx:iS3UZLOqMQPM44Y3jGuSoCVabERyaCsj:90qs7TG1soWePZbICViWharvnSgrfTwYsz0gjckvUApHcDOdwa9waDvIGjCFZ:2vwzfVeGj7W%qs4ns0ettbMASJvG:WfJ%JAGHOVvI6GSxtMEUfNENK%FH%NtNaz1qzif7B79mcC2AdbG8zVxyNqMtrGkTQqZWmHUqvJjDJg%BZ9Rf552I8qtY%a:jUMnEG3j9V1RvWgUryfqFyXql1etX2aP:vGER8JWCCLdxhME4OlMbWTdLQCRhA%qX1WegVrZEbtjCjQjsDnKM200Y8nLjDaAx%WdVgg8:zfQY%1620Q8grcxpRDcfQvwMN2ivYm7s4GSRkGZLuRvV5T3AP1tAe08q8qtY38KJo4Ejgglbxh3awCJQyL35l:AjAKwN:5CKozAqpRm7zibBBUCMDJFi:p5GlMKcJUbGAm4aIkdlPCpttK9xz1RxMhzAdVCkDmnE5H:GURPXLta7ypHcz248%GLWR6Q%cL7ZdHRVOddWHPt1VRWX6O1mERXuNt6HmBmooGXnlB178MX3vIr5nhCejkUbf7VhgyalyWwngcjqsorxxg5xy%oDeDZ:Du0Qub%2aP6M%XVfSFK90D6ihjranoC2pUgUVVe0VdUw2bmeEKyASx1OwvWfQ7dPqi1XlFe1Vd0nbu1C:%HEeEObuSH:LyRKzSW6QZKvjDXDNKxqvIsR19a:624vKKvW9Zy5nTw5swQO2zGbODmDNdmpWwBmJ%hNo7n7WAJ5L703FN4DD:Sr3RcK6uar0XVnHvHUbHeDqadawaLFA3jbTwW6tH2aC%5oqgfLXYRGcOab5SKOVvz8sY75AneZATyQd:qyt1ByFjkGoCrR6u8gXLtc2tn:51qD22s7Pwi5Z5jEryNtS6jy6U5qfS8HZwFTWp0ogWdj3Wu0nmPWJ8K3HO62gvoul:dhKbBPPWmp:fdwBXwXNGa8TY92ruBzVG%GpoqnUXtp9CeCdza4JvZLhDqyqb3hT8RRDtH5VmyavKKREn0XCW1f3WiDKWmpTpf7GTQc:F6OpCdC3guJdp5C8CzkTY9JAg8Ekh:bxaAPxVMf28WgP7XMMrWAovwhO8I2gxkC8DibAFYnC0Ai6OFgjeL4Pmm0M2L0dzAzSJY2cDNy:E8ELJ5MdsLWJwtAIuzBWBxtgAszhaAxdkCsDi:AYnqZwd25SoPAAAAAElFTkSuQmCC"));
		var DESC = hxd_res_Any.fromBytes("hxd/res/defaultFont.fnt",haxe_Unserializer.run("s14270:PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxGb250IHNpemU9IjEyIiBmYW1pbHk9IlBpeGVsIE9wZXJhdG9yIiBoZWlnaHQ9IjE2IiBzdHlsZT0iUmVndWxhciI%DQogPENoYXIgd2lkdGg9IjQiIG9mZnNldD0iMCAxMyIgcmVjdD0iMSAxMiAwIDAiIGNvZGU9IiAiLz4NCiA8Q2hhciB3aWR0aD0iMyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjIgMyAxIDkiIGNvZGU9IiEiLz4NCiA8Q2hhciB3aWR0aD0iNSIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjQgMyAzIDMiIGNvZGU9IiZxdW90OyIvPg0KIDxDaGFyIHdpZHRoPSI4IiBvZmZzZXQ9IjEgNCIgcmVjdD0iOCAzIDYgOSIgY29kZT0iIyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMiIgcmVjdD0iMTUgMSA1IDEzIiBjb2RlPSIkIi8%DQogPENoYXIgd2lkdGg9IjkiIG9mZnNldD0iMSA0IiByZWN0PSIyMSAzIDcgOSIgY29kZT0iJSIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMjkgMyA1IDkiIGNvZGU9IiZhbXA7Ii8%DQogPENoYXIgd2lkdGg9IjMiIG9mZnNldD0iMSA0IiByZWN0PSIzNSAzIDEgMyIgY29kZT0iJyIvPg0KIDxDaGFyIHdpZHRoPSI1IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMzcgMyAzIDkiIGNvZGU9IigiLz4NCiA8Q2hhciB3aWR0aD0iNSIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjQxIDMgMyA5IiBjb2RlPSIpIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI0NSAzIDUgNSIgY29kZT0iKiIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iNTEgNSA1IDUiIGNvZGU9IisiLz4NCiA8Q2hhciB3aWR0aD0iMyIgb2Zmc2V0PSIwIDEyIiByZWN0PSI1NyAxMSAyIDMiIGNvZGU9IiwiLz4NCiA8Q2hhciB3aWR0aD0iNiIgb2Zmc2V0PSIxIDgiIHJlY3Q9IjYwIDcgNCAxIiBjb2RlPSItIi8%DQogPENoYXIgd2lkdGg9IjMiIG9mZnNldD0iMSAxMiIgcmVjdD0iNjUgMTEgMSAxIiBjb2RlPSIuIi8%DQogPENoYXIgd2lkdGg9IjUiIG9mZnNldD0iMSA0IiByZWN0PSI2NyAzIDMgOSIgY29kZT0iLyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNzEgMyA1IDkiIGNvZGU9IjAiLz4NCiA8Q2hhciB3aWR0aD0iNSIgb2Zmc2V0PSIxIDQiIHJlY3Q9Ijc3IDMgMyA5IiBjb2RlPSIxIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI4MSAzIDUgOSIgY29kZT0iMiIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iODcgMyA1IDkiIGNvZGU9IjMiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjkzIDMgNSA5IiBjb2RlPSI0Ii8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI5OSAzIDUgOSIgY29kZT0iNSIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMTA1IDMgNSA5IiBjb2RlPSI2Ii8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSIxMTEgMyA1IDkiIGNvZGU9IjciLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjExNyAzIDUgOSIgY29kZT0iOCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMSAxNSA1IDkiIGNvZGU9IjkiLz4NCiA8Q2hhciB3aWR0aD0iMyIgb2Zmc2V0PSIxIDYiIHJlY3Q9IjcgMTcgMSA3IiBjb2RlPSI6Ii8%DQogPENoYXIgd2lkdGg9IjMiIG9mZnNldD0iMCA2IiByZWN0PSI5IDE3IDIgOSIgY29kZT0iOyIvPg0KIDxDaGFyIHdpZHRoPSI1IiBvZmZzZXQ9IjEgNiIgcmVjdD0iMTIgMTcgMyA1IiBjb2RlPSImbHQ7Ii8%DQogPENoYXIgd2lkdGg9IjYiIG9mZnNldD0iMSA3IiByZWN0PSIxNiAxOCA0IDMiIGNvZGU9Ij0iLz4NCiA8Q2hhciB3aWR0aD0iNSIgb2Zmc2V0PSIxIDYiIHJlY3Q9IjIxIDE3IDMgNSIgY29kZT0iPiIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMjUgMTUgNSA5IiBjb2RlPSI:Ii8%DQogPENoYXIgd2lkdGg9IjkiIG9mZnNldD0iMSA0IiByZWN0PSIzMSAxNSA3IDkiIGNvZGU9IkAiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjM5IDE1IDUgOSIgY29kZT0iQSIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNDUgMTUgNSA5IiBjb2RlPSJCIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI1MSAxNSA1IDkiIGNvZGU9IkMiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjU3IDE1IDUgOSIgY29kZT0iRCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNjMgMTUgNSA5IiBjb2RlPSJFIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI2OSAxNSA1IDkiIGNvZGU9IkYiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9Ijc1IDE1IDUgOSIgY29kZT0iRyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iODEgMTUgNSA5IiBjb2RlPSJIIi8%DQogPENoYXIgd2lkdGg9IjMiIG9mZnNldD0iMSA0IiByZWN0PSI4NyAxNSAxIDkiIGNvZGU9IkkiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9Ijg5IDE1IDUgOSIgY29kZT0iSiIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iOTUgMTUgNSA5IiBjb2RlPSJLIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSIxMDEgMTUgNSA5IiBjb2RlPSJMIi8%DQogPENoYXIgd2lkdGg9IjkiIG9mZnNldD0iMSA0IiByZWN0PSIxMDcgMTUgNyA5IiBjb2RlPSJNIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSIxMTUgMTUgNSA5IiBjb2RlPSJOIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSIxMjEgMTUgNSA5IiBjb2RlPSJPIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSIxIDI3IDUgOSIgY29kZT0iUCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNyAyNyA1IDkiIGNvZGU9IlEiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjEzIDI3IDUgOSIgY29kZT0iUiIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMTkgMjcgNSA5IiBjb2RlPSJTIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSIyNSAyNyA1IDkiIGNvZGU9IlQiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjMxIDI3IDUgOSIgY29kZT0iVSIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMzcgMjcgNSA5IiBjb2RlPSJWIi8%DQogPENoYXIgd2lkdGg9IjkiIG9mZnNldD0iMSA0IiByZWN0PSI0MyAyNyA3IDkiIGNvZGU9IlciLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjUxIDI3IDUgOSIgY29kZT0iWCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNTcgMjcgNSA5IiBjb2RlPSJZIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI2MyAyNyA1IDkiIGNvZGU9IloiLz4NCiA8Q2hhciB3aWR0aD0iNSIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjY5IDI3IDMgOSIgY29kZT0iWyIvPg0KIDxDaGFyIHdpZHRoPSI1IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNzMgMjcgMyA5IiBjb2RlPSJcIi8%DQogPENoYXIgd2lkdGg9IjUiIG9mZnNldD0iMSA0IiByZWN0PSI3NyAyNyAzIDkiIGNvZGU9Il0iLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjgxIDI3IDUgMyIgY29kZT0iXiIvPg0KIDxDaGFyIHdpZHRoPSI1IiBvZmZzZXQ9IjAgMTQiIHJlY3Q9Ijg3IDM3IDUgMSIgY29kZT0iXyIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjAgNCIgcmVjdD0iOTMgMjcgMiAyIiBjb2RlPSJgIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSI5NiAyOSA1IDciIGNvZGU9ImEiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjEwMiAyNyA1IDkiIGNvZGU9ImIiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDYiIHJlY3Q9IjEwOCAyOSA1IDciIGNvZGU9ImMiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjExNCAyNyA1IDkiIGNvZGU9ImQiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDYiIHJlY3Q9IjEyMCAyOSA1IDciIGNvZGU9ImUiLz4NCiA8Q2hhciB3aWR0aD0iNiIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjEgMzkgNSA5IiBjb2RlPSJmIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSI3IDQxIDUgOSIgY29kZT0iZyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMTMgMzkgNSA5IiBjb2RlPSJoIi8%DQogPENoYXIgd2lkdGg9IjMiIG9mZnNldD0iMSA0IiByZWN0PSIxOSAzOSAxIDkiIGNvZGU9ImkiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjIxIDM5IDUgMTEiIGNvZGU9ImoiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjI3IDM5IDUgOSIgY29kZT0iayIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjEgNCIgcmVjdD0iMzMgMzkgMSA5IiBjb2RlPSJsIi8%DQogPENoYXIgd2lkdGg9IjkiIG9mZnNldD0iMSA2IiByZWN0PSIzNSA0MSA3IDciIGNvZGU9Im0iLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDYiIHJlY3Q9IjQzIDQxIDUgNyIgY29kZT0ibiIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iNDkgNDEgNSA3IiBjb2RlPSJvIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSI1NSA0MSA1IDkiIGNvZGU9InAiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDYiIHJlY3Q9IjYxIDQxIDUgOSIgY29kZT0icSIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iNjcgNDEgNSA3IiBjb2RlPSJyIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSI3MyA0MSA1IDciIGNvZGU9InMiLz4NCiA8Q2hhciB3aWR0aD0iNiIgb2Zmc2V0PSIxIDUiIHJlY3Q9Ijc5IDQwIDUgOCIgY29kZT0idCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iODUgNDEgNSA3IiBjb2RlPSJ1Ii8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSI5MSA0MSA1IDciIGNvZGU9InYiLz4NCiA8Q2hhciB3aWR0aD0iOSIgb2Zmc2V0PSIxIDYiIHJlY3Q9Ijk3IDQxIDcgNyIgY29kZT0idyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iMTA1IDQxIDUgNyIgY29kZT0ieCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iMTExIDQxIDUgOSIgY29kZT0ieSIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iMTE3IDQxIDUgNyIgY29kZT0ieiIvPg0KIDxDaGFyIHdpZHRoPSI2IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMSA1NCA0IDkiIGNvZGU9InsiLz4NCiA8Q2hhciB3aWR0aD0iMyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjYgNTQgMSA5IiBjb2RlPSJ8Ii8%DQogPENoYXIgd2lkdGg9IjYiIG9mZnNldD0iMSA0IiByZWN0PSI4IDU0IDQgOSIgY29kZT0ifSIvPg0KIDxDaGFyIHdpZHRoPSI4IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMTMgNTQgNiAyIiBjb2RlPSJ%Ii8%DQogPENoYXIgd2lkdGg9IjMiIG9mZnNldD0iMSA2IiByZWN0PSIyMCA1NiAxIDkiIGNvZGU9IsKhIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSIyMiA1NCA1IDExIiBjb2RlPSLCoiIvPg0KIDxDaGFyIHdpZHRoPSI4IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMjggNTQgNiA5IiBjb2RlPSLCoyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMzUgNTQgNSA5IiBjb2RlPSLCpSIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjEgNCIgcmVjdD0iNDEgNTQgMSA5IiBjb2RlPSLCpiIvPg0KIDxDaGFyIHdpZHRoPSI1IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNDMgNTQgMyAxIiBjb2RlPSLCqCIvPg0KIDxDaGFyIHdpZHRoPSI5IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNDcgNTQgNyA5IiBjb2RlPSLCqSIvPg0KIDxDaGFyIHdpZHRoPSI4IiBvZmZzZXQ9IjEgNiIgcmVjdD0iNTUgNTYgNiA1IiBjb2RlPSLCqyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgOCIgcmVjdD0iNjIgNTggNSAzIiBjb2RlPSLCrCIvPg0KIDxDaGFyIHdpZHRoPSI2IiBvZmZzZXQ9IjEgNCIgcmVjdD0iNjggNTQgNCA0IiBjb2RlPSLCsCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iNzMgNTYgNSA3IiBjb2RlPSLCsSIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjEgNCIgcmVjdD0iNzkgNTQgMiAyIiBjb2RlPSLCtCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNiIgcmVjdD0iODIgNTYgNSA5IiBjb2RlPSLCtSIvPg0KIDxDaGFyIHdpZHRoPSI4IiBvZmZzZXQ9IjEgNCIgcmVjdD0iODggNTQgNyA5IiBjb2RlPSLCtiIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjEgOCIgcmVjdD0iOTYgNTggMSAxIiBjb2RlPSLCtyIvPg0KIDxDaGFyIHdpZHRoPSI1IiBvZmZzZXQ9IjAgMTMiIHJlY3Q9Ijk4IDYzIDMgMiIgY29kZT0iwrgiLz4NCiA8Q2hhciB3aWR0aD0iOCIgb2Zmc2V0PSIxIDYiIHJlY3Q9IjEwMiA1NiA2IDUiIGNvZGU9IsK7Ii8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSIxMDkgNTYgNSA5IiBjb2RlPSLCvyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMSIgcmVjdD0iMTE1IDUxIDUgMTIiIGNvZGU9IsOAIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAxIiByZWN0PSIxMjEgNTEgNSAxMiIgY29kZT0iw4EiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDEiIHJlY3Q9IjEgNjcgNSAxMiIgY29kZT0iw4IiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDEiIHJlY3Q9IjcgNjcgNiAxMiIgY29kZT0iw4MiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDIiIHJlY3Q9IjE0IDY4IDUgMTEiIGNvZGU9IsOEIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAwIiByZWN0PSIyMCA2NiA1IDEzIiBjb2RlPSLDhSIvPg0KIDxDaGFyIHdpZHRoPSIxMSIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjI2IDcwIDkgOSIgY29kZT0iw4YiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjM2IDcwIDUgMTEiIGNvZGU9IsOHIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAxIiByZWN0PSI0MiA2NyA1IDEyIiBjb2RlPSLDiCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMSIgcmVjdD0iNDggNjcgNSAxMiIgY29kZT0iw4kiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDEiIHJlY3Q9IjU0IDY3IDUgMTIiIGNvZGU9IsOKIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAyIiByZWN0PSI2MCA2OCA1IDExIiBjb2RlPSLDiyIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjAgMSIgcmVjdD0iNjYgNjcgMiAxMiIgY29kZT0iw4wiLz4NCiA8Q2hhciB3aWR0aD0iMyIgb2Zmc2V0PSIxIDEiIHJlY3Q9IjY5IDY3IDIgMTIiIGNvZGU9IsONIi8%DQogPENoYXIgd2lkdGg9IjMiIG9mZnNldD0iMCAxIiByZWN0PSI3MiA2NyAzIDEyIiBjb2RlPSLDjiIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjAgMiIgcmVjdD0iNzYgNjggMyAxMSIgY29kZT0iw48iLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIwIDQiIHJlY3Q9IjgwIDcwIDYgOSIgY29kZT0iw5AiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDEiIHJlY3Q9Ijg3IDY3IDYgMTIiIGNvZGU9IsORIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAxIiByZWN0PSI5NCA2NyA1IDEyIiBjb2RlPSLDkiIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMSIgcmVjdD0iMTAwIDY3IDUgMTIiIGNvZGU9IsOTIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAxIiByZWN0PSIxMDYgNjcgNSAxMiIgY29kZT0iw5QiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDEiIHJlY3Q9IjExMiA2NyA2IDEyIiBjb2RlPSLDlSIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMiIgcmVjdD0iMTE5IDY4IDUgMTEiIGNvZGU9IsOWIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSIxIDg3IDUgNSIgY29kZT0iw5ciLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIwIDQiIHJlY3Q9IjcgODUgNyA5IiBjb2RlPSLDmCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMSIgcmVjdD0iMTUgODIgNSAxMiIgY29kZT0iw5kiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDEiIHJlY3Q9IjIxIDgyIDUgMTIiIGNvZGU9IsOaIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAxIiByZWN0PSIyNyA4MiA1IDEyIiBjb2RlPSLDmyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMiIgcmVjdD0iMzMgODMgNSAxMSIgY29kZT0iw5wiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDEiIHJlY3Q9IjM5IDgyIDUgMTIiIGNvZGU9IsOdIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI0NSA4NSA1IDkiIGNvZGU9IsOeIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI1MSA4NSA1IDkiIGNvZGU9IsOfIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAzIiByZWN0PSI1NyA4NCA1IDEwIiBjb2RlPSLDoCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMyIgcmVjdD0iNjMgODQgNSAxMCIgY29kZT0iw6EiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDMiIHJlY3Q9IjY5IDg0IDUgMTAiIGNvZGU9IsOiIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAzIiByZWN0PSI3NSA4NCA2IDEwIiBjb2RlPSLDoyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iODIgODUgNSA5IiBjb2RlPSLDpCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMiIgcmVjdD0iODggODMgNSAxMSIgY29kZT0iw6UiLz4NCiA8Q2hhciB3aWR0aD0iMTEiIG9mZnNldD0iMSA2IiByZWN0PSI5NCA4NyA5IDciIGNvZGU9IsOmIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSIxMDQgODcgNSA5IiBjb2RlPSLDpyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMyIgcmVjdD0iMTEwIDg0IDUgMTAiIGNvZGU9IsOoIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAzIiByZWN0PSIxMTYgODQgNSAxMCIgY29kZT0iw6kiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDMiIHJlY3Q9IjEgOTcgNSAxMCIgY29kZT0iw6oiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjcgOTggNSA5IiBjb2RlPSLDqyIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjAgMyIgcmVjdD0iMTMgOTcgMiAxMCIgY29kZT0iw6wiLz4NCiA8Q2hhciB3aWR0aD0iMyIgb2Zmc2V0PSIxIDMiIHJlY3Q9IjE2IDk3IDIgMTAiIGNvZGU9IsOtIi8%DQogPENoYXIgd2lkdGg9IjMiIG9mZnNldD0iMCAzIiByZWN0PSIxOSA5NyAzIDEwIiBjb2RlPSLDriIvPg0KIDxDaGFyIHdpZHRoPSIzIiBvZmZzZXQ9IjAgNCIgcmVjdD0iMjMgOTggMyA5IiBjb2RlPSLDryIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMjcgOTggNiA5IiBjb2RlPSLDsCIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMyIgcmVjdD0iMzQgOTcgNiAxMCIgY29kZT0iw7EiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDMiIHJlY3Q9IjQxIDk3IDUgMTAiIGNvZGU9IsOyIi8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAzIiByZWN0PSI0NyA5NyA1IDEwIiBjb2RlPSLDsyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMyIgcmVjdD0iNTMgOTcgNSAxMCIgY29kZT0iw7QiLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDMiIHJlY3Q9IjU5IDk3IDYgMTAiIGNvZGU9IsO1Ii8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA0IiByZWN0PSI2NiA5OCA1IDkiIGNvZGU9IsO2Ii8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSA2IiByZWN0PSI3MiAxMDAgNSA1IiBjb2RlPSLDtyIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjAgNiIgcmVjdD0iNzggMTAwIDcgNyIgY29kZT0iw7giLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDMiIHJlY3Q9Ijg2IDk3IDUgMTAiIGNvZGU9IsO5Ii8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAzIiByZWN0PSI5MiA5NyA1IDEwIiBjb2RlPSLDuiIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgMyIgcmVjdD0iOTggOTcgNSAxMCIgY29kZT0iw7siLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjEwNCA5OCA1IDkiIGNvZGU9IsO8Ii8%DQogPENoYXIgd2lkdGg9IjciIG9mZnNldD0iMSAzIiByZWN0PSIxMTAgOTcgNSAxMiIgY29kZT0iw70iLz4NCiA8Q2hhciB3aWR0aD0iNyIgb2Zmc2V0PSIxIDQiIHJlY3Q9IjExNiA5OCA1IDExIiBjb2RlPSLDviIvPg0KIDxDaGFyIHdpZHRoPSI3IiBvZmZzZXQ9IjEgNCIgcmVjdD0iMSAxMTAgNSAxMSIgY29kZT0iw78iLz4NCjwvRm9udD4NCg"));
		var bmp = new hxd_res_BitmapFont(DESC.entry);
		bmp.loader = BYTES.loader;
		fnt = bmp.toFont();
		engine.resCache.set(hxd_res_DefaultFont,fnt);
	}
	return fnt;
};
var hxd_res_Embed = function() { };
$hxClasses["hxd.res.Embed"] = hxd_res_Embed;
hxd_res_Embed.__name__ = "hxd.res.Embed";
var hxd_res_ImageFormat = {};
hxd_res_ImageFormat.getName = function(this1) {
	switch(this1) {
	case 0:
		return "JPG";
	case 1:
		return "PNG";
	case 2:
		return "GIF";
	case 3:
		return "TGA";
	case 4:
		return "DDS";
	case 5:
		return "RAW";
	case 6:
		return "HDR";
	}
};
var hxd_res_ImageInfoFlag = $hxEnums["hxd.res.ImageInfoFlag"] = { __ename__:"hxd.res.ImageInfoFlag",__constructs__:null
	,IsCube: {_hx_name:"IsCube",_hx_index:0,__enum__:"hxd.res.ImageInfoFlag",toString:$estr}
	,Dxt10Header: {_hx_name:"Dxt10Header",_hx_index:1,__enum__:"hxd.res.ImageInfoFlag",toString:$estr}
};
hxd_res_ImageInfoFlag.__constructs__ = [hxd_res_ImageInfoFlag.IsCube,hxd_res_ImageInfoFlag.Dxt10Header];
hxd_res_ImageInfoFlag.__empty_constructs__ = [hxd_res_ImageInfoFlag.IsCube,hxd_res_ImageInfoFlag.Dxt10Header];
var hxd_res_ImageInfo = function() {
	this.layerCount = 1;
	this.mipOffset = 0;
	this.mipLevels = 1;
	this.height = 0;
	this.width = 0;
	this.flags = 0;
};
$hxClasses["hxd.res.ImageInfo"] = hxd_res_ImageInfo;
hxd_res_ImageInfo.__name__ = "hxd.res.ImageInfo";
hxd_res_ImageInfo.prototype = {
	width: null
	,height: null
	,mipLevels: null
	,mipOffset: null
	,layerCount: null
	,flags: null
	,dataFormat: null
	,pixelFormat: null
	,__class__: hxd_res_ImageInfo
};
var hxd_res_Image = function(entry) {
	hxd_res_Resource.call(this,entry);
};
$hxClasses["hxd.res.Image"] = hxd_res_Image;
hxd_res_Image.__name__ = "hxd.res.Image";
hxd_res_Image.setupTextureFlags = function(tex) {
};
hxd_res_Image.__super__ = hxd_res_Resource;
hxd_res_Image.prototype = $extend(hxd_res_Resource.prototype,{
	tex: null
	,inf: null
	,enableAsyncLoading: null
	,getInfo: function() {
		if(this.inf != null) {
			return this.inf;
		}
		this.inf = new hxd_res_ImageInfo();
		var f = this.entry.open();
		f.fetch(256);
		var head;
		try {
			head = f.readUInt16();
		} catch( _g ) {
			if(((haxe_Exception.caught(_g).unwrap()) instanceof haxe_io_Eof)) {
				head = 0;
			} else {
				throw _g;
			}
		}
		switch(head) {
		case 16163:
			this.inf.dataFormat = 6;
			while(f.readLine() != "") {
			}
			var parts = f.readLine().split(" ");
			this.inf.pixelFormat = hxd_PixelFormat.RGBA32F;
			this.inf.height = Std.parseInt(parts[1]);
			this.inf.width = Std.parseInt(parts[3]);
			break;
		case 17476:
			this.inf.dataFormat = 4;
			f.skip(10);
			this.inf.height = f.readInt32();
			this.inf.width = f.readInt32();
			f.skip(8);
			this.inf.mipLevels = f.readInt32();
			f.skip(48);
			var caps = f.readInt32();
			var fourCC = f.readInt32();
			var bpp = f.readInt32();
			var rMask = f.readInt32();
			var gMask = f.readInt32();
			var bMask = f.readInt32();
			var aMask = f.readInt32();
			var caps2 = f.readInt32();
			var cubes = f.readInt32();
			if((cubes & 65024) == 65024) {
				this.inf.flags |= 1 << hxd_res_ImageInfoFlag.IsCube._hx_index;
			}
			switch(fourCC & 16777215) {
			case 0:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				} else {
					switch(bpp) {
					case 16:
						if(rMask == 65535) {
							if(gMask == 0) {
								if(bMask == 0) {
									if(aMask == 0) {
										this.inf.pixelFormat = hxd_PixelFormat.R16U;
									} else {
										throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
									}
								} else {
									throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
								}
							} else {
								throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
							}
						} else {
							throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
						}
						break;
					case 32:
						switch(rMask) {
						case 255:
							if(gMask == 65280) {
								if(bMask == 16711680) {
									if(aMask == -16777216) {
										this.inf.pixelFormat = hxd_PixelFormat.RGBA;
									} else {
										throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
									}
								} else {
									throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
								}
							} else {
								throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
							}
							break;
						case 65535:
							if(gMask == -65536) {
								if(bMask == 0) {
									if(aMask == 0) {
										this.inf.pixelFormat = hxd_PixelFormat.RG16U;
									} else {
										throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
									}
								} else {
									throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
								}
							} else {
								throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
							}
							break;
						case 16711680:
							if(gMask == 65280) {
								if(bMask == 255) {
									if(aMask == -16777216) {
										this.inf.pixelFormat = hxd_PixelFormat.BGRA;
									} else {
										throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
									}
								} else {
									throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
								}
							} else {
								throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
							}
							break;
						default:
							throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
						}
						break;
					default:
						throw haxe_Exception.thrown("Unsupported RGB DDS " + bpp + "bits " + StringTools.hex(rMask) + "/" + StringTools.hex(gMask) + "/" + StringTools.hex(bMask) + "/" + StringTools.hex(aMask));
					}
				}
				break;
			case 36:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				} else {
					this.inf.pixelFormat = hxd_PixelFormat.RGBA16U;
				}
				break;
			case 111:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				} else {
					this.inf.pixelFormat = hxd_PixelFormat.R16F;
				}
				break;
			case 112:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				} else {
					this.inf.pixelFormat = hxd_PixelFormat.RG16F;
				}
				break;
			case 113:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				} else {
					this.inf.pixelFormat = hxd_PixelFormat.RGBA16F;
				}
				break;
			case 114:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				} else {
					this.inf.pixelFormat = hxd_PixelFormat.R32F;
				}
				break;
			case 115:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				} else {
					this.inf.pixelFormat = hxd_PixelFormat.RG32F;
				}
				break;
			case 116:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				} else {
					this.inf.pixelFormat = hxd_PixelFormat.RGBA32F;
				}
				break;
			case 4805697:
				var v = (fourCC >>> 24) - 48;
				var tmp;
				switch(v) {
				case 1:
					tmp = hxd_PixelFormat.S3TC(4);
					break;
				case 2:
					tmp = hxd_PixelFormat.S3TC(5);
					break;
				default:
					tmp = null;
				}
				this.inf.pixelFormat = tmp;
				break;
			case 5527620:
				var dxt = (fourCC >>> 24) - 48;
				var tmp;
				switch(dxt) {
				case 1:
					tmp = hxd_PixelFormat.S3TC(1);
					break;
				case 2:case 3:
					tmp = hxd_PixelFormat.S3TC(2);
					break;
				case 4:case 5:
					tmp = hxd_PixelFormat.S3TC(3);
					break;
				default:
					tmp = null;
				}
				this.inf.pixelFormat = tmp;
				break;
			default:
				if(fourCC == 808540228) {
					f.skip(12);
					this.inf.flags |= 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index;
					var dxgi = f.readInt32();
					var tmp;
					switch(dxgi) {
					case 28:
						tmp = hxd_PixelFormat.RGBA;
						break;
					case 71:
						tmp = hxd_PixelFormat.S3TC(1);
						break;
					case 74:
						tmp = hxd_PixelFormat.S3TC(2);
						break;
					case 77:
						tmp = hxd_PixelFormat.S3TC(3);
						break;
					case 95:
						tmp = hxd_PixelFormat.S3TC(6);
						break;
					case 98:
						tmp = hxd_PixelFormat.S3TC(7);
						break;
					default:
						throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported DXGI format " + dxgi);
					}
					this.inf.pixelFormat = tmp;
					var imgType = f.readInt32();
					f.skip(4);
					this.inf.layerCount = f.readInt32();
				}
			}
			if(this.inf.pixelFormat == null) {
				var fid = String.fromCodePoint((fourCC & 255)) + String.fromCodePoint((fourCC >> 8 & 255)) + String.fromCodePoint((fourCC >> 16 & 255)) + String.fromCodePoint((fourCC >>> 24));
				if((fourCC & 255) == fourCC) {
					fid = "" + fourCC;
				}
				throw haxe_Exception.thrown(this.entry.get_path() + " has unsupported 4CC " + fid);
			}
			break;
		case 18759:
			this.inf.dataFormat = 2;
			this.inf.pixelFormat = hxd_PixelFormat.BGRA;
			f.readInt32();
			this.inf.width = f.readUInt16();
			this.inf.height = f.readUInt16();
			break;
		case 20617:
			this.inf.dataFormat = 1;
			f.set_bigEndian(true);
			f.skip(6);
			while(true) {
				var dataLen = f.readInt32();
				if(f.readInt32() == 1229472850) {
					this.inf.width = f.readInt32();
					this.inf.height = f.readInt32();
					var colbits = f.readByte();
					var colType = f.readByte();
					var tmp;
					switch(colbits) {
					case 8:
						tmp = hxd_PixelFormat.BGRA;
						break;
					case 16:
						switch(colType) {
						case 0:
							tmp = hxd_PixelFormat.R16U;
							break;
						case 2:
							tmp = hxd_PixelFormat.RGBA16U;
							break;
						case 4:
							tmp = hxd_PixelFormat.RG16U;
							break;
						case 6:
							tmp = hxd_PixelFormat.RGBA16U;
							break;
						default:
							throw haxe_Exception.thrown("Unsupported png format " + colbits + "/" + colType + "(" + this.entry.get_path() + ")");
						}
						break;
					default:
						throw haxe_Exception.thrown("Unsupported png format " + colbits + "/" + colType + "(" + this.entry.get_path() + ")");
					}
					this.inf.pixelFormat = tmp;
					break;
				}
				f.skip(dataLen + 4);
			}
			break;
		case 55551:
			this.inf.dataFormat = 0;
			this.inf.pixelFormat = hxd_PixelFormat.BGRA;
			f.set_bigEndian(true);
			_hx_loop3: while(true) switch(f.readUInt16()) {
			case 65472:case 65473:case 65474:
				var len = f.readUInt16();
				var prec = f.readByte();
				this.inf.height = f.readUInt16();
				this.inf.width = f.readUInt16();
				break _hx_loop3;
			default:
				f.skip(f.readUInt16() - 2);
			}
			break;
		default:
			if(this.entry.get_extension() == "tga") {
				this.inf.dataFormat = 3;
				this.inf.pixelFormat = hxd_PixelFormat.ARGB;
				f.skip(10);
				this.inf.width = f.readUInt16();
				this.inf.height = f.readUInt16();
			} else if(this.entry.get_extension() == "raw") {
				this.inf.dataFormat = 5;
				this.inf.pixelFormat = hxd_PixelFormat.R32F;
				var size = Math.sqrt(this.entry.get_size() >> 2) | 0;
				if(this.entry.get_size() != size * size * 4) {
					var size2 = Math.sqrt(this.entry.get_size() >> 1) | 0;
					if(this.entry.get_size() == size2 * size2 * 2) {
						this.inf.pixelFormat = hxd_PixelFormat.R16F;
						size = size2;
					} else {
						throw haxe_Exception.thrown("RAW format does not match 32 bit per components on " + size + "x" + size);
					}
				}
				this.inf.width = this.inf.height = size;
			} else {
				throw haxe_Exception.thrown("Unsupported texture format " + this.entry.get_path());
			}
		}
		f.close();
		if(this.inf.pixelFormat == null) {
			throw haxe_Exception.thrown("Unsupported internal format (" + this.entry.get_path() + ")");
		}
		if(hxd_res_Image.MIPMAP_MAX_SIZE != 0 && this.inf.mipLevels > 1) {
			while(((this.inf.width | this.inf.height) & 7) == 0 && this.inf.width >> 1 >= hxd_res_Image.MIPMAP_MAX_SIZE && this.inf.height >> 1 >= hxd_res_Image.MIPMAP_MAX_SIZE) {
				this.inf.width >>= 1;
				this.inf.height >>= 1;
				this.inf.mipLevels--;
				this.inf.mipOffset++;
			}
		}
		return this.inf;
	}
	,getPixels: function(fmt,index) {
		var pixels;
		if(index == null) {
			index = 0;
		}
		switch(this.getInfo().dataFormat) {
		case 0:
			var bytes = this.entry.getBytes();
			if(this.inf.pixelFormat != hxd_PixelFormat.BGRA) {
				throw haxe_Exception.thrown("No support to decode " + Std.string(this.inf.pixelFormat) + " on this platform (" + this.entry.get_path() + ")");
			}
			var p;
			try {
				p = hxd_res_NanoJpeg.decode(bytes);
			} catch( _g ) {
				var e = haxe_Exception.caught(_g).unwrap();
				throw haxe_Exception.thrown("Failed to decode JPG " + this.entry.get_path() + " (" + Std.string(e) + ")");
			}
			pixels = new hxd_Pixels(p.width,p.height,p.pixels,hxd_PixelFormat.BGRA);
			break;
		case 1:
			var bytes = this.entry.getBytes();
			var png = new format_png_Reader(new haxe_io_BytesInput(bytes));
			png.checkCRC = false;
			pixels = hxd_Pixels.alloc(this.inf.width,this.inf.height,this.inf.pixelFormat);
			var pdata = png.read();
			switch(this.inf.pixelFormat._hx_index) {
			case 1:
				format_png_Tools.extract32(pdata,pixels.bytes,false);
				break;
			case 18:case 19:case 20:case 21:
				break;
			default:
				throw haxe_Exception.thrown("No support to decode " + Std.string(this.inf.pixelFormat) + " on this platform (" + this.entry.get_path() + ")");
			}
			break;
		case 2:
			var bytes = this.entry.getBytes();
			var gif = new format_gif_Reader(new haxe_io_BytesInput(bytes)).read();
			if(fmt == hxd_PixelFormat.RGBA) {
				pixels = new hxd_Pixels(this.inf.width,this.inf.height,format_gif_Tools.extractFullRGBA(gif,0),hxd_PixelFormat.RGBA);
			} else {
				pixels = new hxd_Pixels(this.inf.width,this.inf.height,format_gif_Tools.extractFullBGRA(gif,0),hxd_PixelFormat.BGRA);
			}
			break;
		case 3:
			var bytes = this.entry.getBytes();
			var r = new format_tga_Reader(new haxe_io_BytesInput(bytes)).read();
			if(r.header.imageType != format_tga_ImageType.UncompressedTrueColor || r.header.bitsPerPixel != 32) {
				throw haxe_Exception.thrown("Not supported TGA " + Std.string(r.header.imageType) + "/" + r.header.bitsPerPixel);
			}
			var w = r.header.width;
			var h = r.header.height;
			if(fmt == hxd_PixelFormat.RGBA) {
				pixels = hxd_Pixels.alloc(w,h,hxd_PixelFormat.RGBA);
				var bytes = pixels.bytes;
				var _g = 0;
				var _g1 = w * h;
				while(_g < _g1) {
					var i = _g++;
					var c = r.imageData[i];
					c = c >>> 24 | c << 8;
					bytes.setInt32(i << 2,c);
				}
			} else {
				pixels = hxd_Pixels.alloc(w,h,hxd_PixelFormat.ARGB);
				var access = hxd_PixelsARGB.fromPixels(pixels);
				var p = 0;
				var _g = 0;
				var _g1 = h;
				while(_g < _g1) {
					var y = _g++;
					var _g2 = 0;
					var _g3 = w;
					while(_g2 < _g3) {
						var x = _g2++;
						var c = r.imageData[p++];
						access.bytes.setInt32((x + y * access.width << 2) + access.offset,c >>> 24 | c >> 8 & 65280 | c << 8 & 16711680 | c << 24);
					}
				}
			}
			switch(r.header.imageOrigin._hx_index) {
			case 0:
				pixels.flipY();
				break;
			case 2:
				break;
			default:
				throw haxe_Exception.thrown("Not supported " + Std.string(r.header.imageOrigin));
			}
			break;
		case 4:
			var pos = 128;
			var mipLevel = 0;
			if((this.inf.flags & 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index) != 0) {
				pos += 20;
			}
			index += this.inf.mipOffset;
			if(index > 0) {
				var totLevels = this.inf.mipLevels + this.inf.mipOffset;
				var bpp = hxd_Pixels.calcStride(1,this.inf.pixelFormat);
				var layer = index / totLevels | 0;
				mipLevel = index % totLevels;
				var totSize = 0;
				var _g = 0;
				var _g1 = totLevels;
				while(_g < _g1) {
					var i = _g++;
					var w = this.inf.width << this.inf.mipOffset >> i;
					var h = this.inf.height << this.inf.mipOffset >> i;
					if(w == 0) {
						w = 1;
					}
					if(h == 0) {
						h = 1;
					}
					var size = hxd_Pixels.calcDataSize(w,h,this.inf.pixelFormat);
					totSize += size;
					if(i < mipLevel) {
						pos += size;
					} else if(layer == 0) {
						break;
					}
				}
				pos += totSize * layer;
			}
			var bytes;
			var w = this.inf.width >> mipLevel - this.inf.mipOffset;
			var h = this.inf.height >> mipLevel - this.inf.mipOffset;
			if(w == 0) {
				w = 1;
			}
			if(h == 0) {
				h = 1;
			}
			if(this.inf.mipLevels + this.inf.mipOffset == 1 && (this.inf.flags & 1 << hxd_res_ImageInfoFlag.IsCube._hx_index) == 0) {
				bytes = this.entry.getBytes();
			} else {
				var size = hxd_Pixels.calcDataSize(w,h,this.inf.pixelFormat);
				bytes = new haxe_io_Bytes(new ArrayBuffer(size));
				this.entry.readFull(bytes,pos,size);
				pos = 0;
			}
			pixels = new hxd_Pixels(w,h,bytes,this.inf.pixelFormat,pos);
			break;
		case 5:
			var bytes = this.entry.getBytes();
			pixels = new hxd_Pixels(this.inf.width,this.inf.height,bytes,this.inf.pixelFormat);
			break;
		case 6:
			var data = hxd_fmt_hdr_Reader.decode(this.entry.getBytes(),false);
			pixels = new hxd_Pixels(data.width,data.height,data.bytes,this.inf.pixelFormat);
			break;
		}
		if(fmt != null) {
			pixels.convert(fmt);
		}
		return pixels;
	}
	,toBitmap: function() {
		this.getInfo();
		var bmp = new hxd_BitmapData(this.inf.width,this.inf.height);
		var pixels = this.getPixels();
		bmp.setPixels(pixels);
		pixels.dispose();
		return bmp;
	}
	,watchCallb: function() {
		var w = this.inf.width;
		var h = this.inf.height;
		this.inf = null;
		var s = this.getInfo();
		if(w != s.width || h != s.height) {
			this.tex.resize(s.width,s.height);
		}
		this.tex.realloc = null;
		this.loadTexture();
	}
	,loadTexture: function(asyncData) {
		var _gthis = this;
		if(this.getInfo().dataFormat == 0) {
			this.tex.flags |= 1 << h3d_mat_TextureFlags.Loading._hx_index;
			this.entry.loadBitmap(function(bmp) {
				var bmp1 = hxd_fs_LoadedBitmap.toBitmap(bmp);
				_gthis.tex.alloc();
				_gthis.tex.uploadBitmap(bmp1);
				bmp1.ctx = null;
				bmp1.pixel = null;
				_gthis.tex.realloc = function() {
					_gthis.loadTexture();
				};
				_gthis.tex.flags &= -1 - (1 << h3d_mat_TextureFlags.Loading._hx_index);
				if(_gthis.tex.waitLoads != null) {
					var arr = _gthis.tex.waitLoads;
					_gthis.tex.waitLoads = null;
					var _g = 0;
					while(_g < arr.length) {
						var f = arr[_g];
						++_g;
						f();
					}
				}
				if(hxd_res_Image.ENABLE_AUTO_WATCH) {
					_gthis.watch($bind(_gthis,_gthis.watchCallb));
				}
			});
			return;
		}
		var load = function() {
			if((_gthis.enableAsyncLoading || (_gthis.tex.flags & 1 << h3d_mat_TextureFlags.AsyncLoading._hx_index) != 0) && asyncData == null && hxd_res_Image.ASYNC_LOADER.isSupported(_gthis)) {
				_gthis.tex.dispose();
				_gthis.tex.format = hxd_PixelFormat.RGBA;
				_gthis.tex.width = 1;
				_gthis.tex.height = 1;
				_gthis.tex.customMipLevels = 1;
				_gthis.tex.flags |= 1 << h3d_mat_TextureFlags.Loading._hx_index;
				_gthis.tex.alloc();
				_gthis.tex.uploadPixels(hxd_res_Image.BLACK_1x1);
				_gthis.tex.width = _gthis.inf.width;
				_gthis.tex.height = _gthis.inf.height;
				hxd_res_Image.ASYNC_LOADER.load(_gthis);
				_gthis.tex.realloc = function() {
					_gthis.loadTexture();
				};
				return;
			}
			var t0 = HxOverrides.now() / 1000;
			_gthis.tex.customMipLevels = _gthis.inf.mipLevels;
			_gthis.tex.alloc();
			if(_gthis.inf.dataFormat == 4) {
				var pos = 128;
				if((_gthis.inf.flags & 1 << hxd_res_ImageInfoFlag.Dxt10Header._hx_index) != 0) {
					pos += 20;
				}
				var _g = 0;
				var _g1 = _gthis.tex.get_layerCount();
				while(_g < _g1) {
					var layer = _g++;
					var _g2 = 0;
					var _g3 = _gthis.inf.mipOffset;
					while(_g2 < _g3) {
						var mip = _g2++;
						var w = _gthis.inf.width << _gthis.inf.mipOffset >> mip;
						var h = _gthis.inf.height << _gthis.inf.mipOffset >> mip;
						var size = hxd_Pixels.calcDataSize(w,h,_gthis.inf.pixelFormat);
						pos += size;
					}
					var _g4 = 0;
					var _g5 = _gthis.inf.mipLevels;
					while(_g4 < _g5) {
						var mip1 = _g4++;
						var w1 = _gthis.inf.width >> mip1;
						var h1 = _gthis.inf.height >> mip1;
						if(w1 == 0) {
							w1 = 1;
						}
						if(h1 == 0) {
							h1 = 1;
						}
						var size1 = hxd_Pixels.calcDataSize(w1,h1,_gthis.inf.pixelFormat);
						var bytes = asyncData == null ? _gthis.entry.fetchBytes(pos,size1) : asyncData;
						_gthis.tex.uploadPixels(new hxd_Pixels(w1,h1,bytes,_gthis.inf.pixelFormat,asyncData == null ? 0 : pos),mip1,layer);
						pos += size1;
					}
				}
			} else {
				var _g = 0;
				var _g1 = _gthis.tex.get_layerCount();
				while(_g < _g1) {
					var layer = _g++;
					var _g2 = 0;
					var _g3 = _gthis.inf.mipLevels;
					while(_g2 < _g3) {
						var mip = _g2++;
						var pixels = _gthis.getPixels(_gthis.tex.format,layer * _gthis.inf.mipLevels + mip);
						_gthis.tex.uploadPixels(pixels,mip,layer);
						pixels.dispose();
					}
				}
			}
			if(hxd_res_Image.LOG_TEXTURE_LOAD && asyncData == null) {
				var time = (HxOverrides.now() / 1000 - t0) * 1000.0;
				var _g = _gthis.inf.pixelFormat;
				var fmtStr;
				if(_g._hx_index == 22) {
					var _g1 = _g.v;
					fmtStr = true;
				} else {
					fmtStr = false;
				}
				var fmtStr1 = fmtStr ? "DXT" : hxd_res_ImageFormat.getName(_gthis.inf.dataFormat);
				haxe_Log.trace(fmtStr1 + " " + (time | 0) + "." + (time * 10 | 0) % 10 + "ms " + _gthis.inf.width + "x" + _gthis.inf.height + " " + _gthis.entry.get_path(),{ fileName : "hxd/res/Image.hx", lineNumber : 592, className : "hxd.res.Image", methodName : "loadTexture"});
			}
			_gthis.tex.realloc = function() {
				_gthis.loadTexture();
			};
			if(hxd_res_Image.ENABLE_AUTO_WATCH) {
				_gthis.watch($bind(_gthis,_gthis.watchCallb));
			}
		};
		if(this.entry.get_isAvailable()) {
			load();
		} else {
			this.entry.load(load);
		}
	}
	,toTexture: function() {
		if(this.tex != null) {
			return this.tex;
		}
		this.getInfo();
		var flags = [h3d_mat_TextureFlags.NoAlloc];
		var fmt = this.inf.pixelFormat;
		if(fmt == hxd_PixelFormat.BGRA || fmt == hxd_PixelFormat.ARGB || fmt == hxd_PixelFormat.RGBA) {
			fmt = h3d_mat_Texture.nativeFormat;
		}
		if((this.inf.flags & 1 << hxd_res_ImageInfoFlag.IsCube._hx_index) != 0) {
			flags.push(h3d_mat_TextureFlags.Cube);
		}
		if(this.inf.mipLevels > 1) {
			flags.push(h3d_mat_TextureFlags.MipMapped);
			flags.push(h3d_mat_TextureFlags.ManualMipMapGen);
		}
		if(this.inf.layerCount > 1) {
			this.tex = new h3d_mat_TextureArray(this.inf.width,this.inf.height,this.inf.layerCount,flags,fmt);
		} else {
			this.tex = new h3d_mat_Texture(this.inf.width,this.inf.height,flags,fmt);
		}
		if(hxd_res_Image.DEFAULT_FILTER != h3d_mat_Filter.Linear) {
			this.tex.set_filter(hxd_res_Image.DEFAULT_FILTER);
		}
		this.tex.setName(this.entry.get_path());
		hxd_res_Image.setupTextureFlags(this.tex);
		this.loadTexture();
		return this.tex;
	}
	,toTile: function() {
		this.getInfo();
		return h2d_Tile.fromTexture(this.toTexture()).sub(0,0,this.inf.width,this.inf.height);
	}
	,__class__: hxd_res_Image
});
var hxd_res_Loader = function(fs) {
	this.fs = fs;
	this.cache = new haxe_ds_StringMap();
};
$hxClasses["hxd.res.Loader"] = hxd_res_Loader;
hxd_res_Loader.__name__ = "hxd.res.Loader";
hxd_res_Loader.prototype = {
	fs: null
	,cache: null
	,exists: function(path) {
		return this.fs.exists(path);
	}
	,load: function(path) {
		return new hxd_res_Any(this,this.fs.get(path));
	}
	,loadCache: function(path,c) {
		var res = this.cache.h[path];
		if(res == null) {
			var entry = this.fs.get(path);
			var old = hxd_res_Loader.currentInstance;
			hxd_res_Loader.currentInstance = this;
			res = Type.createInstance(c,[entry]);
			hxd_res_Loader.currentInstance = old;
			this.cache.h[path] = res;
		} else if((js_Boot.__downcastCheck(res,c) ? res : null) == null) {
			throw haxe_Exception.thrown(path + " has been reintrepreted from " + Std.string(js_Boot.getClass(res)) + " to " + Std.string(c));
		}
		return res;
	}
	,__class__: hxd_res_Loader
};
var hxd_res_Filter = $hxEnums["hxd.res.Filter"] = { __ename__:"hxd.res.Filter",__constructs__:null
	,Fast: {_hx_name:"Fast",_hx_index:0,__enum__:"hxd.res.Filter",toString:$estr}
	,Chromatic: {_hx_name:"Chromatic",_hx_index:1,__enum__:"hxd.res.Filter",toString:$estr}
};
hxd_res_Filter.__constructs__ = [hxd_res_Filter.Fast,hxd_res_Filter.Chromatic];
hxd_res_Filter.__empty_constructs__ = [hxd_res_Filter.Fast,hxd_res_Filter.Chromatic];
var hxd_res__$NanoJpeg_Component = function() {
};
$hxClasses["hxd.res._NanoJpeg.Component"] = hxd_res__$NanoJpeg_Component;
hxd_res__$NanoJpeg_Component.__name__ = "hxd.res._NanoJpeg.Component";
hxd_res__$NanoJpeg_Component.prototype = {
	cid: null
	,ssx: null
	,ssy: null
	,width: null
	,height: null
	,stride: null
	,qtsel: null
	,actabsel: null
	,dctabsel: null
	,dcpred: null
	,pixels: null
	,__class__: hxd_res__$NanoJpeg_Component
};
var hxd_res_NanoJpeg = function() {
	this.comps = [new hxd_res__$NanoJpeg_Component(),new hxd_res__$NanoJpeg_Component(),new hxd_res__$NanoJpeg_Component()].slice(0);
	this.qtab = [new Array(64),new Array(64),new Array(64),new Array(64)].slice(0);
	this.counts = new Array(16);
	this.block = new Array(64);
	this.njZZ = [0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63].slice(0);
	this.vlctab = [null,null,null,null,null,null,null,null].slice(0);
};
$hxClasses["hxd.res.NanoJpeg"] = hxd_res_NanoJpeg;
hxd_res_NanoJpeg.__name__ = "hxd.res.NanoJpeg";
hxd_res_NanoJpeg.decode = function(bytes,filter,position,size) {
	if(size == null) {
		size = -1;
	}
	if(position == null) {
		position = 0;
	}
	if(hxd_res_NanoJpeg.inst == null) {
		hxd_res_NanoJpeg.inst = new hxd_res_NanoJpeg();
	}
	hxd_res_NanoJpeg.inst.njInit(bytes,position,size,filter);
	return hxd_res_NanoJpeg.inst.njDecode();
};
hxd_res_NanoJpeg.prototype = {
	bytes: null
	,pos: null
	,size: null
	,length: null
	,width: null
	,height: null
	,ncomp: null
	,comps: null
	,counts: null
	,qtab: null
	,qtused: null
	,qtavail: null
	,vlctab: null
	,block: null
	,njZZ: null
	,progressive: null
	,mbsizex: null
	,mbsizey: null
	,mbwidth: null
	,mbheight: null
	,rstinterval: null
	,buf: null
	,bufbits: null
	,filter: null
	,njInit: function(bytes,pos,size,filter) {
		this.bytes = bytes;
		this.pos = pos;
		this.filter = filter == null ? hxd_res_Filter.Chromatic : filter;
		if(size < 0) {
			size = bytes.length - pos;
		}
		if(this.vlctab[0] == null) {
			this.vlctab[0] = new haxe_io_Bytes(new ArrayBuffer(131072));
		}
		if(this.vlctab[1] == null) {
			this.vlctab[1] = new haxe_io_Bytes(new ArrayBuffer(131072));
		}
		if(this.vlctab[2] == null) {
			this.vlctab[2] = new haxe_io_Bytes(new ArrayBuffer(131072));
		}
		if(this.vlctab[3] == null) {
			this.vlctab[3] = new haxe_io_Bytes(new ArrayBuffer(131072));
		}
		this.size = size;
		this.qtused = 0;
		this.qtavail = 0;
		this.rstinterval = 0;
		this.length = 0;
		this.buf = 0;
		this.bufbits = 0;
		this.progressive = false;
		this.comps[0].dcpred = 0;
		this.comps[1].dcpred = 0;
		this.comps[2].dcpred = 0;
	}
	,cleanup: function() {
		this.bytes = null;
		var _g = 0;
		var _g1 = this.comps;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.pixels != null) {
				c.pixels = null;
			}
		}
		if(this.vlctab[0] != null) {
			this.vlctab[0] = null;
		}
		if(this.vlctab[1] != null) {
			this.vlctab[1] = null;
		}
		if(this.vlctab[2] != null) {
			this.vlctab[2] = null;
		}
		if(this.vlctab[3] != null) {
			this.vlctab[3] = null;
		}
		if(this.vlctab[4] != null) {
			this.vlctab[4] = null;
		}
		if(this.vlctab[5] != null) {
			this.vlctab[5] = null;
		}
		if(this.vlctab[6] != null) {
			this.vlctab[6] = null;
		}
		if(this.vlctab[7] != null) {
			this.vlctab[7] = null;
		}
	}
	,njShowBits: function(bits) {
		if(bits == 0) {
			return 0;
		}
		while(this.bufbits < bits) {
			if(this.size <= 0) {
				this.buf = this.buf << 8 | 255;
				this.bufbits += 8;
				continue;
			}
			var newbyte = this.bytes.b[this.pos];
			this.pos++;
			this.size--;
			this.bufbits += 8;
			this.buf = this.buf << 8 | newbyte;
			if(newbyte == 255) {
				var marker = this.bytes.b[this.pos];
				this.pos++;
				this.size--;
				switch(marker) {
				case 217:
					this.size = 0;
					break;
				case 0:case 255:
					break;
				default:
					this.buf = this.buf << 8 | marker;
					this.bufbits += 8;
				}
			}
		}
		return this.buf >> this.bufbits - bits & (1 << bits) - 1;
	}
	,njDecodeSOF: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.bytes.b[this.pos] != 8) {
			this.notSupported();
		}
		this.height = this.bytes.b[this.pos + 1] << 8 | this.bytes.b[this.pos + 2];
		this.width = this.bytes.b[this.pos + 3] << 8 | this.bytes.b[this.pos + 4];
		this.ncomp = this.bytes.b[this.pos + 5];
		this.pos += 6;
		this.size -= 6;
		this.length -= 6;
		switch(this.ncomp) {
		case 1:case 3:
			break;
		default:
			this.notSupported();
		}
		var ssxmax = 0;
		var ssymax = 0;
		var _g = 0;
		var _g1 = this.ncomp;
		while(_g < _g1) {
			var i = _g++;
			var c = this.comps[i];
			c.cid = this.bytes.b[this.pos];
			c.ssx = this.bytes.b[this.pos + 1] >> 4;
			if((c.ssx & c.ssx - 1) != 0) {
				this.notSupported();
			}
			c.ssy = this.bytes.b[this.pos + 1] & 15;
			if((c.ssy & c.ssy - 1) != 0) {
				this.notSupported();
			}
			c.qtsel = this.bytes.b[this.pos + 2];
			this.pos += 3;
			this.size -= 3;
			this.length -= 3;
			this.qtused |= 1 << c.qtsel;
			if(c.ssx > ssxmax) {
				ssxmax = c.ssx;
			}
			if(c.ssy > ssymax) {
				ssymax = c.ssy;
			}
		}
		if(this.ncomp == 1) {
			var c = this.comps[0];
			ssymax = 1;
			ssxmax = ssymax;
			c.ssx = c.ssy = ssxmax;
		}
		this.mbsizex = ssxmax << 3;
		this.mbsizey = ssymax << 3;
		this.mbwidth = (this.width + this.mbsizex - 1) / this.mbsizex | 0;
		this.mbheight = (this.height + this.mbsizey - 1) / this.mbsizey | 0;
		var _g = 0;
		var _g1 = this.ncomp;
		while(_g < _g1) {
			var i = _g++;
			var c = this.comps[i];
			c.width = (this.width * c.ssx + ssxmax - 1) / ssxmax | 0;
			c.stride = c.width + 7 & 2147483640;
			c.height = (this.height * c.ssy + ssymax - 1) / ssymax | 0;
			c.stride = this.mbwidth * this.mbsizex * c.ssx / ssxmax | 0;
			if(c.width < 3 && c.ssx != ssxmax || c.height < 3 && c.ssy != ssymax) {
				this.notSupported();
			}
			c.pixels = new haxe_io_Bytes(new ArrayBuffer(c.stride * (this.mbheight * this.mbsizey * c.ssy / ssymax | 0)));
		}
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
	}
	,njDecodeDQT: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		while(this.length >= 65) {
			var i = this.bytes.b[this.pos];
			this.qtavail |= 1 << i;
			var t = this.qtab[i];
			var _g = 0;
			while(_g < 64) {
				var k = _g++;
				t[k] = this.bytes.b[this.pos + (k + 1)];
			}
			this.pos += 65;
			this.size -= 65;
			this.length -= 65;
		}
	}
	,njDecodeDHT: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		while(this.length >= 17) {
			var i = this.bytes.b[this.pos];
			i = i >> 4 & 1 | (i & 3) << 1;
			this.counts[0] = this.bytes.b[this.pos + 1];
			this.counts[1] = this.bytes.b[this.pos + 2];
			this.counts[2] = this.bytes.b[this.pos + 3];
			this.counts[3] = this.bytes.b[this.pos + 4];
			this.counts[4] = this.bytes.b[this.pos + 5];
			this.counts[5] = this.bytes.b[this.pos + 6];
			this.counts[6] = this.bytes.b[this.pos + 7];
			this.counts[7] = this.bytes.b[this.pos + 8];
			this.counts[8] = this.bytes.b[this.pos + 9];
			this.counts[9] = this.bytes.b[this.pos + 10];
			this.counts[10] = this.bytes.b[this.pos + 11];
			this.counts[11] = this.bytes.b[this.pos + 12];
			this.counts[12] = this.bytes.b[this.pos + 13];
			this.counts[13] = this.bytes.b[this.pos + 14];
			this.counts[14] = this.bytes.b[this.pos + 15];
			this.counts[15] = this.bytes.b[this.pos + 16];
			this.pos += 17;
			this.size -= 17;
			this.length -= 17;
			var vlc = this.vlctab[i];
			var vpos = 0;
			var remain = 65536;
			var spread = 65536;
			var _g = 1;
			while(_g < 17) {
				var codelen = _g++;
				spread >>= 1;
				var currcnt = this.counts[codelen - 1];
				if(currcnt == 0) {
					continue;
				}
				remain -= currcnt << 16 - codelen;
				var _g1 = 0;
				var _g2 = currcnt;
				while(_g1 < _g2) {
					var i1 = _g1++;
					var code = this.bytes.b[this.pos + i1];
					var _g3 = 0;
					var _g4 = spread;
					while(_g3 < _g4) {
						var j = _g3++;
						vlc.b[vpos++] = codelen;
						vlc.b[vpos++] = code;
					}
				}
				this.pos += currcnt;
				this.size -= currcnt;
				this.length -= currcnt;
			}
			while(remain-- != 0) {
				vlc.b[vpos] = 0;
				vpos += 2;
			}
		}
	}
	,njDecodeDRI: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		this.rstinterval = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
	}
	,vlcCode: null
	,njDecodeBlock: function(c,po) {
		var out = c.pixels;
		var value;
		var coef = 0;
		var _g = 0;
		while(_g < 64) {
			var i = _g++;
			this.block[i] = 0;
		}
		var c1 = c;
		var c2 = c1.dcpred;
		var vlc = this.vlctab[c.dctabsel];
		var value1 = this.njShowBits(16);
		var bits = vlc.b[value1 << 1];
		if(this.bufbits < bits) {
			this.njShowBits(bits);
		}
		this.bufbits -= bits;
		value1 = vlc.b[value1 << 1 | 1];
		this.vlcCode = value1;
		bits = value1 & 15;
		var tmp;
		if(bits == 0) {
			tmp = 0;
		} else {
			var r = this.njShowBits(bits);
			this.bufbits -= bits;
			value1 = r;
			if(value1 < 1 << bits - 1) {
				value1 += (-1 << bits) + 1;
			}
			tmp = value1;
		}
		c1.dcpred = c2 + tmp;
		var qt = this.qtab[c.qtsel];
		var at = this.vlctab[c.actabsel];
		this.block[0] = c.dcpred * qt[0];
		do {
			var value1 = this.njShowBits(16);
			var bits = at.b[value1 << 1];
			if(this.bufbits < bits) {
				this.njShowBits(bits);
			}
			this.bufbits -= bits;
			value1 = at.b[value1 << 1 | 1];
			this.vlcCode = value1;
			bits = value1 & 15;
			if(bits == 0) {
				value = 0;
			} else {
				var r = this.njShowBits(bits);
				this.bufbits -= bits;
				value1 = r;
				if(value1 < 1 << bits - 1) {
					value1 += (-1 << bits) + 1;
				}
				value = value1;
			}
			if(this.vlcCode == 0) {
				break;
			}
			coef += (this.vlcCode >> 4) + 1;
			this.block[this.njZZ[coef]] = value * qt[coef];
		} while(coef < 63);
		var bp = 0;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 8;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 16;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 24;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 32;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 40;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 48;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var bp = 56;
		var x0;
		var x8;
		var x1 = this.block[bp + 4] << 11;
		var x2 = this.block[bp + 6];
		var x3 = this.block[bp + 2];
		var x4 = this.block[bp + 1];
		var x5 = this.block[bp + 7];
		var x6 = this.block[bp + 5];
		var x7 = this.block[bp + 3];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var val = this.block[bp + 7] = this.block[bp] << 3;
			var val1 = this.block[bp + 6] = val;
			var val = this.block[bp + 5] = val1;
			var val1 = this.block[bp + 4] = val;
			var val = this.block[bp + 3] = val1;
			var val1 = this.block[bp + 2] = val;
			var val = this.block[bp + 1] = val1;
			this.block[bp] = val;
		} else {
			x0 = (this.block[bp] << 11) + 128;
			x8 = 565 * (x4 + x5);
			x4 = x8 + 2276 * x4;
			x5 = x8 - 3406 * x5;
			x8 = 2408 * (x6 + x7);
			x6 = x8 - 799 * x6;
			x7 = x8 - 4017 * x7;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2);
			x2 = x1 - 3784 * x2;
			x3 = x1 + 1568 * x3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			this.block[bp] = x7 + x1 >> 8;
			this.block[bp + 1] = x3 + x2 >> 8;
			this.block[bp + 2] = x0 + x4 >> 8;
			this.block[bp + 3] = x8 + x6 >> 8;
			this.block[bp + 4] = x8 - x6 >> 8;
			this.block[bp + 5] = x0 - x4 >> 8;
			this.block[bp + 6] = x3 - x2 >> 8;
			this.block[bp + 7] = x7 - x1 >> 8;
		}
		var po1 = po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[32] << 8;
		var x2 = this.block[48];
		var x3 = this.block[16];
		var x4 = this.block[8];
		var x5 = this.block[56];
		var x6 = this.block[40];
		var x7 = this.block[24];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[0] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[0] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 1 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[33] << 8;
		var x2 = this.block[49];
		var x3 = this.block[17];
		var x4 = this.block[9];
		var x5 = this.block[57];
		var x6 = this.block[41];
		var x7 = this.block[25];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[1] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[1] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 2 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[34] << 8;
		var x2 = this.block[50];
		var x3 = this.block[18];
		var x4 = this.block[10];
		var x5 = this.block[58];
		var x6 = this.block[42];
		var x7 = this.block[26];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[2] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[2] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 3 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[35] << 8;
		var x2 = this.block[51];
		var x3 = this.block[19];
		var x4 = this.block[11];
		var x5 = this.block[59];
		var x6 = this.block[43];
		var x7 = this.block[27];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[3] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[3] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 4 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[36] << 8;
		var x2 = this.block[52];
		var x3 = this.block[20];
		var x4 = this.block[12];
		var x5 = this.block[60];
		var x6 = this.block[44];
		var x7 = this.block[28];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[4] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[4] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 5 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[37] << 8;
		var x2 = this.block[53];
		var x3 = this.block[21];
		var x4 = this.block[13];
		var x5 = this.block[61];
		var x6 = this.block[45];
		var x7 = this.block[29];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[5] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[5] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 6 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[38] << 8;
		var x2 = this.block[54];
		var x3 = this.block[22];
		var x4 = this.block[14];
		var x5 = this.block[62];
		var x6 = this.block[46];
		var x7 = this.block[30];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[6] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[6] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
		var po1 = 7 + po;
		var stride = c.stride;
		var x0;
		var x8;
		var x1 = this.block[39] << 8;
		var x2 = this.block[55];
		var x3 = this.block[23];
		var x4 = this.block[15];
		var x5 = this.block[63];
		var x6 = this.block[47];
		var x7 = this.block[31];
		if((x1 | x2 | x3 | x4 | x5 | x6 | x7) == 0) {
			var x = (this.block[7] + 32 >> 6) + 128;
			x1 = x < 0 ? 0 : x > 255 ? 255 : x;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
			out.b[po1] = x1;
			po1 += stride;
		} else {
			x0 = (this.block[7] << 8) + 8192;
			x8 = 565 * (x4 + x5) + 4;
			x4 = x8 + 2276 * x4 >> 3;
			x5 = x8 - 3406 * x5 >> 3;
			x8 = 2408 * (x6 + x7) + 4;
			x6 = x8 - 799 * x6 >> 3;
			x7 = x8 - 4017 * x7 >> 3;
			x8 = x0 + x1;
			x0 -= x1;
			x1 = 1108 * (x3 + x2) + 4;
			x2 = x1 - 3784 * x2 >> 3;
			x3 = x1 + 1568 * x3 >> 3;
			x1 = x4 + x6;
			x4 -= x6;
			x6 = x5 + x7;
			x5 -= x7;
			x7 = x8 + x3;
			x8 -= x3;
			x3 = x0 + x2;
			x0 -= x2;
			x2 = 181 * (x4 + x5) + 128 >> 8;
			x4 = 181 * (x4 - x5) + 128 >> 8;
			var x = (x7 + x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 + x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 + x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 + x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x8 - x6 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x0 - x4 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x3 - x2 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
			po1 += stride;
			var x = (x7 - x1 >> 14) + 128;
			out.b[po1] = x < 0 ? 0 : x > 255 ? 255 : x;
		}
	}
	,notSupported: function() {
		throw haxe_Exception.thrown("This JPG file is not supported");
	}
	,njDecodeScan: function() {
		this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		if(this.bytes.b[this.pos] != this.ncomp) {
			this.notSupported();
		}
		this.pos += 1;
		this.size -= 1;
		this.length -= 1;
		var _g = 0;
		var _g1 = this.ncomp;
		while(_g < _g1) {
			var i = _g++;
			var c = this.comps[i];
			c.dctabsel = this.bytes.b[this.pos + 1] >> 4 << 1;
			c.actabsel = (this.bytes.b[this.pos + 1] & 3) << 1 | 1;
			this.pos += 2;
			this.size -= 2;
			this.length -= 2;
		}
		var start = this.bytes.b[this.pos];
		var count = this.bytes.b[this.pos + 1];
		var other = this.bytes.b[this.pos + 2];
		if(!this.progressive && start != 0 || count != 63 - start || other != 0) {
			this.notSupported();
		}
		var count = this.length;
		this.pos += count;
		this.size -= count;
		this.length -= count;
		var mbx = 0;
		var mby = 0;
		var rstcount = this.rstinterval;
		var nextrst = 0;
		while(true) {
			var _g = 0;
			var _g1 = this.ncomp;
			while(_g < _g1) {
				var i = _g++;
				var c = this.comps[i];
				var _g2 = 0;
				var _g3 = c.ssy;
				while(_g2 < _g3) {
					var sby = _g2++;
					var _g4 = 0;
					var _g5 = c.ssx;
					while(_g4 < _g5) {
						var sbx = _g4++;
						this.njDecodeBlock(c,(mby * c.ssy + sby) * c.stride + mbx * c.ssx + sbx << 3);
					}
				}
			}
			if(++mbx >= this.mbwidth) {
				mbx = 0;
				if(++mby >= this.mbheight) {
					break;
				}
			}
			if(this.rstinterval != 0 && --rstcount == 0) {
				this.bufbits &= 248;
				var r = this.njShowBits(16);
				this.bufbits -= 16;
				var i1 = r;
				nextrst = nextrst + 1 & 7;
				rstcount = this.rstinterval;
				this.comps[0].dcpred = 0;
				this.comps[1].dcpred = 0;
				this.comps[2].dcpred = 0;
			}
		}
	}
	,njUpsampleH: function(c) {
		var xmax = c.width - 3;
		var cout = new haxe_io_Bytes(new ArrayBuffer(c.width * c.height << 1));
		var lout = cout;
		var lin = c.pixels;
		var pi = 0;
		var po = 0;
		var _g = 0;
		var _g1 = c.height;
		while(_g < _g1) {
			var y = _g++;
			var x = 139 * lin.b[pi] + -11 * lin.b[pi + 1] + 64 >> 7;
			lout.b[po] = x < 0 ? 0 : x > 255 ? 255 : x;
			var x1 = 104 * lin.b[pi] + 27 * lin.b[pi + 1] + -3 * lin.b[pi + 2] + 64 >> 7;
			lout.b[po + 1] = x1 < 0 ? 0 : x1 > 255 ? 255 : x1;
			var x2 = 28 * lin.b[pi] + 109 * lin.b[pi + 1] + -9 * lin.b[pi + 2] + 64 >> 7;
			lout.b[po + 2] = x2 < 0 ? 0 : x2 > 255 ? 255 : x2;
			var _g2 = 0;
			var _g3 = xmax;
			while(_g2 < _g3) {
				var x3 = _g2++;
				var x4 = -9 * lin.b[pi + x3] + 111 * lin.b[pi + x3 + 1] + 29 * lin.b[pi + x3 + 2] + -3 * lin.b[pi + x3 + 3] + 64 >> 7;
				lout.b[po + (x3 << 1) + 3] = x4 < 0 ? 0 : x4 > 255 ? 255 : x4;
				var x5 = -3 * lin.b[pi + x3] + 29 * lin.b[pi + x3 + 1] + 111 * lin.b[pi + x3 + 2] + -9 * lin.b[pi + x3 + 3] + 64 >> 7;
				lout.b[po + (x3 << 1) + 4] = x5 < 0 ? 0 : x5 > 255 ? 255 : x5;
			}
			pi += c.stride;
			po += c.width << 1;
			var x6 = 28 * lin.b[pi - 1] + 109 * lin.b[pi - 2] + -9 * lin.b[pi - 3] + 64 >> 7;
			lout.b[po - 3] = x6 < 0 ? 0 : x6 > 255 ? 255 : x6;
			var x7 = 104 * lin.b[pi - 1] + 27 * lin.b[pi - 2] + -3 * lin.b[pi - 3] + 64 >> 7;
			lout.b[po - 2] = x7 < 0 ? 0 : x7 > 255 ? 255 : x7;
			var x8 = 139 * lin.b[pi - 1] + -11 * lin.b[pi - 2] + 64 >> 7;
			lout.b[po - 1] = x8 < 0 ? 0 : x8 > 255 ? 255 : x8;
		}
		c.width <<= 1;
		c.stride = c.width;
		c.pixels = cout;
	}
	,njUpsampleV: function(c) {
		var w = c.width;
		var s1 = c.stride;
		var s2 = s1 + s1;
		var out = new haxe_io_Bytes(new ArrayBuffer(c.width * c.height << 1));
		var pi = 0;
		var po = 0;
		var cout = out;
		var cin = c.pixels;
		var _g = 0;
		var _g1 = w;
		while(_g < _g1) {
			var x = _g++;
			po = x;
			pi = po;
			var x1 = 139 * cin.b[pi] + -11 * cin.b[pi + s1] + 64 >> 7;
			cout.b[po] = x1 < 0 ? 0 : x1 > 255 ? 255 : x1;
			po += w;
			var x2 = 104 * cin.b[pi] + 27 * cin.b[pi + s1] + -3 * cin.b[pi + s2] + 64 >> 7;
			cout.b[po] = x2 < 0 ? 0 : x2 > 255 ? 255 : x2;
			po += w;
			var x3 = 28 * cin.b[pi] + 109 * cin.b[pi + s1] + -9 * cin.b[pi + s2] + 64 >> 7;
			cout.b[po] = x3 < 0 ? 0 : x3 > 255 ? 255 : x3;
			po += w;
			pi += s1;
			var _g2 = 0;
			var _g3 = c.height - 2;
			while(_g2 < _g3) {
				var y = _g2++;
				var x4 = -9 * cin.b[pi - s1] + 111 * cin.b[pi] + 29 * cin.b[pi + s1] + -3 * cin.b[pi + s2] + 64 >> 7;
				cout.b[po] = x4 < 0 ? 0 : x4 > 255 ? 255 : x4;
				po += w;
				var x5 = -3 * cin.b[pi - s1] + 29 * cin.b[pi] + 111 * cin.b[pi + s1] + -9 * cin.b[pi + s2] + 64 >> 7;
				cout.b[po] = x5 < 0 ? 0 : x5 > 255 ? 255 : x5;
				po += w;
				pi += s1;
			}
			pi += s1;
			var x6 = 28 * cin.b[pi] + 109 * cin.b[pi - s1] + -9 * cin.b[pi - s2] + 64 >> 7;
			cout.b[po] = x6 < 0 ? 0 : x6 > 255 ? 255 : x6;
			po += w;
			var x7 = 104 * cin.b[pi] + 27 * cin.b[pi - s1] + -3 * cin.b[pi - s2] + 64 >> 7;
			cout.b[po] = x7 < 0 ? 0 : x7 > 255 ? 255 : x7;
			po += w;
			var x8 = 139 * cin.b[pi] + -11 * cin.b[pi - s1] + 64 >> 7;
			cout.b[po] = x8 < 0 ? 0 : x8 > 255 ? 255 : x8;
		}
		c.height <<= 1;
		c.stride = c.width;
		c.pixels = out;
	}
	,njUpsample: function(c) {
		var xshift = 0;
		var yshift = 0;
		while(c.width < this.width) {
			c.width <<= 1;
			++xshift;
		}
		while(c.height < this.height) {
			c.height <<= 1;
			++yshift;
		}
		var out = new haxe_io_Bytes(new ArrayBuffer(c.width * c.height));
		var lin = c.pixels;
		var pout = 0;
		var lout = out;
		var _g = 0;
		var _g1 = c.height;
		while(_g < _g1) {
			var y = _g++;
			var pin = (y >> yshift) * c.stride;
			var _g2 = 0;
			var _g3 = c.width;
			while(_g2 < _g3) {
				var x = _g2++;
				lout.b[pout++] = lin.b[(x >> xshift) + pin];
			}
		}
		c.stride = c.width;
		c.pixels = out;
	}
	,njConvert: function() {
		var _g = 0;
		var _g1 = this.ncomp;
		while(_g < _g1) {
			var i = _g++;
			var c = this.comps[i];
			switch(this.filter._hx_index) {
			case 0:
				if(c.width < this.width || c.height < this.height) {
					this.njUpsample(c);
				}
				break;
			case 1:
				while(c.width < this.width || c.height < this.height) {
					if(c.width < this.width) {
						this.njUpsampleH(c);
					}
					if(c.height < this.height) {
						this.njUpsampleV(c);
					}
				}
				break;
			}
			if(c.width < this.width || c.height < this.height) {
				throw haxe_Exception.thrown("assert");
			}
		}
		var pixels = new haxe_io_Bytes(new ArrayBuffer(this.width * this.height * 4));
		if(this.ncomp == 3) {
			var py = this.comps[0].pixels;
			var pcb = this.comps[1].pixels;
			var pcr = this.comps[2].pixels;
			var pix = pixels;
			var k1 = 0;
			var k2 = 0;
			var k3 = 0;
			var out = 0;
			var _g = 0;
			var _g1 = this.height;
			while(_g < _g1) {
				var yy = _g++;
				var _g2 = 0;
				var _g3 = this.width;
				while(_g2 < _g3) {
					var x = _g2++;
					var y = py.b[k1++] << 8;
					var cb = pcb.b[k2++] - 128;
					var cr = pcr.b[k3++] - 128;
					var x1 = y + 359 * cr + 128 >> 8;
					var r = x1 < 0 ? 0 : x1 > 255 ? 255 : x1;
					var x2 = y - 88 * cb - 183 * cr + 128 >> 8;
					var g = x2 < 0 ? 0 : x2 > 255 ? 255 : x2;
					var x3 = y + 454 * cb + 128 >> 8;
					var b = x3 < 0 ? 0 : x3 > 255 ? 255 : x3;
					pix.b[out++] = b;
					pix.b[out++] = g;
					pix.b[out++] = r;
					pix.b[out++] = 255;
				}
				k1 += this.comps[0].stride - this.width;
				k2 += this.comps[1].stride - this.width;
				k3 += this.comps[2].stride - this.width;
			}
		} else {
			throw haxe_Exception.thrown("TODO");
		}
		return pixels;
	}
	,njDecode: function() {
		if(this.size < 2 || this.bytes.b[this.pos] != 255 || this.bytes.b[this.pos + 1] != 216) {
			throw haxe_Exception.thrown("This file is not a JPEG");
		}
		this.pos += 2;
		this.size -= 2;
		this.length -= 2;
		_hx_loop1: while(true) {
			this.pos += 2;
			this.size -= 2;
			this.length -= 2;
			switch(this.bytes.b[this.pos + (-1)]) {
			case 192:
				this.njDecodeSOF();
				break;
			case 194:
				this.progressive = true;
				if(this.progressive) {
					throw haxe_Exception.thrown("Unsupported progressive JPG");
				}
				if(this.vlctab[4] == null) {
					this.vlctab[4] = new haxe_io_Bytes(new ArrayBuffer(131072));
				}
				if(this.vlctab[5] == null) {
					this.vlctab[5] = new haxe_io_Bytes(new ArrayBuffer(131072));
				}
				if(this.vlctab[6] == null) {
					this.vlctab[6] = new haxe_io_Bytes(new ArrayBuffer(131072));
				}
				if(this.vlctab[7] == null) {
					this.vlctab[7] = new haxe_io_Bytes(new ArrayBuffer(131072));
				}
				this.njDecodeSOF();
				break;
			case 195:
				throw haxe_Exception.thrown("Unsupported lossless JPG");
			case 196:
				this.njDecodeDHT();
				break;
			case 218:
				this.njDecodeScan();
				break _hx_loop1;
			case 219:
				this.njDecodeDQT();
				break;
			case 221:
				this.njDecodeDRI();
				break;
			case 254:
				this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
				this.pos += 2;
				this.size -= 2;
				this.length -= 2;
				var count = this.length;
				this.pos += count;
				this.size -= count;
				this.length -= count;
				break;
			default:
				switch(this.bytes.b[this.pos + (-1)] & 240) {
				case 192:
					throw haxe_Exception.thrown("Unsupported jpeg type " + (this.bytes.b[this.pos + (-1)] & 15));
				case 224:
					this.length = this.bytes.b[this.pos] << 8 | this.bytes.b[this.pos + 1];
					this.pos += 2;
					this.size -= 2;
					this.length -= 2;
					var count1 = this.length;
					this.pos += count1;
					this.size -= count1;
					this.length -= count1;
					break;
				default:
					throw haxe_Exception.thrown("Unsupported jpeg tag 0x" + StringTools.hex(this.bytes.b[this.pos + (-1)],2));
				}
			}
		}
		var pixels = this.njConvert();
		this.cleanup();
		return { pixels : pixels, width : this.width, height : this.height};
	}
	,__class__: hxd_res_NanoJpeg
};
var hxsl_Type = $hxEnums["hxsl.Type"] = { __ename__:"hxsl.Type",__constructs__:null
	,TVoid: {_hx_name:"TVoid",_hx_index:0,__enum__:"hxsl.Type",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"hxsl.Type",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:2,__enum__:"hxsl.Type",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:3,__enum__:"hxsl.Type",toString:$estr}
	,TString: {_hx_name:"TString",_hx_index:4,__enum__:"hxsl.Type",toString:$estr}
	,TVec: ($_=function(size,t) { return {_hx_index:5,size:size,t:t,__enum__:"hxsl.Type",toString:$estr}; },$_._hx_name="TVec",$_.__params__ = ["size","t"],$_)
	,TMat3: {_hx_name:"TMat3",_hx_index:6,__enum__:"hxsl.Type",toString:$estr}
	,TMat4: {_hx_name:"TMat4",_hx_index:7,__enum__:"hxsl.Type",toString:$estr}
	,TMat3x4: {_hx_name:"TMat3x4",_hx_index:8,__enum__:"hxsl.Type",toString:$estr}
	,TBytes: ($_=function(size) { return {_hx_index:9,size:size,__enum__:"hxsl.Type",toString:$estr}; },$_._hx_name="TBytes",$_.__params__ = ["size"],$_)
	,TSampler2D: {_hx_name:"TSampler2D",_hx_index:10,__enum__:"hxsl.Type",toString:$estr}
	,TSampler2DArray: {_hx_name:"TSampler2DArray",_hx_index:11,__enum__:"hxsl.Type",toString:$estr}
	,TSamplerCube: {_hx_name:"TSamplerCube",_hx_index:12,__enum__:"hxsl.Type",toString:$estr}
	,TStruct: ($_=function(vl) { return {_hx_index:13,vl:vl,__enum__:"hxsl.Type",toString:$estr}; },$_._hx_name="TStruct",$_.__params__ = ["vl"],$_)
	,TFun: ($_=function(variants) { return {_hx_index:14,variants:variants,__enum__:"hxsl.Type",toString:$estr}; },$_._hx_name="TFun",$_.__params__ = ["variants"],$_)
	,TArray: ($_=function(t,size) { return {_hx_index:15,t:t,size:size,__enum__:"hxsl.Type",toString:$estr}; },$_._hx_name="TArray",$_.__params__ = ["t","size"],$_)
	,TBuffer: ($_=function(t,size) { return {_hx_index:16,t:t,size:size,__enum__:"hxsl.Type",toString:$estr}; },$_._hx_name="TBuffer",$_.__params__ = ["t","size"],$_)
	,TChannel: ($_=function(size) { return {_hx_index:17,size:size,__enum__:"hxsl.Type",toString:$estr}; },$_._hx_name="TChannel",$_.__params__ = ["size"],$_)
	,TMat2: {_hx_name:"TMat2",_hx_index:18,__enum__:"hxsl.Type",toString:$estr}
};
hxsl_Type.__constructs__ = [hxsl_Type.TVoid,hxsl_Type.TInt,hxsl_Type.TBool,hxsl_Type.TFloat,hxsl_Type.TString,hxsl_Type.TVec,hxsl_Type.TMat3,hxsl_Type.TMat4,hxsl_Type.TMat3x4,hxsl_Type.TBytes,hxsl_Type.TSampler2D,hxsl_Type.TSampler2DArray,hxsl_Type.TSamplerCube,hxsl_Type.TStruct,hxsl_Type.TFun,hxsl_Type.TArray,hxsl_Type.TBuffer,hxsl_Type.TChannel,hxsl_Type.TMat2];
hxsl_Type.__empty_constructs__ = [hxsl_Type.TVoid,hxsl_Type.TInt,hxsl_Type.TBool,hxsl_Type.TFloat,hxsl_Type.TString,hxsl_Type.TMat3,hxsl_Type.TMat4,hxsl_Type.TMat3x4,hxsl_Type.TSampler2D,hxsl_Type.TSampler2DArray,hxsl_Type.TSamplerCube,hxsl_Type.TMat2];
var hxsl_VecType = $hxEnums["hxsl.VecType"] = { __ename__:"hxsl.VecType",__constructs__:null
	,VInt: {_hx_name:"VInt",_hx_index:0,__enum__:"hxsl.VecType",toString:$estr}
	,VFloat: {_hx_name:"VFloat",_hx_index:1,__enum__:"hxsl.VecType",toString:$estr}
	,VBool: {_hx_name:"VBool",_hx_index:2,__enum__:"hxsl.VecType",toString:$estr}
};
hxsl_VecType.__constructs__ = [hxsl_VecType.VInt,hxsl_VecType.VFloat,hxsl_VecType.VBool];
hxsl_VecType.__empty_constructs__ = [hxsl_VecType.VInt,hxsl_VecType.VFloat,hxsl_VecType.VBool];
var hxsl_SizeDecl = $hxEnums["hxsl.SizeDecl"] = { __ename__:"hxsl.SizeDecl",__constructs__:null
	,SConst: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hxsl.SizeDecl",toString:$estr}; },$_._hx_name="SConst",$_.__params__ = ["v"],$_)
	,SVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hxsl.SizeDecl",toString:$estr}; },$_._hx_name="SVar",$_.__params__ = ["v"],$_)
};
hxsl_SizeDecl.__constructs__ = [hxsl_SizeDecl.SConst,hxsl_SizeDecl.SVar];
hxsl_SizeDecl.__empty_constructs__ = [];
var hxsl_Error = function(msg,pos) {
	this.msg = msg;
	this.pos = pos;
};
$hxClasses["hxsl.Error"] = hxsl_Error;
hxsl_Error.__name__ = "hxsl.Error";
hxsl_Error.t = function(msg,pos) {
	throw haxe_Exception.thrown(new hxsl_Error(msg,pos));
};
hxsl_Error.prototype = {
	msg: null
	,pos: null
	,toString: function() {
		return "Error(" + this.msg + ")@" + Std.string(this.pos);
	}
	,__class__: hxsl_Error
};
var hxsl_VarKind = $hxEnums["hxsl.VarKind"] = { __ename__:"hxsl.VarKind",__constructs__:null
	,Global: {_hx_name:"Global",_hx_index:0,__enum__:"hxsl.VarKind",toString:$estr}
	,Input: {_hx_name:"Input",_hx_index:1,__enum__:"hxsl.VarKind",toString:$estr}
	,Param: {_hx_name:"Param",_hx_index:2,__enum__:"hxsl.VarKind",toString:$estr}
	,Var: {_hx_name:"Var",_hx_index:3,__enum__:"hxsl.VarKind",toString:$estr}
	,Local: {_hx_name:"Local",_hx_index:4,__enum__:"hxsl.VarKind",toString:$estr}
	,Output: {_hx_name:"Output",_hx_index:5,__enum__:"hxsl.VarKind",toString:$estr}
	,Function: {_hx_name:"Function",_hx_index:6,__enum__:"hxsl.VarKind",toString:$estr}
};
hxsl_VarKind.__constructs__ = [hxsl_VarKind.Global,hxsl_VarKind.Input,hxsl_VarKind.Param,hxsl_VarKind.Var,hxsl_VarKind.Local,hxsl_VarKind.Output,hxsl_VarKind.Function];
hxsl_VarKind.__empty_constructs__ = [hxsl_VarKind.Global,hxsl_VarKind.Input,hxsl_VarKind.Param,hxsl_VarKind.Var,hxsl_VarKind.Local,hxsl_VarKind.Output,hxsl_VarKind.Function];
var hxsl_VarQualifier = $hxEnums["hxsl.VarQualifier"] = { __ename__:"hxsl.VarQualifier",__constructs__:null
	,Const: ($_=function(max) { return {_hx_index:0,max:max,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_._hx_name="Const",$_.__params__ = ["max"],$_)
	,Private: {_hx_name:"Private",_hx_index:1,__enum__:"hxsl.VarQualifier",toString:$estr}
	,Nullable: {_hx_name:"Nullable",_hx_index:2,__enum__:"hxsl.VarQualifier",toString:$estr}
	,PerObject: {_hx_name:"PerObject",_hx_index:3,__enum__:"hxsl.VarQualifier",toString:$estr}
	,Name: ($_=function(n) { return {_hx_index:4,n:n,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_._hx_name="Name",$_.__params__ = ["n"],$_)
	,Shared: {_hx_name:"Shared",_hx_index:5,__enum__:"hxsl.VarQualifier",toString:$estr}
	,Precision: ($_=function(p) { return {_hx_index:6,p:p,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_._hx_name="Precision",$_.__params__ = ["p"],$_)
	,Range: ($_=function(min,max) { return {_hx_index:7,min:min,max:max,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_._hx_name="Range",$_.__params__ = ["min","max"],$_)
	,Ignore: {_hx_name:"Ignore",_hx_index:8,__enum__:"hxsl.VarQualifier",toString:$estr}
	,PerInstance: ($_=function(v) { return {_hx_index:9,v:v,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_._hx_name="PerInstance",$_.__params__ = ["v"],$_)
	,Doc: ($_=function(s) { return {_hx_index:10,s:s,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_._hx_name="Doc",$_.__params__ = ["s"],$_)
	,Borrow: ($_=function(source) { return {_hx_index:11,source:source,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_._hx_name="Borrow",$_.__params__ = ["source"],$_)
	,Sampler: ($_=function(name) { return {_hx_index:12,name:name,__enum__:"hxsl.VarQualifier",toString:$estr}; },$_._hx_name="Sampler",$_.__params__ = ["name"],$_)
};
hxsl_VarQualifier.__constructs__ = [hxsl_VarQualifier.Const,hxsl_VarQualifier.Private,hxsl_VarQualifier.Nullable,hxsl_VarQualifier.PerObject,hxsl_VarQualifier.Name,hxsl_VarQualifier.Shared,hxsl_VarQualifier.Precision,hxsl_VarQualifier.Range,hxsl_VarQualifier.Ignore,hxsl_VarQualifier.PerInstance,hxsl_VarQualifier.Doc,hxsl_VarQualifier.Borrow,hxsl_VarQualifier.Sampler];
hxsl_VarQualifier.__empty_constructs__ = [hxsl_VarQualifier.Private,hxsl_VarQualifier.Nullable,hxsl_VarQualifier.PerObject,hxsl_VarQualifier.Shared,hxsl_VarQualifier.Ignore];
var hxsl_Prec = $hxEnums["hxsl.Prec"] = { __ename__:"hxsl.Prec",__constructs__:null
	,Low: {_hx_name:"Low",_hx_index:0,__enum__:"hxsl.Prec",toString:$estr}
	,Medium: {_hx_name:"Medium",_hx_index:1,__enum__:"hxsl.Prec",toString:$estr}
	,High: {_hx_name:"High",_hx_index:2,__enum__:"hxsl.Prec",toString:$estr}
};
hxsl_Prec.__constructs__ = [hxsl_Prec.Low,hxsl_Prec.Medium,hxsl_Prec.High];
hxsl_Prec.__empty_constructs__ = [hxsl_Prec.Low,hxsl_Prec.Medium,hxsl_Prec.High];
var hxsl_Const = $hxEnums["hxsl.Const"] = { __ename__:"hxsl.Const",__constructs__:null
	,CNull: {_hx_name:"CNull",_hx_index:0,__enum__:"hxsl.Const",toString:$estr}
	,CBool: ($_=function(b) { return {_hx_index:1,b:b,__enum__:"hxsl.Const",toString:$estr}; },$_._hx_name="CBool",$_.__params__ = ["b"],$_)
	,CInt: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"hxsl.Const",toString:$estr}; },$_._hx_name="CInt",$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"hxsl.Const",toString:$estr}; },$_._hx_name="CFloat",$_.__params__ = ["v"],$_)
	,CString: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"hxsl.Const",toString:$estr}; },$_._hx_name="CString",$_.__params__ = ["v"],$_)
};
hxsl_Const.__constructs__ = [hxsl_Const.CNull,hxsl_Const.CBool,hxsl_Const.CInt,hxsl_Const.CFloat,hxsl_Const.CString];
hxsl_Const.__empty_constructs__ = [hxsl_Const.CNull];
var hxsl_TExprDef = $hxEnums["hxsl.TExprDef"] = { __ename__:"hxsl.TExprDef",__constructs__:null
	,TConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TConst",$_.__params__ = ["c"],$_)
	,TVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TVar",$_.__params__ = ["v"],$_)
	,TGlobal: ($_=function(g) { return {_hx_index:2,g:g,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TGlobal",$_.__params__ = ["g"],$_)
	,TParenthesis: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TParenthesis",$_.__params__ = ["e"],$_)
	,TBlock: ($_=function(el) { return {_hx_index:4,el:el,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TBlock",$_.__params__ = ["el"],$_)
	,TBinop: ($_=function(op,e1,e2) { return {_hx_index:5,op:op,e1:e1,e2:e2,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TBinop",$_.__params__ = ["op","e1","e2"],$_)
	,TUnop: ($_=function(op,e1) { return {_hx_index:6,op:op,e1:e1,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TUnop",$_.__params__ = ["op","e1"],$_)
	,TVarDecl: ($_=function(v,init) { return {_hx_index:7,v:v,init:init,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TVarDecl",$_.__params__ = ["v","init"],$_)
	,TCall: ($_=function(e,args) { return {_hx_index:8,e:e,args:args,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TCall",$_.__params__ = ["e","args"],$_)
	,TSwiz: ($_=function(e,regs) { return {_hx_index:9,e:e,regs:regs,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TSwiz",$_.__params__ = ["e","regs"],$_)
	,TIf: ($_=function(econd,eif,eelse) { return {_hx_index:10,econd:econd,eif:eif,eelse:eelse,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TIf",$_.__params__ = ["econd","eif","eelse"],$_)
	,TDiscard: {_hx_name:"TDiscard",_hx_index:11,__enum__:"hxsl.TExprDef",toString:$estr}
	,TReturn: ($_=function(e) { return {_hx_index:12,e:e,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TReturn",$_.__params__ = ["e"],$_)
	,TFor: ($_=function(v,it,loop) { return {_hx_index:13,v:v,it:it,loop:loop,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TFor",$_.__params__ = ["v","it","loop"],$_)
	,TContinue: {_hx_name:"TContinue",_hx_index:14,__enum__:"hxsl.TExprDef",toString:$estr}
	,TBreak: {_hx_name:"TBreak",_hx_index:15,__enum__:"hxsl.TExprDef",toString:$estr}
	,TArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TArray",$_.__params__ = ["e","index"],$_)
	,TArrayDecl: ($_=function(el) { return {_hx_index:17,el:el,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TArrayDecl",$_.__params__ = ["el"],$_)
	,TSwitch: ($_=function(e,cases,def) { return {_hx_index:18,e:e,cases:cases,def:def,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TSwitch",$_.__params__ = ["e","cases","def"],$_)
	,TWhile: ($_=function(e,loop,normalWhile) { return {_hx_index:19,e:e,loop:loop,normalWhile:normalWhile,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TWhile",$_.__params__ = ["e","loop","normalWhile"],$_)
	,TMeta: ($_=function(m,args,e) { return {_hx_index:20,m:m,args:args,e:e,__enum__:"hxsl.TExprDef",toString:$estr}; },$_._hx_name="TMeta",$_.__params__ = ["m","args","e"],$_)
};
hxsl_TExprDef.__constructs__ = [hxsl_TExprDef.TConst,hxsl_TExprDef.TVar,hxsl_TExprDef.TGlobal,hxsl_TExprDef.TParenthesis,hxsl_TExprDef.TBlock,hxsl_TExprDef.TBinop,hxsl_TExprDef.TUnop,hxsl_TExprDef.TVarDecl,hxsl_TExprDef.TCall,hxsl_TExprDef.TSwiz,hxsl_TExprDef.TIf,hxsl_TExprDef.TDiscard,hxsl_TExprDef.TReturn,hxsl_TExprDef.TFor,hxsl_TExprDef.TContinue,hxsl_TExprDef.TBreak,hxsl_TExprDef.TArray,hxsl_TExprDef.TArrayDecl,hxsl_TExprDef.TSwitch,hxsl_TExprDef.TWhile,hxsl_TExprDef.TMeta];
hxsl_TExprDef.__empty_constructs__ = [hxsl_TExprDef.TDiscard,hxsl_TExprDef.TContinue,hxsl_TExprDef.TBreak];
var hxsl_FunctionKind = $hxEnums["hxsl.FunctionKind"] = { __ename__:"hxsl.FunctionKind",__constructs__:null
	,Vertex: {_hx_name:"Vertex",_hx_index:0,__enum__:"hxsl.FunctionKind",toString:$estr}
	,Fragment: {_hx_name:"Fragment",_hx_index:1,__enum__:"hxsl.FunctionKind",toString:$estr}
	,Init: {_hx_name:"Init",_hx_index:2,__enum__:"hxsl.FunctionKind",toString:$estr}
	,Helper: {_hx_name:"Helper",_hx_index:3,__enum__:"hxsl.FunctionKind",toString:$estr}
};
hxsl_FunctionKind.__constructs__ = [hxsl_FunctionKind.Vertex,hxsl_FunctionKind.Fragment,hxsl_FunctionKind.Init,hxsl_FunctionKind.Helper];
hxsl_FunctionKind.__empty_constructs__ = [hxsl_FunctionKind.Vertex,hxsl_FunctionKind.Fragment,hxsl_FunctionKind.Init,hxsl_FunctionKind.Helper];
var hxsl_TGlobal = $hxEnums["hxsl.TGlobal"] = { __ename__:"hxsl.TGlobal",__constructs__:null
	,Radians: {_hx_name:"Radians",_hx_index:0,__enum__:"hxsl.TGlobal",toString:$estr}
	,Degrees: {_hx_name:"Degrees",_hx_index:1,__enum__:"hxsl.TGlobal",toString:$estr}
	,Sin: {_hx_name:"Sin",_hx_index:2,__enum__:"hxsl.TGlobal",toString:$estr}
	,Cos: {_hx_name:"Cos",_hx_index:3,__enum__:"hxsl.TGlobal",toString:$estr}
	,Tan: {_hx_name:"Tan",_hx_index:4,__enum__:"hxsl.TGlobal",toString:$estr}
	,Asin: {_hx_name:"Asin",_hx_index:5,__enum__:"hxsl.TGlobal",toString:$estr}
	,Acos: {_hx_name:"Acos",_hx_index:6,__enum__:"hxsl.TGlobal",toString:$estr}
	,Atan: {_hx_name:"Atan",_hx_index:7,__enum__:"hxsl.TGlobal",toString:$estr}
	,Pow: {_hx_name:"Pow",_hx_index:8,__enum__:"hxsl.TGlobal",toString:$estr}
	,Exp: {_hx_name:"Exp",_hx_index:9,__enum__:"hxsl.TGlobal",toString:$estr}
	,Log: {_hx_name:"Log",_hx_index:10,__enum__:"hxsl.TGlobal",toString:$estr}
	,Exp2: {_hx_name:"Exp2",_hx_index:11,__enum__:"hxsl.TGlobal",toString:$estr}
	,Log2: {_hx_name:"Log2",_hx_index:12,__enum__:"hxsl.TGlobal",toString:$estr}
	,Sqrt: {_hx_name:"Sqrt",_hx_index:13,__enum__:"hxsl.TGlobal",toString:$estr}
	,Inversesqrt: {_hx_name:"Inversesqrt",_hx_index:14,__enum__:"hxsl.TGlobal",toString:$estr}
	,Abs: {_hx_name:"Abs",_hx_index:15,__enum__:"hxsl.TGlobal",toString:$estr}
	,Sign: {_hx_name:"Sign",_hx_index:16,__enum__:"hxsl.TGlobal",toString:$estr}
	,Floor: {_hx_name:"Floor",_hx_index:17,__enum__:"hxsl.TGlobal",toString:$estr}
	,Ceil: {_hx_name:"Ceil",_hx_index:18,__enum__:"hxsl.TGlobal",toString:$estr}
	,Fract: {_hx_name:"Fract",_hx_index:19,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mod: {_hx_name:"Mod",_hx_index:20,__enum__:"hxsl.TGlobal",toString:$estr}
	,Min: {_hx_name:"Min",_hx_index:21,__enum__:"hxsl.TGlobal",toString:$estr}
	,Max: {_hx_name:"Max",_hx_index:22,__enum__:"hxsl.TGlobal",toString:$estr}
	,Clamp: {_hx_name:"Clamp",_hx_index:23,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mix: {_hx_name:"Mix",_hx_index:24,__enum__:"hxsl.TGlobal",toString:$estr}
	,Step: {_hx_name:"Step",_hx_index:25,__enum__:"hxsl.TGlobal",toString:$estr}
	,Smoothstep: {_hx_name:"Smoothstep",_hx_index:26,__enum__:"hxsl.TGlobal",toString:$estr}
	,Length: {_hx_name:"Length",_hx_index:27,__enum__:"hxsl.TGlobal",toString:$estr}
	,Distance: {_hx_name:"Distance",_hx_index:28,__enum__:"hxsl.TGlobal",toString:$estr}
	,Dot: {_hx_name:"Dot",_hx_index:29,__enum__:"hxsl.TGlobal",toString:$estr}
	,Cross: {_hx_name:"Cross",_hx_index:30,__enum__:"hxsl.TGlobal",toString:$estr}
	,Normalize: {_hx_name:"Normalize",_hx_index:31,__enum__:"hxsl.TGlobal",toString:$estr}
	,LReflect: {_hx_name:"LReflect",_hx_index:32,__enum__:"hxsl.TGlobal",toString:$estr}
	,Texture: {_hx_name:"Texture",_hx_index:33,__enum__:"hxsl.TGlobal",toString:$estr}
	,TextureLod: {_hx_name:"TextureLod",_hx_index:34,__enum__:"hxsl.TGlobal",toString:$estr}
	,Texel: {_hx_name:"Texel",_hx_index:35,__enum__:"hxsl.TGlobal",toString:$estr}
	,TextureSize: {_hx_name:"TextureSize",_hx_index:36,__enum__:"hxsl.TGlobal",toString:$estr}
	,ToInt: {_hx_name:"ToInt",_hx_index:37,__enum__:"hxsl.TGlobal",toString:$estr}
	,ToFloat: {_hx_name:"ToFloat",_hx_index:38,__enum__:"hxsl.TGlobal",toString:$estr}
	,ToBool: {_hx_name:"ToBool",_hx_index:39,__enum__:"hxsl.TGlobal",toString:$estr}
	,Vec2: {_hx_name:"Vec2",_hx_index:40,__enum__:"hxsl.TGlobal",toString:$estr}
	,Vec3: {_hx_name:"Vec3",_hx_index:41,__enum__:"hxsl.TGlobal",toString:$estr}
	,Vec4: {_hx_name:"Vec4",_hx_index:42,__enum__:"hxsl.TGlobal",toString:$estr}
	,IVec2: {_hx_name:"IVec2",_hx_index:43,__enum__:"hxsl.TGlobal",toString:$estr}
	,IVec3: {_hx_name:"IVec3",_hx_index:44,__enum__:"hxsl.TGlobal",toString:$estr}
	,IVec4: {_hx_name:"IVec4",_hx_index:45,__enum__:"hxsl.TGlobal",toString:$estr}
	,BVec2: {_hx_name:"BVec2",_hx_index:46,__enum__:"hxsl.TGlobal",toString:$estr}
	,BVec3: {_hx_name:"BVec3",_hx_index:47,__enum__:"hxsl.TGlobal",toString:$estr}
	,BVec4: {_hx_name:"BVec4",_hx_index:48,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mat2: {_hx_name:"Mat2",_hx_index:49,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mat3: {_hx_name:"Mat3",_hx_index:50,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mat4: {_hx_name:"Mat4",_hx_index:51,__enum__:"hxsl.TGlobal",toString:$estr}
	,Mat3x4: {_hx_name:"Mat3x4",_hx_index:52,__enum__:"hxsl.TGlobal",toString:$estr}
	,Saturate: {_hx_name:"Saturate",_hx_index:53,__enum__:"hxsl.TGlobal",toString:$estr}
	,Pack: {_hx_name:"Pack",_hx_index:54,__enum__:"hxsl.TGlobal",toString:$estr}
	,Unpack: {_hx_name:"Unpack",_hx_index:55,__enum__:"hxsl.TGlobal",toString:$estr}
	,PackNormal: {_hx_name:"PackNormal",_hx_index:56,__enum__:"hxsl.TGlobal",toString:$estr}
	,UnpackNormal: {_hx_name:"UnpackNormal",_hx_index:57,__enum__:"hxsl.TGlobal",toString:$estr}
	,ScreenToUv: {_hx_name:"ScreenToUv",_hx_index:58,__enum__:"hxsl.TGlobal",toString:$estr}
	,UvToScreen: {_hx_name:"UvToScreen",_hx_index:59,__enum__:"hxsl.TGlobal",toString:$estr}
	,DFdx: {_hx_name:"DFdx",_hx_index:60,__enum__:"hxsl.TGlobal",toString:$estr}
	,DFdy: {_hx_name:"DFdy",_hx_index:61,__enum__:"hxsl.TGlobal",toString:$estr}
	,Fwidth: {_hx_name:"Fwidth",_hx_index:62,__enum__:"hxsl.TGlobal",toString:$estr}
	,ChannelRead: {_hx_name:"ChannelRead",_hx_index:63,__enum__:"hxsl.TGlobal",toString:$estr}
	,ChannelReadLod: {_hx_name:"ChannelReadLod",_hx_index:64,__enum__:"hxsl.TGlobal",toString:$estr}
	,ChannelFetch: {_hx_name:"ChannelFetch",_hx_index:65,__enum__:"hxsl.TGlobal",toString:$estr}
	,ChannelTextureSize: {_hx_name:"ChannelTextureSize",_hx_index:66,__enum__:"hxsl.TGlobal",toString:$estr}
	,Trace: {_hx_name:"Trace",_hx_index:67,__enum__:"hxsl.TGlobal",toString:$estr}
	,VertexID: {_hx_name:"VertexID",_hx_index:68,__enum__:"hxsl.TGlobal",toString:$estr}
	,InstanceID: {_hx_name:"InstanceID",_hx_index:69,__enum__:"hxsl.TGlobal",toString:$estr}
	,FragCoord: {_hx_name:"FragCoord",_hx_index:70,__enum__:"hxsl.TGlobal",toString:$estr}
	,FrontFacing: {_hx_name:"FrontFacing",_hx_index:71,__enum__:"hxsl.TGlobal",toString:$estr}
};
hxsl_TGlobal.__constructs__ = [hxsl_TGlobal.Radians,hxsl_TGlobal.Degrees,hxsl_TGlobal.Sin,hxsl_TGlobal.Cos,hxsl_TGlobal.Tan,hxsl_TGlobal.Asin,hxsl_TGlobal.Acos,hxsl_TGlobal.Atan,hxsl_TGlobal.Pow,hxsl_TGlobal.Exp,hxsl_TGlobal.Log,hxsl_TGlobal.Exp2,hxsl_TGlobal.Log2,hxsl_TGlobal.Sqrt,hxsl_TGlobal.Inversesqrt,hxsl_TGlobal.Abs,hxsl_TGlobal.Sign,hxsl_TGlobal.Floor,hxsl_TGlobal.Ceil,hxsl_TGlobal.Fract,hxsl_TGlobal.Mod,hxsl_TGlobal.Min,hxsl_TGlobal.Max,hxsl_TGlobal.Clamp,hxsl_TGlobal.Mix,hxsl_TGlobal.Step,hxsl_TGlobal.Smoothstep,hxsl_TGlobal.Length,hxsl_TGlobal.Distance,hxsl_TGlobal.Dot,hxsl_TGlobal.Cross,hxsl_TGlobal.Normalize,hxsl_TGlobal.LReflect,hxsl_TGlobal.Texture,hxsl_TGlobal.TextureLod,hxsl_TGlobal.Texel,hxsl_TGlobal.TextureSize,hxsl_TGlobal.ToInt,hxsl_TGlobal.ToFloat,hxsl_TGlobal.ToBool,hxsl_TGlobal.Vec2,hxsl_TGlobal.Vec3,hxsl_TGlobal.Vec4,hxsl_TGlobal.IVec2,hxsl_TGlobal.IVec3,hxsl_TGlobal.IVec4,hxsl_TGlobal.BVec2,hxsl_TGlobal.BVec3,hxsl_TGlobal.BVec4,hxsl_TGlobal.Mat2,hxsl_TGlobal.Mat3,hxsl_TGlobal.Mat4,hxsl_TGlobal.Mat3x4,hxsl_TGlobal.Saturate,hxsl_TGlobal.Pack,hxsl_TGlobal.Unpack,hxsl_TGlobal.PackNormal,hxsl_TGlobal.UnpackNormal,hxsl_TGlobal.ScreenToUv,hxsl_TGlobal.UvToScreen,hxsl_TGlobal.DFdx,hxsl_TGlobal.DFdy,hxsl_TGlobal.Fwidth,hxsl_TGlobal.ChannelRead,hxsl_TGlobal.ChannelReadLod,hxsl_TGlobal.ChannelFetch,hxsl_TGlobal.ChannelTextureSize,hxsl_TGlobal.Trace,hxsl_TGlobal.VertexID,hxsl_TGlobal.InstanceID,hxsl_TGlobal.FragCoord,hxsl_TGlobal.FrontFacing];
hxsl_TGlobal.__empty_constructs__ = [hxsl_TGlobal.Radians,hxsl_TGlobal.Degrees,hxsl_TGlobal.Sin,hxsl_TGlobal.Cos,hxsl_TGlobal.Tan,hxsl_TGlobal.Asin,hxsl_TGlobal.Acos,hxsl_TGlobal.Atan,hxsl_TGlobal.Pow,hxsl_TGlobal.Exp,hxsl_TGlobal.Log,hxsl_TGlobal.Exp2,hxsl_TGlobal.Log2,hxsl_TGlobal.Sqrt,hxsl_TGlobal.Inversesqrt,hxsl_TGlobal.Abs,hxsl_TGlobal.Sign,hxsl_TGlobal.Floor,hxsl_TGlobal.Ceil,hxsl_TGlobal.Fract,hxsl_TGlobal.Mod,hxsl_TGlobal.Min,hxsl_TGlobal.Max,hxsl_TGlobal.Clamp,hxsl_TGlobal.Mix,hxsl_TGlobal.Step,hxsl_TGlobal.Smoothstep,hxsl_TGlobal.Length,hxsl_TGlobal.Distance,hxsl_TGlobal.Dot,hxsl_TGlobal.Cross,hxsl_TGlobal.Normalize,hxsl_TGlobal.LReflect,hxsl_TGlobal.Texture,hxsl_TGlobal.TextureLod,hxsl_TGlobal.Texel,hxsl_TGlobal.TextureSize,hxsl_TGlobal.ToInt,hxsl_TGlobal.ToFloat,hxsl_TGlobal.ToBool,hxsl_TGlobal.Vec2,hxsl_TGlobal.Vec3,hxsl_TGlobal.Vec4,hxsl_TGlobal.IVec2,hxsl_TGlobal.IVec3,hxsl_TGlobal.IVec4,hxsl_TGlobal.BVec2,hxsl_TGlobal.BVec3,hxsl_TGlobal.BVec4,hxsl_TGlobal.Mat2,hxsl_TGlobal.Mat3,hxsl_TGlobal.Mat4,hxsl_TGlobal.Mat3x4,hxsl_TGlobal.Saturate,hxsl_TGlobal.Pack,hxsl_TGlobal.Unpack,hxsl_TGlobal.PackNormal,hxsl_TGlobal.UnpackNormal,hxsl_TGlobal.ScreenToUv,hxsl_TGlobal.UvToScreen,hxsl_TGlobal.DFdx,hxsl_TGlobal.DFdy,hxsl_TGlobal.Fwidth,hxsl_TGlobal.ChannelRead,hxsl_TGlobal.ChannelReadLod,hxsl_TGlobal.ChannelFetch,hxsl_TGlobal.ChannelTextureSize,hxsl_TGlobal.Trace,hxsl_TGlobal.VertexID,hxsl_TGlobal.InstanceID,hxsl_TGlobal.FragCoord,hxsl_TGlobal.FrontFacing];
var hxsl_Component = $hxEnums["hxsl.Component"] = { __ename__:"hxsl.Component",__constructs__:null
	,X: {_hx_name:"X",_hx_index:0,__enum__:"hxsl.Component",toString:$estr}
	,Y: {_hx_name:"Y",_hx_index:1,__enum__:"hxsl.Component",toString:$estr}
	,Z: {_hx_name:"Z",_hx_index:2,__enum__:"hxsl.Component",toString:$estr}
	,W: {_hx_name:"W",_hx_index:3,__enum__:"hxsl.Component",toString:$estr}
};
hxsl_Component.__constructs__ = [hxsl_Component.X,hxsl_Component.Y,hxsl_Component.Z,hxsl_Component.W];
hxsl_Component.__empty_constructs__ = [hxsl_Component.X,hxsl_Component.Y,hxsl_Component.Z,hxsl_Component.W];
var hxsl_Tools = function() { };
$hxClasses["hxsl.Tools"] = hxsl_Tools;
hxsl_Tools.__name__ = "hxsl.Tools";
hxsl_Tools.allocVarId = function() {
	return ++hxsl_Tools.UID;
};
hxsl_Tools.getName = function(v) {
	if(v.qualifiers == null) {
		return v.name;
	}
	var _g = 0;
	var _g1 = v.qualifiers;
	while(_g < _g1.length) {
		var q = _g1[_g];
		++_g;
		if(q._hx_index == 4) {
			var n = q.n;
			return n;
		}
	}
	return v.name;
};
hxsl_Tools.getConstBits = function(v) {
	var _g = v.type;
	switch(_g._hx_index) {
	case 1:
		var _g1 = 0;
		var _g2 = v.qualifiers;
		while(_g1 < _g2.length) {
			var q = _g2[_g1];
			++_g1;
			if(q._hx_index == 0) {
				var n = q.max;
				if(n != null) {
					var bits = 0;
					while(n >= 1 << bits) ++bits;
					return bits;
				}
				return 8;
			}
		}
		break;
	case 2:
		return 1;
	case 17:
		var _g1 = _g.size;
		return 3 + hxsl_Tools.MAX_CHANNELS_BITS;
	default:
	}
	return 0;
};
hxsl_Tools.isConst = function(v) {
	var _g = v.type;
	var tmp;
	if(_g._hx_index == 17) {
		var _g1 = _g.size;
		tmp = true;
	} else {
		tmp = false;
	}
	if(tmp) {
		return true;
	}
	if(v.qualifiers != null) {
		var _g = 0;
		var _g1 = v.qualifiers;
		while(_g < _g1.length) {
			var q = _g1[_g];
			++_g;
			if(q._hx_index == 0) {
				var _g2 = q.max;
				return true;
			}
		}
	}
	return false;
};
hxsl_Tools.hasQualifier = function(v,q) {
	if(v.qualifiers != null) {
		var _g = 0;
		var _g1 = v.qualifiers;
		while(_g < _g1.length) {
			var q2 = _g1[_g];
			++_g;
			if(q2 == q) {
				return true;
			}
		}
	}
	return false;
};
hxsl_Tools.hasBorrowQualifier = function(v,path) {
	if(v.qualifiers != null) {
		var _g = 0;
		var _g1 = v.qualifiers;
		while(_g < _g1.length) {
			var q = _g1[_g];
			++_g;
			if(q._hx_index == 11) {
				var s = q.source;
				return path == s;
			}
		}
	}
	return false;
};
hxsl_Tools.isSampler = function(t) {
	switch(t._hx_index) {
	case 10:case 11:case 12:
		return true;
	case 17:
		var _g = t.size;
		return true;
	default:
		return false;
	}
};
hxsl_Tools.toString = function(t) {
	switch(t._hx_index) {
	case 5:
		var size = t.size;
		var t1 = t.t;
		var prefix;
		switch(t1._hx_index) {
		case 0:
			prefix = "I";
			break;
		case 1:
			prefix = "";
			break;
		case 2:
			prefix = "B";
			break;
		}
		return prefix + "Vec" + size;
	case 9:
		var n = t.size;
		return "Bytes" + n;
	case 13:
		var vl = t.vl;
		var _g = [];
		var _g1 = 0;
		while(_g1 < vl.length) {
			var v = vl[_g1];
			++_g1;
			_g.push(v.name + " : " + hxsl_Tools.toString(v.type));
		}
		return "{" + _g.join(",") + "}";
	case 15:
		var t1 = t.t;
		var s = t.size;
		var tmp = hxsl_Tools.toString(t1) + "[";
		var tmp1;
		switch(s._hx_index) {
		case 0:
			var i = s.v;
			tmp1 = "" + i;
			break;
		case 1:
			var v = s.v;
			tmp1 = v.name;
			break;
		}
		return tmp + tmp1 + "]";
	case 16:
		var t1 = t.t;
		var s = t.size;
		var tmp = "buffer " + hxsl_Tools.toString(t1) + "[";
		var tmp1;
		switch(s._hx_index) {
		case 0:
			var i = s.v;
			tmp1 = "" + i;
			break;
		case 1:
			var v = s.v;
			tmp1 = v.name;
			break;
		}
		return tmp + tmp1 + "]";
	default:
		return HxOverrides.substr($hxEnums[t.__enum__].__constructs__[t._hx_index]._hx_name,1,null);
	}
};
hxsl_Tools.hasSideEffect = function(e) {
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.c;
		return false;
	case 1:
		var _g1 = _g.v;
		return false;
	case 2:
		var _g1 = _g.g;
		return false;
	case 3:
		var e = _g.e;
		return hxsl_Tools.hasSideEffect(e);
	case 4:
		var el = _g.el;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			if(hxsl_Tools.hasSideEffect(e)) {
				return true;
			}
		}
		return false;
	case 5:
		var _g1 = _g.op;
		var _g2 = _g.e1;
		var _g3 = _g.e2;
		switch(_g1._hx_index) {
		case 4:
			return true;
		case 20:
			var _g4 = _g1.op;
			return true;
		default:
			var e1 = _g2;
			var e2 = _g3;
			if(!hxsl_Tools.hasSideEffect(e1)) {
				return hxsl_Tools.hasSideEffect(e2);
			} else {
				return true;
			}
		}
		break;
	case 6:
		var _g1 = _g.op;
		var e1 = _g.e1;
		return hxsl_Tools.hasSideEffect(e1);
	case 7:
		var _g1 = _g.v;
		var _g1 = _g.init;
		return true;
	case 8:
		var e = _g.e;
		var pl = _g.args;
		var _g1 = e.e;
		var tmp;
		if(_g1._hx_index == 2) {
			var _g2 = _g1.g;
			tmp = true;
		} else {
			tmp = false;
		}
		if(!tmp) {
			return true;
		}
		var _g1 = 0;
		while(_g1 < pl.length) {
			var p = pl[_g1];
			++_g1;
			if(hxsl_Tools.hasSideEffect(p)) {
				return true;
			}
		}
		return false;
	case 9:
		var _g1 = _g.regs;
		var e = _g.e;
		return hxsl_Tools.hasSideEffect(e);
	case 10:
		var econd = _g.econd;
		var eif = _g.eif;
		var eelse = _g.eelse;
		if(!(hxsl_Tools.hasSideEffect(econd) || hxsl_Tools.hasSideEffect(eif))) {
			if(eelse != null) {
				return hxsl_Tools.hasSideEffect(eelse);
			} else {
				return false;
			}
		} else {
			return true;
		}
		break;
	case 12:
		var _g1 = _g.e;
		return true;
	case 13:
		var _g1 = _g.v;
		var it = _g.it;
		var loop = _g.loop;
		if(!hxsl_Tools.hasSideEffect(it)) {
			return hxsl_Tools.hasSideEffect(loop);
		} else {
			return true;
		}
		break;
	case 11:case 14:case 15:
		return true;
	case 16:
		var e = _g.e;
		var index = _g.index;
		if(!hxsl_Tools.hasSideEffect(e)) {
			return hxsl_Tools.hasSideEffect(index);
		} else {
			return true;
		}
		break;
	case 17:
		var el = _g.el;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			if(hxsl_Tools.hasSideEffect(e)) {
				return true;
			}
		}
		return false;
	case 18:
		var e = _g.e;
		var cases = _g.cases;
		var def = _g.def;
		var _g1 = 0;
		while(_g1 < cases.length) {
			var c = cases[_g1];
			++_g1;
			var _g2 = 0;
			var _g3 = c.values;
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				if(hxsl_Tools.hasSideEffect(v)) {
					return true;
				}
			}
			if(hxsl_Tools.hasSideEffect(c.expr)) {
				return true;
			}
		}
		if(!hxsl_Tools.hasSideEffect(e)) {
			if(def != null) {
				return hxsl_Tools.hasSideEffect(def);
			} else {
				return false;
			}
		} else {
			return true;
		}
		break;
	case 19:
		var _g1 = _g.normalWhile;
		var e = _g.e;
		var loop = _g.loop;
		if(!hxsl_Tools.hasSideEffect(e)) {
			return hxsl_Tools.hasSideEffect(loop);
		} else {
			return true;
		}
		break;
	case 20:
		var _g1 = _g.m;
		var _g1 = _g.args;
		var e = _g.e;
		return hxsl_Tools.hasSideEffect(e);
	}
};
hxsl_Tools.iter = function(e,f) {
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.c;
		break;
	case 1:
		var _g1 = _g.v;
		break;
	case 2:
		var _g1 = _g.g;
		break;
	case 3:
		var e = _g.e;
		f(e);
		break;
	case 4:
		var el = _g.el;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			f(e);
		}
		break;
	case 5:
		var _g1 = _g.op;
		var e1 = _g.e1;
		var e2 = _g.e2;
		f(e1);
		f(e2);
		break;
	case 6:
		var _g1 = _g.op;
		var e1 = _g.e1;
		f(e1);
		break;
	case 7:
		var _g1 = _g.v;
		var init = _g.init;
		if(init != null) {
			f(init);
		}
		break;
	case 8:
		var e = _g.e;
		var args = _g.args;
		f(e);
		var _g1 = 0;
		while(_g1 < args.length) {
			var a = args[_g1];
			++_g1;
			f(a);
		}
		break;
	case 9:
		var _g1 = _g.regs;
		var e = _g.e;
		f(e);
		break;
	case 10:
		var econd = _g.econd;
		var eif = _g.eif;
		var eelse = _g.eelse;
		f(econd);
		f(eif);
		if(eelse != null) {
			f(eelse);
		}
		break;
	case 12:
		var e = _g.e;
		if(e != null) {
			f(e);
		}
		break;
	case 13:
		var _g1 = _g.v;
		var it = _g.it;
		var loop = _g.loop;
		f(it);
		f(loop);
		break;
	case 11:case 14:case 15:
		break;
	case 16:
		var e = _g.e;
		var index = _g.index;
		f(e);
		f(index);
		break;
	case 17:
		var el = _g.el;
		var _g1 = 0;
		while(_g1 < el.length) {
			var e = el[_g1];
			++_g1;
			f(e);
		}
		break;
	case 18:
		var e = _g.e;
		var cases = _g.cases;
		var def = _g.def;
		f(e);
		var _g1 = 0;
		while(_g1 < cases.length) {
			var c = cases[_g1];
			++_g1;
			var _g2 = 0;
			var _g3 = c.values;
			while(_g2 < _g3.length) {
				var v = _g3[_g2];
				++_g2;
				f(v);
			}
			f(c.expr);
		}
		if(def != null) {
			f(def);
		}
		break;
	case 19:
		var _g1 = _g.normalWhile;
		var e = _g.e;
		var loop = _g.loop;
		f(e);
		f(loop);
		break;
	case 20:
		var _g1 = _g.m;
		var _g1 = _g.args;
		var e = _g.e;
		f(e);
		break;
	}
};
hxsl_Tools.map = function(e,f) {
	var ed;
	var _g = e.e;
	switch(_g._hx_index) {
	case 0:
		var _g1 = _g.c;
		ed = e.e;
		break;
	case 1:
		var _g1 = _g.v;
		ed = e.e;
		break;
	case 2:
		var _g1 = _g.g;
		ed = e.e;
		break;
	case 3:
		var e1 = _g.e;
		ed = hxsl_TExprDef.TParenthesis(f(e1));
		break;
	case 4:
		var el = _g.el;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < el.length) {
			var e1 = el[_g2];
			++_g2;
			_g1.push(f(e1));
		}
		ed = hxsl_TExprDef.TBlock(_g1);
		break;
	case 5:
		var op = _g.op;
		var e1 = _g.e1;
		var e2 = _g.e2;
		ed = hxsl_TExprDef.TBinop(op,f(e1),f(e2));
		break;
	case 6:
		var op = _g.op;
		var e1 = _g.e1;
		ed = hxsl_TExprDef.TUnop(op,f(e1));
		break;
	case 7:
		var v = _g.v;
		var init = _g.init;
		ed = hxsl_TExprDef.TVarDecl(v,init != null ? f(init) : null);
		break;
	case 8:
		var e1 = _g.e;
		var args = _g.args;
		var ed1 = f(e1);
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < args.length) {
			var a = args[_g2];
			++_g2;
			_g1.push(f(a));
		}
		ed = hxsl_TExprDef.TCall(ed1,_g1);
		break;
	case 9:
		var e1 = _g.e;
		var c = _g.regs;
		ed = hxsl_TExprDef.TSwiz(f(e1),c);
		break;
	case 10:
		var econd = _g.econd;
		var eif = _g.eif;
		var eelse = _g.eelse;
		ed = hxsl_TExprDef.TIf(f(econd),f(eif),eelse != null ? f(eelse) : null);
		break;
	case 12:
		var e1 = _g.e;
		ed = hxsl_TExprDef.TReturn(e1 != null ? f(e1) : null);
		break;
	case 13:
		var v = _g.v;
		var it = _g.it;
		var loop = _g.loop;
		ed = hxsl_TExprDef.TFor(v,f(it),f(loop));
		break;
	case 11:case 14:case 15:
		ed = e.e;
		break;
	case 16:
		var e1 = _g.e;
		var index = _g.index;
		ed = hxsl_TExprDef.TArray(f(e1),f(index));
		break;
	case 17:
		var el = _g.el;
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < el.length) {
			var e1 = el[_g2];
			++_g2;
			_g1.push(f(e1));
		}
		ed = hxsl_TExprDef.TArrayDecl(_g1);
		break;
	case 18:
		var e1 = _g.e;
		var cases = _g.cases;
		var def = _g.def;
		var ed1 = f(e1);
		var _g1 = [];
		var _g2 = 0;
		while(_g2 < cases.length) {
			var c = cases[_g2];
			++_g2;
			var _g3 = [];
			var _g4 = 0;
			var _g5 = c.values;
			while(_g4 < _g5.length) {
				var v = _g5[_g4];
				++_g4;
				_g3.push(f(v));
			}
			_g1.push({ values : _g3, expr : f(c.expr)});
		}
		ed = hxsl_TExprDef.TSwitch(ed1,_g1,def == null ? null : f(def));
		break;
	case 19:
		var e1 = _g.e;
		var loop = _g.loop;
		var normalWhile = _g.normalWhile;
		ed = hxsl_TExprDef.TWhile(f(e1),f(loop),normalWhile);
		break;
	case 20:
		var m = _g.m;
		var args = _g.args;
		var e1 = _g.e;
		ed = hxsl_TExprDef.TMeta(m,args,f(e1));
		break;
	}
	return { e : ed, t : e.t, p : e.p};
};
hxsl_Tools.size = function(t) {
	switch(t._hx_index) {
	case 0:
		return 0;
	case 1:case 3:
		return 1;
	case 5:
		var _g = t.t;
		var n = t.size;
		return n;
	case 6:
		return 9;
	case 7:
		return 16;
	case 8:
		return 12;
	case 9:
		var s = t.size;
		return s;
	case 2:case 4:case 10:case 11:case 12:
		return 0;
	case 13:
		var vl = t.vl;
		var s = 0;
		var _g = 0;
		while(_g < vl.length) {
			var v = vl[_g];
			++_g;
			s += hxsl_Tools.size(v.type);
		}
		return s;
	case 14:
		var _g = t.variants;
		return 0;
	case 15:
		var _g = t.t;
		var _g1 = t.size;
		switch(_g1._hx_index) {
		case 0:
			var v = _g1.v;
			var t1 = _g;
			return hxsl_Tools.size(t1) * v;
		case 1:
			var _g = _g1.v;
			return 0;
		}
		break;
	case 16:
		var _g = t.size;
		if(_g._hx_index == 0) {
			var v = _g.v;
			var t1 = t.t;
			return hxsl_Tools.size(t1) * v;
		} else {
			return 0;
		}
		break;
	case 17:
		var n = t.size;
		return n;
	case 18:
		return 4;
	}
};
var hxsl_Tools2 = function() { };
$hxClasses["hxsl.Tools2"] = hxsl_Tools2;
hxsl_Tools2.__name__ = "hxsl.Tools2";
hxsl_Tools2.toString = function(g) {
	var n = $hxEnums[g.__enum__].__constructs__[g._hx_index]._hx_name;
	return n.charAt(0).toLowerCase() + HxOverrides.substr(n,1,null);
};
var hxsl_BatchShader = function() {
	this.Batch_Count__ = 0;
	hxsl_Shader.call(this);
};
$hxClasses["hxsl.BatchShader"] = hxsl_BatchShader;
hxsl_BatchShader.__name__ = "hxsl.BatchShader";
hxsl_BatchShader.__super__ = hxsl_Shader;
hxsl_BatchShader.prototype = $extend(hxsl_Shader.prototype,{
	Batch_HasOffset__: null
	,get_Batch_HasOffset: function() {
		return this.Batch_HasOffset__;
	}
	,set_Batch_HasOffset: function(_v) {
		this.constModified = true;
		return this.Batch_HasOffset__ = _v;
	}
	,Batch_Count__: null
	,get_Batch_Count: function() {
		return this.Batch_Count__;
	}
	,set_Batch_Count: function(_v) {
		this.constModified = true;
		return this.Batch_Count__ = _v;
	}
	,Batch_Buffer__: null
	,get_Batch_Buffer: function() {
		return this.Batch_Buffer__;
	}
	,set_Batch_Buffer: function(_v) {
		return this.Batch_Buffer__ = _v;
	}
	,updateConstants: function(globals) {
		this.constBits = 0;
		if(this.Batch_HasOffset__) {
			this.constBits |= 1;
		}
		var v = this.Batch_Count__;
		if(v >>> 17 != 0) {
			throw haxe_Exception.thrown("Batch_Count" + " is out of range " + v + ">" + 131071);
		}
		this.constBits |= v << 1;
		this.updateConstantsFinal(globals);
	}
	,getParamValue: function(index) {
		switch(index) {
		case 0:
			return this.Batch_HasOffset__;
		case 1:
			return this.Batch_Count__;
		case 2:
			return this.Batch_Buffer__;
		default:
		}
		return null;
	}
	,getParamFloatValue: function(index) {
		return 0.;
	}
	,__class__: hxsl_BatchShader
	,__properties__: {set_Batch_Buffer:"set_Batch_Buffer",get_Batch_Buffer:"get_Batch_Buffer",set_Batch_Count:"set_Batch_Count",get_Batch_Count:"get_Batch_Count",set_Batch_HasOffset:"set_Batch_HasOffset",get_Batch_HasOffset:"get_Batch_HasOffset"}
});
var hxsl_SearchMap = function() {
	this.minId = 0;
	this.nexts = [];
};
$hxClasses["hxsl.SearchMap"] = hxsl_SearchMap;
hxsl_SearchMap.__name__ = "hxsl.SearchMap";
hxsl_SearchMap.prototype = {
	linked: null
	,nexts: null
	,minId: null
	,set: function(id,s) {
		if(this.minId == 0) {
			this.minId = id;
			this.nexts = [s];
			return;
		}
		var offset = id - this.minId;
		if(offset < 0) {
			var n = [];
			var _g = 0;
			var _g1 = this.nexts.length;
			while(_g < _g1) {
				var i = _g++;
				n[i - offset] = this.nexts[i];
			}
			this.nexts = n;
			this.minId += offset;
			offset = 0;
		}
		this.nexts[offset] = s;
	}
	,__class__: hxsl_SearchMap
};
var hxsl_Cache = function() {
	this.constsToGlobal = false;
	this.linkCache = new hxsl_SearchMap();
	this.linkShaders = new haxe_ds_StringMap();
	this.batchShaders = new haxe_ds_ObjectMap();
	this.batchShadersParams = new haxe_ds_StringMap();
	this.byID = new haxe_ds_StringMap();
};
$hxClasses["hxsl.Cache"] = hxsl_Cache;
hxsl_Cache.__name__ = "hxsl.Cache";
hxsl_Cache.get = function() {
	var c = hxsl_Cache.INST;
	if(c == null) {
		c = new hxsl_Cache();
		hxsl_Cache.INST = c;
	}
	return c;
};
hxsl_Cache.prototype = {
	linkCache: null
	,linkShaders: null
	,batchShaders: null
	,byID: null
	,batchShadersParams: null
	,constsToGlobal: null
	,getLinkShader: function(vars) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < vars.length) {
			var v = vars[_g1];
			++_g1;
			_g.push(Std.string(v));
		}
		var key = _g.join(",");
		var shader = this.linkShaders.h[key];
		if(shader != null) {
			return shader;
		}
		var s = new hxsl_SharedShader("");
		var id = HxOverrides.substr(haxe_crypto_Md5.encode(key),0,8);
		s.data = { name : "shaderLinker_" + id, vars : [], funs : []};
		var pos = null;
		var outVars_h = Object.create(null);
		var outputCount = 0;
		var tvec4 = hxsl_Type.TVec(4,hxsl_VecType.VFloat);
		var makeVec = function(g,size,args,makeOutExpr) {
			var out = [];
			var rem = size;
			var _g = 0;
			var _g1 = args.length;
			while(_g < _g1) {
				var i = _g++;
				var e = makeOutExpr(args[args.length - 1 - i],rem - (args.length - 1 - i));
				rem -= hxsl_Tools.size(e.t);
				out.unshift(e);
			}
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(g), t : hxsl_Type.TVoid, p : pos},out), t : hxsl_Type.TVec(size,hxsl_VecType.VFloat), p : pos};
		};
		var makeVar = function(name,t,parent) {
			var path = parent == null ? name : hxsl_Tools.getName(parent) + "." + name;
			var v = outVars_h[path];
			if(v != null) {
				return v;
			}
			v = { id : hxsl_Tools.allocVarId(), name : name, type : t, kind : hxsl_VarKind.Var, parent : parent};
			if(parent == null) {
				s.data.vars.push(v);
			} else {
				var _g = parent.type;
				if(_g._hx_index == 13) {
					var vl = _g.vl;
					vl.push(v);
				} else {
					throw haxe_Exception.thrown("assert");
				}
			}
			outVars_h[path] = v;
			return v;
		};
		var makeOutExpr = null;
		makeOutExpr = function(v,rem) {
			switch(v._hx_index) {
			case 0:
				var v1 = v.v;
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CFloat(v1)), t : hxsl_Type.TFloat, p : pos};
			case 1:
				var vname = v.v;
				var size = v.size;
				var v1 = outVars_h[vname];
				if(v1 != null) {
					return { e : hxsl_TExprDef.TVar(v1), t : v1.type, p : pos};
				}
				var path = vname.split(".");
				var parent = null;
				while(path.length > 1) parent = makeVar(path.shift(),hxsl_Type.TStruct([]),parent);
				if(size != null) {
					rem = size;
				}
				v1 = makeVar(path.shift(),rem == 1 ? hxsl_Type.TFloat : hxsl_Type.TVec(rem,hxsl_VecType.VFloat),parent);
				return { e : hxsl_TExprDef.TVar(v1), t : v1.type, p : pos};
			case 2:
				var v1 = v.v;
				return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.PackNormal), t : hxsl_Type.TVoid, p : pos},[makeOutExpr(v1,3)]), t : tvec4, p : pos};
			case 3:
				var v1 = v.v;
				return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Pack), t : hxsl_Type.TVoid, p : pos},[makeOutExpr(v1,1)]), t : tvec4, p : pos};
			case 4:
				var args = v.a;
				return makeVec(hxsl_TGlobal.Vec2,2,args,makeOutExpr);
			case 5:
				var args = v.a;
				return makeVec(hxsl_TGlobal.Vec3,3,args,makeOutExpr);
			case 6:
				var args = v.a;
				return makeVec(hxsl_TGlobal.Vec4,4,args,makeOutExpr);
			case 7:
				var v1 = v.a;
				var comps = v.swiz;
				return { e : hxsl_TExprDef.TSwiz(makeOutExpr(v1,4),comps), t : hxsl_Type.TVec(comps.length,hxsl_VecType.VFloat), p : pos};
			}
		};
		var makeOutput = function(v) {
			outputCount += 1;
			var ov = { id : hxsl_Tools.allocVarId(), type : tvec4, name : "OUTPUT" + (outputCount - 1), kind : hxsl_VarKind.Output};
			s.data.vars.push(ov);
			return { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAssign,{ e : hxsl_TExprDef.TVar(ov), t : tvec4, p : pos},makeOutExpr(v,4)), t : hxsl_Type.TVoid, p : pos};
		};
		var defineFun = function(kind,vars) {
			var fv = { id : hxsl_Tools.allocVarId(), type : hxsl_Type.TFun([]), name : ("" + Std.string(kind)).toLowerCase(), kind : hxsl_VarKind.Function};
			var _g = [];
			var _g1 = 0;
			while(_g1 < vars.length) {
				var v = vars[_g1];
				++_g1;
				_g.push(makeOutput(v));
			}
			var f = { kind : kind, ref : fv, args : [], ret : hxsl_Type.TVoid, expr : { e : hxsl_TExprDef.TBlock(_g), p : pos, t : hxsl_Type.TVoid}};
			s.data.funs.push(f);
		};
		defineFun(hxsl_FunctionKind.Vertex,[hxsl_Output.Value("output.position")]);
		defineFun(hxsl_FunctionKind.Fragment,vars);
		shader = Object.create(hxsl_Shader.prototype);
		shader.shader = s;
		this.linkShaders.h[key] = shader;
		shader.updateConstantsFinal(null);
		return shader;
	}
	,link: function(shaders,batchMode) {
		var c = this.linkCache;
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			var s1 = s;
			var i = s1.instance;
			var cs = c.nexts[i.id - c.minId];
			if(cs == null) {
				cs = new hxsl_SearchMap();
				c.set(i.id,cs);
			}
			c = cs;
		}
		if(c.linked == null) {
			c.linked = this.compileRuntimeShader(shaders,batchMode);
		}
		return c.linked;
	}
	,compileRuntimeShader: function(shaders,batchMode) {
		var shaderDatas = [];
		var index = 0;
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			var s1 = s;
			var i = s1.instance;
			shaderDatas.push({ inst : i, p : s1.priority, index : index++});
		}
		shaderDatas.reverse();
		haxe_ds_ArraySort.sort(shaderDatas,function(s1,s2) {
			return s2.p - s1.p;
		});
		var linker = new hxsl_Linker(batchMode);
		var s;
		try {
			var _g = [];
			var _g1 = 0;
			while(_g1 < shaderDatas.length) {
				var s1 = shaderDatas[_g1];
				++_g1;
				_g.push(s1.inst.shader);
			}
			s = linker.link(_g);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof hxsl_Error)) {
				var e = _g1;
				var _g1 = [];
				var _g2 = 0;
				while(_g2 < shaderDatas.length) {
					var s1 = shaderDatas[_g2];
					++_g2;
					_g1.push(hxsl_Printer.shaderToString(s1.inst.shader));
				}
				var shaders1 = _g1;
				e.msg += "\n\nin\n\n" + shaders1.join("\n-----\n");
				throw haxe_Exception.thrown(e);
			} else {
				throw _g;
			}
		}
		if(batchMode) {
			var checkRec = null;
			checkRec = function(v) {
				if(v.qualifiers != null && v.qualifiers.indexOf(hxsl_VarQualifier.PerObject) >= 0) {
					if(v.qualifiers.length == 1) {
						v.qualifiers = null;
					} else {
						v.qualifiers = v.qualifiers.slice();
						HxOverrides.remove(v.qualifiers,hxsl_VarQualifier.PerObject);
					}
					if(v.kind != hxsl_VarKind.Var) {
						v.kind = hxsl_VarKind.Local;
					}
				}
				var _g = v.type;
				if(_g._hx_index == 13) {
					var vl = _g.vl;
					var _g = 0;
					while(_g < vl.length) {
						var v = vl[_g];
						++_g;
						checkRec(v);
					}
				}
			};
			var _g = 0;
			var _g1 = s.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				checkRec(v);
			}
		}
		var prev = s;
		var splitter = new hxsl_Splitter();
		var s1;
		try {
			s1 = splitter.split(s);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g).unwrap();
			if(((_g1) instanceof hxsl_Error)) {
				var e = _g1;
				e.msg += "\n\nin\n\n" + hxsl_Printer.shaderToString(s);
				throw haxe_Exception.thrown(e);
			} else {
				throw _g;
			}
		}
		var paramVars = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = linker.allVars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			if(v.v.kind == hxsl_VarKind.Param) {
				var _g2 = v.v.type;
				if(_g2._hx_index == 13) {
					var _g3 = _g2.vl;
					continue;
				}
				var inf = shaderDatas[v.instanceIndex];
				var nv = splitter.varMap.h[v.v.__id__];
				paramVars.h[nv == null ? v.id : nv.id] = { instance : inf.index, index : inf.inst.params.h[v.merged[0].id]};
			}
		}
		var prev = s1;
		var s = new hxsl_Dce().dce(s1.vertex,s1.fragment);
		var r = this.buildRuntimeShader(s.vertex,s.fragment,paramVars);
		var _g = [];
		var _g_l = shaders;
		var _g_last = null;
		while(_g_l != _g_last) {
			var s = _g_l.s;
			_g_l = _g_l.next;
			var s1 = s;
			_g.push(new hxsl_ShaderInstanceDesc(s1.shader,s1.constBits));
		}
		r.spec = { instances : _g, signature : null};
		var _g = 0;
		var _g1 = shaderDatas.length;
		while(_g < _g1) {
			var i = _g++;
			var s = shaderDatas[shaderDatas.length - 1 - i];
			r.spec.instances[s.index].index = i;
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = r.spec.instances;
		while(_g1 < _g2.length) {
			var i = _g2[_g1];
			++_g1;
			_g.push(i.shader.data.name + "_" + i.bits + "_" + i.index);
		}
		var signParts = _g;
		var tmp = signParts.join(":");
		r.spec.signature = haxe_crypto_Md5.encode(tmp);
		r.signature = haxe_crypto_Md5.encode(hxsl_Printer.shaderToString(r.vertex.data) + hxsl_Printer.shaderToString(r.fragment.data));
		r.batchMode = batchMode;
		var r2 = this.byID.h[r.signature];
		if(r2 != null) {
			r.id = r2.id;
		} else {
			this.byID.h[r.signature] = r;
		}
		return r;
	}
	,buildRuntimeShader: function(vertex,fragment,paramVars) {
		var r = new hxsl_RuntimeShader();
		r.vertex = this.flattenShader(vertex,hxsl_FunctionKind.Vertex,paramVars);
		r.vertex.vertex = true;
		r.fragment = this.flattenShader(fragment,hxsl_FunctionKind.Fragment,paramVars);
		r.globals = new haxe_ds_IntMap();
		this.initGlobals(r,r.vertex);
		this.initGlobals(r,r.fragment);
		return r;
	}
	,initGlobals: function(r,s) {
		var p = s.globals;
		while(p != null) {
			r.globals.h[p.gid] = true;
			p = p.next;
		}
		var p = s.params;
		while(p != null) {
			if(p.perObjectGlobal != null) {
				r.globals.h[p.perObjectGlobal.gid] = true;
			}
			p = p.next;
		}
	}
	,getPath: function(v) {
		if(v.parent == null) {
			return v.name;
		}
		return this.getPath(v.parent) + "." + v.name;
	}
	,flattenShader: function(s,kind,params) {
		var flat = new hxsl_Flatten();
		var c = new hxsl_RuntimeShaderData();
		var data = flat.flatten(s,kind,this.constsToGlobal);
		var textures = [];
		c.consts = flat.consts;
		c.texturesCount = 0;
		var g = flat.allocData.keys();
		while(g.hasNext()) {
			var g1 = g.next();
			var alloc = flat.allocData.h[g1.__id__];
			switch(g1.kind._hx_index) {
			case 0:
				var _g = [];
				var _g1 = 0;
				while(_g1 < alloc.length) {
					var a = alloc[_g1];
					++_g1;
					if(a.v != null) {
						_g.push(new hxsl_AllocGlobal(a.pos,this.getPath(a.v),a.v.type));
					}
				}
				var out = _g;
				var _g2 = 0;
				var _g3 = out.length - 1;
				while(_g2 < _g3) {
					var i = _g2++;
					out[i].next = out[i + 1];
				}
				var _g4 = g1.type;
				if(_g4._hx_index == 15) {
					var _g5 = _g4.t;
					var _g6 = _g4.size;
					if(_g5._hx_index == 5) {
						if(_g5.size == 4) {
							if(_g5.t._hx_index == 1) {
								if(_g6._hx_index == 0) {
									var size = _g6.v;
									c.globals = out[0];
									c.globalsSize = size;
								} else {
									throw haxe_Exception.thrown("assert");
								}
							} else {
								throw haxe_Exception.thrown("assert");
							}
						} else {
							throw haxe_Exception.thrown("assert");
						}
					} else {
						throw haxe_Exception.thrown("assert");
					}
				} else {
					throw haxe_Exception.thrown("assert");
				}
				break;
			case 2:
				var out1 = [];
				var count = 0;
				var _g7 = 0;
				while(_g7 < alloc.length) {
					var a1 = alloc[_g7];
					++_g7;
					if(a1.v == null) {
						continue;
					}
					var p = params.h[a1.v.id];
					if(p == null) {
						var ap = new hxsl_AllocParam(a1.v.name,a1.pos,-1,-1,a1.v.type);
						ap.perObjectGlobal = new hxsl_AllocGlobal(-1,this.getPath(a1.v),a1.v.type);
						out1.push(ap);
						++count;
						continue;
					}
					var ap1 = new hxsl_AllocParam(a1.v.name,a1.pos,p.instance,p.index,a1.v.type);
					var _g8 = a1.v.type;
					if(_g8._hx_index == 15) {
						var _g9 = _g8.size;
						var t = _g8.t;
						if(hxsl_Tools.isSampler(t)) {
							ap1.pos = -a1.size;
							count += a1.size;
						} else {
							++count;
						}
					} else {
						++count;
					}
					out1.push(ap1);
				}
				var _g10 = 0;
				var _g11 = out1.length - 1;
				while(_g10 < _g11) {
					var i1 = _g10++;
					out1[i1].next = out1[i1 + 1];
				}
				var _g12 = g1.type;
				if(_g12._hx_index == 15) {
					var _g13 = _g12.t;
					var _g14 = _g12.size;
					var t1 = _g13;
					if(hxsl_Tools.isSampler(t1)) {
						textures.push({ t : t1, all : out1});
						c.texturesCount += count;
					} else {
						switch(_g13._hx_index) {
						case 5:
							if(_g13.size == 4) {
								if(_g13.t._hx_index == 1) {
									if(_g14._hx_index == 0) {
										var size1 = _g14.v;
										c.params = out1[0];
										c.paramsSize = size1;
									} else {
										throw haxe_Exception.thrown("assert");
									}
								} else {
									throw haxe_Exception.thrown("assert");
								}
							} else {
								throw haxe_Exception.thrown("assert");
							}
							break;
						case 16:
							var _g15 = _g13.t;
							var _g16 = _g13.size;
							c.buffers = out1[0];
							c.bufferCount = out1.length;
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
					}
				} else {
					throw haxe_Exception.thrown("assert");
				}
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
		}
		if(textures.length > 0) {
			textures.sort(function(t1,t2) {
				return t1.t._hx_index - t2.t._hx_index;
			});
			c.textures = textures[0].all[0];
			var _g = 1;
			var _g1 = textures.length;
			while(_g < _g1) {
				var i = _g++;
				var prevAll = textures[i - 1].all;
				var prev = prevAll[prevAll.length - 1];
				prev.next = textures[i].all[0];
			}
		}
		if(c.globals == null) {
			c.globalsSize = 0;
		}
		if(c.params == null) {
			c.paramsSize = 0;
		}
		if(c.buffers == null) {
			c.bufferCount = 0;
		}
		c.data = data;
		return c;
	}
	,__class__: hxsl_Cache
};
var hxsl_Channel = $hxEnums["hxsl.Channel"] = { __ename__:"hxsl.Channel",__constructs__:null
	,Unknown: {_hx_name:"Unknown",_hx_index:0,__enum__:"hxsl.Channel",toString:$estr}
	,R: {_hx_name:"R",_hx_index:1,__enum__:"hxsl.Channel",toString:$estr}
	,G: {_hx_name:"G",_hx_index:2,__enum__:"hxsl.Channel",toString:$estr}
	,B: {_hx_name:"B",_hx_index:3,__enum__:"hxsl.Channel",toString:$estr}
	,A: {_hx_name:"A",_hx_index:4,__enum__:"hxsl.Channel",toString:$estr}
	,PackedFloat: {_hx_name:"PackedFloat",_hx_index:5,__enum__:"hxsl.Channel",toString:$estr}
	,PackedNormal: {_hx_name:"PackedNormal",_hx_index:6,__enum__:"hxsl.Channel",toString:$estr}
};
hxsl_Channel.__constructs__ = [hxsl_Channel.Unknown,hxsl_Channel.R,hxsl_Channel.G,hxsl_Channel.B,hxsl_Channel.A,hxsl_Channel.PackedFloat,hxsl_Channel.PackedNormal];
hxsl_Channel.__empty_constructs__ = [hxsl_Channel.Unknown,hxsl_Channel.R,hxsl_Channel.G,hxsl_Channel.B,hxsl_Channel.A,hxsl_Channel.PackedFloat,hxsl_Channel.PackedNormal];
var hxsl_Clone = function() {
	this.varMap = new haxe_ds_IntMap();
};
$hxClasses["hxsl.Clone"] = hxsl_Clone;
hxsl_Clone.__name__ = "hxsl.Clone";
hxsl_Clone.shaderData = function(s) {
	return new hxsl_Clone().shader(s);
};
hxsl_Clone.prototype = {
	varMap: null
	,tvar: function(v) {
		var v2 = this.varMap.h[v.id];
		if(v2 != null) {
			return v2;
		}
		v2 = { id : hxsl_Tools.allocVarId(), type : v.type, name : v.name, kind : v.kind};
		this.varMap.h[v.id] = v2;
		if(v.parent != null) {
			v2.parent = this.tvar(v.parent);
		}
		if(v.qualifiers != null) {
			v2.qualifiers = v.qualifiers.slice();
		}
		v2.type = this.ttype(v.type);
		return v2;
	}
	,tfun: function(f) {
		var tmp = this.ttype(f.ret);
		var f1 = f.kind;
		var tmp1 = this.tvar(f.ref);
		var _g = [];
		var _g1 = 0;
		var _g2 = f.args;
		while(_g1 < _g2.length) {
			var a = _g2[_g1];
			++_g1;
			_g.push(this.tvar(a));
		}
		return { ret : tmp, kind : f1, ref : tmp1, args : _g, expr : this.texpr(f.expr)};
	}
	,ttype: function(t) {
		switch(t._hx_index) {
		case 13:
			var vl = t.vl;
			var _g = [];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var v = vl[_g1];
				++_g1;
				_g.push(this.tvar(v));
			}
			return hxsl_Type.TStruct(_g);
		case 14:
			var vars = t.variants;
			return hxsl_Type.TFun(vars);
		case 15:
			var t1 = t.t;
			var size = t.size;
			var tmp = this.ttype(t1);
			var tmp1;
			switch(size._hx_index) {
			case 0:
				var _g = size.v;
				tmp1 = size;
				break;
			case 1:
				var v = size.v;
				tmp1 = hxsl_SizeDecl.SVar(this.tvar(v));
				break;
			}
			return hxsl_Type.TArray(tmp,tmp1);
		default:
			return t;
		}
	}
	,texpr: function(e) {
		var e2 = hxsl_Tools.map(e,$bind(this,this.texpr));
		e2.t = this.ttype(e.t);
		var _g = e2.e;
		var tmp;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			tmp = hxsl_TExprDef.TVar(this.tvar(v));
			break;
		case 7:
			var v = _g.v;
			var init = _g.init;
			tmp = hxsl_TExprDef.TVarDecl(this.tvar(v),init);
			break;
		case 13:
			var v = _g.v;
			var it = _g.it;
			var loop = _g.loop;
			tmp = hxsl_TExprDef.TFor(this.tvar(v),it,loop);
			break;
		default:
			tmp = e2.e;
		}
		e2.e = tmp;
		return e2;
	}
	,shader: function(s) {
		var s1 = s.name;
		var _g = [];
		var _g1 = 0;
		var _g2 = s.vars;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			_g.push(this.tvar(v));
		}
		var tmp = _g;
		var _g = [];
		var _g1 = 0;
		var _g2 = s.funs;
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(this.tfun(f));
		}
		return { name : s1, vars : tmp, funs : _g};
	}
	,__class__: hxsl_Clone
};
var hxsl__$Dce_VarDeps = function(v) {
	this.v = v;
	this.used = false;
	this.deps = new haxe_ds_IntMap();
};
$hxClasses["hxsl._Dce.VarDeps"] = hxsl__$Dce_VarDeps;
hxsl__$Dce_VarDeps.__name__ = "hxsl._Dce.VarDeps";
hxsl__$Dce_VarDeps.prototype = {
	v: null
	,keep: null
	,used: null
	,deps: null
	,__class__: hxsl__$Dce_VarDeps
};
var hxsl_Dce = function() {
};
$hxClasses["hxsl.Dce"] = hxsl_Dce;
hxsl_Dce.__name__ = "hxsl.Dce";
hxsl_Dce.prototype = {
	used: null
	,channelVars: null
	,markAsKeep: null
	,dce: function(vertex,fragment) {
		this.used = new haxe_ds_IntMap();
		this.channelVars = [];
		var inputs = [];
		var _g = 0;
		var _g1 = vertex.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var i = this.get(v);
			if(v.kind == hxsl_VarKind.Input) {
				inputs.push(i);
			}
			if(v.kind == hxsl_VarKind.Output) {
				i.keep = true;
			}
		}
		var _g = 0;
		var _g1 = fragment.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var i = this.get(v);
			if(v.kind == hxsl_VarKind.Output) {
				i.keep = true;
			}
		}
		var _g = 0;
		var _g1 = vertex.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.check(f.expr,[],[]);
		}
		var _g = 0;
		var _g1 = fragment.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.check(f.expr,[],[]);
		}
		var outExprs = [];
		do {
			var v = this.used.iterator();
			while(v.hasNext()) {
				var v1 = v.next();
				if(v1.keep) {
					this.markRec(v1);
				}
			}
			while(inputs.length > 1 && !inputs[inputs.length - 1].used) inputs.pop();
			var _g = 0;
			while(_g < inputs.length) {
				var v2 = inputs[_g];
				++_g;
				this.markRec(v2);
			}
			outExprs = [];
			var _g1 = 0;
			var _g2 = vertex.funs;
			while(_g1 < _g2.length) {
				var f = _g2[_g1];
				++_g1;
				outExprs.push(this.mapExpr(f.expr,false));
			}
			var _g3 = 0;
			var _g4 = fragment.funs;
			while(_g3 < _g4.length) {
				var f1 = _g4[_g3];
				++_g3;
				outExprs.push(this.mapExpr(f1.expr,false));
			}
			this.markAsKeep = false;
			var _g5 = 0;
			while(_g5 < outExprs.length) {
				var e = outExprs[_g5];
				++_g5;
				this.checkBranches(e);
			}
		} while(this.markAsKeep);
		var _g = 0;
		var _g1 = vertex.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f.expr = outExprs.shift();
		}
		var _g = 0;
		var _g1 = fragment.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			f.expr = outExprs.shift();
		}
		var v = this.used.iterator();
		while(v.hasNext()) {
			var v1 = v.next();
			if(v1.used) {
				continue;
			}
			if(v1.v.kind == hxsl_VarKind.Input) {
				continue;
			}
			HxOverrides.remove(vertex.vars,v1.v);
			HxOverrides.remove(fragment.vars,v1.v);
		}
		return { fragment : fragment, vertex : vertex};
	}
	,get: function(v) {
		var vd = this.used.h[v.id];
		if(vd == null) {
			vd = new hxsl__$Dce_VarDeps(v);
			this.used.h[v.id] = vd;
		}
		return vd;
	}
	,markRec: function(v) {
		if(v.used) {
			return;
		}
		v.used = true;
		var d = v.deps.iterator();
		while(d.hasNext()) {
			var d1 = d.next();
			this.markRec(d1);
		}
	}
	,link: function(v,writeTo) {
		var vd = this.get(v);
		var _g = 0;
		while(_g < writeTo.length) {
			var w = writeTo[_g];
			++_g;
			if(w == null) {
				if(!vd.keep) {
					vd.keep = true;
					this.markAsKeep = true;
				}
				continue;
			}
			w.deps.h[v.id] = vd;
		}
	}
	,check: function(e,writeTo,isAffected) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			this.link(v,writeTo);
			break;
		case 4:
			var el = _g.el;
			var noWrite = [];
			var _g1 = 0;
			var _g2 = el.length;
			while(_g1 < _g2) {
				var i = _g1++;
				this.check(el[i],i < el.length - 1 ? noWrite : writeTo,isAffected);
			}
			break;
		case 5:
			var _g1 = _g.op;
			var _g2 = _g.e1;
			var _g3 = _g.e2;
			switch(_g1._hx_index) {
			case 4:
				var _g4 = _g2.e;
				var _g5 = _g2.p;
				var _g5 = _g2.t;
				switch(_g4._hx_index) {
				case 1:
					var v = _g4.v;
					var e1 = _g3;
					var v1 = this.get(v);
					writeTo.push(v1);
					this.check(e1,writeTo,isAffected);
					writeTo.pop();
					if(isAffected.indexOf(v1) < 0) {
						isAffected.push(v1);
					}
					break;
				case 9:
					var _g5 = _g4.e;
					var _g6 = _g4.regs;
					var _g6 = _g5.e;
					var _g7 = _g5.p;
					var _g7 = _g5.t;
					if(_g6._hx_index == 1) {
						var v = _g6.v;
						var e1 = _g3;
						var v1 = this.get(v);
						writeTo.push(v1);
						this.check(e1,writeTo,isAffected);
						writeTo.pop();
						if(isAffected.indexOf(v1) < 0) {
							isAffected.push(v1);
						}
					} else {
						var _g5 = this;
						var writeTo1 = writeTo;
						var isAffected1 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g5.check(e,writeTo1,isAffected1);
						});
					}
					break;
				case 16:
					var _g6 = _g4.e;
					var _g7 = _g6.e;
					var _g8 = _g6.p;
					var _g8 = _g6.t;
					if(_g7._hx_index == 1) {
						var v = _g7.v;
						var i = _g4.index;
						var e1 = _g3;
						var v1 = this.get(v);
						writeTo.push(v1);
						this.check(i,writeTo,isAffected);
						this.check(e1,writeTo,isAffected);
						writeTo.pop();
						if(isAffected.indexOf(v1) < 0) {
							isAffected.push(v1);
						}
					} else {
						var _g4 = this;
						var writeTo2 = writeTo;
						var isAffected2 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g4.check(e,writeTo2,isAffected2);
						});
					}
					break;
				default:
					var _g6 = this;
					var writeTo3 = writeTo;
					var isAffected3 = isAffected;
					hxsl_Tools.iter(e,function(e) {
						_g6.check(e,writeTo3,isAffected3);
					});
				}
				break;
			case 20:
				var _g7 = _g1.op;
				var _g1 = _g2.e;
				var _g7 = _g2.p;
				var _g7 = _g2.t;
				switch(_g1._hx_index) {
				case 1:
					var v = _g1.v;
					var e1 = _g3;
					var v1 = this.get(v);
					writeTo.push(v1);
					this.check(e1,writeTo,isAffected);
					writeTo.pop();
					if(isAffected.indexOf(v1) < 0) {
						isAffected.push(v1);
					}
					break;
				case 9:
					var _g2 = _g1.e;
					var _g7 = _g1.regs;
					var _g7 = _g2.e;
					var _g8 = _g2.p;
					var _g8 = _g2.t;
					if(_g7._hx_index == 1) {
						var v = _g7.v;
						var e1 = _g3;
						var v1 = this.get(v);
						writeTo.push(v1);
						this.check(e1,writeTo,isAffected);
						writeTo.pop();
						if(isAffected.indexOf(v1) < 0) {
							isAffected.push(v1);
						}
					} else {
						var _g2 = this;
						var writeTo4 = writeTo;
						var isAffected4 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g2.check(e,writeTo4,isAffected4);
						});
					}
					break;
				case 16:
					var _g7 = _g1.e;
					var _g8 = _g7.e;
					var _g9 = _g7.p;
					var _g9 = _g7.t;
					if(_g8._hx_index == 1) {
						var v = _g8.v;
						var i = _g1.index;
						var e1 = _g3;
						var v1 = this.get(v);
						writeTo.push(v1);
						this.check(i,writeTo,isAffected);
						this.check(e1,writeTo,isAffected);
						writeTo.pop();
						if(isAffected.indexOf(v1) < 0) {
							isAffected.push(v1);
						}
					} else {
						var _g1 = this;
						var writeTo5 = writeTo;
						var isAffected5 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g1.check(e,writeTo5,isAffected5);
						});
					}
					break;
				default:
					var _g3 = this;
					var writeTo6 = writeTo;
					var isAffected6 = isAffected;
					hxsl_Tools.iter(e,function(e) {
						_g3.check(e,writeTo6,isAffected6);
					});
				}
				break;
			default:
				var _g7 = this;
				var writeTo7 = writeTo;
				var isAffected7 = isAffected;
				hxsl_Tools.iter(e,function(e) {
					_g7.check(e,writeTo7,isAffected7);
				});
			}
			break;
		case 7:
			var v = _g.v;
			var init = _g.init;
			if(init != null) {
				writeTo.push(this.get(v));
				this.check(init,writeTo,isAffected);
				writeTo.pop();
			} else {
				var _g8 = this;
				var writeTo8 = writeTo;
				var isAffected8 = isAffected;
				hxsl_Tools.iter(e,function(e) {
					_g8.check(e,writeTo8,isAffected8);
				});
			}
			break;
		case 8:
			var _g9 = _g.e;
			var _g10 = _g.args;
			var _g11 = _g9.e;
			var _g12 = _g9.p;
			var _g12 = _g9.t;
			if(_g11._hx_index == 2) {
				switch(_g11.g._hx_index) {
				case 63:
					if(_g10.length == 3) {
						var _g9 = _g10[0];
						var _g11 = _g10[2];
						var _g12 = _g9.e;
						var _g13 = _g9.p;
						var _g13 = _g9.t;
						if(_g12._hx_index == 1) {
							var _g9 = _g11.e;
							var _g13 = _g11.p;
							var _g13 = _g11.t;
							if(_g9._hx_index == 0) {
								var _g11 = _g9.c;
								if(_g11._hx_index == 2) {
									var cid = _g11.v;
									var uv = _g10[1];
									var c = _g12.v;
									this.check(uv,writeTo,isAffected);
									if(this.channelVars[cid] == null) {
										this.channelVars[cid] = c;
										this.link(c,writeTo);
									} else {
										this.link(this.channelVars[cid],writeTo);
									}
								} else {
									var _g9 = this;
									var writeTo9 = writeTo;
									var isAffected9 = isAffected;
									hxsl_Tools.iter(e,function(e) {
										_g9.check(e,writeTo9,isAffected9);
									});
								}
							} else {
								var _g11 = this;
								var writeTo10 = writeTo;
								var isAffected10 = isAffected;
								hxsl_Tools.iter(e,function(e) {
									_g11.check(e,writeTo10,isAffected10);
								});
							}
						} else {
							var _g12 = this;
							var writeTo11 = writeTo;
							var isAffected11 = isAffected;
							hxsl_Tools.iter(e,function(e) {
								_g12.check(e,writeTo11,isAffected11);
							});
						}
					} else {
						var _g13 = this;
						var writeTo12 = writeTo;
						var isAffected12 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g13.check(e,writeTo12,isAffected12);
						});
					}
					break;
				case 64:
					if(_g10.length == 4) {
						var _g14 = _g10[0];
						var _g15 = _g10[3];
						var _g16 = _g14.e;
						var _g17 = _g14.p;
						var _g17 = _g14.t;
						if(_g16._hx_index == 1) {
							var _g14 = _g15.e;
							var _g17 = _g15.p;
							var _g17 = _g15.t;
							if(_g14._hx_index == 0) {
								var _g15 = _g14.c;
								if(_g15._hx_index == 2) {
									var cid = _g15.v;
									var lod = _g10[2];
									var uv = _g10[1];
									var c = _g16.v;
									this.check(uv,writeTo,isAffected);
									this.check(lod,writeTo,isAffected);
									if(this.channelVars[cid] == null) {
										this.channelVars[cid] = c;
										this.link(c,writeTo);
									} else {
										this.link(this.channelVars[cid],writeTo);
									}
								} else {
									var _g10 = this;
									var writeTo13 = writeTo;
									var isAffected13 = isAffected;
									hxsl_Tools.iter(e,function(e) {
										_g10.check(e,writeTo13,isAffected13);
									});
								}
							} else {
								var _g14 = this;
								var writeTo14 = writeTo;
								var isAffected14 = isAffected;
								hxsl_Tools.iter(e,function(e) {
									_g14.check(e,writeTo14,isAffected14);
								});
							}
						} else {
							var _g15 = this;
							var writeTo15 = writeTo;
							var isAffected15 = isAffected;
							hxsl_Tools.iter(e,function(e) {
								_g15.check(e,writeTo15,isAffected15);
							});
						}
					} else {
						var _g16 = this;
						var writeTo16 = writeTo;
						var isAffected16 = isAffected;
						hxsl_Tools.iter(e,function(e) {
							_g16.check(e,writeTo16,isAffected16);
						});
					}
					break;
				default:
					var _g17 = this;
					var writeTo17 = writeTo;
					var isAffected17 = isAffected;
					hxsl_Tools.iter(e,function(e) {
						_g17.check(e,writeTo17,isAffected17);
					});
				}
			} else {
				var _g18 = this;
				var writeTo18 = writeTo;
				var isAffected18 = isAffected;
				hxsl_Tools.iter(e,function(e) {
					_g18.check(e,writeTo18,isAffected18);
				});
			}
			break;
		case 10:
			var e1 = _g.econd;
			var eif = _g.eif;
			var eelse = _g.eelse;
			var affect = [];
			this.check(eif,writeTo,affect);
			if(eelse != null) {
				this.check(eelse,writeTo,affect);
			}
			var len = affect.length;
			var _g19 = 0;
			while(_g19 < writeTo.length) {
				var v = writeTo[_g19];
				++_g19;
				if(affect.indexOf(v) < 0) {
					affect.push(v);
				}
			}
			this.check(e1,affect,isAffected);
			var _g19 = 0;
			var _g20 = len;
			while(_g19 < _g20) {
				var i = _g19++;
				var v = affect[i];
				if(isAffected.indexOf(v) < 0) {
					isAffected.push(v);
				}
			}
			break;
		case 13:
			var v = _g.v;
			var it = _g.it;
			var loop = _g.loop;
			var affect = [];
			this.check(loop,writeTo,affect);
			this.check(it,affect,isAffected);
			var _g = 0;
			while(_g < affect.length) {
				var v = affect[_g];
				++_g;
				if(isAffected.indexOf(v) < 0) {
					isAffected.push(v);
				}
			}
			break;
		default:
			var _g = this;
			var writeTo19 = writeTo;
			var isAffected19 = isAffected;
			hxsl_Tools.iter(e,function(e) {
				_g.check(e,writeTo19,isAffected19);
			});
		}
	}
	,checkBranches: function(e) {
		var _g = e.e;
		if(_g._hx_index == 10) {
			var _g1 = _g.eif;
			var _g1 = _g.eelse;
			var cond = _g.econd;
			var writeTo = [null];
			this.check(cond,writeTo,[]);
		}
		hxsl_Tools.iter(e,$bind(this,this.checkBranches));
	}
	,mapExpr: function(e,isVar) {
		var _gthis = this;
		var _g = e.e;
		switch(_g._hx_index) {
		case 4:
			var el = _g.el;
			var out = [];
			var count = 0;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e1 = el[_g1];
				++_g1;
				var isVar1 = isVar && count == el.length - 1;
				var e2 = this.mapExpr(e1,isVar1);
				if(hxsl_Tools.hasSideEffect(e2) || isVar1) {
					out.push(e2);
				}
				++count;
			}
			return { e : hxsl_TExprDef.TBlock(out), p : e.p, t : e.t};
		case 5:
			var _g1 = _g.op;
			var _g2 = _g.e1;
			var _g3 = _g.e2;
			switch(_g1._hx_index) {
			case 4:
				var _g3 = _g2.e;
				var _g4 = _g2.p;
				var _g4 = _g2.t;
				switch(_g3._hx_index) {
				case 1:
					var v = _g3.v;
					if(!this.get(v).used) {
						return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 9:
					var _g4 = _g3.e;
					var _g5 = _g3.regs;
					var _g5 = _g4.e;
					var _g6 = _g4.p;
					var _g6 = _g4.t;
					if(_g5._hx_index == 1) {
						var v = _g5.v;
						if(!this.get(v).used) {
							return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 16:
					var _g4 = _g3.e;
					var _g5 = _g3.index;
					var _g3 = _g4.e;
					var _g5 = _g4.p;
					var _g5 = _g4.t;
					if(_g3._hx_index == 1) {
						var v = _g3.v;
						if(!this.get(v).used) {
							return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				default:
					return hxsl_Tools.map(e,function(e) {
						return _gthis.mapExpr(e,true);
					});
				}
				break;
			case 20:
				var _g3 = _g1.op;
				var _g1 = _g2.e;
				var _g3 = _g2.p;
				var _g3 = _g2.t;
				switch(_g1._hx_index) {
				case 1:
					var v = _g1.v;
					if(!this.get(v).used) {
						return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 9:
					var _g2 = _g1.e;
					var _g3 = _g1.regs;
					var _g3 = _g2.e;
					var _g4 = _g2.p;
					var _g4 = _g2.t;
					if(_g3._hx_index == 1) {
						var v = _g3.v;
						if(!this.get(v).used) {
							return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 16:
					var _g2 = _g1.e;
					var _g3 = _g1.index;
					var _g1 = _g2.e;
					var _g3 = _g2.p;
					var _g3 = _g2.t;
					if(_g1._hx_index == 1) {
						var v = _g1.v;
						if(!this.get(v).used) {
							return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				default:
					return hxsl_Tools.map(e,function(e) {
						return _gthis.mapExpr(e,true);
					});
				}
				break;
			default:
				return hxsl_Tools.map(e,function(e) {
					return _gthis.mapExpr(e,true);
				});
			}
			break;
		case 7:
			var _g1 = _g.init;
			var v = _g.v;
			if(!this.get(v).used) {
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
			} else {
				return hxsl_Tools.map(e,function(e) {
					return _gthis.mapExpr(e,true);
				});
			}
			break;
		case 8:
			var _g1 = _g.e;
			var _g2 = _g.args;
			var _g3 = _g1.e;
			var _g4 = _g1.p;
			var _g4 = _g1.t;
			if(_g3._hx_index == 2) {
				switch(_g3.g._hx_index) {
				case 63:
					if(_g2.length == 3) {
						var _g1 = _g2[0];
						var _g1 = _g2[2];
						var _g3 = _g1.e;
						var _g4 = _g1.p;
						var _g4 = _g1.t;
						if(_g3._hx_index == 0) {
							var _g1 = _g3.c;
							if(_g1._hx_index == 2) {
								var cid = _g1.v;
								var uv = _g2[1];
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Texture), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(uv,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 64:
					if(_g2.length == 4) {
						var _g1 = _g2[0];
						var _g1 = _g2[3];
						var _g3 = _g1.e;
						var _g4 = _g1.p;
						var _g4 = _g1.t;
						if(_g3._hx_index == 0) {
							var _g1 = _g3.c;
							if(_g1._hx_index == 2) {
								var cid = _g1.v;
								var lod = _g2[2];
								var uv = _g2[1];
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.TextureLod), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(uv,true),this.mapExpr(lod,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
					} else {
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 65:
					switch(_g2.length) {
					case 3:
						var _g1 = _g2[0];
						var _g1 = _g2[2];
						var _g3 = _g1.e;
						var _g4 = _g1.p;
						var _g4 = _g1.t;
						if(_g3._hx_index == 0) {
							var _g1 = _g3.c;
							if(_g1._hx_index == 2) {
								var cid = _g1.v;
								var pos = _g2[1];
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Texel), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(pos,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
						break;
					case 4:
						var _g1 = _g2[0];
						var _g1 = _g2[3];
						var _g3 = _g1.e;
						var _g4 = _g1.p;
						var _g4 = _g1.t;
						if(_g3._hx_index == 0) {
							var _g1 = _g3.c;
							if(_g1._hx_index == 2) {
								var cid = _g1.v;
								var lod = _g2[2];
								var pos = _g2[1];
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Texel), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(pos,true),this.mapExpr(lod,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
						break;
					default:
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				case 66:
					switch(_g2.length) {
					case 2:
						var _g1 = _g2[0];
						var _g1 = _g2[1];
						var _g3 = _g1.e;
						var _g4 = _g1.p;
						var _g4 = _g1.t;
						if(_g3._hx_index == 0) {
							var _g1 = _g3.c;
							if(_g1._hx_index == 2) {
								var cid = _g1.v;
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.TextureSize), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p}]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
						break;
					case 3:
						var _g1 = _g2[0];
						var _g1 = _g2[2];
						var _g3 = _g1.e;
						var _g4 = _g1.p;
						var _g4 = _g1.t;
						if(_g3._hx_index == 0) {
							var _g1 = _g3.c;
							if(_g1._hx_index == 2) {
								var cid = _g1.v;
								var lod = _g2[1];
								var c = this.channelVars[cid];
								return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.TextureSize), p : e.p, t : hxsl_Type.TVoid},[{ e : hxsl_TExprDef.TVar(c), t : c.type, p : e.p},this.mapExpr(lod,true)]), t : hxsl_Type.TVoid, p : e.p};
							} else {
								return hxsl_Tools.map(e,function(e) {
									return _gthis.mapExpr(e,true);
								});
							}
						} else {
							return hxsl_Tools.map(e,function(e) {
								return _gthis.mapExpr(e,true);
							});
						}
						break;
					default:
						return hxsl_Tools.map(e,function(e) {
							return _gthis.mapExpr(e,true);
						});
					}
					break;
				default:
					return hxsl_Tools.map(e,function(e) {
						return _gthis.mapExpr(e,true);
					});
				}
			} else {
				return hxsl_Tools.map(e,function(e) {
					return _gthis.mapExpr(e,true);
				});
			}
			break;
		case 10:
			var e1 = _g.econd;
			var econd = _g.eif;
			var eelse = _g.eelse;
			var e2 = this.mapExpr(e1,true);
			var econd1 = this.mapExpr(econd,isVar);
			var eelse1 = eelse == null ? null : this.mapExpr(eelse,isVar);
			if(!isVar && !hxsl_Tools.hasSideEffect(econd1) && (eelse1 == null || !hxsl_Tools.hasSideEffect(eelse1))) {
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e2.t, p : e2.p};
			}
			return { e : hxsl_TExprDef.TIf(e2,econd1,eelse1), p : e2.p, t : e2.t};
		case 13:
			var v = _g.v;
			var it = _g.it;
			var loop = _g.loop;
			var it1 = this.mapExpr(it,true);
			var loop1 = this.mapExpr(loop,false);
			if(!hxsl_Tools.hasSideEffect(loop1)) {
				return { e : hxsl_TExprDef.TConst(hxsl_Const.CNull), t : e.t, p : e.p};
			}
			return { e : hxsl_TExprDef.TFor(v,it1,loop1), p : e.p, t : e.t};
		default:
			return hxsl_Tools.map(e,function(e) {
				return _gthis.mapExpr(e,true);
			});
		}
	}
	,__class__: hxsl_Dce
};
var hxsl_Eval = function() {
	this.varMap = new haxe_ds_ObjectMap();
	this.funMap = new haxe_ds_ObjectMap();
	this.constants = new haxe_ds_IntMap();
};
$hxClasses["hxsl.Eval"] = hxsl_Eval;
hxsl_Eval.__name__ = "hxsl.Eval";
hxsl_Eval.prototype = {
	varMap: null
	,inlineCalls: null
	,unrollLoops: null
	,eliminateConditionals: null
	,constants: null
	,funMap: null
	,curFun: null
	,setConstant: function(v,c) {
		this.constants.h[v.id] = hxsl_TExprDef.TConst(c);
	}
	,mapVar: function(v) {
		var v2 = this.varMap.h[v.__id__];
		if(v2 != null) {
			if(v == v2) {
				return v2;
			} else {
				return this.mapVar(v2);
			}
		}
		if(v.parent != null) {
			this.mapVar(v.parent);
			v2 = this.varMap.h[v.__id__];
			if(v2 != null) {
				if(v == v2) {
					return v2;
				} else {
					return this.mapVar(v2);
				}
			}
		}
		var _g = v.type;
		var v21;
		if(_g._hx_index == 17) {
			var _g1 = _g.size;
			v21 = true;
		} else {
			v21 = false;
		}
		v2 = { id : v21 ? v.id : hxsl_Tools.allocVarId(), name : v.name, type : v.type, kind : v.kind};
		if(v.parent != null) {
			v2.parent = this.mapVar(v.parent);
		}
		if(v.qualifiers != null) {
			v2.qualifiers = v.qualifiers.slice();
		}
		this.varMap.set(v,v2);
		this.varMap.set(v2,v2);
		var _g = v2.type;
		switch(_g._hx_index) {
		case 13:
			var vl = _g.vl;
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < vl.length) {
				var v = vl[_g2];
				++_g2;
				_g1.push(this.mapVar(v));
			}
			v2.type = hxsl_Type.TStruct(_g1);
			break;
		case 15:
			var _g1 = _g.size;
			if(_g1._hx_index == 1) {
				var vs = _g1.v;
				var t = _g.t;
				var c = this.constants.h[vs.id];
				if(c != null) {
					if(c == null) {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					} else if(c._hx_index == 0) {
						var _g1 = c.c;
						if(_g1._hx_index == 2) {
							var v = _g1.v;
							var _g1 = v2.type;
							var tmp;
							if(_g1._hx_index == 15) {
								var _g2 = _g1.t;
								var _g2 = _g1.size;
								tmp = true;
							} else {
								tmp = false;
							}
							v2.type = tmp ? hxsl_Type.TArray(t,hxsl_SizeDecl.SConst(v)) : hxsl_Type.TBuffer(t,hxsl_SizeDecl.SConst(v));
						} else {
							hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
						}
					} else {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					}
				} else {
					var vs2 = this.mapVar(vs);
					var _g1 = v2.type;
					var tmp;
					if(_g1._hx_index == 15) {
						var _g2 = _g1.t;
						var _g2 = _g1.size;
						tmp = true;
					} else {
						tmp = false;
					}
					v2.type = tmp ? hxsl_Type.TArray(t,hxsl_SizeDecl.SVar(vs2)) : hxsl_Type.TBuffer(t,hxsl_SizeDecl.SVar(vs2));
				}
			}
			break;
		case 16:
			var _g1 = _g.size;
			if(_g1._hx_index == 1) {
				var vs = _g1.v;
				var t = _g.t;
				var c = this.constants.h[vs.id];
				if(c != null) {
					if(c == null) {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					} else if(c._hx_index == 0) {
						var _g = c.c;
						if(_g._hx_index == 2) {
							var v = _g.v;
							var _g = v2.type;
							var tmp;
							if(_g._hx_index == 15) {
								var _g1 = _g.t;
								var _g1 = _g.size;
								tmp = true;
							} else {
								tmp = false;
							}
							v2.type = tmp ? hxsl_Type.TArray(t,hxsl_SizeDecl.SConst(v)) : hxsl_Type.TBuffer(t,hxsl_SizeDecl.SConst(v));
						} else {
							hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
						}
					} else {
						hxsl_Error.t("Integer value expected for array size constant " + vs.name,null);
					}
				} else {
					var vs2 = this.mapVar(vs);
					var _g = v2.type;
					var tmp;
					if(_g._hx_index == 15) {
						var _g1 = _g.t;
						var _g1 = _g.size;
						tmp = true;
					} else {
						tmp = false;
					}
					v2.type = tmp ? hxsl_Type.TArray(t,hxsl_SizeDecl.SVar(vs2)) : hxsl_Type.TBuffer(t,hxsl_SizeDecl.SVar(vs2));
				}
			}
			break;
		default:
		}
		return v2;
	}
	,checkSamplerRec: function(t) {
		if(hxsl_Tools.isSampler(t)) {
			return true;
		}
		switch(t._hx_index) {
		case 13:
			var vl = t.vl;
			var _g = 0;
			while(_g < vl.length) {
				var v = vl[_g];
				++_g;
				if(this.checkSamplerRec(v.type)) {
					return true;
				}
			}
			return false;
		case 15:
			var _g = t.size;
			var t1 = t.t;
			return this.checkSamplerRec(t1);
		case 16:
			var _g = t.t;
			var size = t.size;
			return true;
		default:
		}
		return false;
	}
	,needsInline: function(f) {
		var _g = 0;
		var _g1 = f.args;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(this.checkSamplerRec(a.type)) {
				return true;
			}
		}
		return false;
	}
	,'eval': function(s) {
		var funs = [];
		var _g = 0;
		var _g1 = s.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var f1 = f.kind;
			var f2 = this.mapVar(f.ref);
			var _g2 = [];
			var _g3 = 0;
			var _g4 = f.args;
			while(_g3 < _g4.length) {
				var a = _g4[_g3];
				++_g3;
				_g2.push(this.mapVar(a));
			}
			var f21 = { kind : f1, ref : f2, args : _g2, ret : f.ret, expr : f.expr};
			if(f.kind == hxsl_FunctionKind.Helper && this.inlineCalls || this.needsInline(f21)) {
				this.funMap.set(f21.ref,f);
			} else {
				funs.push(f21);
			}
		}
		var _g = 0;
		var _g1 = funs.length;
		while(_g < _g1) {
			var i = _g++;
			this.curFun = funs[i];
			this.curFun.expr = this.evalExpr(this.curFun.expr,false);
		}
		var s1 = s.name;
		var _g = [];
		var _g1 = 0;
		var _g2 = s.vars;
		while(_g1 < _g2.length) {
			var v = _g2[_g1];
			++_g1;
			_g.push(this.mapVar(v));
		}
		return { name : s1, vars : _g, funs : funs};
	}
	,markReturn: null
	,hasReturn: function(e) {
		this.markReturn = false;
		this.hasReturnLoop(e);
		return this.markReturn;
	}
	,hasReturnLoop: function(e) {
		var _g = e.e;
		if(_g._hx_index == 12) {
			var _g1 = _g.e;
			this.markReturn = true;
		} else if(!this.markReturn) {
			hxsl_Tools.iter(e,$bind(this,this.hasReturnLoop));
		}
	}
	,handleReturn: function(e,isFinal) {
		if(isFinal == null) {
			isFinal = false;
		}
		var _g = e.e;
		switch(_g._hx_index) {
		case 3:
			var v = _g.e;
			var v1 = this.handleReturn(v,isFinal);
			return { e : hxsl_TExprDef.TParenthesis(v1), t : v1.t, p : e.p};
		case 4:
			var el = _g.el;
			var i = 0;
			var last = el.length;
			var out = [];
			_hx_loop1: while(i < last) {
				var e1 = el[i++];
				if(i == last) {
					out.push(this.handleReturn(e1,isFinal));
				} else {
					var _g1 = e1.e;
					switch(_g1._hx_index) {
					case 10:
						if(_g1.eelse == null) {
							var eif = _g1.eif;
							var econd = _g1.econd;
							if(isFinal && this.hasReturn(eif)) {
								out.push(this.handleReturn({ e : hxsl_TExprDef.TIf(econd,eif,{ e : hxsl_TExprDef.TBlock(el.slice(i)), t : e1.t, p : e1.p}), t : e1.t, p : e1.p}));
								break _hx_loop1;
							} else {
								out.push(this.handleReturn(e1));
							}
						} else {
							out.push(this.handleReturn(e1));
						}
						break;
					case 12:
						var e2 = _g1.e;
						out.push(this.handleReturn(e2,isFinal));
						break _hx_loop1;
					default:
						out.push(this.handleReturn(e1));
					}
				}
			}
			var t = isFinal ? out.length == 0 ? hxsl_Type.TVoid : out[out.length - 1].t : e.t;
			return { e : hxsl_TExprDef.TBlock(out), t : t, p : e.p};
		case 10:
			var cond = _g.econd;
			var eif = _g.eif;
			var eelse = _g.eelse;
			if(eelse != null && isFinal) {
				var cond1 = this.handleReturn(cond);
				var eif1 = this.handleReturn(eif,isFinal);
				return { e : hxsl_TExprDef.TIf(cond1,eif1,this.handleReturn(eelse,isFinal)), t : eif1.t, p : e.p};
			} else {
				return hxsl_Tools.map(e,$bind(this,this.handleReturnDef));
			}
			break;
		case 12:
			var v = _g.e;
			if(!isFinal) {
				hxsl_Error.t("Cannot inline not final return",e.p);
			}
			if(v == null) {
				return { e : hxsl_TExprDef.TBlock([]), t : hxsl_Type.TVoid, p : e.p};
			}
			return this.handleReturn(v,true);
		default:
			return hxsl_Tools.map(e,$bind(this,this.handleReturnDef));
		}
	}
	,handleReturnDef: function(e) {
		return this.handleReturn(e);
	}
	,evalCall: function(g,args,oldArgs,pos) {
		switch(g._hx_index) {
		case 38:
			if(args.length == 1) {
				var _g = args[0];
				var _g1 = _g.e;
				var _g2 = _g.p;
				var _g2 = _g.t;
				if(_g1._hx_index == 0) {
					var _g = _g1.c;
					if(_g._hx_index == 2) {
						var i = _g.v;
						return hxsl_TExprDef.TConst(hxsl_Const.CFloat(i));
					} else {
						return null;
					}
				} else {
					return null;
				}
			} else {
				return null;
			}
			break;
		case 63:case 64:
			var i;
			var _g = args[0].e;
			if(_g._hx_index == 0) {
				var _g1 = _g.c;
				if(_g1._hx_index == 2) {
					var i1 = _g1.v;
					i = i1;
				} else {
					hxsl_Error.t("Cannot eval complex channel " + hxsl_Printer.toString(args[0],true) + " " + this.constantsToString(),pos);
					throw haxe_Exception.thrown("assert");
				}
			} else {
				hxsl_Error.t("Cannot eval complex channel " + hxsl_Printer.toString(args[0],true) + " " + this.constantsToString(),pos);
				throw haxe_Exception.thrown("assert");
			}
			var channel = oldArgs[0];
			var _g = channel.e;
			var channel1;
			if(_g._hx_index == 1) {
				var v = _g.v;
				channel1 = hxsl_TExprDef.TVar(this.mapVar(v));
			} else {
				throw haxe_Exception.thrown("assert");
			}
			channel = { e : channel1, t : channel.t, p : channel.p};
			var count;
			var _g = channel.t;
			if(_g._hx_index == 17) {
				var i1 = _g.size;
				count = i1;
			} else {
				throw haxe_Exception.thrown("assert");
			}
			var channelMode = Type.createEnumIndex(hxsl_Channel,i & 7,null);
			var targs = [channel];
			var _g = 1;
			var _g1 = args.length;
			while(_g < _g1) {
				var i1 = _g++;
				targs.push(args[i1]);
			}
			targs.push({ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(i >> 3)), t : hxsl_Type.TInt, p : pos});
			var tget = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(g), t : hxsl_Type.TVoid, p : pos},targs), t : hxsl_Type.TVoid, p : pos};
			switch(channelMode._hx_index) {
			case 0:
				var zero = { e : hxsl_TExprDef.TConst(hxsl_Const.CFloat(0.)), t : hxsl_Type.TFloat, p : pos};
				if(count == 1) {
					return zero.e;
				}
				return hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal([hxsl_TGlobal.Vec2,hxsl_TGlobal.Vec3,hxsl_TGlobal.Vec4][count - 2]), t : hxsl_Type.TVoid, p : pos},[zero]);
			case 1:case 2:case 3:case 4:
				var tmp;
				switch(count) {
				case 1:
					switch(channelMode._hx_index) {
					case 1:
						tmp = [hxsl_Component.X];
						break;
					case 2:
						tmp = [hxsl_Component.Y];
						break;
					case 3:
						tmp = [hxsl_Component.Z];
						break;
					case 4:
						tmp = [hxsl_Component.W];
						break;
					default:
						throw haxe_Exception.thrown("Invalid channel value " + Std.string(channelMode) + " for " + count + " channels");
					}
					break;
				case 2:
					switch(channelMode._hx_index) {
					case 1:
						tmp = [hxsl_Component.X,hxsl_Component.Y];
						break;
					case 2:
						tmp = [hxsl_Component.Y,hxsl_Component.Z];
						break;
					case 3:
						tmp = [hxsl_Component.Z,hxsl_Component.W];
						break;
					default:
						throw haxe_Exception.thrown("Invalid channel value " + Std.string(channelMode) + " for " + count + " channels");
					}
					break;
				case 3:
					switch(channelMode._hx_index) {
					case 1:
						tmp = [hxsl_Component.X,hxsl_Component.Y,hxsl_Component.Z];
						break;
					case 2:
						tmp = [hxsl_Component.Y,hxsl_Component.Z,hxsl_Component.W];
						break;
					default:
						throw haxe_Exception.thrown("Invalid channel value " + Std.string(channelMode) + " for " + count + " channels");
					}
					break;
				default:
					throw haxe_Exception.thrown("Invalid channel value " + Std.string(channelMode) + " for " + count + " channels");
				}
				return hxsl_TExprDef.TSwiz(tget,tmp);
			case 5:
				return hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Unpack), t : hxsl_Type.TVoid, p : pos},[tget]);
			case 6:
				return hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.UnpackNormal), t : hxsl_Type.TVoid, p : pos},[tget]);
			}
			break;
		case 67:
			var args1 = args;
			var _g = 0;
			while(_g < args1.length) {
				var a = args1[_g];
				++_g;
				haxe_Log.trace(hxsl_Printer.toString(a),{ fileName : a.p.file, lineNumber : 0, className : null, methodName : null});
			}
			return hxsl_TExprDef.TBlock([]);
		default:
			return null;
		}
	}
	,constantsToString: function() {
		var _g = [];
		var c = this.constants.keys();
		while(c.hasNext()) {
			var c1 = c.next();
			_g.push(c1 + " => " + hxsl_Printer.toString({ e : this.constants.h[c1], t : hxsl_Type.TVoid, p : null},true));
		}
		return _g.toString();
	}
	,ifBlock: function(e) {
		var tmp;
		if(e != null) {
			var _g = e.e;
			var tmp1;
			if(_g._hx_index == 10) {
				var _g1 = _g.econd;
				var _g1 = _g.eif;
				var _g1 = _g.eelse;
				tmp1 = true;
			} else {
				tmp1 = false;
			}
			tmp = !tmp1;
		} else {
			tmp = true;
		}
		if(tmp) {
			return e;
		}
		return { e : hxsl_TExprDef.TBlock([e]), t : e.t, p : e.p};
	}
	,evalExpr: function(e,isVal) {
		if(isVal == null) {
			isVal = true;
		}
		var _gthis = this;
		var d;
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var _g1 = _g.c;
			d = e.e;
			break;
		case 1:
			var v = _g.v;
			var c = this.constants.h[v.id];
			if(c != null) {
				d = c;
			} else {
				var v2 = this.mapVar(v);
				d = hxsl_TExprDef.TVar(v2);
			}
			break;
		case 2:
			var _g1 = _g.g;
			d = e.e;
			break;
		case 3:
			var e1 = _g.e;
			var e2 = this.evalExpr(e1,isVal);
			var _g1 = e2.e;
			if(_g1._hx_index == 0) {
				var _g2 = _g1.c;
				d = e2.e;
			} else {
				d = hxsl_TExprDef.TParenthesis(e2);
			}
			break;
		case 4:
			var el = _g.el;
			var out = [];
			var last = el.length - 1;
			var _g1 = 0;
			var _g2 = el.length;
			while(_g1 < _g2) {
				var i = _g1++;
				var isVal1 = isVal && i == last;
				var e1 = this.evalExpr(el[i],isVal1);
				var _g3 = e1.e;
				switch(_g3._hx_index) {
				case 0:
					var _g4 = _g3.c;
					if(isVal1) {
						out.push(e1);
					}
					break;
				case 1:
					var _g5 = _g3.v;
					if(isVal1) {
						out.push(e1);
					}
					break;
				default:
					out.push(e1);
				}
			}
			d = out.length == 1 && this.curFun.kind != hxsl_FunctionKind.Init ? out[0].e : hxsl_TExprDef.TBlock(out);
			break;
		case 5:
			var op = _g.op;
			var e1 = _g.e1;
			var e2 = _g.e2;
			var e11 = this.evalExpr(e1);
			var e21 = this.evalExpr(e2);
			switch(op._hx_index) {
			case 0:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a + b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 3) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a + b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 1:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a * b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 3) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a * b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 2:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a / b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 3) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a / b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 3:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a - b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 3) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a - b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 4:case 21:
				d = hxsl_TExprDef.TBinop(op,e11,e21);
				break;
			case 5:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g2._hx_index == 0 ? _g2.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g1 = _g3.b;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								var b = _g4.b;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var b = _g3.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) == 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 6:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g2._hx_index == 0 ? _g2.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g1 = _g3.b;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								var b = _g4.b;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var b = _g3.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) != 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 7:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g2._hx_index == 0 ? _g2.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g1 = _g3.b;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								var b = _g4.b;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var b = _g3.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) > 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 8:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g2._hx_index == 0 ? _g2.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g1 = _g3.b;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 1:
								var b = _g4.b;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 2:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 3:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(true));
								break;
							case 4:
								var b = _g3.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) >= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 9:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g2._hx_index == 0 ? _g2.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(false)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g1 = _g3.b;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								var b = _g4.b;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var b = _g3.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) < 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 10:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 0:
						d = _g2._hx_index == 0 ? _g2.c._hx_index == 0 ? hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TConst(hxsl_Const.CBool(true)) : hxsl_TExprDef.TBinop(op,e11,e21);
						break;
					case 1:
						var _g1 = _g3.b;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 1:
								var b = _g4.b;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a == b ? 0 : 1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 2:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 2:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a - b <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g4 = _g2.c;
							switch(_g4._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 3:
								var b = _g4.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 4:
						var _g1 = _g3.v;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							switch(_g3._hx_index) {
							case 0:
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(false));
								break;
							case 4:
								var b = _g3.v;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool((a > b ? 1 : a == b ? 0 : -1) <= 0));
								break;
							default:
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 11:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 2) {
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a & b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 12:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 2) {
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a | b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 13:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 2) {
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a ^ b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 14:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 1) {
						var _g1 = _g3.b;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							if(_g3._hx_index == 1) {
								var b = _g3.b;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a && b));
							} else {
								var a = _g1;
								d = a == false ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e21.e;
							}
						} else {
							var a = _g1;
							d = a == false ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e21.e;
						}
					} else if(_g2._hx_index == 0) {
						var _g1 = _g2.c;
						if(_g1._hx_index == 1) {
							var a = _g1.b;
							d = a == false ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e11.e;
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else if(_g2._hx_index == 0) {
					var _g1 = _g2.c;
					if(_g1._hx_index == 1) {
						var a = _g1.b;
						d = a == false ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e11.e;
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 15:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 1) {
						var _g1 = _g3.b;
						if(_g2._hx_index == 0) {
							var _g3 = _g2.c;
							if(_g3._hx_index == 1) {
								var b = _g3.b;
								var a = _g1;
								d = hxsl_TExprDef.TConst(hxsl_Const.CBool(a || b));
							} else {
								var a = _g1;
								d = a == true ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e21.e;
							}
						} else {
							var a = _g1;
							d = a == true ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e21.e;
						}
					} else if(_g2._hx_index == 0) {
						var _g1 = _g2.c;
						if(_g1._hx_index == 1) {
							var a = _g1.b;
							d = a == true ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e11.e;
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else if(_g2._hx_index == 0) {
					var _g1 = _g2.c;
					if(_g1._hx_index == 1) {
						var a = _g1.b;
						d = a == true ? hxsl_TExprDef.TConst(hxsl_Const.CBool(a)) : e11.e;
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 16:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 2) {
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a << b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 17:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 2) {
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a >> b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 18:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					if(_g3._hx_index == 2) {
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a >>> b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
					} else {
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 19:
				var _g1 = e11.e;
				var _g2 = e21.e;
				if(_g1._hx_index == 0) {
					var _g3 = _g1.c;
					switch(_g3._hx_index) {
					case 2:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 2) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CInt(a % b | 0));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					case 3:
						if(_g2._hx_index == 0) {
							var _g1 = _g2.c;
							if(_g1._hx_index == 3) {
								var b = _g1.v;
								var a = _g3.v;
								d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(a % b));
							} else {
								d = hxsl_TExprDef.TBinop(op,e11,e21);
							}
						} else {
							d = hxsl_TExprDef.TBinop(op,e11,e21);
						}
						break;
					default:
						d = hxsl_TExprDef.TBinop(op,e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TBinop(op,e11,e21);
				}
				break;
			case 20:
				var _g1 = op.op;
				d = hxsl_TExprDef.TBinop(op,e11,e21);
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
			break;
		case 6:
			var op = _g.op;
			var e1 = _g.e1;
			var e2 = this.evalExpr(e1);
			var _g1 = e2.e;
			if(_g1._hx_index == 0) {
				var c = _g1.c;
				switch(op._hx_index) {
				case 2:
					if(c._hx_index == 1) {
						var b = c.b;
						d = hxsl_TExprDef.TConst(hxsl_Const.CBool(!b));
					} else {
						d = hxsl_TExprDef.TUnop(op,e2);
					}
					break;
				case 3:
					switch(c._hx_index) {
					case 2:
						var i = c.v;
						d = hxsl_TExprDef.TConst(hxsl_Const.CInt(-i));
						break;
					case 3:
						var f = c.v;
						d = hxsl_TExprDef.TConst(hxsl_Const.CFloat(-f));
						break;
					default:
						d = hxsl_TExprDef.TUnop(op,e2);
					}
					break;
				default:
					d = hxsl_TExprDef.TUnop(op,e2);
				}
			} else {
				d = hxsl_TExprDef.TUnop(op,e2);
			}
			break;
		case 7:
			var v = _g.v;
			var init = _g.init;
			d = hxsl_TExprDef.TVarDecl(this.mapVar(v),init == null ? null : this.evalExpr(init));
			break;
		case 8:
			var c = _g.e;
			var eargs = _g.args;
			var c1 = this.evalExpr(c);
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < eargs.length) {
				var a = eargs[_g2];
				++_g2;
				_g1.push(this.evalExpr(a));
			}
			var args = _g1;
			var _g1 = c1.e;
			switch(_g1._hx_index) {
			case 1:
				var v = _g1.v;
				if(this.funMap.h.__keys__[v.__id__] != null) {
					var f = this.funMap.h[v.__id__];
					var outExprs = [];
					var undo = [];
					var _g2 = 0;
					var _g3 = f.args.length;
					while(_g2 < _g3) {
						var i = _g2++;
						var v = [f.args[i]];
						var e1 = args[i];
						var _g4 = e1.e;
						switch(_g4._hx_index) {
						case 0:
							var _g5 = _g4.c;
							var old = [this.constants.h[v[0].id]];
							undo.push((function(old,v) {
								return function() {
									if(old[0] == null) {
										_gthis.constants.remove(v[0].id);
									} else {
										_gthis.constants.h[v[0].id] = old[0];
									}
								};
							})(old,v));
							this.constants.h[v[0].id] = e1.e;
							break;
						case 1:
							var _g6 = _g4.v;
							var _g7 = _g6.id;
							var _g8 = _g6.name;
							var _g9 = _g6.parent;
							var _g10 = _g6.qualifiers;
							var _g11 = _g6.type;
							switch(_g6.kind._hx_index) {
							case 0:case 1:case 2:
								var old1 = [this.constants.h[v[0].id]];
								undo.push((function(old,v) {
									return function() {
										if(old[0] == null) {
											_gthis.constants.remove(v[0].id);
										} else {
											_gthis.constants.h[v[0].id] = old[0];
										}
									};
								})(old1,v));
								this.constants.h[v[0].id] = e1.e;
								break;
							default:
								var old2 = [this.varMap.h[v[0].__id__]];
								if(old2[0] == null) {
									undo.push((function(v) {
										return function() {
											_gthis.varMap.remove(v[0]);
										};
									})(v));
								} else {
									this.varMap.remove(v[0]);
									undo.push((function(old,v) {
										return function() {
											_gthis.varMap.set(v[0],old[0]);
										};
									})(old2,v));
								}
								var v2 = this.mapVar(v[0]);
								outExprs.push({ e : hxsl_TExprDef.TVarDecl(v2,e1), t : hxsl_Type.TVoid, p : e1.p});
							}
							break;
						default:
							var old3 = [this.varMap.h[v[0].__id__]];
							if(old3[0] == null) {
								undo.push((function(v) {
									return function() {
										_gthis.varMap.remove(v[0]);
									};
								})(v));
							} else {
								this.varMap.remove(v[0]);
								undo.push((function(old,v) {
									return function() {
										_gthis.varMap.set(v[0],old[0]);
									};
								})(old3,v));
							}
							var v21 = this.mapVar(v[0]);
							outExprs.push({ e : hxsl_TExprDef.TVarDecl(v21,e1), t : hxsl_Type.TVoid, p : e1.p});
						}
					}
					var e1 = this.handleReturn(this.evalExpr(f.expr,false),true);
					var _g2 = 0;
					while(_g2 < undo.length) {
						var u = undo[_g2];
						++_g2;
						u();
					}
					var _g2 = e1.e;
					if(_g2._hx_index == 4) {
						var el = _g2.el;
						var _g2 = 0;
						while(_g2 < el.length) {
							var e2 = el[_g2];
							++_g2;
							outExprs.push(e2);
						}
					} else {
						outExprs.push(e1);
					}
					d = hxsl_TExprDef.TBlock(outExprs);
				} else {
					d = hxsl_TExprDef.TCall(c1,args);
				}
				break;
			case 2:
				var g = _g1.g;
				var v1 = this.evalCall(g,args,eargs,e.p);
				d = v1 != null ? v1 : hxsl_TExprDef.TCall(c1,args);
				break;
			default:
				d = hxsl_Error.t("Cannot eval non-static call expresssion '" + new hxsl_Printer().exprString(c1) + "'",c1.p);
			}
			break;
		case 9:
			var e1 = _g.e;
			var r = _g.regs;
			d = hxsl_TExprDef.TSwiz(this.evalExpr(e1),r.slice());
			break;
		case 10:
			var econd = _g.econd;
			var eif = _g.eif;
			var eelse = _g.eelse;
			var econd1 = this.evalExpr(econd);
			var _g1 = econd1.e;
			if(_g1._hx_index == 0) {
				var _g2 = _g1.c;
				if(_g2._hx_index == 1) {
					var b = _g2.b;
					d = b ? this.evalExpr(eif,isVal).e : eelse == null ? hxsl_TExprDef.TConst(hxsl_Const.CNull) : this.evalExpr(eelse,isVal).e;
				} else if(isVal && eelse != null && this.eliminateConditionals) {
					d = hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mix), t : e.t, p : e.p},[this.evalExpr(eelse,true),this.evalExpr(eif,true),{ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToFloat), t : hxsl_Type.TFun([]), p : econd1.p},[econd1]), t : hxsl_Type.TFloat, p : e.p}]);
				} else {
					eif = this.evalExpr(eif,isVal);
					if(eelse != null) {
						eelse = this.evalExpr(eelse,isVal);
						var _g1 = eelse.e;
						if(_g1._hx_index == 0 && _g1.c._hx_index == 0) {
							eelse = null;
						}
					}
					eif = this.ifBlock(eif);
					eelse = this.ifBlock(eelse);
					d = hxsl_TExprDef.TIf(econd1,eif,eelse);
				}
			} else if(isVal && eelse != null && this.eliminateConditionals) {
				d = hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mix), t : e.t, p : e.p},[this.evalExpr(eelse,true),this.evalExpr(eif,true),{ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToFloat), t : hxsl_Type.TFun([]), p : econd1.p},[econd1]), t : hxsl_Type.TFloat, p : e.p}]);
			} else {
				eif = this.evalExpr(eif,isVal);
				if(eelse != null) {
					eelse = this.evalExpr(eelse,isVal);
					var _g1 = eelse.e;
					if(_g1._hx_index == 0 && _g1.c._hx_index == 0) {
						eelse = null;
					}
				}
				eif = this.ifBlock(eif);
				eelse = this.ifBlock(eelse);
				d = hxsl_TExprDef.TIf(econd1,eif,eelse);
			}
			break;
		case 11:
			d = hxsl_TExprDef.TDiscard;
			break;
		case 12:
			var e1 = _g.e;
			d = hxsl_TExprDef.TReturn(e1 == null ? null : this.evalExpr(e1));
			break;
		case 13:
			var v1 = _g.v;
			var it = _g.it;
			var loop = _g.loop;
			var v2 = this.mapVar(v1);
			var it1 = this.evalExpr(it);
			var e1;
			var _g1 = it1.e;
			if(_g1._hx_index == 5) {
				var _g2 = _g1.e1;
				var _g3 = _g1.e2;
				if(_g1.op._hx_index == 21) {
					var _g1 = _g2.e;
					var _g4 = _g2.p;
					var _g4 = _g2.t;
					if(_g1._hx_index == 0) {
						var _g2 = _g1.c;
						if(_g2._hx_index == 2) {
							var _g1 = _g3.e;
							var _g4 = _g3.p;
							var _g4 = _g3.t;
							if(_g1._hx_index == 0) {
								var _g3 = _g1.c;
								if(_g3._hx_index == 2) {
									var len = _g3.v;
									var start = _g2.v;
									if(this.unrollLoops) {
										var out = [];
										var _g1 = start;
										var _g2 = len;
										while(_g1 < _g2) {
											var i = _g1++;
											this.constants.h[v1.id] = hxsl_TExprDef.TConst(hxsl_Const.CInt(i));
											out.push(this.evalExpr(loop,false));
										}
										this.constants.remove(v1.id);
										e1 = hxsl_TExprDef.TBlock(out);
									} else {
										e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
									}
								} else {
									e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
								}
							} else {
								e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
							}
						} else {
							e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
						}
					} else {
						e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
					}
				} else {
					e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
				}
			} else {
				e1 = hxsl_TExprDef.TFor(v2,it1,this.ifBlock(this.evalExpr(loop,false)));
			}
			this.varMap.remove(v1);
			d = e1;
			break;
		case 14:
			d = hxsl_TExprDef.TContinue;
			break;
		case 15:
			d = hxsl_TExprDef.TBreak;
			break;
		case 16:
			var e1 = _g.e;
			var e2 = _g.index;
			var e11 = this.evalExpr(e1);
			var e21 = this.evalExpr(e2);
			var _g1 = e11.e;
			var _g2 = e21.e;
			if(_g1._hx_index == 17) {
				if(_g2._hx_index == 0) {
					var _g3 = _g2.c;
					if(_g3._hx_index == 2) {
						var i = _g3.v;
						var el = _g1.el;
						d = i >= 0 && i < el.length ? el[i].e : hxsl_TExprDef.TArray(e11,e21);
					} else {
						d = hxsl_TExprDef.TArray(e11,e21);
					}
				} else {
					d = hxsl_TExprDef.TArray(e11,e21);
				}
			} else {
				d = hxsl_TExprDef.TArray(e11,e21);
			}
			break;
		case 17:
			var el = _g.el;
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < el.length) {
				var e1 = el[_g2];
				++_g2;
				_g1.push(this.evalExpr(e1));
			}
			d = hxsl_TExprDef.TArrayDecl(_g1);
			break;
		case 18:
			var e1 = _g.e;
			var cases = _g.cases;
			var def = _g.def;
			var e2 = this.evalExpr(e1);
			var _g1 = [];
			var _g2 = 0;
			while(_g2 < cases.length) {
				var c = cases[_g2];
				++_g2;
				var _g3 = [];
				var _g4 = 0;
				var _g5 = c.values;
				while(_g4 < _g5.length) {
					var v1 = _g5[_g4];
					++_g4;
					_g3.push(this.evalExpr(v1));
				}
				_g1.push({ values : _g3, expr : this.evalExpr(c.expr,isVal)});
			}
			var cases = _g1;
			var def1 = def == null ? null : this.evalExpr(def,isVal);
			var hasCase = false;
			var _g1 = e2.e;
			if(_g1._hx_index == 0) {
				var c = _g1.c;
				if(c._hx_index == 2) {
					var val = c.v;
					var _g1 = 0;
					while(_g1 < cases.length) {
						var c1 = cases[_g1];
						++_g1;
						var _g2 = 0;
						var _g3 = c1.values;
						while(_g2 < _g3.length) {
							var v1 = _g3[_g2];
							++_g2;
							var _g4 = v1.e;
							if(_g4._hx_index == 0) {
								var cst = _g4.c;
								switch(cst._hx_index) {
								case 2:
									var k = cst.v;
									if(k == val) {
										return c1.expr;
									}
									break;
								case 3:
									var k1 = cst.v;
									if(k1 == val) {
										return c1.expr;
									}
									break;
								default:
								}
							} else {
								hasCase = true;
							}
						}
					}
				} else {
					throw haxe_Exception.thrown("Unsupported switch constant " + Std.string(c));
				}
			} else {
				hasCase = true;
			}
			d = hasCase ? hxsl_TExprDef.TSwitch(e2,cases,def1) : def1 == null ? hxsl_TExprDef.TBlock([]) : def1.e;
			break;
		case 19:
			var cond = _g.e;
			var loop = _g.loop;
			var normalWhile = _g.normalWhile;
			var cond1 = this.evalExpr(cond);
			var loop1 = this.evalExpr(loop,false);
			d = hxsl_TExprDef.TWhile(cond1,this.ifBlock(loop1),normalWhile);
			break;
		case 20:
			var name = _g.m;
			var args = _g.args;
			var e1 = _g.e;
			var e2;
			if(name == "unroll") {
				var old4 = this.unrollLoops;
				this.unrollLoops = true;
				e2 = this.evalExpr(e1,isVal);
				this.unrollLoops = false;
			} else {
				e2 = this.evalExpr(e1,isVal);
			}
			d = hxsl_TExprDef.TMeta(name,args,e2);
			break;
		}
		return { e : d, t : e.t, p : e.p};
	}
	,__class__: hxsl_Eval
};
var hxsl__$Flatten_Alloc = function(g,t,pos,size) {
	this.g = g;
	this.t = t;
	this.pos = pos;
	this.size = size;
};
$hxClasses["hxsl._Flatten.Alloc"] = hxsl__$Flatten_Alloc;
hxsl__$Flatten_Alloc.__name__ = "hxsl._Flatten.Alloc";
hxsl__$Flatten_Alloc.prototype = {
	t: null
	,pos: null
	,size: null
	,g: null
	,v: null
	,__class__: hxsl__$Flatten_Alloc
};
var hxsl_ARead = $hxEnums["hxsl.ARead"] = { __ename__:"hxsl.ARead",__constructs__:null
	,AIndex: ($_=function(a) { return {_hx_index:0,a:a,__enum__:"hxsl.ARead",toString:$estr}; },$_._hx_name="AIndex",$_.__params__ = ["a"],$_)
	,AOffset: ($_=function(a,stride,delta) { return {_hx_index:1,a:a,stride:stride,delta:delta,__enum__:"hxsl.ARead",toString:$estr}; },$_._hx_name="AOffset",$_.__params__ = ["a","stride","delta"],$_)
};
hxsl_ARead.__constructs__ = [hxsl_ARead.AIndex,hxsl_ARead.AOffset];
hxsl_ARead.__empty_constructs__ = [];
var hxsl_Flatten = function() {
};
$hxClasses["hxsl.Flatten"] = hxsl_Flatten;
hxsl_Flatten.__name__ = "hxsl.Flatten";
hxsl_Flatten.prototype = {
	globals: null
	,params: null
	,outVars: null
	,varMap: null
	,econsts: null
	,consts: null
	,allocData: null
	,flatten: function(s,kind,constsToGlobal) {
		this.globals = [];
		this.params = [];
		this.outVars = [];
		if(constsToGlobal) {
			this.consts = [];
			var p = s.funs[0].expr.p;
			var gc = { id : hxsl_Tools.allocVarId(), name : "__consts__", kind : hxsl_VarKind.Global, type : null};
			this.econsts = { e : hxsl_TExprDef.TVar(gc), t : null, p : p};
			var s1 = s.name;
			var s2 = s.vars.slice();
			var _g = [];
			var _g1 = 0;
			var _g2 = s.funs;
			while(_g1 < _g2.length) {
				var f = _g2[_g1];
				++_g1;
				_g.push(this.mapFun(f,$bind(this,this.mapConsts)));
			}
			s = { name : s1, vars : s2, funs : _g};
			var _g = 0;
			var _g1 = s.vars;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				var _g2 = v.type;
				if(_g2._hx_index == 9) {
					var _g3 = _g2.size;
					this.allocConst(255,p);
				}
			}
			if(this.consts.length > 0) {
				gc.type = this.econsts.t = hxsl_Type.TArray(hxsl_Type.TFloat,hxsl_SizeDecl.SConst(this.consts.length));
				s.vars.push(gc);
			}
		}
		this.varMap = new haxe_ds_ObjectMap();
		this.allocData = new haxe_ds_ObjectMap();
		var _g = 0;
		var _g1 = s.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.gatherVar(v);
		}
		var prefix;
		switch(kind._hx_index) {
		case 0:
			prefix = "vertex";
			break;
		case 1:
			prefix = "fragment";
			break;
		default:
			throw haxe_Exception.thrown("assert");
		}
		this.pack(prefix + "Globals",hxsl_VarKind.Global,this.globals,hxsl_VecType.VFloat);
		this.pack(prefix + "Params",hxsl_VarKind.Param,this.params,hxsl_VecType.VFloat);
		var allVars = this.globals.concat(this.params);
		var textures = this.packTextures(prefix + "Textures",allVars,hxsl_Type.TSampler2D).concat(this.packTextures(prefix + "TexturesCube",allVars,hxsl_Type.TSamplerCube)).concat(this.packTextures(prefix + "TexturesArray",allVars,hxsl_Type.TSampler2DArray));
		this.packBuffers(allVars);
		var _g = [];
		var _g1 = 0;
		var _g2 = s.funs;
		while(_g1 < _g2.length) {
			var f = _g2[_g1];
			++_g1;
			_g.push(this.mapFun(f,$bind(this,this.mapExpr)));
		}
		var funs = _g;
		return { name : s.name, vars : this.outVars, funs : funs};
	}
	,mapFun: function(f,mapExpr) {
		return { kind : f.kind, ret : f.ret, args : f.args, ref : f.ref, expr : mapExpr(f.expr)};
	}
	,mapExpr: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			var a = this.varMap.h[v.__id__];
			if(a != null) {
				e = this.access(a,v.type,e.p,hxsl_ARead.AIndex(a));
			}
			break;
		case 16:
			var _g1 = _g.e;
			var _g2 = _g1.e;
			var _g3 = _g1.t;
			if(_g2._hx_index == 1) {
				var v = _g2.v;
				var vp = _g1.p;
				var eindex = _g.index;
				var _g = eindex.e;
				var e1;
				if(_g._hx_index == 0) {
					var _g1 = _g.c;
					if(_g1._hx_index == 2) {
						var _g = _g1.v;
						e1 = true;
					} else {
						e1 = false;
					}
				} else {
					e1 = false;
				}
				if(!e1) {
					var a = this.varMap.h[v.__id__];
					if(a != null) {
						var _g = v.type;
						if(_g._hx_index == 15) {
							var _g1 = _g.t;
							var _g2 = _g.size;
							var t = _g1;
							if(hxsl_Tools.isSampler(t)) {
								eindex = this.toInt(this.mapExpr(eindex));
								e = this.access(a,t,vp,hxsl_ARead.AOffset(a,1,eindex));
							} else {
								var t = _g1;
								var stride = this.varSize(t,a.t);
								if(stride == 0 || (stride & 3) != 0) {
									throw haxe_Exception.thrown(new hxsl_Error("Dynamic access to an Array which size is not 4 components-aligned is not allowed",e.p));
								}
								stride >>= 2;
								eindex = this.toInt(this.mapExpr(eindex));
								e = this.access(a,t,vp,hxsl_ARead.AOffset(a,stride,stride == 1 ? eindex : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpMult,eindex,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(stride)), t : hxsl_Type.TInt, p : vp}), t : hxsl_Type.TInt, p : vp}));
							}
						} else {
							throw haxe_Exception.thrown("assert");
						}
					}
				} else {
					e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
				}
			} else {
				e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
			}
			break;
		default:
			e = hxsl_Tools.map(e,$bind(this,this.mapExpr));
		}
		return this.optimize(e);
	}
	,mapConsts: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var c = _g.c;
			switch(c._hx_index) {
			case 2:
				var v = c.v;
				return this.allocConst(v,e.p);
			case 3:
				var v = c.v;
				return this.allocConst(v,e.p);
			default:
				return e;
			}
			break;
		case 2:
			var g = _g.g;
			switch(g._hx_index) {
			case 0:
				this.allocConst(Math.PI / 180,e.p);
				break;
			case 1:
				this.allocConst(180 / Math.PI,e.p);
				break;
			case 9:
				this.allocConst(1.4426950408889634,e.p);
				break;
			case 10:
				this.allocConst(0.6931471805599453,e.p);
				break;
			case 24:
				this.allocConst(1,e.p);
				break;
			case 26:
				this.allocConst(2.0,e.p);
				this.allocConst(3.0,e.p);
				break;
			case 54:
				this.allocConsts([1,255,65025,16581375],e.p);
				this.allocConsts([0.00392156862745098,0.00392156862745098,0.00392156862745098,0],e.p);
				break;
			case 55:
				this.allocConsts([1,0.00392156862745098,1.5378700499807768e-005,6.0308629411010845e-008],e.p);
				break;
			case 56:
				this.allocConst(1,e.p);
				this.allocConst(0.5,e.p);
				break;
			case 57:
				this.allocConst(0.5,e.p);
				break;
			case 58:
				this.allocConsts([0.5,0.5],e.p);
				this.allocConsts([0.5,-0.5],e.p);
				break;
			case 59:
				this.allocConsts([2,-2],e.p);
				this.allocConsts([-1,1],e.p);
				break;
			default:
			}
			break;
		case 5:
			var _g1 = _g.e1;
			var _g1 = _g.e2;
			if(_g.op._hx_index == 1) {
				var _g2 = _g1.e;
				var _g2 = _g1.p;
				if(_g1.t._hx_index == 8) {
					this.allocConst(1,e.p);
				}
			}
			break;
		case 8:
			var _g1 = _g.e;
			var _g2 = _g.args;
			var _g3 = _g1.e;
			var _g4 = _g1.p;
			var _g4 = _g1.t;
			if(_g3._hx_index == 2) {
				if(_g3.g._hx_index == 42) {
					if(_g2.length == 2) {
						var _g1 = _g2[0];
						var _g3 = _g2[1];
						var _g2 = _g1.e;
						var _g4 = _g1.p;
						var _g4 = _g1.t;
						if(_g2._hx_index == 1) {
							var _g1 = _g2.v;
							var _g2 = _g1.id;
							var _g2 = _g1.name;
							var _g2 = _g1.parent;
							var _g2 = _g1.qualifiers;
							var _g2 = _g1.type;
							switch(_g1.kind._hx_index) {
							case 0:
								if(_g4._hx_index == 5) {
									if(_g4.size == 3) {
										if(_g4.t._hx_index == 1) {
											var _g1 = _g3.e;
											var _g2 = _g3.p;
											var _g2 = _g3.t;
											if(_g1._hx_index == 0) {
												var _g2 = _g1.c;
												if(_g2._hx_index == 2) {
													if(_g2.v == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 1:
								if(_g4._hx_index == 5) {
									if(_g4.size == 3) {
										if(_g4.t._hx_index == 1) {
											var _g1 = _g3.e;
											var _g2 = _g3.p;
											var _g2 = _g3.t;
											if(_g1._hx_index == 0) {
												var _g2 = _g1.c;
												if(_g2._hx_index == 2) {
													if(_g2.v == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 2:
								if(_g4._hx_index == 5) {
									if(_g4.size == 3) {
										if(_g4.t._hx_index == 1) {
											var _g1 = _g3.e;
											var _g2 = _g3.p;
											var _g2 = _g3.t;
											if(_g1._hx_index == 0) {
												var _g2 = _g1.c;
												if(_g2._hx_index == 2) {
													if(_g2.v == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							case 3:
								if(_g4._hx_index == 5) {
									if(_g4.size == 3) {
										if(_g4.t._hx_index == 1) {
											var _g1 = _g3.e;
											var _g2 = _g3.p;
											var _g2 = _g3.t;
											if(_g1._hx_index == 0) {
												var _g2 = _g1.c;
												if(_g2._hx_index == 2) {
													if(_g2.v == 1) {
														return e;
													}
												}
											}
										}
									}
								}
								break;
							default:
							}
						}
					}
				}
			}
			break;
		case 16:
			var _g1 = _g.e;
			var _g2 = _g.index;
			var _g = _g2.e;
			var _g3 = _g2.p;
			var _g3 = _g2.t;
			if(_g._hx_index == 0) {
				var _g3 = _g.c;
				if(_g3._hx_index == 2) {
					var _g = _g3.v;
					var eindex = _g2;
					var ea = _g1;
					return { e : hxsl_TExprDef.TArray(this.mapConsts(ea),eindex), t : e.t, p : e.p};
				} else {
					var eindex = _g2;
					var ea = _g1;
					var _g = ea.t;
					if(_g._hx_index == 15) {
						var _g3 = _g.size;
						var t = _g.t;
						var stride = this.varSize(t,hxsl_VecType.VFloat) >> 2;
						this.allocConst(stride,e.p);
					}
				}
			} else {
				var eindex = _g2;
				var ea = _g1;
				var _g = ea.t;
				if(_g._hx_index == 15) {
					var _g1 = _g.size;
					var t = _g.t;
					var stride = this.varSize(t,hxsl_VecType.VFloat) >> 2;
					this.allocConst(stride,e.p);
				}
			}
			break;
		default:
		}
		return hxsl_Tools.map(e,$bind(this,this.mapConsts));
	}
	,allocConst: function(v,p) {
		var index = this.consts.indexOf(v);
		if(index < 0) {
			index = this.consts.length;
			this.consts.push(v);
		}
		return { e : hxsl_TExprDef.TArray(this.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p};
	}
	,allocConsts: function(va,p) {
		var _gthis = this;
		var pad = va.length - 1 & 3;
		var index = -1;
		var _g = 0;
		var _g1 = this.consts.length - (va.length - 1);
		while(_g < _g1) {
			var i = _g++;
			if(i >> 2 != i + pad >> 2) {
				continue;
			}
			var found = true;
			var _g2 = 0;
			var _g3 = va.length;
			while(_g2 < _g3) {
				var j = _g2++;
				if(this.consts[i + j] != va[j]) {
					found = false;
					break;
				}
			}
			if(found) {
				index = i;
				break;
			}
		}
		if(index < 0) {
			while(this.consts.length >> 2 != this.consts.length + pad >> 2) this.consts.push(0);
			index = this.consts.length;
			var _g = 0;
			while(_g < va.length) {
				var v = va[_g];
				++_g;
				this.consts.push(v);
			}
		}
		switch(va.length) {
		case 1:
			return { e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p};
		case 2:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec2), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(2,hxsl_VecType.VFloat), p : p};
		case 3:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec3), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 2)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(3,hxsl_VecType.VFloat), p : p};
		case 4:
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec4), t : hxsl_Type.TVoid, p : p},[{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 1)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 3)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p},{ e : hxsl_TExprDef.TArray(_gthis.econsts,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index + 4)), t : hxsl_Type.TInt, p : p}), t : hxsl_Type.TFloat, p : p}]), t : hxsl_Type.TVec(4,hxsl_VecType.VFloat), p : p};
		default:
			throw haxe_Exception.thrown("assert");
		}
	}
	,access: function(a,t,pos,acc) {
		var _gthis = this;
		switch(t._hx_index) {
		case 6:
			var tmp = this.access(a,hxsl_Type.TMat3x4,pos,acc);
			return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat3), t : hxsl_Type.TFun([]), p : pos},[tmp]), t : hxsl_Type.TMat3, p : pos};
		case 7:
			var tmp = hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat4);
			var tmp1 = hxsl_Type.TFun([]);
			var tmp2;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var a1 = acc.a;
				var stride = acc.stride;
				var delta = acc.delta;
				var index = a1.t == null ? a1.pos : a1.pos >> 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp3;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 1)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var a1 = acc.a;
				var stride = acc.stride;
				var delta = acc.delta;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 1;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp4;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var a1 = acc.a;
				var stride = acc.stride;
				var delta = acc.delta;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp5;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp5 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 3)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var a1 = acc.a;
				var stride = acc.stride;
				var delta = acc.delta;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 3;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp5 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			return { e : hxsl_TExprDef.TCall({ e : tmp, t : tmp1, p : pos},[tmp2,tmp3,tmp4,tmp5]), t : hxsl_Type.TMat4, p : pos};
		case 8:
			var tmp = hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mat3x4);
			var tmp1 = hxsl_Type.TFun([]);
			var tmp2;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var a1 = acc.a;
				var stride = acc.stride;
				var delta = acc.delta;
				var index = a1.t == null ? a1.pos : a1.pos >> 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp2 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp3;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 1)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var a1 = acc.a;
				var stride = acc.stride;
				var delta = acc.delta;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 1;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp3 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			var tmp4;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs + 2)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var a1 = acc.a;
				var stride = acc.stride;
				var delta = acc.delta;
				var index = (a1.t == null ? a1.pos : a1.pos >> 2) + 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				tmp4 = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			return { e : hxsl_TExprDef.TCall({ e : tmp, t : tmp1, p : pos},[tmp2,tmp3,tmp4]), t : hxsl_Type.TMat3x4, p : pos};
		case 15:
			var _g = t.size;
			if(_g._hx_index == 0) {
				var len = _g.v;
				var t1 = t.t;
				var stride = a.size / len | 0;
				var _g = [];
				var _g1 = 0;
				var _g2 = len;
				while(_g1 < _g2) {
					var i = _g1++;
					var a1 = new hxsl__$Flatten_Alloc(a.g,a.t,a.pos + stride * i,stride);
					_g.push(this.access(a1,t1,pos,hxsl_ARead.AIndex(a1)));
				}
				var earr = _g;
				return { e : hxsl_TExprDef.TArrayDecl(earr), t : t1, p : pos};
			} else {
				if(hxsl_Tools.isSampler(t)) {
					var e;
					switch(acc._hx_index) {
					case 0:
						var a1 = acc.a;
						var offs = a1.t == null ? a1.pos : a1.pos >> 2;
						e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
						break;
					case 1:
						var a1 = acc.a;
						var stride = acc.stride;
						var delta = acc.delta;
						var index = a1.t == null ? a1.pos : a1.pos >> 2;
						var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
						e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
						break;
					}
					e.t = t;
					return e;
				}
				var size = this.varSize(t,a.t);
				if(size > 4) {
					return hxsl_Error.t("Access not supported for " + hxsl_Tools.toString(t),null);
				}
				var e;
				switch(acc._hx_index) {
				case 0:
					var a1 = acc.a;
					var offs = a1.t == null ? a1.pos : a1.pos >> 2;
					e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
					break;
				case 1:
					var a1 = acc.a;
					var stride = acc.stride;
					var delta = acc.delta;
					var index = a1.t == null ? a1.pos : a1.pos >> 2;
					var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
					e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
					break;
				}
				if(size == 4) {
					if(a.pos == -1) {
						return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec4), t : hxsl_Type.TFun([]), p : pos},[{ e : hxsl_TExprDef.TConst(hxsl_Const.CFloat(0)), t : hxsl_Type.TFloat, p : pos}]), t : hxsl_Type.TVec(4,hxsl_VecType.VFloat), p : pos};
					}
					if((a.pos & 3) != 0) {
						throw haxe_Exception.thrown("assert");
					}
				} else {
					var sw = [];
					var _g = 0;
					var _g1 = size;
					while(_g < _g1) {
						var i = _g++;
						sw.push(hxsl_Tools.SWIZ[i + (a.pos & 3)]);
					}
					e = { e : hxsl_TExprDef.TSwiz(e,sw), t : t, p : pos};
				}
				switch(t._hx_index) {
				case 1:
					e.t = hxsl_Type.TFloat;
					e = this.toInt(e);
					break;
				case 5:
					if(t.t._hx_index == 0) {
						var size = t.size;
						e.t = hxsl_Type.TVec(size,hxsl_VecType.VFloat);
						e = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal([hxsl_TGlobal.IVec2,hxsl_TGlobal.IVec3,hxsl_TGlobal.IVec4][size - 2]), t : hxsl_Type.TFun([]), p : pos},[e]), t : t, p : pos};
					}
					break;
				default:
				}
				return e;
			}
			break;
		default:
			if(hxsl_Tools.isSampler(t)) {
				var e;
				switch(acc._hx_index) {
				case 0:
					var a1 = acc.a;
					var offs = a1.t == null ? a1.pos : a1.pos >> 2;
					e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
					break;
				case 1:
					var a1 = acc.a;
					var stride = acc.stride;
					var delta = acc.delta;
					var index = a1.t == null ? a1.pos : a1.pos >> 2;
					var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
					e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
					break;
				}
				e.t = t;
				return e;
			}
			var size = this.varSize(t,a.t);
			if(size > 4) {
				return hxsl_Error.t("Access not supported for " + hxsl_Tools.toString(t),null);
			}
			var e;
			switch(acc._hx_index) {
			case 0:
				var a1 = acc.a;
				var offs = a1.t == null ? a1.pos : a1.pos >> 2;
				e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(offs)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			case 1:
				var a1 = acc.a;
				var stride = acc.stride;
				var delta = acc.delta;
				var index = a1.t == null ? a1.pos : a1.pos >> 2;
				var offset = index == 0 ? delta : { e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAdd,delta,{ e : hxsl_TExprDef.TConst(hxsl_Const.CInt(index)), t : hxsl_Type.TInt, p : pos}), t : hxsl_Type.TInt, p : pos};
				e = { e : hxsl_TExprDef.TArray({ e : hxsl_TExprDef.TVar(a1.g), t : a1.g.type, p : pos},offset), t : hxsl_Type.TVec(4,a1.t), p : pos};
				break;
			}
			if(size == 4) {
				if(a.pos == -1) {
					return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Vec4), t : hxsl_Type.TFun([]), p : pos},[{ e : hxsl_TExprDef.TConst(hxsl_Const.CFloat(0)), t : hxsl_Type.TFloat, p : pos}]), t : hxsl_Type.TVec(4,hxsl_VecType.VFloat), p : pos};
				}
				if((a.pos & 3) != 0) {
					throw haxe_Exception.thrown("assert");
				}
			} else {
				var sw = [];
				var _g = 0;
				var _g1 = size;
				while(_g < _g1) {
					var i = _g++;
					sw.push(hxsl_Tools.SWIZ[i + (a.pos & 3)]);
				}
				e = { e : hxsl_TExprDef.TSwiz(e,sw), t : t, p : pos};
			}
			switch(t._hx_index) {
			case 1:
				e.t = hxsl_Type.TFloat;
				e = this.toInt(e);
				break;
			case 5:
				if(t.t._hx_index == 0) {
					var size = t.size;
					e.t = hxsl_Type.TVec(size,hxsl_VecType.VFloat);
					e = { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal([hxsl_TGlobal.IVec2,hxsl_TGlobal.IVec3,hxsl_TGlobal.IVec4][size - 2]), t : hxsl_Type.TFun([]), p : pos},[e]), t : t, p : pos};
				}
				break;
			default:
			}
			return e;
		}
	}
	,toInt: function(e) {
		if(e.t == hxsl_Type.TInt) {
			return e;
		}
		return { e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.ToInt), t : hxsl_Type.TFun([]), p : e.p},[e]), t : hxsl_Type.TInt, p : e.p};
	}
	,optimize: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 8:
			var _g1 = _g.e;
			var _g2 = _g.args;
			var _g3 = _g1.e;
			var _g4 = _g1.p;
			var _g4 = _g1.t;
			if(_g3._hx_index == 2) {
				if(_g3.g._hx_index == 52) {
					if(_g2.length == 1) {
						var _g1 = _g2[0];
						var _g2 = _g1.e;
						var _g3 = _g1.p;
						var _g3 = _g1.t;
						if(_g2._hx_index == 8) {
							var _g1 = _g2.e;
							var _g3 = _g1.e;
							var _g4 = _g1.p;
							var _g4 = _g1.t;
							if(_g3._hx_index == 2) {
								if(_g3.g._hx_index == 51) {
									var args = _g2.args;
									var rem = 0;
									var size = 0;
									while(size < 4) {
										var t = args[args.length - 1 - rem].t;
										size += this.varSize(t,hxsl_VecType.VFloat);
										++rem;
									}
									if(size == 4) {
										var _g1 = 0;
										var _g2 = rem;
										while(_g1 < _g2) {
											var i = _g1++;
											args.pop();
										}
										var emat;
										var _g1 = e.e;
										if(_g1._hx_index == 8) {
											var _g2 = _g1.args;
											var e1 = _g1.e;
											emat = e1;
										} else {
											throw haxe_Exception.thrown("assert");
										}
										return { e : hxsl_TExprDef.TCall(emat,args), t : e.t, p : e.p};
									}
								}
							}
						}
					}
				}
			}
			break;
		case 16:
			var _g1 = _g.e;
			var _g2 = _g.index;
			var _g = _g1.e;
			var _g3 = _g1.p;
			var _g3 = _g1.t;
			if(_g._hx_index == 17) {
				var _g1 = _g2.e;
				var _g3 = _g2.p;
				var _g3 = _g2.t;
				if(_g1._hx_index == 0) {
					var _g2 = _g1.c;
					if(_g2._hx_index == 2) {
						var i = _g2.v;
						var el = _g.el;
						if(i >= 0 && i < el.length) {
							return el[i];
						}
						hxsl_Error.t("Reading outside array bounds",e.p);
					}
				}
			}
			break;
		default:
		}
		return e;
	}
	,packTextures: function(name,vars,t) {
		var alloc = [];
		var g = { id : hxsl_Tools.allocVarId(), name : name, type : t, kind : hxsl_VarKind.Param};
		var pos = 0;
		var samplers = [];
		var _g = 0;
		while(_g < vars.length) {
			var v = vars[_g];
			++_g;
			var count = 1;
			if(v.type != t) {
				var _g1 = v.type;
				switch(_g1._hx_index) {
				case 15:
					var _g2 = _g1.size;
					if(_g2._hx_index == 0) {
						var n = _g2.v;
						var t2 = _g1.t;
						if(t2 == t) {
							count = n;
						} else {
							continue;
						}
					} else {
						continue;
					}
					break;
				case 17:
					var _g3 = _g1.size;
					if(t != hxsl_Type.TSampler2D) {
						continue;
					}
					break;
				default:
					continue;
				}
			}
			var a = new hxsl__$Flatten_Alloc(g,null,pos,count);
			a.v = v;
			if(v.qualifiers != null) {
				var _g4 = 0;
				var _g5 = v.qualifiers;
				while(_g4 < _g5.length) {
					var q = _g5[_g4];
					++_g4;
					if(q._hx_index == 12) {
						var name = q.name;
						var _g6 = 0;
						var _g7 = count;
						while(_g6 < _g7) {
							var i = _g6++;
							samplers[pos + i] = name;
						}
					}
				}
			}
			this.varMap.set(v,a);
			alloc.push(a);
			pos += count;
		}
		g.type = hxsl_Type.TArray(t,hxsl_SizeDecl.SConst(pos));
		if(samplers.length > 0) {
			var _g = 0;
			var _g1 = pos;
			while(_g < _g1) {
				var i = _g++;
				if(samplers[i] == null) {
					samplers[i] = "";
				}
			}
			if(g.qualifiers == null) {
				g.qualifiers = [];
			}
			g.qualifiers.push(hxsl_VarQualifier.Sampler(samplers.join(",")));
		}
		if(alloc.length > 0) {
			this.outVars.push(g);
			this.allocData.set(g,alloc);
		}
		return alloc;
	}
	,packBuffers: function(vars) {
		var alloc = [];
		var g = { id : hxsl_Tools.allocVarId(), name : "buffers", type : hxsl_Type.TVoid, kind : hxsl_VarKind.Param};
		var _g = 0;
		while(_g < vars.length) {
			var v = vars[_g];
			++_g;
			var _g1 = v.type;
			var tmp;
			if(_g1._hx_index == 16) {
				var _g2 = _g1.t;
				var _g3 = _g1.size;
				tmp = true;
			} else {
				tmp = false;
			}
			if(tmp) {
				var a = new hxsl__$Flatten_Alloc(g,null,alloc.length,1);
				a.v = v;
				alloc.push(a);
				this.outVars.push(v);
			}
		}
		g.type = hxsl_Type.TArray(hxsl_Type.TBuffer(hxsl_Type.TVoid,hxsl_SizeDecl.SConst(0)),hxsl_SizeDecl.SConst(alloc.length));
		this.allocData.set(g,alloc);
	}
	,pack: function(name,kind,vars,t) {
		var alloc = [];
		var apos = 0;
		var g = { id : hxsl_Tools.allocVarId(), name : name, type : hxsl_Type.TVec(0,t), kind : kind};
		var _g = 0;
		while(_g < vars.length) {
			var v = vars[_g];
			++_g;
			var tmp;
			if(!hxsl_Tools.isSampler(v.type)) {
				var _g1 = v.type;
				if(_g1._hx_index == 16) {
					var _g2 = _g1.t;
					var _g3 = _g1.size;
					tmp = true;
				} else {
					tmp = false;
				}
			} else {
				tmp = true;
			}
			if(tmp) {
				continue;
			}
			var _g4 = v.type;
			if(_g4._hx_index == 15) {
				var _g5 = _g4.size;
				var t1 = _g4.t;
				if(hxsl_Tools.isSampler(t1)) {
					continue;
				}
			}
			var size = this.varSize(v.type,t);
			if(size == 0) {
				var a = new hxsl__$Flatten_Alloc(g,t,-1,size);
				a.v = v;
				this.varMap.set(v,a);
				continue;
			}
			var best = null;
			var _g6 = 0;
			while(_g6 < alloc.length) {
				var a1 = alloc[_g6];
				++_g6;
				if(a1.v == null && a1.size >= size && (best == null || best.size > a1.size)) {
					best = a1;
				}
			}
			if(best != null) {
				var free = best.size - size;
				if(free > 0) {
					var i = alloc.indexOf(best);
					var a2 = new hxsl__$Flatten_Alloc(g,t,best.pos + size,free);
					alloc.splice(i + 1,0,a2);
					best.size = size;
				}
				best.v = v;
				this.varMap.set(v,best);
			} else {
				var a3 = new hxsl__$Flatten_Alloc(g,t,apos,size);
				apos += size;
				a3.v = v;
				this.varMap.set(v,a3);
				alloc.push(a3);
				var pad = (4 - size % 4) % 4;
				if(pad > 0) {
					var a4 = new hxsl__$Flatten_Alloc(g,t,apos,pad);
					apos += pad;
					alloc.push(a4);
				}
			}
		}
		g.type = hxsl_Type.TArray(hxsl_Type.TVec(4,t),hxsl_SizeDecl.SConst(apos >> 2));
		if(apos > 0) {
			this.outVars.push(g);
			this.allocData.set(g,alloc);
		}
		return g;
	}
	,varSize: function(v,t) {
		switch(v._hx_index) {
		case 1:case 3:
			if(t == hxsl_VecType.VFloat) {
				return 1;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 5:
			var n = v.size;
			var t2 = v.t;
			if(t == t2) {
				return n;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 7:
			if(t == hxsl_VecType.VFloat) {
				return 16;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 6:case 8:
			if(t == hxsl_VecType.VFloat) {
				return 12;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		case 15:
			var _g = v.size;
			if(_g._hx_index == 0) {
				var n = _g.v;
				var at = v.t;
				return this.varSize(at,t) * n;
			} else {
				throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
			}
			break;
		default:
			throw haxe_Exception.thrown(hxsl_Tools.toString(v) + " size unknown for type " + Std.string(t));
		}
	}
	,gatherVar: function(v) {
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = 0;
			while(_g < vl.length) {
				var v1 = vl[_g];
				++_g;
				this.gatherVar(v1);
			}
		} else {
			switch(v.kind._hx_index) {
			case 0:
				if(hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.PerObject)) {
					this.params.push(v);
				} else {
					this.globals.push(v);
				}
				break;
			case 2:
				this.params.push(v);
				break;
			default:
				this.outVars.push(v);
			}
		}
	}
	,__class__: hxsl_Flatten
};
var hxsl_Globals = function() {
	this.channels = [];
	this.map = new haxe_ds_IntMap();
};
$hxClasses["hxsl.Globals"] = hxsl_Globals;
hxsl_Globals.__name__ = "hxsl.Globals";
hxsl_Globals.allocID = function(path) {
	if(hxsl_Globals.MAP == null) {
		hxsl_Globals.MAP = new haxe_ds_StringMap();
		hxsl_Globals.ALL = [];
	}
	var id = hxsl_Globals.MAP.h[path];
	if(id == null) {
		id = hxsl_Globals.ALL.length;
		hxsl_Globals.ALL.push(path);
		hxsl_Globals.MAP.h[path] = id;
	}
	return id;
};
hxsl_Globals.prototype = {
	map: null
	,channels: null
	,maxChannels: null
	,set: function(path,v) {
		var this1 = this.map;
		var key = hxsl_Globals.allocID(path);
		this1.h[key] = v;
	}
	,allocChannelID: function(t) {
		var _g = 0;
		var _g1 = this.maxChannels;
		while(_g < _g1) {
			var i = _g++;
			if(this.channels[i] == t) {
				return i;
			}
		}
		if(this.maxChannels == 1 << hxsl_Tools.MAX_CHANNELS_BITS) {
			throw haxe_Exception.thrown("Too many unique channels");
		}
		var i = this.maxChannels++;
		this.channels[i] = t;
		return i;
	}
	,__class__: hxsl_Globals
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var hxsl_GlslOut = function() {
	this.outIndex = 0;
	this.uniformBuffer = 0;
	this.exprIds = 0;
	this.varNames = new haxe_ds_IntMap();
	this.allNames = new haxe_ds_StringMap();
};
$hxClasses["hxsl.GlslOut"] = hxsl_GlslOut;
hxsl_GlslOut.__name__ = "hxsl.GlslOut";
hxsl_GlslOut.prototype = {
	buf: null
	,exprIds: null
	,exprValues: null
	,locals: null
	,decls: null
	,isVertex: null
	,allNames: null
	,outIndexes: null
	,uniformBuffer: null
	,outIndex: null
	,varNames: null
	,glES: null
	,version: null
	,intelDriverFix: null
	,decl: function(s) {
		var _g = 0;
		var _g1 = this.decls;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d == s) {
				return;
			}
		}
		if(HxOverrides.cca(s,0) == 35) {
			this.decls.unshift(s);
		} else {
			this.decls.push(s);
		}
	}
	,addType: function(t) {
		switch(t._hx_index) {
		case 0:
			this.buf.b += Std.string("void");
			break;
		case 1:
			this.buf.b += Std.string("int");
			break;
		case 2:
			this.buf.b += Std.string("bool");
			break;
		case 3:
			this.buf.b += Std.string("float");
			break;
		case 4:
			this.buf.b += Std.string("string");
			break;
		case 5:
			var size = t.size;
			var k = t.t;
			switch(k._hx_index) {
			case 0:
				this.buf.b += Std.string("i");
				break;
			case 1:
				break;
			case 2:
				this.buf.b += Std.string("b");
				break;
			}
			this.buf.b += Std.string("vec");
			this.buf.b += Std.string(size);
			break;
		case 6:
			this.buf.b += Std.string("mat3");
			break;
		case 7:
			this.buf.b += Std.string("mat4");
			break;
		case 8:
			this.decl(hxsl_GlslOut.MAT34);
			this.buf.b += Std.string("_mat3x4");
			break;
		case 9:
			var n = t.size;
			this.buf.b += Std.string("vec");
			this.buf.b += Std.string(n);
			break;
		case 10:
			this.buf.b += Std.string("sampler2D");
			break;
		case 11:
			this.buf.b += Std.string("sampler2DArray");
			if(this.glES != null) {
				this.decl("precision lowp sampler2DArray;");
			}
			break;
		case 12:
			this.buf.b += Std.string("samplerCube");
			break;
		case 13:
			var vl = t.vl;
			this.buf.b += Std.string("struct { ");
			var _g = 0;
			while(_g < vl.length) {
				var v = vl[_g];
				++_g;
				this.addVar(v);
				this.buf.b += Std.string(";");
			}
			this.buf.b += Std.string(" }");
			break;
		case 14:
			var _g = t.variants;
			this.buf.b += Std.string("function");
			break;
		case 15:
			var t1 = t.t;
			var size = t.size;
			this.addType(t1);
			this.buf.b += Std.string("[");
			switch(size._hx_index) {
			case 0:
				var _g = size.v;
				if(_g == 1) {
					if(this.intelDriverFix) {
						this.buf.b += Std.string(2);
					} else {
						var v = _g;
						this.buf.b += Std.string(v);
					}
				} else {
					var v = _g;
					this.buf.b += Std.string(v);
				}
				break;
			case 1:
				var v = size.v;
				var v1 = this.varName(v);
				this.buf.b += Std.string(v1);
				break;
			}
			this.buf.b += Std.string("]");
			break;
		case 16:
			var _g = t.t;
			var _g = t.size;
			throw haxe_Exception.thrown("assert");
		case 17:
			var n = t.size;
			this.buf.b += Std.string("channel" + n);
			break;
		case 18:
			this.buf.b += Std.string("mat2");
			break;
		}
	}
	,addVar: function(v) {
		var _g = v.type;
		switch(_g._hx_index) {
		case 15:
			var t = _g.t;
			var size = _g.size;
			var old = v.type;
			v.type = t;
			this.addVar(v);
			v.type = old;
			this.buf.b += Std.string("[");
			switch(size._hx_index) {
			case 0:
				var _g1 = size.v;
				if(_g1 == 1) {
					if(this.intelDriverFix) {
						this.buf.b += Std.string(2);
					} else {
						var n = _g1;
						this.buf.b += Std.string(n);
					}
				} else {
					var n = _g1;
					this.buf.b += Std.string(n);
				}
				break;
			case 1:
				var v1 = size.v;
				var v2 = this.varName(v1);
				this.buf.b += Std.string(v2);
				break;
			}
			this.buf.b += Std.string("]");
			break;
		case 16:
			var t = _g.t;
			var size = _g.size;
			this.buf.b += Std.string((this.isVertex ? "vertex_" : "") + "uniform_buffer" + this.uniformBuffer++);
			this.buf.b += Std.string(" { ");
			v.type = hxsl_Type.TArray(t,size);
			this.addVar(v);
			v.type = hxsl_Type.TBuffer(t,size);
			this.buf.b += Std.string("; }");
			break;
		default:
			this.addType(v.type);
			this.buf.b += Std.string(" ");
			var v1 = this.varName(v);
			this.buf.b += Std.string(v1);
		}
	}
	,addValue: function(e,tabs) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 4:
			var el = _g.el;
			var name = "val" + this.exprIds++;
			var tmp = this.buf;
			this.buf = new StringBuf();
			this.addType(e.t);
			this.buf.b += Std.string(" ");
			this.buf.b += Std.string(name);
			this.buf.b += Std.string("(void)");
			var el2 = el.slice();
			var last = el2[el2.length - 1];
			el2[el2.length - 1] = { e : hxsl_TExprDef.TReturn(last), t : e.t, p : last.p};
			var e2 = { t : hxsl_Type.TVoid, e : hxsl_TExprDef.TBlock(el2), p : e.p};
			this.addExpr(e2,"");
			this.exprValues.push(this.buf.b);
			this.buf = tmp;
			this.buf.b += Std.string(name);
			this.buf.b += Std.string("()");
			break;
		case 10:
			var econd = _g.econd;
			var eif = _g.eif;
			var eelse = _g.eelse;
			this.buf.b += Std.string("( ");
			this.addValue(econd,tabs);
			this.buf.b += Std.string(" ) ? ");
			this.addValue(eif,tabs);
			this.buf.b += Std.string(" : ");
			this.addValue(eelse,tabs);
			break;
		case 20:
			var _g1 = _g.m;
			var _g1 = _g.args;
			var e1 = _g.e;
			this.addValue(e1,tabs);
			break;
		default:
			this.addExpr(e,tabs);
		}
	}
	,addBlock: function(e,tabs) {
		this.addExpr(e,tabs);
	}
	,getFunName: function(g,args,rt) {
		switch(g._hx_index) {
		case 20:
			if(rt == hxsl_Type.TInt && this.glES != null) {
				this.decl("int _imod( int x, int y ) { return int(mod(float(x),float(y))); }");
				return "_imod";
			}
			break;
		case 33:
			var _g = args[0].t;
			switch(_g._hx_index) {
			case 10:case 11:
				if(this.glES != null && this.glES <= 2) {
					return "texture2D";
				}
				break;
			case 12:
				if(this.glES != null && this.glES <= 2) {
					return "textureCube";
				}
				break;
			case 17:
				var _g1 = _g.size;
				if(this.glES != null && this.glES <= 2) {
					return "texture2D";
				}
				break;
			default:
			}
			break;
		case 34:
			var _g = args[0].t;
			switch(_g._hx_index) {
			case 10:case 11:
				if(this.glES != null && this.glES <= 2) {
					this.decl("#extension GL_EXT_shader_texture_lod : enable");
					return "texture2DLodEXT";
				}
				break;
			case 12:
				if(this.glES != null && this.glES <= 2) {
					this.decl("#extension GL_EXT_shader_texture_lod : enable");
					return "textureCubeLodEXT";
				}
				break;
			case 17:
				var _g1 = _g.size;
				if(this.glES != null && this.glES <= 2) {
					this.decl("#extension GL_EXT_shader_texture_lod : enable");
					return "texture2DLodEXT";
				}
				break;
			default:
			}
			break;
		case 35:
			return "texelFetch";
		case 36:
			var _g = args[0].t;
			switch(_g._hx_index) {
			case 10:
				this.decl("vec2 _textureSize(sampler2D sampler, int lod) { return vec2(textureSize(sampler, lod)); }");
				break;
			case 11:
				this.decl("vec3 _textureSize(sampler2DArray sampler, int lod) { return vec3(textureSize(sampler, lod)); }");
				break;
			case 12:
				this.decl("vec2 _textureSize(samplerCube sampler, int lod) { return vec2(textureSize(sampler, lod)); }");
				break;
			case 17:
				var _g1 = _g.size;
				this.decl("vec2 _textureSize(sampler2D sampler, int lod) { return vec2(textureSize(sampler, lod)); }");
				break;
			default:
			}
			return "_textureSize";
		case 50:
			if(args[0].t == hxsl_Type.TMat3x4) {
				this.decl(hxsl_GlslOut.MAT34);
				this.decl("mat3 _mat3( _mat3x4 v ) { return mat3(v.a.xyz,v.b.xyz,v.c.xyz); }");
				return "_mat3";
			}
			break;
		case 52:
			this.decl(hxsl_GlslOut.MAT34);
			if(args.length == 1) {
				this.decl("_mat3x4 mat_to_34( mat4 m ) { return _mat3x4(m[0],m[1],m[2]); }");
				return "mat_to_34";
			}
			break;
		case 54:
			this.decl("vec4 pack( float v ) { vec4 color = fract(v * vec4(1, 255, 255.*255., 255.*255.*255.)); return color - color.yzww * vec4(1. / 255., 1. / 255., 1. / 255., 0.); }");
			break;
		case 55:
			this.decl("float unpack( vec4 color ) { return dot(color,vec4(1., 1. / 255., 1. / (255. * 255.), 1. / (255. * 255. * 255.))); }");
			break;
		case 56:
			this.decl("vec4 packNormal( vec3 v ) { return vec4((v + vec3(1.)) * vec3(0.5),1.); }");
			break;
		case 57:
			this.decl("vec3 unpackNormal( vec4 v ) { return normalize((v.xyz - vec3(0.5)) * vec3(2.)); }");
			break;
		case 58:
			this.decl("vec2 screenToUv( vec2 v ) { return v * vec2(0.5,-0.5) + vec2(0.5,0.5); }");
			break;
		case 59:
			this.decl("vec2 uvToScreen( vec2 v ) { return v * vec2(2.,-2.) + vec2(-1., 1.); }");
			break;
		case 60:case 61:case 62:
			if(this.isVertex) {
				throw haxe_Exception.thrown("Can't use " + Std.string(g) + " in vertex shader");
			}
			if(this.version < 300) {
				this.decl("#extension GL_OES_standard_derivatives:enable");
			}
			break;
		default:
		}
		return hxsl_GlslOut.GLOBALS[g._hx_index];
	}
	,addExpr: function(e,tabs) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var c = _g.c;
			switch(c._hx_index) {
			case 0:
				this.buf.b += Std.string("null");
				break;
			case 1:
				var b = c.b;
				this.buf.b += Std.string(b);
				break;
			case 2:
				var v = c.v;
				this.buf.b += Std.string(v);
				break;
			case 3:
				var f = c.v;
				var str = "" + f;
				this.buf.b += Std.string(str);
				if(str.indexOf(".") == -1 && str.indexOf("e") == -1) {
					this.buf.b += Std.string(".");
				}
				break;
			case 4:
				var v = c.v;
				this.buf.b += Std.string("\"" + v + "\"");
				break;
			}
			break;
		case 1:
			var v = _g.v;
			var v1 = this.varName(v);
			this.buf.b += Std.string(v1);
			break;
		case 2:
			var g = _g.g;
			this.buf.b += Std.string(hxsl_GlslOut.GLOBALS[g._hx_index]);
			break;
		case 3:
			var e1 = _g.e;
			this.buf.b += Std.string("(");
			this.addValue(e1,tabs);
			this.buf.b += Std.string(")");
			break;
		case 4:
			var el = _g.el;
			this.buf.b += Std.string("{\n");
			var t2 = tabs + "\t";
			var _g1 = 0;
			while(_g1 < el.length) {
				var e1 = el[_g1];
				++_g1;
				this.buf.b += Std.string(t2);
				this.addExpr(e1,t2);
				this.newLine(e1);
			}
			this.buf.b += Std.string(tabs);
			this.buf.b += Std.string("}");
			break;
		case 5:
			var op = _g.op;
			var e1 = _g.e1;
			var e2 = _g.e2;
			var _g1 = e1.t;
			var _g2 = e2.t;
			switch(op._hx_index) {
			case 1:
				if(_g1._hx_index == 5) {
					if(_g1.size == 3) {
						if(_g1.t._hx_index == 1) {
							if(_g2._hx_index == 8) {
								this.decl(hxsl_GlslOut.MAT34);
								this.decl("vec3 m3x4mult( vec3 v, _mat3x4 m) { vec4 ve = vec4(v,1.0); return vec3(dot(m.a,ve),dot(m.b,ve),dot(m.c,ve)); }");
								var tmp;
								if(op._hx_index == 20) {
									var _g3 = op.op;
									tmp = true;
								} else {
									tmp = false;
								}
								if(tmp) {
									this.addValue(e1,tabs);
									this.buf.b += Std.string(" = ");
								}
								this.buf.b += Std.string("m3x4mult(");
								this.addValue(e1,tabs);
								this.buf.b += Std.string(",");
								this.addValue(e2,tabs);
								this.buf.b += Std.string(")");
							} else {
								this.addValue(e1,tabs);
								this.buf.b += Std.string(" ");
								var v = hxsl_Printer.opStr(op);
								this.buf.b += Std.string(v);
								this.buf.b += Std.string(" ");
								this.addValue(e2,tabs);
							}
						} else {
							this.addValue(e1,tabs);
							this.buf.b += Std.string(" ");
							var v = hxsl_Printer.opStr(op);
							this.buf.b += Std.string(v);
							this.buf.b += Std.string(" ");
							this.addValue(e2,tabs);
						}
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 5:
				if(_g1._hx_index == 5) {
					var _g3 = _g1.t;
					if(_g2._hx_index == 5) {
						var _g3 = _g2.size;
						var _g3 = _g2.t;
						var n = _g1.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 6:
				if(_g1._hx_index == 5) {
					var _g3 = _g1.t;
					if(_g2._hx_index == 5) {
						var _g3 = _g2.size;
						var _g3 = _g2.t;
						var n = _g1.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 7:
				if(_g1._hx_index == 5) {
					var _g3 = _g1.t;
					if(_g2._hx_index == 5) {
						var _g3 = _g2.size;
						var _g3 = _g2.t;
						var n = _g1.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 8:
				if(_g1._hx_index == 5) {
					var _g3 = _g1.t;
					if(_g2._hx_index == 5) {
						var _g3 = _g2.size;
						var _g3 = _g2.t;
						var n = _g1.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 9:
				if(_g1._hx_index == 5) {
					var _g3 = _g1.t;
					if(_g2._hx_index == 5) {
						var _g3 = _g2.size;
						var _g3 = _g2.t;
						var n = _g1.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 10:
				if(_g1._hx_index == 5) {
					var _g3 = _g1.t;
					if(_g2._hx_index == 5) {
						var _g3 = _g2.size;
						var _g3 = _g2.t;
						var n = _g1.size;
						this.buf.b += Std.string("vec" + n + "(");
						var v;
						switch(op._hx_index) {
						case 5:
							v = "equal";
							break;
						case 6:
							v = "notEqual";
							break;
						case 7:
							v = "greaterThan";
							break;
						case 8:
							v = "greaterThanEqual";
							break;
						case 9:
							v = "lessThan";
							break;
						case 10:
							v = "lessThanEqual";
							break;
						default:
							throw haxe_Exception.thrown("assert");
						}
						this.buf.b += Std.string(v);
						this.buf.b += Std.string("(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(",");
						this.addValue(e2,tabs);
						this.buf.b += Std.string("))");
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 18:
				this.decl("int _ushr( int i, int j ) { return int(uint(i) >> uint(j)); }");
				this.buf.b += Std.string("_ushr(");
				this.addValue(e1,tabs);
				this.buf.b += Std.string(",");
				this.addValue(e2,tabs);
				this.buf.b += Std.string(")");
				break;
			case 19:
				if(e.t != hxsl_Type.TInt) {
					var tmp;
					if(op._hx_index == 20) {
						var _g3 = op.op;
						tmp = true;
					} else {
						tmp = false;
					}
					if(tmp) {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" = ");
					}
					this.addExpr({ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mod), t : hxsl_Type.TFun([]), p : e.p},[e1,e2]), t : e.t, p : e.p},tabs);
				} else {
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			case 20:
				switch(op.op._hx_index) {
				case 1:
					if(_g1._hx_index == 5) {
						if(_g1.size == 3) {
							if(_g1.t._hx_index == 1) {
								if(_g2._hx_index == 8) {
									this.decl(hxsl_GlslOut.MAT34);
									this.decl("vec3 m3x4mult( vec3 v, _mat3x4 m) { vec4 ve = vec4(v,1.0); return vec3(dot(m.a,ve),dot(m.b,ve),dot(m.c,ve)); }");
									var tmp;
									if(op._hx_index == 20) {
										var _g1 = op.op;
										tmp = true;
									} else {
										tmp = false;
									}
									if(tmp) {
										this.addValue(e1,tabs);
										this.buf.b += Std.string(" = ");
									}
									this.buf.b += Std.string("m3x4mult(");
									this.addValue(e1,tabs);
									this.buf.b += Std.string(",");
									this.addValue(e2,tabs);
									this.buf.b += Std.string(")");
								} else {
									this.addValue(e1,tabs);
									this.buf.b += Std.string(" ");
									var v = hxsl_Printer.opStr(op);
									this.buf.b += Std.string(v);
									this.buf.b += Std.string(" ");
									this.addValue(e2,tabs);
								}
							} else {
								this.addValue(e1,tabs);
								this.buf.b += Std.string(" ");
								var v = hxsl_Printer.opStr(op);
								this.buf.b += Std.string(v);
								this.buf.b += Std.string(" ");
								this.addValue(e2,tabs);
							}
						} else {
							this.addValue(e1,tabs);
							this.buf.b += Std.string(" ");
							var v = hxsl_Printer.opStr(op);
							this.buf.b += Std.string(v);
							this.buf.b += Std.string(" ");
							this.addValue(e2,tabs);
						}
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
					break;
				case 19:
					if(e.t != hxsl_Type.TInt) {
						var tmp;
						if(op._hx_index == 20) {
							var _g1 = op.op;
							tmp = true;
						} else {
							tmp = false;
						}
						if(tmp) {
							this.addValue(e1,tabs);
							this.buf.b += Std.string(" = ");
						}
						this.addExpr({ e : hxsl_TExprDef.TCall({ e : hxsl_TExprDef.TGlobal(hxsl_TGlobal.Mod), t : hxsl_Type.TFun([]), p : e.p},[e1,e2]), t : e.t, p : e.p},tabs);
					} else {
						this.addValue(e1,tabs);
						this.buf.b += Std.string(" ");
						var v = hxsl_Printer.opStr(op);
						this.buf.b += Std.string(v);
						this.buf.b += Std.string(" ");
						this.addValue(e2,tabs);
					}
					break;
				default:
					this.addValue(e1,tabs);
					this.buf.b += Std.string(" ");
					var v = hxsl_Printer.opStr(op);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string(" ");
					this.addValue(e2,tabs);
				}
				break;
			default:
				this.addValue(e1,tabs);
				this.buf.b += Std.string(" ");
				var v = hxsl_Printer.opStr(op);
				this.buf.b += Std.string(v);
				this.buf.b += Std.string(" ");
				this.addValue(e2,tabs);
			}
			break;
		case 6:
			var op = _g.op;
			var e1 = _g.e1;
			var v;
			switch(op._hx_index) {
			case 0:
				v = "++";
				break;
			case 1:
				v = "--";
				break;
			case 2:
				v = "!";
				break;
			case 3:
				v = "-";
				break;
			case 4:
				v = "~";
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
			this.buf.b += Std.string(v);
			this.addValue(e1,tabs);
			break;
		case 7:
			var v = _g.v;
			var init = _g.init;
			this.locals.h[v.id] = v;
			if(init != null) {
				var v1 = this.varName(v);
				this.buf.b += Std.string(v1);
				this.buf.b += Std.string(" = ");
				this.addValue(init,tabs);
			} else {
				this.buf.b += Std.string("/*var*/");
			}
			break;
		case 8:
			var _g1 = _g.e;
			var _g2 = _g.args;
			var _g3 = _g1.e;
			var _g4 = _g1.p;
			var _g4 = _g1.t;
			if(_g3._hx_index == 2) {
				var _g4 = _g3.g;
				switch(_g4._hx_index) {
				case 35:
					var g = _g4;
					var args = _g2;
					var v = this.getFunName(g,args,e.t);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string("(");
					this.addValue(args[0],tabs);
					this.buf.b += Std.string(", ");
					this.addValue(args[1],tabs);
					if(args.length != 2) {
						this.buf.b += Std.string(", ");
						this.addValue(args[2],tabs);
						this.buf.b += Std.string(")");
					} else {
						this.buf.b += Std.string(", 0)");
					}
					break;
				case 36:
					var g = _g4;
					var args = _g2;
					var v = this.getFunName(g,args,e.t);
					this.buf.b += Std.string(v);
					this.buf.b += Std.string("(");
					this.addValue(args[0],tabs);
					if(args.length != 1) {
						this.buf.b += Std.string(", ");
						this.addValue(args[1],tabs);
						this.buf.b += Std.string(")");
					} else {
						this.buf.b += Std.string(", 0)");
					}
					break;
				case 53:
					if(_g2.length == 1) {
						var e1 = _g2[0];
						this.buf.b += Std.string("clamp(");
						this.addValue(e1,tabs);
						this.buf.b += Std.string(", 0., 1.)");
					} else {
						var v = _g1;
						var args = _g2;
						var _g3 = v.e;
						if(_g3._hx_index == 2) {
							var g = _g3.g;
							var v1 = this.getFunName(g,args,e.t);
							this.buf.b += Std.string(v1);
						} else {
							this.addValue(v,tabs);
						}
						this.buf.b += Std.string("(");
						var first = true;
						var _g3 = 0;
						while(_g3 < args.length) {
							var e1 = args[_g3];
							++_g3;
							if(first) {
								first = false;
							} else {
								this.buf.b += Std.string(", ");
							}
							this.addValue(e1,tabs);
						}
						this.buf.b += Std.string(")");
					}
					break;
				default:
					var v = _g1;
					var args = _g2;
					var _g3 = v.e;
					if(_g3._hx_index == 2) {
						var g = _g3.g;
						var v1 = this.getFunName(g,args,e.t);
						this.buf.b += Std.string(v1);
					} else {
						this.addValue(v,tabs);
					}
					this.buf.b += Std.string("(");
					var first = true;
					var _g3 = 0;
					while(_g3 < args.length) {
						var e1 = args[_g3];
						++_g3;
						if(first) {
							first = false;
						} else {
							this.buf.b += Std.string(", ");
						}
						this.addValue(e1,tabs);
					}
					this.buf.b += Std.string(")");
				}
			} else {
				var v = _g1;
				var args = _g2;
				var _g1 = v.e;
				if(_g1._hx_index == 2) {
					var g = _g1.g;
					var v1 = this.getFunName(g,args,e.t);
					this.buf.b += Std.string(v1);
				} else {
					this.addValue(v,tabs);
				}
				this.buf.b += Std.string("(");
				var first = true;
				var _g1 = 0;
				while(_g1 < args.length) {
					var e1 = args[_g1];
					++_g1;
					if(first) {
						first = false;
					} else {
						this.buf.b += Std.string(", ");
					}
					this.addValue(e1,tabs);
				}
				this.buf.b += Std.string(")");
			}
			break;
		case 9:
			var e1 = _g.e;
			var regs = _g.regs;
			if(e1.t._hx_index == 3) {
				var _g1 = 0;
				while(_g1 < regs.length) {
					var r = regs[_g1];
					++_g1;
					if(r != hxsl_Component.X) {
						throw haxe_Exception.thrown("assert");
					}
				}
				switch(regs.length) {
				case 1:
					this.addValue(e1,tabs);
					break;
				case 2:
					this.decl("vec2 _vec2( float v ) { return vec2(v,v); }");
					this.buf.b += Std.string("_vec2(");
					this.addValue(e1,tabs);
					this.buf.b += Std.string(")");
					break;
				case 3:
					this.decl("vec3 _vec3( float v ) { return vec3(v,v,v); }");
					this.buf.b += Std.string("_vec3(");
					this.addValue(e1,tabs);
					this.buf.b += Std.string(")");
					break;
				case 4:
					this.decl("vec4 _vec4( float v ) { return vec4(v,v,v,v); }");
					this.buf.b += Std.string("_vec4(");
					this.addValue(e1,tabs);
					this.buf.b += Std.string(")");
					break;
				default:
					throw haxe_Exception.thrown("assert");
				}
			} else {
				this.addValue(e1,tabs);
				this.buf.b += Std.string(".");
				var _g1 = 0;
				while(_g1 < regs.length) {
					var r = regs[_g1];
					++_g1;
					var _this = this.buf;
					var _this1 = _this.b;
					var tmp;
					switch(r._hx_index) {
					case 0:
						tmp = "x";
						break;
					case 1:
						tmp = "y";
						break;
					case 2:
						tmp = "z";
						break;
					case 3:
						tmp = "w";
						break;
					}
					_this.b = _this1 + Std.string(tmp);
				}
			}
			break;
		case 10:
			var econd = _g.econd;
			var eif = _g.eif;
			var eelse = _g.eelse;
			this.buf.b += Std.string("if( ");
			this.addValue(econd,tabs);
			this.buf.b += Std.string(") ");
			this.addExpr(eif,tabs);
			if(eelse != null) {
				if(!this.isBlock(eif)) {
					this.buf.b += Std.string(";");
				}
				this.buf.b += Std.string(" else ");
				this.addExpr(eelse,tabs);
			}
			break;
		case 11:
			this.buf.b += Std.string("discard");
			break;
		case 12:
			var e1 = _g.e;
			if(e1 == null) {
				this.buf.b += Std.string("return");
			} else {
				this.buf.b += Std.string("return ");
				this.addValue(e1,tabs);
			}
			break;
		case 13:
			var v = _g.v;
			var it = _g.it;
			var loop = _g.loop;
			this.locals.h[v.id] = v;
			var _g1 = it.e;
			if(_g1._hx_index == 5) {
				if(_g1.op._hx_index == 21) {
					var e1 = _g1.e1;
					var e2 = _g1.e2;
					this.buf.b += Std.string("for(");
					this.buf.b += Std.string(v.name + "=");
					this.addValue(e1,tabs);
					this.buf.b += Std.string(";" + v.name + "<");
					this.addValue(e2,tabs);
					this.buf.b += Std.string(";" + v.name + "++) ");
					this.addBlock(loop,tabs);
				} else {
					throw haxe_Exception.thrown("assert");
				}
			} else {
				throw haxe_Exception.thrown("assert");
			}
			break;
		case 14:
			this.buf.b += Std.string("continue");
			break;
		case 15:
			this.buf.b += Std.string("break");
			break;
		case 16:
			var e1 = _g.e;
			var index = _g.index;
			this.addValue(e1,tabs);
			this.buf.b += Std.string("[");
			this.addValue(index,tabs);
			this.buf.b += Std.string("]");
			break;
		case 17:
			var el = _g.el;
			var _g1 = e.t;
			if(_g1._hx_index == 15) {
				var _g2 = _g1.size;
				var t = _g1.t;
				this.addType(t);
			} else {
				throw haxe_Exception.thrown("assert");
			}
			this.buf.b += Std.string("[" + el.length + "]");
			this.buf.b += Std.string("(");
			var first = true;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buf.b += Std.string(", ");
				}
				this.addValue(e,tabs);
			}
			this.buf.b += Std.string(")");
			break;
		case 18:
			var _g1 = _g.e;
			var _g1 = _g.cases;
			var _g1 = _g.def;
			this.buf.b += Std.string("switch(...)");
			break;
		case 19:
			var _g1 = _g.e;
			var _g2 = _g.loop;
			if(_g.normalWhile == false) {
				var loop = _g2;
				var e = _g1;
				var old = tabs;
				tabs += "\t";
				this.buf.b += Std.string("do ");
				this.addBlock(loop,tabs);
				this.buf.b += Std.string(" while( ");
				this.addValue(e,tabs);
				this.buf.b += Std.string(" )");
			} else {
				var loop = _g2;
				var e = _g1;
				this.buf.b += Std.string("while( ");
				this.addValue(e,tabs);
				this.buf.b += Std.string(" ) ");
				this.addBlock(loop,tabs);
			}
			break;
		case 20:
			var _g1 = _g.m;
			var _g1 = _g.args;
			var e = _g.e;
			this.addExpr(e,tabs);
			break;
		}
	}
	,varName: function(v) {
		if(v.kind == hxsl_VarKind.Output) {
			if(this.isVertex) {
				return "gl_Position";
			}
			if(this.glES != null && this.glES <= 2) {
				if(this.outIndexes == null) {
					return "gl_FragColor";
				}
				return "gl_FragData[" + this.outIndexes.h[v.id] + "]";
			}
		}
		var n = this.varNames.h[v.id];
		if(n != null) {
			return n;
		}
		n = v.name;
		if(v.kind == hxsl_VarKind.Var) {
			n += "_varying";
		}
		if(Object.prototype.hasOwnProperty.call(hxsl_GlslOut.KWDS.h,n)) {
			n = "_" + n;
		}
		if(Object.prototype.hasOwnProperty.call(this.allNames.h,n)) {
			var k = 2;
			n += "_";
			while(Object.prototype.hasOwnProperty.call(this.allNames.h,n + k)) ++k;
			n += k;
		}
		this.varNames.h[v.id] = n;
		this.allNames.h[n] = v.id;
		return n;
	}
	,newLine: function(e) {
		if(this.isBlock(e)) {
			this.buf.b += Std.string("\n");
		} else {
			this.buf.b += Std.string(";\n");
		}
	}
	,isBlock: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 4:
			var _g1 = _g.el;
			return true;
		case 13:
			var _g1 = _g.v;
			var _g1 = _g.it;
			var loop = _g.loop;
			return this.isBlock(loop);
		case 19:
			var _g1 = _g.e;
			if(_g.normalWhile == true) {
				var loop = _g.loop;
				return this.isBlock(loop);
			} else {
				return false;
			}
			break;
		default:
			return false;
		}
	}
	,initVar: function(v) {
		switch(v.kind._hx_index) {
		case 0:case 2:
			var _g = v.type;
			var tmp;
			if(_g._hx_index == 16) {
				var _g1 = _g.t;
				var _g1 = _g.size;
				tmp = true;
			} else {
				tmp = false;
			}
			if(tmp) {
				this.buf.b += Std.string("layout(std140) ");
			}
			this.buf.b += Std.string("uniform ");
			break;
		case 1:
			this.buf.b += Std.string(this.glES != null && this.glES <= 2 ? "attribute " : "in ");
			break;
		case 3:
			this.buf.b += Std.string(this.glES != null && this.glES <= 2 ? "varying " : this.isVertex ? "out " : "in ");
			break;
		case 4:
			break;
		case 5:
			if(this.glES != null && this.glES <= 2) {
				this.outIndexes.h[v.id] = this.outIndex++;
				return;
			}
			if(this.isVertex) {
				return;
			}
			if(this.glES != null) {
				this.buf.b += Std.string("layout(location=" + this.outIndex++ + ") ");
			}
			this.buf.b += Std.string("out ");
			break;
		case 6:
			return;
		}
		if(v.qualifiers != null) {
			var _g = 0;
			var _g1 = v.qualifiers;
			while(_g < _g1.length) {
				var q = _g1[_g];
				++_g;
				if(q._hx_index == 6) {
					var p = q.p;
					switch(p._hx_index) {
					case 0:
						this.buf.b += Std.string("lowp ");
						break;
					case 1:
						this.buf.b += Std.string("mediump ");
						break;
					case 2:
						this.buf.b += Std.string("highp ");
						break;
					}
				}
			}
		}
		this.addVar(v);
		this.buf.b += Std.string(";\n");
	}
	,initVars: function(s) {
		this.outIndex = 0;
		this.uniformBuffer = 0;
		this.outIndexes = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = s.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.initVar(v);
		}
		this.buf.b += Std.string("\n");
		if(this.outIndex < 2) {
			this.outIndexes = null;
		} else if(!this.isVertex && (this.glES != null && this.glES <= 2)) {
			this.decl("#extension GL_EXT_draw_buffers : enable");
		}
	}
	,run: function(s) {
		this.locals = new haxe_ds_IntMap();
		this.decls = [];
		this.buf = new StringBuf();
		this.exprValues = [];
		if(s.funs.length != 1) {
			throw haxe_Exception.thrown("assert");
		}
		var f = s.funs[0];
		this.isVertex = f.kind == hxsl_FunctionKind.Vertex;
		if(this.isVertex) {
			this.decl("precision highp float;");
		} else {
			this.decl("precision mediump float;");
		}
		this.initVars(s);
		var tmp = this.buf;
		this.buf = new StringBuf();
		this.buf.b += Std.string("void main(void) {\n");
		var _g = f.expr.e;
		if(_g._hx_index == 4) {
			var el = _g.el;
			var _g = 0;
			while(_g < el.length) {
				var e = el[_g];
				++_g;
				this.buf.b += Std.string("\t");
				this.addExpr(e,"\t");
				this.newLine(e);
			}
		} else {
			this.addExpr(f.expr,"");
		}
		if(this.isVertex) {
			this.buf.b += Std.string("\tgl_Position.z += gl_Position.z - gl_Position.w;\n");
		}
		this.buf.b += Std.string("}");
		this.exprValues.push(this.buf.b);
		this.buf = tmp;
		var locals = Lambda.array(this.locals);
		locals.sort(function(v1,v2) {
			return Reflect.compare(v1.name,v2.name);
		});
		var _g = 0;
		while(_g < locals.length) {
			var v = locals[_g];
			++_g;
			this.addVar(v);
			this.buf.b += Std.string(";\n");
		}
		this.buf.b += Std.string("\n");
		var _g = 0;
		var _g1 = this.exprValues;
		while(_g < _g1.length) {
			var e = _g1[_g];
			++_g;
			this.buf.b += Std.string(e);
			this.buf.b += Std.string("\n\n");
		}
		if(this.glES != null) {
			this.decl("#version " + (this.version < 100 ? 100 : this.version) + (this.version > 150 ? " es" : ""));
		} else if(this.version != null) {
			this.decl("#version " + (this.version > 150 ? 150 : this.version));
		} else {
			this.decl("#version 130");
		}
		this.decls.push(this.buf.b);
		this.buf = null;
		return this.decls.join("\n");
	}
	,__class__: hxsl_GlslOut
};
var hxsl__$Linker_AllocatedVar = function() {
};
$hxClasses["hxsl._Linker.AllocatedVar"] = hxsl__$Linker_AllocatedVar;
hxsl__$Linker_AllocatedVar.__name__ = "hxsl._Linker.AllocatedVar";
hxsl__$Linker_AllocatedVar.prototype = {
	id: null
	,v: null
	,path: null
	,merged: null
	,kind: null
	,parent: null
	,rootShaderName: null
	,instanceIndex: null
	,__class__: hxsl__$Linker_AllocatedVar
};
var hxsl__$Linker_ShaderInfos = function(n,v) {
	this.name = n;
	this.uid = hxsl__$Linker_ShaderInfos.UID++;
	this.vertex = v;
	this.processed = new haxe_ds_IntMap();
	this.usedFunctions = [];
	this.read = new haxe_ds_IntMap();
	this.write = new haxe_ds_IntMap();
};
$hxClasses["hxsl._Linker.ShaderInfos"] = hxsl__$Linker_ShaderInfos;
hxsl__$Linker_ShaderInfos.__name__ = "hxsl._Linker.ShaderInfos";
hxsl__$Linker_ShaderInfos.prototype = {
	uid: null
	,name: null
	,priority: null
	,body: null
	,usedFunctions: null
	,deps: null
	,read: null
	,write: null
	,processed: null
	,vertex: null
	,onStack: null
	,hasDiscard: null
	,marked: null
	,__class__: hxsl__$Linker_ShaderInfos
};
var hxsl_Linker = function(batchMode) {
	if(batchMode == null) {
		batchMode = false;
	}
	this.debugDepth = 0;
	this.batchMode = batchMode;
};
$hxClasses["hxsl.Linker"] = hxsl_Linker;
hxsl_Linker.__name__ = "hxsl.Linker";
hxsl_Linker.prototype = {
	allVars: null
	,varMap: null
	,curShader: null
	,shaders: null
	,varIdMap: null
	,locals: null
	,curInstance: null
	,batchMode: null
	,isBatchShader: null
	,debugDepth: null
	,error: function(msg,p) {
		return hxsl_Error.t(msg,p);
	}
	,mergeVar: function(path,v,v2,p,shaderName) {
		switch(v.kind._hx_index) {
		case 2:
			if(!(shaderName != null && hxsl_Tools.hasBorrowQualifier(v2,shaderName))) {
				throw haxe_Exception.thrown("assert");
			}
			break;
		case 0:case 1:case 3:case 4:case 5:
			break;
		case 6:
			throw haxe_Exception.thrown("assert");
		}
		if(v.kind != v2.kind && v.kind != hxsl_VarKind.Local && v2.kind != hxsl_VarKind.Local) {
			this.error("'" + path + "' kind does not match : " + Std.string(v.kind) + " should be " + Std.string(v2.kind),p);
		}
		var _g = v.type;
		var _g1 = v2.type;
		if(_g._hx_index == 13) {
			if(_g1._hx_index == 13) {
				var fl2 = _g1.vl;
				var fl1 = _g.vl;
				var _g = 0;
				while(_g < fl1.length) {
					var f1 = fl1[_g];
					++_g;
					var ft = null;
					var _g1 = 0;
					while(_g1 < fl2.length) {
						var f2 = fl2[_g1];
						++_g1;
						if(f1.name == f2.name) {
							ft = f2;
							break;
						}
					}
					if(ft == null) {
						fl2.push(this.allocVar(f1,p,shaderName).v);
					} else {
						this.mergeVar(path + "." + ft.name,f1,ft,p,shaderName);
					}
				}
			} else if(!Type.enumEq(v.type,v2.type)) {
				this.error("'" + path + "' type does not match : " + hxsl_Tools.toString(v.type) + " should be " + hxsl_Tools.toString(v2.type),p);
			}
		} else if(!Type.enumEq(v.type,v2.type)) {
			this.error("'" + path + "' type does not match : " + hxsl_Tools.toString(v.type) + " should be " + hxsl_Tools.toString(v2.type),p);
		}
	}
	,allocVar: function(v,p,shaderName,path,parent) {
		var _gthis = this;
		if(v.parent != null && parent == null) {
			parent = this.allocVar(v.parent,p,shaderName);
			var p1 = parent.v;
			path = p1.name;
			p1 = p1.parent;
			while(p1 != null) {
				path = p1.name + "." + path;
				p1 = p1.parent;
			}
		}
		var key = path == null ? v.name : path + "." + v.name;
		if(v.qualifiers != null) {
			var _g = 0;
			var _g1 = v.qualifiers;
			while(_g < _g1.length) {
				var q = _g1[_g];
				++_g;
				if(q._hx_index == 4) {
					var n = q.n;
					key = n;
				}
			}
		}
		var v2 = this.varMap.h[key];
		var vname = v.name;
		if(v2 != null) {
			var _g = 0;
			var _g1 = v2.merged;
			while(_g < _g1.length) {
				var vm = _g1[_g];
				++_g;
				if(vm == v) {
					return v2;
				}
			}
			var tmp;
			var borrowed = hxsl_Tools.hasBorrowQualifier(v2.v,shaderName);
			if(!(v.kind == hxsl_VarKind.Param && !borrowed && !hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.Shared) && !_gthis.isBatchShader || v.kind == hxsl_VarKind.Function || (v.kind == hxsl_VarKind.Var || v.kind == hxsl_VarKind.Local) && hxsl_Tools.hasQualifier(v,hxsl_VarQualifier.Private))) {
				var v1 = v2.v;
				var borrowed = hxsl_Tools.hasBorrowQualifier(v,v2.rootShaderName);
				tmp = v1.kind == hxsl_VarKind.Param && !borrowed && !hxsl_Tools.hasQualifier(v1,hxsl_VarQualifier.Shared) && !_gthis.isBatchShader || v1.kind == hxsl_VarKind.Function || (v1.kind == hxsl_VarKind.Var || v1.kind == hxsl_VarKind.Local) && hxsl_Tools.hasQualifier(v1,hxsl_VarQualifier.Private);
			} else {
				tmp = true;
			}
			if(tmp || v.kind == hxsl_VarKind.Param && v2.v.kind == hxsl_VarKind.Param) {
				var k = 2;
				while(true) {
					var a = this.varMap.h[key + k];
					if(a == null) {
						break;
					}
					var _g = 0;
					var _g1 = a.merged;
					while(_g < _g1.length) {
						var vm = _g1[_g];
						++_g;
						if(vm == v) {
							return a;
						}
					}
					++k;
				}
				if(v.kind == hxsl_VarKind.Input) {
					var _this = this.varMap;
					if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
						delete(_this.h[key]);
					}
					this.varMap.h[key + k] = v2;
					v2.v.name += k;
					v2.path += k;
				} else {
					vname += k;
					key += k;
				}
			} else {
				v2.merged.push(v);
				this.mergeVar(key,v,v2.v,p,v2.rootShaderName);
				this.varIdMap.h[v.id] = v2.id;
				return v2;
			}
		}
		var v2 = { id : hxsl_Tools.allocVarId(), name : vname, type : v.type, kind : v.kind, qualifiers : v.qualifiers, parent : parent == null ? null : parent.v};
		var a = new hxsl__$Linker_AllocatedVar();
		a.v = v2;
		a.merged = [v];
		a.path = key;
		a.id = v2.id;
		a.parent = parent;
		a.instanceIndex = this.curInstance;
		a.rootShaderName = shaderName;
		this.allVars.push(a);
		this.varMap.h[key] = a;
		var _g = v2.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = [];
			var _g1 = 0;
			while(_g1 < vl.length) {
				var v = vl[_g1];
				++_g1;
				_g.push(this.allocVar(v,p,shaderName,key,a).v);
			}
			v2.type = hxsl_Type.TStruct(_g);
		}
		return a;
	}
	,mapExprVar: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			if(!this.locals.h.hasOwnProperty(v.id)) {
				var v1 = this.allocVar(v,e.p);
				if(this.curShader != null && !this.curShader.write.h.hasOwnProperty(v1.id)) {
					this.curShader.read.h[v1.id] = v1;
					if(this.curShader.vertex == null && v1.v.kind == hxsl_VarKind.Var) {
						this.curShader.vertex = false;
					}
				}
				return { e : hxsl_TExprDef.TVar(v1.v), t : v1.v.type, p : e.p};
			}
			break;
		case 5:
			var op = _g.op;
			var e1 = _g.e1;
			var e2 = _g.e2;
			var _g1 = e1.e;
			switch(op._hx_index) {
			case 4:
				switch(_g1._hx_index) {
				case 1:
					var _g2 = _g1.v;
					var v = _g2;
					if(!this.locals.h.hasOwnProperty(v.id)) {
						var e21 = this.mapExprVar(e2);
						var v1 = this.allocVar(v,e1.p);
						if(this.curShader != null) {
							this.curShader.write.h[v1.id] = v1;
						}
						return { e : hxsl_TExprDef.TBinop(op,{ e : hxsl_TExprDef.TVar(v1.v), t : v1.v.type, p : e.p},e21), t : e.t, p : e.p};
					} else {
						var v = _g2;
						if(!this.locals.h.hasOwnProperty(v.id)) {
							var e11 = this.mapExprVar(e1);
							var e21 = this.mapExprVar(e2);
							var v1 = this.allocVar(v,e11.p);
							if(this.curShader != null) {
								this.curShader.write.h[v1.id] = v1;
							}
							return { e : hxsl_TExprDef.TBinop(op,e11,e21), t : e.t, p : e.p};
						}
					}
					break;
				case 9:
					var _g2 = _g1.e;
					var _g3 = _g1.regs;
					var _g3 = _g2.e;
					var _g4 = _g2.p;
					var _g4 = _g2.t;
					if(_g3._hx_index == 1) {
						var v = _g3.v;
						if(!this.locals.h.hasOwnProperty(v.id)) {
							var e11 = this.mapExprVar(e1);
							var e21 = this.mapExprVar(e2);
							var v1 = this.allocVar(v,e11.p);
							if(this.curShader != null) {
								this.curShader.write.h[v1.id] = v1;
							}
							return { e : hxsl_TExprDef.TBinop(op,e11,e21), t : e.t, p : e.p};
						}
					}
					break;
				default:
				}
				break;
			case 20:
				var _g2 = op.op;
				switch(_g1._hx_index) {
				case 1:
					var v = _g1.v;
					if(!this.locals.h.hasOwnProperty(v.id)) {
						var e11 = this.mapExprVar(e1);
						var e21 = this.mapExprVar(e2);
						var v1 = this.allocVar(v,e11.p);
						if(this.curShader != null) {
							this.curShader.write.h[v1.id] = v1;
						}
						return { e : hxsl_TExprDef.TBinop(op,e11,e21), t : e.t, p : e.p};
					}
					break;
				case 9:
					var _g2 = _g1.e;
					var _g3 = _g1.regs;
					var _g1 = _g2.e;
					var _g3 = _g2.p;
					var _g3 = _g2.t;
					if(_g1._hx_index == 1) {
						var v = _g1.v;
						if(!this.locals.h.hasOwnProperty(v.id)) {
							var e11 = this.mapExprVar(e1);
							var e21 = this.mapExprVar(e2);
							var v1 = this.allocVar(v,e11.p);
							if(this.curShader != null) {
								this.curShader.write.h[v1.id] = v1;
							}
							return { e : hxsl_TExprDef.TBinop(op,e11,e21), t : e.t, p : e.p};
						}
					}
					break;
				default:
				}
				break;
			default:
			}
			break;
		case 7:
			var _g1 = _g.init;
			var v = _g.v;
			this.locals.h[v.id] = true;
			break;
		case 11:
			if(this.curShader != null) {
				this.curShader.vertex = false;
				this.curShader.hasDiscard = true;
			}
			break;
		case 13:
			var _g1 = _g.it;
			var _g1 = _g.loop;
			var v = _g.v;
			this.locals.h[v.id] = true;
			break;
		default:
		}
		return hxsl_Tools.map(e,$bind(this,this.mapExprVar));
	}
	,addShader: function(name,vertex,e,p) {
		var s = new hxsl__$Linker_ShaderInfos(name,vertex);
		this.curShader = s;
		s.priority = p;
		s.body = this.mapExprVar(e);
		this.shaders.push(s);
		this.curShader = null;
		return s;
	}
	,sortByPriorityDesc: function(s1,s2) {
		if(s1.priority == s2.priority) {
			return s1.uid - s2.uid;
		}
		return s2.priority - s1.priority;
	}
	,buildDependency: function(s,v,isWritten) {
		var found = !isWritten;
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var parent = _g1[_g];
			++_g;
			if(parent == s) {
				found = true;
				continue;
			} else if(!found) {
				continue;
			}
			if(!parent.write.h.hasOwnProperty(v.id)) {
				continue;
			}
			if(s.vertex) {
				if(parent.vertex == false) {
					continue;
				}
				if(parent.vertex == null) {
					parent.vertex = true;
				}
			}
			s.deps.set(parent,true);
			this.debugDepth++;
			this.initDependencies(parent);
			this.debugDepth--;
			if(!parent.read.h.hasOwnProperty(v.id)) {
				return;
			}
		}
		if(v.v.kind == hxsl_VarKind.Var) {
			this.error("Variable " + v.path + " required by " + s.name + " is missing initializer",null);
		}
	}
	,initDependencies: function(s) {
		if(s.deps != null) {
			return;
		}
		s.deps = new haxe_ds_ObjectMap();
		var r = s.read.iterator();
		while(r.hasNext()) {
			var r1 = r.next();
			this.buildDependency(s,r1,s.write.h.hasOwnProperty(r1.id));
		}
		if(s.vertex == null) {
			var d = s.deps.keys();
			while(d.hasNext()) {
				var d1 = d.next();
				if(d1.vertex == false) {
					s.vertex = false;
					break;
				}
			}
		}
		if(s.vertex) {
			var d = s.deps.keys();
			while(d.hasNext()) {
				var d1 = d.next();
				if(d1.vertex == null) {
					d1.vertex = true;
				}
			}
		}
	}
	,collect: function(cur,out,vertex) {
		if(cur.onStack) {
			this.error("Loop in shader dependencies (" + cur.name + ")",null);
		}
		if(cur.marked == vertex) {
			return;
		}
		cur.marked = vertex;
		cur.onStack = true;
		var _g = [];
		var d = cur.deps.keys();
		while(d.hasNext()) {
			var d1 = d.next();
			_g.push(d1);
		}
		var deps = _g;
		deps.sort($bind(this,this.sortByPriorityDesc));
		var _g = 0;
		while(_g < deps.length) {
			var d = deps[_g];
			++_g;
			this.collect(d,out,vertex);
		}
		if(cur.vertex == null) {
			cur.vertex = vertex;
		}
		if(cur.vertex == vertex) {
			out.push(cur);
		}
		cur.onStack = false;
	}
	,link: function(shadersData) {
		this.varMap = new haxe_ds_StringMap();
		this.varIdMap = new haxe_ds_IntMap();
		this.allVars = [];
		this.shaders = [];
		this.locals = new haxe_ds_IntMap();
		var dupShaders = [];
		var _g = [];
		var _g_current = 0;
		var _g_array = shadersData;
		while(_g_current < _g_array.length) {
			var _g_value = _g_array[_g_current];
			var _g_key = _g_current++;
			var i = _g_key;
			var s = _g_value;
			if(shadersData.indexOf(s) < i) {
				var s2 = hxsl_Clone.shaderData(s);
				dupShaders.push({ origin : s, cloned : s2});
				_g.push(s2);
			} else {
				_g.push(s);
			}
		}
		shadersData = _g;
		this.curInstance = 0;
		var outVars = [];
		var _g = 0;
		while(_g < shadersData.length) {
			var s = shadersData[_g];
			++_g;
			this.isBatchShader = this.batchMode && StringTools.startsWith(s.name,"batchShader_");
			var _g1 = 0;
			var _g2 = s.vars;
			while(_g1 < _g2.length) {
				var v = _g2[_g1];
				++_g1;
				var v2 = this.allocVar(v,null,s.name);
				if(this.isBatchShader && v2.v.kind == hxsl_VarKind.Param && !StringTools.startsWith(v2.path,"Batch_")) {
					v2.v.kind = hxsl_VarKind.Local;
				}
				if(v.kind == hxsl_VarKind.Output) {
					outVars.push(v);
				}
			}
			var _g3 = 0;
			var _g4 = s.funs;
			while(_g3 < _g4.length) {
				var f = _g4[_g3];
				++_g3;
				var v1 = this.allocVar(f.ref,f.expr.p);
				v1.kind = f.kind;
			}
			this.curInstance++;
		}
		var priority = 0;
		var initPrio_init = [-3000];
		var initPrio_vert = [-2000];
		var initPrio_frag = [-1000];
		var _g = 0;
		while(_g < shadersData.length) {
			var s = shadersData[_g];
			++_g;
			var _g1 = 0;
			var _g2 = s.funs;
			while(_g1 < _g2.length) {
				var f = _g2[_g1];
				++_g1;
				var v = this.allocVar(f.ref,f.expr.p);
				if(v.kind == null) {
					throw haxe_Exception.thrown("assert");
				}
				switch(v.kind._hx_index) {
				case 0:case 1:
					this.addShader(s.name + "." + (v.kind == hxsl_FunctionKind.Vertex ? "vertex" : "fragment"),v.kind == hxsl_FunctionKind.Vertex,f.expr,priority);
					break;
				case 2:
					var prio;
					var status;
					switch(f.ref.name) {
					case "__init__fragment":
						prio = initPrio_frag;
						status = false;
						break;
					case "__init__vertex":
						prio = initPrio_vert;
						status = true;
						break;
					default:
						prio = initPrio_init;
						status = null;
					}
					var _g3 = f.expr.e;
					if(_g3._hx_index == 4) {
						var el = _g3.el;
						var index = 0;
						var _g4 = 0;
						while(_g4 < el.length) {
							var e = el[_g4];
							++_g4;
							this.addShader(s.name + "." + f.ref.name + index++,status,e,prio[0]++);
						}
					} else {
						this.addShader(s.name + "." + f.ref.name,status,f.expr,prio[0]++);
					}
					break;
				case 3:
					throw haxe_Exception.thrown("Unexpected helper function in linker " + v.v.name);
				}
			}
			++priority;
		}
		this.shaders.sort($bind(this,this.sortByPriorityDesc));
		var entry = new hxsl__$Linker_ShaderInfos("<entry>",false);
		entry.deps = new haxe_ds_ObjectMap();
		var _g = 0;
		while(_g < outVars.length) {
			var v = outVars[_g];
			++_g;
			this.buildDependency(entry,this.allocVar(v,null),false);
		}
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.hasDiscard) {
				this.initDependencies(s);
				entry.deps.set(s,true);
			}
		}
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.vertex != null) {
				continue;
			}
			var onlyParams = true;
			var r = s.read.iterator();
			while(r.hasNext()) {
				var r1 = r.next();
				if(r1.v.kind != hxsl_VarKind.Param) {
					onlyParams = false;
					break;
				}
			}
			if(onlyParams) {
				s.vertex = false;
			}
		}
		var v = [];
		var f = [];
		this.collect(entry,v,true);
		this.collect(entry,f,false);
		if(f.pop() != entry) {
			throw haxe_Exception.thrown("assert");
		}
		var _g = 0;
		var _g1 = this.shaders;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			s.marked = null;
		}
		var _g = 0;
		var _g1 = v.concat(f);
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var d = s.deps.keys();
			while(d.hasNext()) {
				var d1 = d.next();
				if(d1.marked == null) {
					this.error(d1.name + " needed by " + s.name + " is unreachable",null);
				}
			}
			s.marked = true;
		}
		var outVars = [];
		var varMap_h = { };
		var addVar = null;
		addVar = function(v) {
			if(varMap_h.hasOwnProperty(v.id)) {
				return;
			}
			varMap_h[v.id] = true;
			if(v.v.parent != null) {
				addVar(v.parent);
			} else {
				outVars.push(v.v);
			}
		};
		var _g = 0;
		var _g1 = v.concat(f);
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var v1 = s.read.iterator();
			while(v1.hasNext()) {
				var v2 = v1.next();
				addVar(v2);
			}
			var v3 = s.write.iterator();
			while(v3.hasNext()) {
				var v4 = v3.next();
				addVar(v4);
			}
		}
		var cleanVar = null;
		cleanVar = function(v) {
			var _g = v.type;
			if(_g._hx_index == 13) {
				var vl = _g.vl;
				if(v.kind != hxsl_VarKind.Input) {
					var vout = [];
					var _g = 0;
					while(_g < vl.length) {
						var v1 = vl[_g];
						++_g;
						if(varMap_h.hasOwnProperty(v1.id)) {
							cleanVar(v1);
							vout.push(v1);
						}
					}
					v.type = hxsl_Type.TStruct(vout);
				}
			}
		};
		var _g = 0;
		while(_g < outVars.length) {
			var v1 = outVars[_g];
			++_g;
			cleanVar(v1);
		}
		var build = function(kind,name,a) {
			var v = { id : hxsl_Tools.allocVarId(), name : name, type : hxsl_Type.TFun([{ ret : hxsl_Type.TVoid, args : []}]), kind : hxsl_VarKind.Function};
			outVars.push(v);
			var exprs = [];
			var _g = 0;
			while(_g < a.length) {
				var s = a[_g];
				++_g;
				var _g1 = s.body.e;
				if(_g1._hx_index == 4) {
					var el = _g1.el;
					var _g2 = 0;
					while(_g2 < el.length) {
						var e = el[_g2];
						++_g2;
						exprs.push(e);
					}
				} else {
					exprs.push(s.body);
				}
			}
			var expr = { e : hxsl_TExprDef.TBlock(exprs), t : hxsl_Type.TVoid, p : exprs.length == 0 ? null : exprs[0].p};
			return { kind : kind, ref : v, ret : hxsl_Type.TVoid, args : [], expr : expr};
		};
		var funs = [build(hxsl_FunctionKind.Vertex,"vertex",v),build(hxsl_FunctionKind.Fragment,"fragment",f)];
		var _g = 0;
		while(_g < dupShaders.length) {
			var d = dupShaders[_g];
			++_g;
			var _g1 = 0;
			var _g2 = d.cloned.vars.length;
			while(_g1 < _g2) {
				var i = _g1++;
				this.allocVar(d.cloned.vars[i],null).merged.unshift(d.origin.vars[i]);
			}
		}
		return { name : "out", vars : outVars, funs : funs};
	}
	,__class__: hxsl_Linker
};
var hxsl_Output = $hxEnums["hxsl.Output"] = { __ename__:"hxsl.Output",__constructs__:null
	,Const: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hxsl.Output",toString:$estr}; },$_._hx_name="Const",$_.__params__ = ["v"],$_)
	,Value: ($_=function(v,size) { return {_hx_index:1,v:v,size:size,__enum__:"hxsl.Output",toString:$estr}; },$_._hx_name="Value",$_.__params__ = ["v","size"],$_)
	,PackNormal: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"hxsl.Output",toString:$estr}; },$_._hx_name="PackNormal",$_.__params__ = ["v"],$_)
	,PackFloat: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"hxsl.Output",toString:$estr}; },$_._hx_name="PackFloat",$_.__params__ = ["v"],$_)
	,Vec2: ($_=function(a) { return {_hx_index:4,a:a,__enum__:"hxsl.Output",toString:$estr}; },$_._hx_name="Vec2",$_.__params__ = ["a"],$_)
	,Vec3: ($_=function(a) { return {_hx_index:5,a:a,__enum__:"hxsl.Output",toString:$estr}; },$_._hx_name="Vec3",$_.__params__ = ["a"],$_)
	,Vec4: ($_=function(a) { return {_hx_index:6,a:a,__enum__:"hxsl.Output",toString:$estr}; },$_._hx_name="Vec4",$_.__params__ = ["a"],$_)
	,Swiz: ($_=function(a,swiz) { return {_hx_index:7,a:a,swiz:swiz,__enum__:"hxsl.Output",toString:$estr}; },$_._hx_name="Swiz",$_.__params__ = ["a","swiz"],$_)
};
hxsl_Output.__constructs__ = [hxsl_Output.Const,hxsl_Output.Value,hxsl_Output.PackNormal,hxsl_Output.PackFloat,hxsl_Output.Vec2,hxsl_Output.Vec3,hxsl_Output.Vec4,hxsl_Output.Swiz];
hxsl_Output.__empty_constructs__ = [];
var hxsl_Printer = function(varId) {
	if(varId == null) {
		varId = false;
	}
	this.varId = varId;
};
$hxClasses["hxsl.Printer"] = hxsl_Printer;
hxsl_Printer.__name__ = "hxsl.Printer";
hxsl_Printer.opStr = function(op) {
	switch(op._hx_index) {
	case 0:
		return "+";
	case 1:
		return "*";
	case 2:
		return "/";
	case 3:
		return "-";
	case 4:
		return "=";
	case 5:
		return "==";
	case 6:
		return "!=";
	case 7:
		return ">";
	case 8:
		return ">=";
	case 9:
		return "<";
	case 10:
		return "<=";
	case 11:
		return "&";
	case 12:
		return "|";
	case 13:
		return "^";
	case 14:
		return "&&";
	case 15:
		return "||";
	case 16:
		return "<<";
	case 17:
		return ">>";
	case 18:
		return ">>>";
	case 19:
		return "%";
	case 20:
		var op1 = op.op;
		return hxsl_Printer.opStr(op1) + "=";
	case 21:
		return "...";
	case 22:
		return "=>";
	default:
		return "??" + Std.string(op);
	}
};
hxsl_Printer.toString = function(e,varId) {
	if(varId == null) {
		varId = false;
	}
	return new hxsl_Printer(varId).exprString(e);
};
hxsl_Printer.shaderToString = function(s,varId) {
	if(varId == null) {
		varId = false;
	}
	return new hxsl_Printer(varId).shaderString(s);
};
hxsl_Printer.prototype = {
	buffer: null
	,varId: null
	,shaderString: function(s) {
		this.buffer = new StringBuf();
		var _g = 0;
		var _g1 = s.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.addVar(v,null);
			this.buffer.b += Std.string(";\n");
		}
		if(s.vars.length > 0) {
			this.buffer.b += Std.string("\n");
		}
		var _g = 0;
		var _g1 = s.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.addFun(f);
			this.buffer.b += Std.string("\n\n");
		}
		return this.buffer.b;
	}
	,exprString: function(e) {
		this.buffer = new StringBuf();
		this.addExpr(e,"");
		return this.buffer.b;
	}
	,addVar: function(v,defKind,tabs,parent) {
		if(tabs == null) {
			tabs = "";
		}
		if(v.qualifiers != null) {
			var _g = 0;
			var _g1 = v.qualifiers;
			while(_g < _g1.length) {
				var q = _g1[_g];
				++_g;
				var v1;
				switch(q._hx_index) {
				case 0:
					var max = q.max;
					v1 = "const" + (max == null ? "" : "(" + max + ")");
					break;
				case 1:
					v1 = "private";
					break;
				case 2:
					v1 = "nullable";
					break;
				case 3:
					v1 = "perObject";
					break;
				case 4:
					var n = q.n;
					v1 = "name('" + n + "')";
					break;
				case 5:
					v1 = "shared";
					break;
				case 6:
					var p = q.p;
					v1 = $hxEnums[p.__enum__].__constructs__[p._hx_index]._hx_name.toLowerCase() + "p";
					break;
				case 7:
					var min = q.min;
					var max1 = q.max;
					v1 = "range(" + min + "," + max1 + ")";
					break;
				case 8:
					v1 = "ignore";
					break;
				case 9:
					var n1 = q.v;
					v1 = "perInstance(" + n1 + ")";
					break;
				case 10:
					var s = q.s;
					v1 = "doc(\"" + StringTools.replace(s,"\"","\\\"") + "\")";
					break;
				case 11:
					var s1 = q.source;
					v1 = "borrow(" + s1 + ")";
					break;
				case 12:
					var s2 = q.name;
					v1 = "sampler(" + s2 + ")";
					break;
				}
				this.buffer.b += Std.string("@" + v1 + " ");
			}
		}
		if(v.kind != defKind) {
			switch(v.kind._hx_index) {
			case 0:
				this.buffer.b += Std.string("@global ");
				break;
			case 1:
				this.buffer.b += Std.string("@input ");
				break;
			case 2:
				this.buffer.b += Std.string("@param ");
				break;
			case 3:
				this.buffer.b += Std.string("@varying ");
				break;
			case 4:
				this.buffer.b += Std.string("@local ");
				break;
			case 5:
				this.buffer.b += Std.string("@output ");
				break;
			case 6:
				this.buffer.b += Std.string("@function ");
				break;
			}
		}
		this.buffer.b += Std.string("var ");
		if(v.parent == parent) {
			this.buffer.b += Std.string(v.name + (this.varId ? "@" + v.id : ""));
		} else {
			this.addVarName(v);
		}
		this.buffer.b += Std.string(" : ");
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			this.buffer.b += Std.string("{");
			var first = true;
			var _g = 0;
			while(_g < vl.length) {
				var v1 = vl[_g];
				++_g;
				if(first) {
					first = false;
				} else {
					this.buffer.b += Std.string(", ");
				}
				this.addVar(v1,v1.kind,tabs,v1);
			}
			this.buffer.b += Std.string("}");
		} else {
			var v1 = hxsl_Tools.toString(v.type);
			this.buffer.b += Std.string(v1);
		}
	}
	,addFun: function(f) {
		this.buffer.b += Std.string("function " + f.ref.name + "(");
		var first = true;
		var _g = 0;
		var _g1 = f.args;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(first) {
				this.buffer.b += Std.string(" ");
				first = false;
			} else {
				this.buffer.b += Std.string(", ");
			}
			this.addVar(a,hxsl_VarKind.Local);
		}
		if(f.args.length > 0) {
			this.buffer.b += Std.string(" ");
		}
		var v = ") : " + hxsl_Tools.toString(f.ret) + " ";
		this.buffer.b += Std.string(v);
		this.addExpr(f.expr,"");
	}
	,addVarName: function(v) {
		if(v.parent != null) {
			this.addVarName(v.parent);
			this.buffer.b += Std.string(".");
		}
		this.buffer.b += Std.string(v.name);
		if(this.varId) {
			this.buffer.b += Std.string("@" + v.id);
		}
	}
	,addConst: function(c) {
		var _this = this.buffer;
		var _this1 = _this.b;
		var tmp;
		switch(c._hx_index) {
		case 0:
			tmp = "null";
			break;
		case 1:
			var b = c.b;
			tmp = b;
			break;
		case 2:
			var i = c.v;
			tmp = i;
			break;
		case 3:
			var f = c.v;
			tmp = f;
			break;
		case 4:
			var s = c.v;
			tmp = "\"" + s + "\"";
			break;
		}
		_this.b = _this1 + Std.string(tmp);
	}
	,addExpr: function(e,tabs) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 0:
			var c = _g.c;
			this.addConst(c);
			break;
		case 1:
			var v = _g.v;
			this.addVarName(v);
			break;
		case 2:
			var g = _g.g;
			var v = hxsl_Tools2.toString(g);
			this.buffer.b += Std.string(v);
			break;
		case 3:
			var e = _g.e;
			this.buffer.b += Std.string("(");
			this.addExpr(e,tabs);
			this.buffer.b += Std.string(")");
			break;
		case 4:
			var el = _g.el;
			this.buffer.b += Std.string("{");
			tabs += "\t";
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				this.buffer.b += Std.string("\n" + tabs);
				this.addExpr(e,tabs);
				this.buffer.b += Std.string(";");
			}
			tabs = HxOverrides.substr(tabs,1,null);
			if(el.length > 0) {
				this.buffer.b += Std.string("\n" + tabs);
			}
			this.buffer.b += Std.string("}");
			break;
		case 5:
			var op = _g.op;
			var e1 = _g.e1;
			var e2 = _g.e2;
			this.addExpr(e1,tabs);
			var v = " " + hxsl_Printer.opStr(op) + " ";
			this.buffer.b += Std.string(v);
			this.addExpr(e2,tabs);
			break;
		case 6:
			var op = _g.op;
			var e = _g.e1;
			var v;
			switch(op._hx_index) {
			case 0:
				v = "++";
				break;
			case 1:
				v = "--";
				break;
			case 2:
				v = "!";
				break;
			case 3:
				v = "-";
				break;
			case 4:
				v = "~";
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
			this.buffer.b += Std.string(v);
			this.addExpr(e,tabs);
			break;
		case 7:
			var v = _g.v;
			var init = _g.init;
			this.addVar(v,hxsl_VarKind.Local,tabs);
			if(init != null) {
				this.buffer.b += Std.string(" = ");
				this.addExpr(init,tabs);
			}
			break;
		case 8:
			var e = _g.e;
			var el = _g.args;
			this.addExpr(e,tabs);
			this.buffer.b += Std.string("(");
			var first = true;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buffer.b += Std.string(", ");
				}
				this.addExpr(e,tabs);
			}
			this.buffer.b += Std.string(")");
			break;
		case 9:
			var e = _g.e;
			var regs = _g.regs;
			this.addExpr(e,tabs);
			this.buffer.b += Std.string(".");
			var _g1 = 0;
			while(_g1 < regs.length) {
				var r = regs[_g1];
				++_g1;
				this.buffer.b += Std.string(hxsl_Printer.SWIZ[r._hx_index]);
			}
			break;
		case 10:
			var cond = _g.econd;
			var eif = _g.eif;
			var eelse = _g.eelse;
			this.buffer.b += Std.string("if( ");
			this.addExpr(cond,tabs);
			this.buffer.b += Std.string(" ) ");
			this.addExpr(eif,tabs);
			if(eelse != null) {
				this.buffer.b += Std.string(" else ");
				this.addExpr(eelse,tabs);
			}
			break;
		case 11:
			this.buffer.b += Std.string("discard");
			break;
		case 12:
			var e = _g.e;
			this.buffer.b += Std.string("return");
			if(e != null) {
				this.buffer.b += Std.string(" ");
				this.addExpr(e,tabs);
			}
			break;
		case 13:
			var v = _g.v;
			var it = _g.it;
			var loop = _g.loop;
			this.buffer.b += Std.string("for( ");
			this.addVarName(v);
			this.buffer.b += Std.string(" in ");
			this.addExpr(it,tabs);
			this.buffer.b += Std.string(" ) ");
			this.addExpr(loop,tabs);
			break;
		case 14:
			this.buffer.b += Std.string("continue");
			break;
		case 15:
			this.buffer.b += Std.string("break");
			break;
		case 16:
			var e1 = _g.e;
			var e2 = _g.index;
			this.addExpr(e1,tabs);
			this.buffer.b += Std.string("[");
			this.addExpr(e2,tabs);
			this.buffer.b += Std.string("]");
			break;
		case 17:
			var el = _g.el;
			this.buffer.b += Std.string("[");
			var first = true;
			var _g1 = 0;
			while(_g1 < el.length) {
				var e = el[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buffer.b += Std.string(", ");
				}
				this.addExpr(e,tabs);
			}
			this.buffer.b += Std.string("]");
			break;
		case 18:
			var e = _g.e;
			var cases = _g.cases;
			var def = _g.def;
			this.buffer.b += Std.string("switch( ");
			this.addExpr(e,tabs);
			this.buffer.b += Std.string(") {");
			var old = tabs;
			var _g1 = 0;
			while(_g1 < cases.length) {
				var c = cases[_g1];
				++_g1;
				this.buffer.b += Std.string("\n" + tabs);
				this.buffer.b += Std.string("case ");
				var first = true;
				var _g2 = 0;
				var _g3 = c.values;
				while(_g2 < _g3.length) {
					var v = _g3[_g2];
					++_g2;
					if(first) {
						first = false;
					} else {
						this.buffer.b += Std.string(", ");
					}
					this.addExpr(v,tabs);
				}
				tabs += "\t";
				this.buffer.b += Std.string(":\n" + tabs);
				this.addExpr(c.expr,tabs);
				tabs = old;
			}
			if(def != null) {
				this.buffer.b += Std.string("\n" + tabs);
				tabs += "\t";
				this.buffer.b += Std.string("default:\n" + tabs);
				this.addExpr(def,tabs);
				tabs = old;
			}
			this.buffer.b += Std.string("\n" + tabs + "}");
			break;
		case 19:
			var _g1 = _g.e;
			var _g2 = _g.loop;
			if(_g.normalWhile == false) {
				var loop = _g2;
				var e = _g1;
				var old = tabs;
				tabs += "\t";
				this.buffer.b += Std.string("do {\n" + tabs);
				this.addExpr(loop,tabs);
				tabs = old;
				this.buffer.b += Std.string("\n" + tabs + "} while( ");
				this.addExpr(e,tabs);
				this.buffer.b += Std.string(" )");
			} else {
				var loop = _g2;
				var e = _g1;
				this.buffer.b += Std.string("while( ");
				this.addExpr(e,tabs);
				var old = tabs;
				tabs += "\t";
				this.buffer.b += Std.string(" ) {\n" + tabs);
				this.addExpr(loop,tabs);
				tabs = old;
				this.buffer.b += Std.string("\n" + tabs + "}");
			}
			break;
		case 20:
			var m = _g.m;
			var args = _g.args;
			var e = _g.e;
			this.buffer.b += Std.string("@");
			this.buffer.b += Std.string(m);
			if(args.length > 0) {
				this.buffer.b += Std.string("(");
				var first = true;
				var _g = 0;
				while(_g < args.length) {
					var c = args[_g];
					++_g;
					if(first) {
						first = false;
					} else {
						this.buffer.b += Std.string(", ");
					}
					this.addConst(c);
				}
				this.buffer.b += Std.string(")");
			}
			this.buffer.b += Std.string(" ");
			this.addExpr(e,tabs);
			break;
		}
	}
	,__class__: hxsl_Printer
};
var hxsl_AllocParam = function(name,pos,instance,index,type) {
	this.name = name;
	this.pos = pos;
	this.instance = instance;
	this.index = index;
	this.type = type;
};
$hxClasses["hxsl.AllocParam"] = hxsl_AllocParam;
hxsl_AllocParam.__name__ = "hxsl.AllocParam";
hxsl_AllocParam.prototype = {
	name: null
	,pos: null
	,instance: null
	,index: null
	,type: null
	,perObjectGlobal: null
	,next: null
	,__class__: hxsl_AllocParam
};
var hxsl_AllocGlobal = function(pos,path,type) {
	this.pos = pos;
	this.path = path;
	this.gid = hxsl_Globals.allocID(path);
	this.type = type;
};
$hxClasses["hxsl.AllocGlobal"] = hxsl_AllocGlobal;
hxsl_AllocGlobal.__name__ = "hxsl.AllocGlobal";
hxsl_AllocGlobal.prototype = {
	pos: null
	,gid: null
	,path: null
	,type: null
	,next: null
	,__class__: hxsl_AllocGlobal
};
var hxsl_RuntimeShaderData = function() {
};
$hxClasses["hxsl.RuntimeShaderData"] = hxsl_RuntimeShaderData;
hxsl_RuntimeShaderData.__name__ = "hxsl.RuntimeShaderData";
hxsl_RuntimeShaderData.prototype = {
	vertex: null
	,data: null
	,code: null
	,params: null
	,paramsSize: null
	,globals: null
	,globalsSize: null
	,textures: null
	,texturesCount: null
	,buffers: null
	,bufferCount: null
	,consts: null
	,__class__: hxsl_RuntimeShaderData
};
var hxsl_ShaderInstanceDesc = function(shader,bits) {
	this.shader = shader;
	this.bits = bits;
};
$hxClasses["hxsl.ShaderInstanceDesc"] = hxsl_ShaderInstanceDesc;
hxsl_ShaderInstanceDesc.__name__ = "hxsl.ShaderInstanceDesc";
hxsl_ShaderInstanceDesc.prototype = {
	shader: null
	,bits: null
	,index: null
	,__class__: hxsl_ShaderInstanceDesc
};
var hxsl_RuntimeShader = function() {
	this.id = hxsl_RuntimeShader.UID++;
};
$hxClasses["hxsl.RuntimeShader"] = hxsl_RuntimeShader;
hxsl_RuntimeShader.__name__ = "hxsl.RuntimeShader";
hxsl_RuntimeShader.prototype = {
	id: null
	,vertex: null
	,fragment: null
	,globals: null
	,signature: null
	,batchMode: null
	,spec: null
	,__class__: hxsl_RuntimeShader
};
var hxsl_Serializer = function() {
};
$hxClasses["hxsl.Serializer"] = hxsl_Serializer;
hxsl_Serializer.__name__ = "hxsl.Serializer";
hxsl_Serializer.prototype = {
	input: null
	,varMap: null
	,types: null
	,readVarInt: function() {
		var b = this.input.readByte();
		if(b < 128) {
			return b;
		}
		if(b == 255) {
			return this.input.readInt32();
		}
		return (b & 127) << 8 | this.input.readByte();
	}
	,readType: function() {
		switch(this.input.readByte()) {
		case 0:
			return hxsl_Type.TVoid;
		case 1:
			return hxsl_Type.TInt;
		case 2:
			return hxsl_Type.TBool;
		case 3:
			return hxsl_Type.TFloat;
		case 4:
			return hxsl_Type.TString;
		case 5:
			var bits = this.input.readByte();
			var v = hxsl_Serializer.TVECS.h[bits];
			if(v == null) {
				v = hxsl_Type.TVec(bits & 7,Type.createEnumIndex(hxsl_VecType,bits >> 3,null));
				hxsl_Serializer.TVECS.h[bits] = v;
			}
			return v;
		case 6:
			return hxsl_Type.TMat3;
		case 7:
			return hxsl_Type.TMat4;
		case 8:
			return hxsl_Type.TMat3x4;
		case 9:
			return hxsl_Type.TBytes(this.input.readInt32());
		case 10:
			return hxsl_Type.TSampler2D;
		case 11:
			return hxsl_Type.TSampler2DArray;
		case 12:
			return hxsl_Type.TSamplerCube;
		case 13:
			var id = this.readVarInt();
			var t = this.types[id];
			if(t != null) {
				return t;
			}
			var f = $bind(this,this.readVar);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			t = hxsl_Type.TStruct(_g);
			this.types[id] = t;
			return t;
		case 14:
			return hxsl_Type.TFun(null);
		case 15:
			var t = this.readType();
			var v = this.readVar();
			return hxsl_Type.TArray(t,v == null ? hxsl_SizeDecl.SConst(this.readVarInt()) : hxsl_SizeDecl.SVar(v));
		case 16:
			var t = this.readType();
			var v = this.readVar();
			return hxsl_Type.TBuffer(t,v == null ? hxsl_SizeDecl.SConst(this.readVarInt()) : hxsl_SizeDecl.SVar(v));
		case 17:
			return hxsl_Type.TChannel(this.input.readByte());
		case 18:
			return hxsl_Type.TMat2;
		default:
			throw haxe_Exception.thrown("assert");
		}
	}
	,readString: function() {
		var len = this.readVarInt();
		var s = this.input.read(len).getString(0,len);
		return s;
	}
	,readConst: function() {
		switch(this.input.readByte()) {
		case 0:
			return hxsl_Const.CNull;
		case 1:
			return hxsl_Const.CBool(this.input.readByte() != 0);
		case 2:
			return hxsl_Const.CInt(this.input.readInt32());
		case 3:
			return hxsl_Const.CFloat(this.input.readDouble());
		case 4:
			return hxsl_Const.CString(this.readString());
		default:
			throw haxe_Exception.thrown("assert");
		}
	}
	,readExpr: function() {
		var _gthis = this;
		var k = this.input.readByte();
		if(k-- == 0) {
			return null;
		}
		var e;
		switch(k) {
		case 0:
			e = hxsl_TExprDef.TConst(this.readConst());
			break;
		case 1:
			e = hxsl_TExprDef.TVar(this.readVar());
			break;
		case 2:
			e = hxsl_TExprDef.TGlobal(hxsl_Serializer.TGLOBALS[this.input.readByte()]);
			break;
		case 3:
			e = hxsl_TExprDef.TParenthesis(this.readExpr());
			break;
		case 4:
			var f = $bind(this,this.readExpr);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			e = hxsl_TExprDef.TBlock(_g);
			break;
		case 5:
			var op = this.input.readByte();
			e = hxsl_TExprDef.TBinop(op >= 128 ? haxe_macro_Binop.OpAssignOp(hxsl_Serializer.BOPS[op & 127]) : hxsl_Serializer.BOPS[op],this.readExpr(),this.readExpr());
			break;
		case 6:
			e = hxsl_TExprDef.TUnop(hxsl_Serializer.UNOPS[this.input.readByte()],this.readExpr());
			break;
		case 7:
			e = hxsl_TExprDef.TVarDecl(this.readVar(),this.readExpr());
			break;
		case 8:
			var e1 = this.readExpr();
			var f = $bind(this,this.readExpr);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			e = hxsl_TExprDef.TCall(e1,_g);
			break;
		case 9:
			var e1 = this.readExpr();
			var bits = this.input.readUInt16();
			var swiz = hxsl_Serializer.TSWIZ.h[bits];
			if(swiz == null) {
				var _g = [];
				var _g1 = 0;
				var _g2 = (bits & 3) + 1;
				while(_g1 < _g2) {
					var i = _g1++;
					_g.push(hxsl_Serializer.REGS[bits >> i * 2 + 2 & 3]);
				}
				swiz = _g;
				hxsl_Serializer.TSWIZ.h[bits] = swiz;
			}
			e = hxsl_TExprDef.TSwiz(e1,swiz);
			break;
		case 10:
			e = hxsl_TExprDef.TIf(this.readExpr(),this.readExpr(),this.readExpr());
			break;
		case 11:
			e = hxsl_TExprDef.TDiscard;
			break;
		case 12:
			e = hxsl_TExprDef.TReturn(this.readExpr());
			break;
		case 13:
			e = hxsl_TExprDef.TFor(this.readVar(),this.readExpr(),this.readExpr());
			break;
		case 14:
			e = hxsl_TExprDef.TContinue;
			break;
		case 15:
			e = hxsl_TExprDef.TBreak;
			break;
		case 16:
			e = hxsl_TExprDef.TArray(this.readExpr(),this.readExpr());
			break;
		case 17:
			var f = $bind(this,this.readExpr);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			e = hxsl_TExprDef.TArrayDecl(_g);
			break;
		case 18:
			var e1 = this.readExpr();
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				var f = $bind(_gthis,_gthis.readExpr);
				var _g3 = [];
				var _g4 = 0;
				var _g5 = _gthis.readVarInt();
				while(_g4 < _g5) {
					var i1 = _g4++;
					_g3.push(f());
				}
				_g.push({ values : _g3, expr : _gthis.readExpr()});
			}
			e = hxsl_TExprDef.TSwitch(e1,_g,this.readExpr());
			break;
		case 19:
			e = hxsl_TExprDef.TWhile(this.readExpr(),this.readExpr(),this.input.readByte() != 0);
			break;
		case 20:
			var e1 = this.readString();
			var f = $bind(this,this.readConst);
			var _g = [];
			var _g1 = 0;
			var _g2 = this.readVarInt();
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push(f());
			}
			e = hxsl_TExprDef.TMeta(e1,_g,this.readExpr());
			break;
		default:
			throw haxe_Exception.thrown("assert");
		}
		return { e : e, t : this.readType(), p : null};
	}
	,readVar: function() {
		var id = this.readVarInt();
		if(id == 0) {
			return null;
		}
		var v = this.varMap.h[id];
		if(v != null) {
			return v;
		}
		v = { id : hxsl_Tools.allocVarId(), name : this.readString(), type : null, kind : null};
		this.varMap.h[id] = v;
		v.type = this.readType();
		v.kind = hxsl_Serializer.VKINDS[this.input.readByte()];
		v.parent = this.readVar();
		var nq = this.input.readByte();
		if(nq > 0) {
			v.qualifiers = [];
			var _g = 0;
			var _g1 = nq;
			while(_g < _g1) {
				var i = _g++;
				var qid = this.input.readByte();
				var q;
				switch(qid) {
				case 0:
					var n = this.input.readInt32();
					q = hxsl_VarQualifier.Const(n == 0 ? null : n);
					break;
				case 1:
					q = hxsl_VarQualifier.Private;
					break;
				case 2:
					q = hxsl_VarQualifier.Nullable;
					break;
				case 3:
					q = hxsl_VarQualifier.PerObject;
					break;
				case 4:
					q = hxsl_VarQualifier.Name(this.readString());
					break;
				case 5:
					q = hxsl_VarQualifier.Shared;
					break;
				case 6:
					q = hxsl_VarQualifier.Precision(hxsl_Serializer.PRECS[this.input.readByte()]);
					break;
				case 7:
					q = hxsl_VarQualifier.Range(this.input.readDouble(),this.input.readDouble());
					break;
				case 8:
					q = hxsl_VarQualifier.Ignore;
					break;
				case 9:
					q = hxsl_VarQualifier.PerInstance(this.input.readInt32());
					break;
				case 10:
					q = hxsl_VarQualifier.Doc(this.readString());
					break;
				case 11:
					q = hxsl_VarQualifier.Borrow(this.readString());
					break;
				case 12:
					q = hxsl_VarQualifier.Sampler(this.readString());
					break;
				default:
					throw haxe_Exception.thrown("assert");
				}
				v.qualifiers.push(q);
			}
		}
		return v;
	}
	,readFun: function() {
		var tmp = hxsl_Serializer.FKIND[this.input.readByte()];
		var tmp1 = this.readVar();
		var f = $bind(this,this.readVar);
		var _g = [];
		var _g1 = 0;
		var _g2 = this.readVarInt();
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(f());
		}
		return { kind : tmp, ref : tmp1, args : _g, ret : this.readType(), expr : this.readExpr()};
	}
	,unserialize: function(data) {
		this.input = new haxe_io_BytesInput(haxe_crypto_Base64.decode(data,false));
		if(this.input.readByte() != (hxsl_Serializer.SIGN & 255) || this.input.readByte() != (hxsl_Serializer.SIGN >> 8 & 255) || this.input.readByte() != (hxsl_Serializer.SIGN >> 16 & 255)) {
			throw haxe_Exception.thrown("Invalid HXSL data");
		}
		this.varMap = new haxe_ds_IntMap();
		this.types = [];
		var tmp = this.readString();
		var f = $bind(this,this.readVar);
		var _g = [];
		var _g1 = 0;
		var _g2 = this.readVarInt();
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(f());
		}
		var tmp1 = _g;
		var f = $bind(this,this.readFun);
		var _g = [];
		var _g1 = 0;
		var _g2 = this.readVarInt();
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(f());
		}
		return { name : tmp, vars : tmp1, funs : _g};
	}
	,__class__: hxsl_Serializer
};
var hxsl_ShaderList = function(s,n) {
	this.s = s;
	this.next = n;
};
$hxClasses["hxsl.ShaderList"] = hxsl_ShaderList;
hxsl_ShaderList.__name__ = "hxsl.ShaderList";
hxsl_ShaderList.addSort = function(s,shaders) {
	var prev = null;
	var hd = shaders;
	while(hd != null && hd.s.priority < s.priority) {
		prev = hd;
		hd = hd.next;
	}
	if(prev == null) {
		var l = new hxsl_ShaderList(s,shaders);
		hxsl_ShaderList.checkSize(l);
		return l;
	}
	prev.next = new hxsl_ShaderList(s,prev.next);
	hxsl_ShaderList.checkSize(shaders);
	return shaders;
};
hxsl_ShaderList.checkSize = function(list) {
	if(hxsl_ShaderList.MAX_LIST_SIZE <= 0) {
		return;
	}
	var hd = list;
	var count = 0;
	while(hd != null) {
		if(!hxsl_ShaderList.ALLOW_DUPLICATES && hd.next != null && hd.next.s == hd.s) {
			throw haxe_Exception.thrown("Duplicate shader " + Std.string(hd.s));
		}
		++count;
		hd = hd.next;
	}
	if(count > hxsl_ShaderList.MAX_LIST_SIZE) {
		throw haxe_Exception.thrown("Too many shaders");
	}
};
hxsl_ShaderList.prototype = {
	s: null
	,next: null
	,__class__: hxsl_ShaderList
};
var hxsl_ShaderInstance = function(shader) {
	this.id = ++hxsl_ShaderInstance.UID;
	this.shader = shader;
	this.params = new haxe_ds_IntMap();
};
$hxClasses["hxsl.ShaderInstance"] = hxsl_ShaderInstance;
hxsl_ShaderInstance.__name__ = "hxsl.ShaderInstance";
hxsl_ShaderInstance.prototype = {
	id: null
	,shader: null
	,params: null
	,__class__: hxsl_ShaderInstance
};
var hxsl_ShaderGlobal = function(v,gid) {
	this.v = v;
	this.globalId = gid;
};
$hxClasses["hxsl.ShaderGlobal"] = hxsl_ShaderGlobal;
hxsl_ShaderGlobal.__name__ = "hxsl.ShaderGlobal";
hxsl_ShaderGlobal.prototype = {
	v: null
	,globalId: null
	,__class__: hxsl_ShaderGlobal
};
var hxsl_ShaderConst = function(v,pos,bits) {
	this.v = v;
	this.pos = pos;
	this.bits = bits;
};
$hxClasses["hxsl.ShaderConst"] = hxsl_ShaderConst;
hxsl_ShaderConst.__name__ = "hxsl.ShaderConst";
hxsl_ShaderConst.prototype = {
	v: null
	,pos: null
	,bits: null
	,globalId: null
	,next: null
	,__class__: hxsl_ShaderConst
};
var hxsl_SharedShader = function(src) {
	this.instanceCache = new haxe_ds_IntMap();
	this.consts = null;
	this.globals = [];
	if(src == "") {
		return;
	}
	this.data = new hxsl_Serializer().unserialize(src);
	var _g = 0;
	var _g1 = this.data.vars;
	while(_g < _g1.length) {
		var v = _g1[_g];
		++_g;
		this.initVarId(v);
	}
	this.data = hxsl_SharedShader.compactMem(this.data);
	this.initialize();
};
$hxClasses["hxsl.SharedShader"] = hxsl_SharedShader;
hxsl_SharedShader.__name__ = "hxsl.SharedShader";
hxsl_SharedShader.compactMem = function(mem) {
	return mem;
};
hxsl_SharedShader.prototype = {
	data: null
	,globals: null
	,consts: null
	,instanceCache: null
	,paramsCount: null
	,initialize: function() {
		var _g = 0;
		var _g1 = this.data.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.browseVar(v);
		}
	}
	,makeInstance: function(constBits) {
		var $eval = new hxsl_Eval();
		var c = this.consts;
		while(c != null) {
			var c1 = c.v;
			var _g = c.v.type;
			var tmp;
			switch(_g._hx_index) {
			case 1:
				tmp = hxsl_Const.CInt(constBits >>> c.pos & (1 << c.bits) - 1);
				break;
			case 2:
				tmp = hxsl_Const.CBool((constBits >>> c.pos & 1) != 0);
				break;
			case 17:
				var _g1 = _g.size;
				tmp = hxsl_Const.CInt(constBits >>> c.pos & (1 << c.bits) - 1);
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
			$eval.setConstant(c1,tmp);
			c = c.next;
		}
		$eval.inlineCalls = true;
		$eval.unrollLoops = hxsl_SharedShader.UNROLL_LOOPS;
		var edata = $eval.eval(this.data);
		edata = hxsl_SharedShader.compactMem(edata);
		var i = new hxsl_ShaderInstance(edata);
		this.paramsCount = 0;
		var _g = 0;
		var _g1 = this.data.vars;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			this.addParam($eval,i,v);
		}
		this.instanceCache.h[constBits] = i;
		return i;
	}
	,addParam: function($eval,i,v) {
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = 0;
			while(_g < vl.length) {
				var v1 = vl[_g];
				++_g;
				this.addParam($eval,i,v1);
			}
		} else if(v.kind == hxsl_VarKind.Param) {
			i.params.h[$eval.varMap.h[v.__id__].id] = this.paramsCount;
			this.paramsCount++;
		}
	}
	,initVarId: function(v) {
		v.id = hxsl_Tools.allocVarId();
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = 0;
			while(_g < vl.length) {
				var v = vl[_g];
				++_g;
				this.initVarId(v);
			}
		}
	}
	,browseVar: function(v,path) {
		if(path == null) {
			path = hxsl_Tools.getName(v);
		} else {
			path += "." + v.name;
		}
		var _g = v.type;
		if(_g._hx_index == 13) {
			var vl = _g.vl;
			var _g = 0;
			while(_g < vl.length) {
				var vs = vl[_g];
				++_g;
				this.browseVar(vs,path);
			}
		} else {
			var globalId = 0;
			if(v.kind == hxsl_VarKind.Global) {
				globalId = hxsl_Globals.allocID(path);
				this.globals.push(new hxsl_ShaderGlobal(v,globalId));
			}
			if(!hxsl_Tools.isConst(v)) {
				return;
			}
			var bits = hxsl_Tools.getConstBits(v);
			if(bits > 0) {
				var pos = this.consts == null ? 0 : this.consts.pos + this.consts.bits;
				var c = new hxsl_ShaderConst(v,pos,bits);
				c.globalId = globalId;
				c.next = this.consts;
				this.consts = c;
			}
		}
	}
	,__class__: hxsl_SharedShader
};
var hxsl__$Splitter_VarProps = function(v) {
	this.v = v;
	this.read = 0;
	this.write = 0;
};
$hxClasses["hxsl._Splitter.VarProps"] = hxsl__$Splitter_VarProps;
hxsl__$Splitter_VarProps.__name__ = "hxsl._Splitter.VarProps";
hxsl__$Splitter_VarProps.prototype = {
	origin: null
	,v: null
	,read: null
	,write: null
	,local: null
	,requireInit: null
	,__class__: hxsl__$Splitter_VarProps
};
var hxsl_Splitter = function() {
};
$hxClasses["hxsl.Splitter"] = hxsl_Splitter;
hxsl_Splitter.__name__ = "hxsl.Splitter";
hxsl_Splitter.prototype = {
	vars: null
	,varNames: null
	,varMap: null
	,split: function(s) {
		var _gthis = this;
		var vfun = null;
		var vvars = new haxe_ds_IntMap();
		var ffun = null;
		var fvars = new haxe_ds_IntMap();
		this.varNames = new haxe_ds_StringMap();
		this.varMap = new haxe_ds_ObjectMap();
		var _g = 0;
		var _g1 = s.funs;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			switch(f.kind._hx_index) {
			case 0:
				this.vars = vvars;
				vfun = f;
				this.checkExpr(f.expr);
				break;
			case 1:
				this.vars = fvars;
				ffun = f;
				this.checkExpr(f.expr);
				break;
			default:
				throw haxe_Exception.thrown("assert");
			}
		}
		var vafterMap = [];
		var _g = 0;
		var _g1 = Lambda.array(vvars);
		while(_g < _g1.length) {
			var inf = [_g1[_g]];
			++_g;
			var v = [inf[0].v];
			if(inf[0].local) {
				continue;
			}
			switch(v[0].kind._hx_index) {
			case 3:case 4:
				var fv = fvars.h[inf[0].origin.id];
				v[0].kind = fv != null && fv.read > 0 ? hxsl_VarKind.Var : hxsl_VarKind.Local;
				break;
			default:
			}
			switch(v[0].kind._hx_index) {
			case 3:case 5:
				if(inf[0].read > 0 || inf[0].write > 1) {
					var nv = { id : hxsl_Tools.allocVarId(), name : v[0].name, kind : hxsl_VarKind.Local, type : v[0].type};
					this.uniqueName(nv);
					this.varMap.set(inf[0].origin,nv);
					var ninf = new hxsl__$Splitter_VarProps(nv);
					ninf.read++;
					vvars.h[nv.id] = ninf;
					var p = vfun.expr.p;
					var e = [{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAssign,{ e : hxsl_TExprDef.TVar(v[0]), t : nv.type, p : p},{ e : hxsl_TExprDef.TVar(nv), t : v[0].type, p : p}), t : nv.type, p : p}];
					vafterMap.push((function(e) {
						return function() {
							_gthis.addExpr(vfun,e[0]);
						};
					})(e));
					if(v[0].kind == hxsl_VarKind.Var) {
						vafterMap.push((function(v,inf) {
							return function() {
								_gthis.varMap.set(inf[0].origin,v[0]);
							};
						})(v,inf));
					}
				}
				break;
			default:
			}
		}
		vfun = { ret : vfun.ret, ref : vfun.ref, kind : vfun.kind, args : vfun.args, expr : this.mapVars(vfun.expr)};
		var _g = 0;
		while(_g < vafterMap.length) {
			var f = vafterMap[_g];
			++_g;
			f();
		}
		var finits = [];
		var inf1 = fvars.iterator();
		while(inf1.hasNext()) {
			var inf2 = inf1.next();
			var v1 = inf2.v;
			switch(v1.kind._hx_index) {
			case 1:
				var nv = { id : hxsl_Tools.allocVarId(), name : v1.name, kind : hxsl_VarKind.Var, type : v1.type};
				this.uniqueName(nv);
				var i = vvars.h[inf2.origin.id];
				if(i == null) {
					i = new hxsl__$Splitter_VarProps(v1);
					vvars.h[inf2.origin.id] = i;
				}
				i.read++;
				this.varMap.set(inf2.origin,nv);
				var ninf = new hxsl__$Splitter_VarProps(nv);
				ninf.origin = inf2.origin;
				fvars.h[inf2.origin.id] = ninf;
				vvars.h[nv.id] = ninf;
				this.addExpr(vfun,{ e : hxsl_TExprDef.TBinop(haxe_macro_Binop.OpAssign,{ e : hxsl_TExprDef.TVar(nv), t : v1.type, p : vfun.expr.p},{ e : hxsl_TExprDef.TVar(v1), t : v1.type, p : vfun.expr.p}), t : v1.type, p : vfun.expr.p});
				break;
			case 3:
				if(inf2.write > 0) {
					var nv1 = { id : hxsl_Tools.allocVarId(), name : v1.name, kind : hxsl_VarKind.Local, type : v1.type};
					this.uniqueName(nv1);
					finits.push({ e : hxsl_TExprDef.TVarDecl(nv1,{ e : hxsl_TExprDef.TVar(v1), t : v1.type, p : ffun.expr.p}), t : hxsl_Type.TVoid, p : ffun.expr.p});
					this.varMap.set(inf2.origin,nv1);
				}
				break;
			default:
			}
		}
		var v1 = vvars.iterator();
		while(v1.hasNext()) {
			var v2 = v1.next();
			this.checkVar(v2,true,vvars,vfun.expr.p);
		}
		var v1 = fvars.iterator();
		while(v1.hasNext()) {
			var v2 = v1.next();
			this.checkVar(v2,false,vvars,ffun.expr.p);
		}
		ffun = { ret : ffun.ret, ref : ffun.ref, kind : ffun.kind, args : ffun.args, expr : this.mapVars(ffun.expr)};
		var _g = ffun.expr.e;
		if(_g._hx_index == 4) {
			var el = _g.el;
			var _g = 0;
			while(_g < finits.length) {
				var e1 = finits[_g];
				++_g;
				el.unshift(e1);
			}
		} else {
			finits.push(ffun.expr);
			ffun.expr = { e : hxsl_TExprDef.TBlock(finits), t : hxsl_Type.TVoid, p : ffun.expr.p};
		}
		var _g = [];
		var v1 = vvars.iterator();
		while(v1.hasNext()) {
			var v2 = v1.next();
			if(!v2.local) {
				_g.push(v2);
			}
		}
		var vvars = _g;
		var _g = [];
		var v1 = fvars.iterator();
		while(v1.hasNext()) {
			var v2 = v1.next();
			if(!v2.local) {
				_g.push(v2);
			}
		}
		var fvars = _g;
		vvars.sort(function(v1,v2) {
			return (v1.origin == null ? v1.v.id : v1.origin.id) - (v2.origin == null ? v2.v.id : v2.origin.id);
		});
		fvars.sort(function(v1,v2) {
			return (v1.origin == null ? v1.v.id : v1.origin.id) - (v2.origin == null ? v2.v.id : v2.origin.id);
		});
		var _g = [];
		var _g1 = 0;
		while(_g1 < vvars.length) {
			var v1 = vvars[_g1];
			++_g1;
			_g.push(v1.v);
		}
		var tmp = { name : "vertex", vars : _g, funs : [vfun]};
		var _g = [];
		var _g1 = 0;
		while(_g1 < fvars.length) {
			var v1 = fvars[_g1];
			++_g1;
			_g.push(v1.v);
		}
		return { vertex : tmp, fragment : { name : "fragment", vars : _g, funs : [ffun]}};
	}
	,addExpr: function(f,e) {
		var _g = f.expr.e;
		if(_g._hx_index == 4) {
			var el = _g.el;
			el.push(e);
		} else {
			f.expr = { e : hxsl_TExprDef.TBlock([f.expr,e]), t : hxsl_Type.TVoid, p : f.expr.p};
		}
	}
	,checkVar: function(v,vertex,vvars,p) {
		switch(v.v.kind._hx_index) {
		case 3:
			if(!vertex) {
				var i = vvars.h[v.origin.id];
				if(i != null && i.v.kind == hxsl_VarKind.Input) {
					return;
				}
				if(i == null || i.write == 0) {
					throw haxe_Exception.thrown(new hxsl_Error("Varying " + v.v.name + " is not written by vertex shader",p));
				}
			}
			break;
		case 4:
			if(v.requireInit) {
				throw haxe_Exception.thrown(new hxsl_Error("Variable " + v.v.name + " is used without being initialized",p));
			}
			break;
		default:
		}
	}
	,mapVars: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			var v2 = this.varMap.h[v.__id__];
			if(v2 == null) {
				return e;
			} else {
				return { e : hxsl_TExprDef.TVar(v2), t : e.t, p : e.p};
			}
			break;
		case 7:
			var v = _g.v;
			var init = _g.init;
			var v2 = this.varMap.h[v.__id__];
			if(v2 == null) {
				return hxsl_Tools.map(e,$bind(this,this.mapVars));
			} else {
				return { e : hxsl_TExprDef.TVarDecl(v2,init == null ? null : this.mapVars(init)), t : e.t, p : e.p};
			}
			break;
		case 13:
			var v = _g.v;
			var it = _g.it;
			var loop = _g.loop;
			var v2 = this.varMap.h[v.__id__];
			if(v2 == null) {
				return hxsl_Tools.map(e,$bind(this,this.mapVars));
			} else {
				return { e : hxsl_TExprDef.TFor(v2,this.mapVars(it),this.mapVars(loop)), t : e.t, p : e.p};
			}
			break;
		default:
			return hxsl_Tools.map(e,$bind(this,this.mapVars));
		}
	}
	,get: function(v) {
		var i = this.vars.h[v.id];
		if(i == null) {
			var nv = this.varMap.h[v.__id__];
			if(nv == null) {
				if(v.kind == hxsl_VarKind.Global || v.kind == hxsl_VarKind.Output || v.kind == hxsl_VarKind.Input) {
					nv = v;
				} else {
					nv = { id : hxsl_Tools.allocVarId(), name : v.name, kind : v.kind, type : v.type};
					this.uniqueName(nv);
				}
				this.varMap.set(v,nv);
			}
			i = new hxsl__$Splitter_VarProps(nv);
			i.origin = v;
			this.vars.h[v.id] = i;
		}
		return i;
	}
	,uniqueName: function(v) {
		if(v.kind == hxsl_VarKind.Global || v.kind == hxsl_VarKind.Output || v.kind == hxsl_VarKind.Input) {
			return;
		}
		var n = this.varNames.h[v.name];
		if(n != null && n != v) {
			var prefix = v.name;
			while(HxOverrides.cca(prefix,prefix.length - 1) >= 48 && HxOverrides.cca(prefix,prefix.length - 1) <= 57) prefix = HxOverrides.substr(prefix,0,-1);
			var k = prefix == v.name ? 2 : Std.parseInt(HxOverrides.substr(v.name,prefix.length,null));
			while(Object.prototype.hasOwnProperty.call(this.varNames.h,prefix + k)) ++k;
			v.name = prefix + k;
		}
		this.varNames.h[v.name] = v;
	}
	,checkExpr: function(e) {
		var _g = e.e;
		switch(_g._hx_index) {
		case 1:
			var v = _g.v;
			var inf = this.get(v);
			if(inf.write == 0) {
				inf.requireInit = true;
			}
			inf.read++;
			break;
		case 5:
			var _g1 = _g.op;
			var _g2 = _g.e1;
			var _g3 = _g.e2;
			switch(_g1._hx_index) {
			case 4:
				var _g4 = _g2.e;
				var _g5 = _g2.p;
				var _g5 = _g2.t;
				switch(_g4._hx_index) {
				case 1:
					var v = _g4.v;
					var e1 = _g3;
					var inf = this.get(v);
					inf.write++;
					this.checkExpr(e1);
					break;
				case 9:
					var _g5 = _g4.e;
					var _g6 = _g4.regs;
					var _g4 = _g5.e;
					var _g6 = _g5.p;
					var _g6 = _g5.t;
					if(_g4._hx_index == 1) {
						var v = _g4.v;
						var e1 = _g3;
						var inf = this.get(v);
						inf.write++;
						this.checkExpr(e1);
					} else {
						hxsl_Tools.iter(e,$bind(this,this.checkExpr));
					}
					break;
				default:
					hxsl_Tools.iter(e,$bind(this,this.checkExpr));
				}
				break;
			case 20:
				var _g4 = _g1.op;
				var _g1 = _g2.e;
				var _g4 = _g2.p;
				var _g4 = _g2.t;
				switch(_g1._hx_index) {
				case 1:
					var v = _g1.v;
					var e1 = _g3;
					var inf = this.get(v);
					if(inf.write == 0) {
						inf.requireInit = true;
					}
					inf.read++;
					inf.write++;
					this.checkExpr(e1);
					break;
				case 9:
					var _g2 = _g1.e;
					var _g4 = _g1.regs;
					var _g1 = _g2.e;
					var _g4 = _g2.p;
					var _g4 = _g2.t;
					if(_g1._hx_index == 1) {
						var v = _g1.v;
						var e1 = _g3;
						var inf = this.get(v);
						if(inf.write == 0) {
							inf.requireInit = true;
						}
						inf.read++;
						inf.write++;
						this.checkExpr(e1);
					} else {
						hxsl_Tools.iter(e,$bind(this,this.checkExpr));
					}
					break;
				default:
					hxsl_Tools.iter(e,$bind(this,this.checkExpr));
				}
				break;
			default:
				hxsl_Tools.iter(e,$bind(this,this.checkExpr));
			}
			break;
		case 7:
			var v = _g.v;
			var init = _g.init;
			var inf = this.get(v);
			inf.local = true;
			if(init != null) {
				this.checkExpr(init);
				inf.write++;
			}
			break;
		case 13:
			var v = _g.v;
			var it = _g.it;
			var loop = _g.loop;
			this.checkExpr(it);
			var inf = this.get(v);
			inf.local = true;
			inf.write++;
			this.checkExpr(loop);
			break;
		default:
			hxsl_Tools.iter(e,$bind(this,this.checkExpr));
		}
	}
	,__class__: hxsl_Splitter
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = "js.html._CanvasElement.CanvasUtil";
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var name = "webgl";
	var ctx = canvas.getContext(name,attribs);
	if(ctx != null) {
		return ctx;
	}
	var name = "experimental-webgl";
	var ctx = canvas.getContext(name,attribs);
	if(ctx != null) {
		return ctx;
	}
	return null;
};
Math.__name__ = "Math";
var sdk_ZProject = function() {
	this.filemanager = new sdk_file_FileManager();
	this.root = new sdk_file_lump_Directory("WAD");
	this.gameinfo = new sdk_file_lump_GameInfo();
};
$hxClasses["sdk.ZProject"] = sdk_ZProject;
sdk_ZProject.__name__ = "sdk.ZProject";
sdk_ZProject.prototype = {
	gameinfo: null
	,root: null
	,filemanager: null
	,activedata: null
	,lump: null
	,saveProject: function() {
		this.root.lumps.push(this.gameinfo);
		var data = this.root.toObject();
		this.filemanager.saveProject(data);
	}
	,buildProject: function(_launch) {
		if(_launch == null) {
			_launch = false;
		}
		var path = this.filemanager.newBuildFolder();
		var proj = new sdk_file_lump_Directory("root");
		proj.lumps = this.root.lumps.slice();
		proj.lumps.push(this.gameinfo);
		this.filemanager.zipLumps(proj);
	}
	,init: function() {
		var _gthis = this;
		Main.FileTreeObj.create(this.root);
		Main.FileEditorObj.manualTabAddition(this.gameinfo);
		var tree = Main.FileTreeObj.tree;
		tree.set_onClick(function(_event) {
			if(tree.get_selectedNode() == null) {
				return;
			}
			_gthis.activedata = tree.get_selectedNode().get_data();
			_gthis.lump = _gthis.activedata.lump;
			if(_gthis.lump.isOpen) {
				Main.FileEditorObj.tabview.set_selectedPage(_gthis.lump.uiComponent);
				return;
			}
			_gthis.lump.isOpen = true;
			var boxobject = _gthis.lump.getUIBox();
			_gthis.lump.uiComponent = boxobject;
			Main.FileEditorObj.tabview.addComponent(boxobject);
			Main.FileEditorObj.tabview.set_selectedPage(boxobject);
		});
	}
	,__class__: sdk_ZProject
};
var sdk_file_FileManager = function() {
};
$hxClasses["sdk.file.FileManager"] = sdk_file_FileManager;
sdk_file_FileManager.__name__ = "sdk.file.FileManager";
sdk_file_FileManager.prototype = {
	saveProject: function(_data) {
		var data = JSON.stringify(_data,null,"\t");
		var projname = "./projtemp/projtemp.json";
		hxd_Save.save(data,"projtemp");
	}
	,newBuildFolder: function() {
		return "";
	}
	,zipLumps: function(_dir) {
		var zipstuff = this.buildZip(_dir);
		var out = new haxe_io_BytesOutput();
		var zip = new haxe_zip_Writer(out);
		zip.write(zipstuff);
		this.downloadFile(out.getBytes(),"MyCoolWad.zip");
	}
	,buildZip: function(_dir,_entries,_inDir) {
		if(_entries == null) {
			_entries = new haxe_ds_List();
		}
		if(_inDir == null) {
			_inDir = "proj/";
		}
		var _g = 0;
		var _g1 = _dir.lumps;
		while(_g < _g1.length) {
			var lump = _g1[_g];
			++_g;
			var path = _inDir + "/" + lump.name;
			if(lump.type == 0) {
				this.buildZip(lump,_entries,path);
				continue;
			}
			var bytes = lump.toLumpFile();
			var filename = _inDir + "/" + lump.name.toUpperCase() + "." + lump.ext;
			var entry = { fileName : filename, fileSize : bytes.length, fileTime : new Date(), compressed : false, dataSize : bytes.length, data : bytes, crc32 : haxe_crypto_Crc32.make(bytes)};
			_entries.push(entry);
		}
		return _entries;
	}
	,downloadFile: function(_bytes,_name) {
		var buffer = _bytes.b.bufferValue;
		var file = new Blob([buffer]);
		var a = window.document.createElement("a");
		var url = URL.createObjectURL(file);
		a.href = url;
		a.download = _name;
		window.document.body.appendChild(a);
		a.click();
		var timer = haxe_Timer.delay(function() {
			window.document.body.removeChild(a);
			URL.revokeObjectURL(url);
		},0);
	}
	,__class__: sdk_file_FileManager
};
var sdk_file_lump_LumpBase = function() {
	this.ext = ".unknown";
	this.wikipage = "https://zdoom.org/wiki/Main_Page";
	var _gthis = this;
	this.wikibutton = new haxe_ui_components_Button();
	this.wikibutton.set_text("View Wiki");
	this.wikibutton.set_onClick(function(_event) {
		hxd_System.openURL(_gthis.wikipage);
	});
};
$hxClasses["sdk.file.lump.LumpBase"] = sdk_file_lump_LumpBase;
sdk_file_lump_LumpBase.__name__ = "sdk.file.lump.LumpBase";
sdk_file_lump_LumpBase.prototype = {
	type: null
	,name: null
	,isOpen: null
	,treeNode: null
	,uiComponent: null
	,wikibutton: null
	,wikipage: null
	,ext: null
	,toObject: function() {
		return { };
	}
	,toLumpFile: function() {
		haxe_Log.trace("No bytes defined here!",{ fileName : "src/sdk/file/lump/LumpBase.hx", lineNumber : 53, className : "sdk.file.lump.LumpBase", methodName : "toLumpFile"});
		return null;
	}
	,getUIBox: function() {
		var box = new haxe_ui_containers_Box();
		box.set_text("Null Fucking Object dumbass");
		return box;
	}
	,__class__: sdk_file_lump_LumpBase
};
var sdk_file_lump_Directory = function(_name) {
	sdk_file_lump_LumpBase.call(this);
	this.name = _name;
	this.type = 0;
	this.lumps = [];
};
$hxClasses["sdk.file.lump.Directory"] = sdk_file_lump_Directory;
sdk_file_lump_Directory.__name__ = "sdk.file.lump.Directory";
sdk_file_lump_Directory.__super__ = sdk_file_lump_LumpBase;
sdk_file_lump_Directory.prototype = $extend(sdk_file_lump_LumpBase.prototype,{
	lumps: null
	,getUIBox: function() {
		var _gthis = this;
		var container = new haxe_ui_containers_Box();
		container.set_text(this.name);
		var alignment = new haxe_ui_containers_HBox();
		container.addComponent(alignment);
		var label = new haxe_ui_components_Label();
		alignment.addComponent(label);
		label.set_text("Folder name: ");
		var input = new haxe_ui_components_TextField();
		input.set_value(this.name);
		alignment.addComponent(input);
		input.set_onChange(function(_event) {
			_gthis.name = input.get_value();
			_gthis.treeNode.set_value(input.get_value());
			_gthis.uiComponent.set_text(input.get_value());
		});
		return container;
	}
	,toObject: function() {
		var data = { type : "Directory", name : this.name};
		if(this.lumps.length == 0) {
			return data;
		}
		data.lumps = [];
		var _g = 0;
		var _g1 = this.lumps;
		while(_g < _g1.length) {
			var lump = _g1[_g];
			++_g;
			var ldata = lump.toObject();
			data.lumps.push(ldata);
		}
		return data;
	}
	,__class__: sdk_file_lump_Directory
});
var sdk_file_lump_GameInfo = function() {
	sdk_file_lump_LumpBase.call(this);
	this.type = 1;
	this.name = "GAMEINFO";
	this.wikipage = "https://zdoom.org/wiki/GAMEINFO";
	this.ext = "txt";
	this.load = [];
};
$hxClasses["sdk.file.lump.GameInfo"] = sdk_file_lump_GameInfo;
sdk_file_lump_GameInfo.__name__ = "sdk.file.lump.GameInfo";
sdk_file_lump_GameInfo.__super__ = sdk_file_lump_LumpBase;
sdk_file_lump_GameInfo.prototype = $extend(sdk_file_lump_LumpBase.prototype,{
	iwad: null
	,load: null
	,noSpriteRename: null
	,startupTitle: null
	,backColor: null
	,foreColor: null
	,titlecolor: null
	,startupType: null
	,startupSong: null
	,loadLights: null
	,loadBrightmaps: null
	,loadWidescreen: null
	,discordAppID: null
	,steamAppID: null
	,split: null
	,toLumpFile: function() {
		var data = "";
		if(this.iwad != null) {
			data += "IWAD = \"" + this.iwad + "\"\n";
		}
		if(this.load.length != 0) {
			data += "LOAD = ";
			var _g = 0;
			var _g1 = this.load;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				data += "\"" + item + "\"";
				if(this.load.indexOf(item) != this.load.length - 1) {
					data += ",";
				}
			}
			data += "\n";
		}
		if(this.noSpriteRename != null) {
			data += "NOSPRITERENAME = " + (this.noSpriteRename == true ? "true\n" : "false\n");
		}
		if(this.startupTitle != null) {
			data += "STARTUPTITLE = " + ("\"" + this.startupTitle + "\"\n");
		}
		if(this.titlecolor) {
			var fore = "" + HxOverrides.substr(this.foreColor,1,6);
			var back = "" + HxOverrides.substr(this.backColor,1,6);
			data += "STARTUPCOLORS = \"" + fore + "\", \"" + back + "\"\n";
		}
		if(this.startupSong != null) {
			data += "STARTUPSONG = \"" + this.startupSong + "\"\n";
		}
		if(this.loadLights) {
			data += "LOADLIGHTS = " + (this.loadLights == true ? 1 : 0) + "\n";
		}
		if(this.loadBrightmaps) {
			data += "LOADBRIGHTMAPS = " + (this.loadBrightmaps == true ? 1 : 0) + "\n";
		}
		if(this.loadWidescreen) {
			data += "LOADWIDESCREEN = " + (this.loadWidescreen == true ? 1 : 0) + "\n";
		}
		if(this.discordAppID != null) {
			data += "DISCORDAPPID = \"" + this.discordAppID + "\"\n";
		}
		if(this.steamAppID != null) {
			data += "STEAMAPPID = \"" + this.steamAppID + "\"\n";
		}
		return haxe_io_Bytes.ofString(data);
	}
	,getUIBox: function() {
		var _gthis = this;
		var container = new haxe_ui_containers_Box();
		container.set_text("Gameinfo");
		container.set_percentWidth(100);
		container.set_percentHeight(100);
		this.split = new haxe_ui_containers_HorizontalSplitter();
		container.addComponent(this.split);
		this.split.set_percentWidth(100);
		this.split.set_percentHeight(100);
		var aligner = new haxe_ui_containers_ScrollView();
		this.split.addComponent(aligner);
		var iwad_box = new haxe_ui_containers_HBox();
		var iwad_label = new haxe_ui_components_Label();
		iwad_label.set_text("IWAD: ");
		iwad_box.addComponent(iwad_label);
		var iwad_input = new haxe_ui_components_TextField();
		iwad_box.addComponent(iwad_input);
		iwad_input.set_onChange(function(_event) {
			if(iwad_input.get_value() == "") {
				_gthis.iwad = null;
			} else {
				_gthis.iwad = iwad_input.get_value();
			}
		});
		aligner.addComponent(iwad_box);
		var load_box = new haxe_ui_containers_HBox();
		var load_label = new haxe_ui_components_Label();
		load_label.set_text("LOAD: ");
		load_box.addComponent(load_label);
		var load_input = new haxe_ui_components_TextField();
		load_input.set_onChange(function(_event) {
			var input = load_input.get_value();
			var items = input.split(",");
			if(items.length == 1) {
				if(items[0] == "") {
					_gthis.load = [];
					return;
				}
			}
			_gthis.load = items.slice();
		});
		load_box.addComponent(load_input);
		aligner.addComponent(load_box);
		var nosprite_box = new haxe_ui_containers_HBox();
		var nosprite_label = new haxe_ui_components_Label();
		nosprite_label.set_text("No Sprite Rename: ");
		nosprite_box.addComponent(nosprite_label);
		var nosprite_check = new haxe_ui_components_CheckBox();
		nosprite_box.addComponent(nosprite_check);
		nosprite_box.set_onChange(function(_event) {
			_gthis.noSpriteRename = nosprite_check.get_value();
		});
		aligner.addComponent(nosprite_box);
		var title_box = new haxe_ui_containers_HBox();
		var title_label = new haxe_ui_components_Label();
		title_label.set_text("Startup title: ");
		title_box.addComponent(title_label);
		var title_input = new haxe_ui_components_TextField();
		title_input.set_onChange(function(_event) {
			_gthis.startupTitle = title_input.get_value();
		});
		title_box.addComponent(title_input);
		aligner.addComponent(title_box);
		var color_box = new haxe_ui_containers_HBox();
		var color_label = new haxe_ui_components_Label();
		color_label.set_text("Startup color");
		color_box.addComponent(color_label);
		var color_check = new haxe_ui_components_CheckBox();
		color_box.addComponent(color_check);
		var color_fore = new haxe_ui_components_ColorPicker();
		color_box.addComponent(color_fore);
		color_fore.set_disabled(true);
		color_fore.set_onChange(function(_event) {
			var tmp = color_fore.get_currentColor();
			_gthis.foreColor = haxe_ui_util_Color.toHex(tmp);
		});
		var color_back = new haxe_ui_components_ColorPicker();
		color_box.addComponent(color_back);
		color_back.set_disabled(true);
		color_back.set_onChange(function(_event) {
			var tmp = color_back.get_currentColor();
			_gthis.backColor = haxe_ui_util_Color.toHex(tmp);
		});
		color_check.set_onClick(function(_event) {
			color_fore.set_disabled(!color_check.get_value());
			color_back.set_disabled(!color_check.get_value());
			_gthis.titlecolor = color_check.get_value();
			var tmp = color_back.get_currentColor();
			_gthis.backColor = haxe_ui_util_Color.toHex(tmp);
			var tmp = color_fore.get_currentColor();
			_gthis.foreColor = haxe_ui_util_Color.toHex(tmp);
		});
		aligner.addComponent(color_box);
		var starttype_box = new haxe_ui_containers_HBox();
		var starttype_label = new haxe_ui_components_Label();
		starttype_label.set_text("Startup type: ");
		starttype_box.addComponent(starttype_label);
		var starttype_select = new haxe_ui_components_DropDown();
		starttype_select.set_dataSource(new haxe_ui_data_DataSource());
		starttype_select.get_dataSource().add("Doom");
		starttype_select.get_dataSource().add("Heretic");
		starttype_select.get_dataSource().add("Hexen");
		starttype_select.get_dataSource().add("Strife");
		starttype_select.set_selectedItem("Doom");
		starttype_select.set_onChange(function(_event) {
		});
		starttype_box.addComponent(starttype_select);
		aligner.addComponent(starttype_box);
		var startsong_box = new haxe_ui_containers_HBox();
		var startsong_label = new haxe_ui_components_Label();
		startsong_label.set_text("Startup song: ");
		startsong_box.addComponent(startsong_label);
		var startsong_input = new haxe_ui_components_TextField();
		startsong_box.addComponent(startsong_input);
		startsong_input.set_onChange(function(_event) {
			_gthis.startupSong = startsong_input.get_value();
		});
		aligner.addComponent(startsong_box);
		var loadlights_check = new haxe_ui_components_CheckBox();
		loadlights_check.set_text("Load lights");
		aligner.addComponent(loadlights_check);
		loadlights_check.set_onChange(function(_event) {
			_gthis.loadLights = loadlights_check.get_value();
		});
		var loadbright_check = new haxe_ui_components_CheckBox();
		loadbright_check.set_text("Load brightmaps");
		aligner.addComponent(loadbright_check);
		loadbright_check.set_onChange(function(_event) {
			_gthis.loadBrightmaps = loadbright_check.get_value();
		});
		var loadwide_check = new haxe_ui_components_CheckBox();
		loadwide_check.set_text("Load widescreen graphics");
		aligner.addComponent(loadwide_check);
		loadwide_check.set_onChange(function(_event) {
			_gthis.loadWidescreen = loadwide_check.get_value();
		});
		var discord_box = new haxe_ui_containers_HBox();
		var discord_label = new haxe_ui_components_Label();
		discord_label.set_text("Discord App ID");
		discord_box.addComponent(discord_label);
		var discord_input = new haxe_ui_components_TextField();
		discord_box.addComponent(discord_input);
		discord_input.set_onChange(function(_event) {
			_gthis.discordAppID = discord_input.get_value();
		});
		aligner.addComponent(discord_box);
		var steam_box = new haxe_ui_containers_HBox();
		var steam_label = new haxe_ui_components_Label();
		steam_label.set_text("Steam App ID");
		steam_box.addComponent(steam_label);
		var steam_input = new haxe_ui_components_TextField();
		steam_box.addComponent(steam_input);
		aligner.addComponent(steam_box);
		steam_input.set_onChange(function(_event) {
			_gthis.steamAppID = steam_input.get_value();
		});
		aligner.addComponent(this.wikibutton);
		return container;
	}
	,toObject: function() {
		var data = { type : "Gameinfo", name : this.name};
		if(this.iwad != null) {
			data.iwad = this.iwad;
		}
		if(this.load != null) {
			if(this.load.length != 0) {
				data.load = this.load.slice();
			}
		}
		if(this.titlecolor) {
			data.foreColor = this.foreColor;
			data.backColor = this.backColor;
		}
		if(this.noSpriteRename != null) {
			data.noSpriteRename = this.noSpriteRename;
		}
		if(this.startupTitle != null) {
			data.startupTitle = this.startupTitle;
		}
		if(this.startupType != null) {
			data.startupType = this.startupType;
		}
		if(this.startupSong != null) {
			data.startupSong = this.startupSong;
		}
		if(this.loadLights != null) {
			data.loadLights = this.loadLights;
		}
		if(this.loadBrightmaps != null) {
			data.loadBrightmaps = this.loadBrightmaps;
		}
		if(this.loadWidescreen != null) {
			data.loadWidescreen = this.loadWidescreen;
		}
		if(this.discordAppID != null) {
			data.discordAppID = this.discordAppID;
		}
		return data;
	}
	,__class__: sdk_file_lump_GameInfo
});
var ui_ZD_$UI = function() {
};
$hxClasses["ui.ZD_UI"] = ui_ZD_$UI;
ui_ZD_$UI.__name__ = "ui.ZD_UI";
ui_ZD_$UI.prototype = {
	__class__: ui_ZD_$UI
};
var ui_FileBar = function() {
	ui_ZD_$UI.call(this);
	this.bar = new haxe_ui_containers_menus_MenuBar();
	this.bar.set_percentWidth(100);
	this.m_File = new haxe_ui_containers_menus_Menu();
	this.m_File.set_text("File");
	this.bar.addComponent(this.m_File);
	this.mi_NewProject = new haxe_ui_containers_menus_MenuItem();
	this.mi_NewProject.set_text("New Project");
	this.m_File.addComponent(this.mi_NewProject);
	this.mi_LoadProject = new haxe_ui_containers_menus_MenuItem();
	this.mi_LoadProject.set_text("Load Project");
	this.m_File.addComponent(this.mi_LoadProject);
	this.mi_LoadRecent = new haxe_ui_containers_menus_Menu();
	this.mi_LoadRecent.set_text("Load Recent");
	this.m_File.addComponent(this.mi_LoadRecent);
	this.m_File.addComponent(new haxe_ui_containers_menus_MenuSeparator());
	this.mi_SaveProject = new haxe_ui_containers_menus_MenuItem();
	this.mi_SaveProject.set_text("Save Project");
	this.m_File.addComponent(this.mi_SaveProject);
	this.mi_SaveProject.set_onClick(function(_event) {
		Main.project.saveProject();
	});
	this.mi_SaveAsProject = new haxe_ui_containers_menus_MenuItem();
	this.mi_SaveAsProject.set_text("Save As...");
	this.m_File.addComponent(this.mi_SaveAsProject);
	this.m_File.addComponent(new haxe_ui_containers_menus_MenuSeparator());
	this.mi_Deploy = new haxe_ui_components_Button();
	this.mi_Deploy.set_text("Download");
	this.bar.addComponent(this.mi_Deploy);
	this.mi_Deploy.set_onClick(function(_event) {
		Main.project.buildProject(true);
	});
	haxe_ui_Toolkit.get_screen().addComponent(this.bar);
};
$hxClasses["ui.FileBar"] = ui_FileBar;
ui_FileBar.__name__ = "ui.FileBar";
ui_FileBar.__super__ = ui_ZD_$UI;
ui_FileBar.prototype = $extend(ui_ZD_$UI.prototype,{
	bar: null
	,m_File: null
	,mi_NewProject: null
	,mi_LoadProject: null
	,mi_LoadRecent: null
	,mi_SaveProject: null
	,mi_SaveAsProject: null
	,mi_Deploy: null
	,__class__: ui_FileBar
});
var ui_FileEditor = function() {
	ui_ZD_$UI.call(this);
	this.tabview = new haxe_ui_containers_TabView();
	var welcomebox = new haxe_ui_containers_Box();
	welcomebox.set_text("Welcome!");
	this.tabview.addComponent(welcomebox);
	this.tabview.set_percentWidth(100);
	this.tabview.set_percentHeight(100);
};
$hxClasses["ui.FileEditor"] = ui_FileEditor;
ui_FileEditor.__name__ = "ui.FileEditor";
ui_FileEditor.__super__ = ui_ZD_$UI;
ui_FileEditor.prototype = $extend(ui_ZD_$UI.prototype,{
	tabview: null
	,manualTabAddition: function(_lump) {
		this.tabview.addComponent(_lump.getUIBox());
	}
	,__class__: ui_FileEditor
});
var ui_FileTree = function() {
	ui_ZD_$UI.call(this);
	this.tree = new haxe_ui_containers_TreeView();
	this.tree.set_percentWidth(100);
	this.tree.set_percentHeight(100);
};
$hxClasses["ui.FileTree"] = ui_FileTree;
ui_FileTree.__name__ = "ui.FileTree";
ui_FileTree.__super__ = ui_ZD_$UI;
ui_FileTree.prototype = $extend(ui_ZD_$UI.prototype,{
	tree: null
	,create: function(_lump) {
		var node = this.tree.addNode({ text : _lump.name, lump : _lump});
		_lump.treeNode = node;
		this.buildTree(_lump,node);
	}
	,buildTree: function(_dir,_node) {
		var _g = 0;
		var _g1 = _dir.lumps;
		while(_g < _g1.length) {
			var lump = _g1[_g];
			++_g;
			var node = _node.addNode({ text : lump.name, lump : lump});
			var object = lump.toObject();
			if(object.type == "Directory") {
				this.buildTree(lump,node);
			}
			lump.treeNode = node;
		}
	}
	,__class__: ui_FileTree
});
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
Object.defineProperty(String.prototype,"__class__",{ value : $hxClasses["String"] = String, enumerable : false, writable : true});
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "haxeui-core/styles/shared/down-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEHnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja1VZbkuw2CP3XKrIEAUJIy9GzKjvI8nMk2337WTM3mXzEahs1RoA4gOzGX39O9wcuMmIX1FLMMXpcIYfMBZPkj6vsJ/mwn8dlJ6VHvtt/1sVgCagcf1M85S8+3RQcpGCmd4pSO1/Uxxf5NMDpSdFpSJZHjEk/FeVTkfDxgk4F5diWjznZ/RbqOOi5/ghDWlvDo15cPYWf/gdD9LrCjjAPIfF4soTDAVk3Oyl7UvCaliBokSCCpwqfniAg7+Lk77xyL6hcsydUMr8HReIh4cB4DGa80bd80vfBdzvEd5alnTN+5Md+RewxyOuesyc35zh2V0JESOO5qWuLewbBipDLXhYxDLdibntkjOSQvQ2Qd998xWiUiQHLpECdCk0amzZqcDHwYANlbkBl8ZIYZ27iHVAKa9BkkyxdEpBrgFfA5ZsvtO3mba5RguFOkGSCMjrg558ZHxXNuVKeaAUz844V/OKVBHBjIbeekAIgNK880h3gazxfC1cBgrrDnLDB4uuhoiqdubXySDbQAkEFPWqNrJ8KECLYVjiD3A/kI4lSJG/MRoQ4JuBToCihaLgCAlLlDi8ZBRIBTuJlG2uMtiwrH2z0LAChEsUATZYCrAIaG/LHQkIOFRUNqhrVNGnWEiWGqDFGi6v5FRMLphbNLFm2kiSFpCkmS8mlnErmLGiOmmO2nHLOpcBogeaC1QUCpVSuUkPVGqvVVHMtDenTQtMWm7XkWm6lc5eOPtFjt5567mXQQCqNMHTEYSONPMpEqk2ZYeqM02aaeZYbauQOWF/G91GjCzXeSC1Bu6GGpWaXClrtRBdmQIwDAXFbCCCheWHmE4XAbkG3MEPWoSqU4aUucDotxIBgGMQ66YbdL+QecHMh/Cvc+ELOLeh+Ajm3oPuA3Ctub1Dr67RpXtxGaJXhCqoXlJ8WToXrSGn6tqaprOPtC+q+K/i/URTHmLGImavIhsWxeHJuDCTIhmxaMV1nueL3kbqvBN7QpBWfBPgo6D3iE8OWcXK19pLrkpC6Ob8Yx1K0tg0jlrTaR145MmYYJTzYcL/nzCeKhBw1TFSCKcIStumcvG4R/0LH4UsayOGp8AllpcGyjOpQZ7N0f8dS9gM1dNvR96jbk0wV9SpsK3ocVpVtk7842+ewmbe1D66793u40ZCkeOyl4ARHU/rslvvwgqiO0YXz6NNizjfl7UNuum8k8eENWtbwDUcbPkKgsHcU9Lo9deSIOfNFva3vwfoKLhM+czrHsSFDVGpNyLSEt1yt9xJVUsXXSQZqX/n8TeruGVkNDU657ByR8VygYn2snhln7UiXB9PuZ5rIi6J/7tN/19i2TwswHMRPMApyayo/toSLuq8qSSZOiozM/RuoEB6Ee3ucrwAAAYNpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6WiFQcziDhkqE4tiIo4ShWLYKG0FVp1MLn0C5oYkhQXR8G14ODHYtXBxVlXB1dBEPwAcXRyUnSREv+XFFrEeHDcj3f3HnfvAKFRZZrVNQ5oum2mE3Epl1+RQq8Q0IcwRERlZhnJzEIWvuPrHgG+3sV4lv+5P0e/WrAYEJCIZ5lh2sTrxNObtsF5n1hkZVklPieOmnRB4keuKx6/cS65LPBM0cym54hFYqnUwUoHs7KpEU8RR1RNp3wh57HKeYuzVq2x1j35C8MFfTnDdZojSGARSaQgQUENFVRhI0arToqFNO3HffzDrj9FLoVcFTByzGMDGmTXD/4Hv7u1ipMTXlI4DnS/OM7HKBDaBZp1x/k+dpzmCRB8Bq70tn+jAcx8kl5va5EjYGAbuLhua8oecLkDDD0Zsim7UpCmUCwC72f0TXlg8BboXfV6a+3j9AHIUldLN8DBITBWouw1n3f3dPb275lWfz9tXXKl4mmg1AAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6Yjk3ZjI0MDgtNjFiYi00MDJkLWEyYzctM2M2NjAzOTJlZWZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjQ1OTBhZjNmLWY0N2EtNDY2NC04MjM1LWJmYjJiNTI3OWUwYSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjUwOWE1NTk1LTIyNDItNDg3NS1hN2Y1LWE0MmZjMTVhOWUwNSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NjEyMjM0MTE1MDA0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YWRlZmY5MDctMjQ2NC00YTg2LTljMTMtMTliMTg2NzZkZWY4IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTExVDIxOjQzOjU0Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Ps+fDsgAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgsUKzYD7eUCAAAAKUlEQVQI12MM7TrynwEHYGRgYGDApmB1mQ0jI4yDrGB1mQ0jhjHoJgAAJK4NSNCarJ8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/left-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMBwfMYEJjiLgYGBCc5iYGBg3LJlCwMMMFlmFCA4DAwMcD7UAAgfAK7lDFY1UPqoAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/global.css", data : ""},{ name : "haxeui-core/styles/shared/maximize-button-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAABLSURBVChTY/z//z8DKYBxwqINLz+8fSEG5eMFAsISr5iIVQwCYLUN/TOIdhNILROUTTQYkRoY+xeuf/bx3UtJKB8vAEUciUmDgQEAx9IepVPk2PsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-arrows-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAA2WwUSXgyq8MAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/buttons.css", data : ""},{ name : "haxeui-core/styles/default/tabs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBUQUJCQVIgKFRPUCkKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnRhYmJhciB7CiAgICBwYWRkaW5nLWxlZnQ6IDBweDsKICAgIHBhZGRpbmctcmlnaHQ6IDBweDsKICAgIGhlaWdodDogYXV0bzsKICAgIHdpZHRoOiBhdXRvOwogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4OwogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7CiAgICBjbGlwOiB0cnVlOwp9CgoudGFiYmFyID4gLnRhYmJhci1jb250ZW50cyB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHNwYWNpbmc6IDA7Cn0KCi50YWJiYXItYnV0dG9uIHsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKICAgIGJhY2tncm91bmQ6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWRvd24gJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93biB2ZXJ0aWNhbDsKICAgIHBhZGRpbmc6IDdweCA4cHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOwogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLnRhYmJhci1idXR0b24gLmljb24gewogICAgcG9pbnRlci1ldmVudHM6IG5vbmU7Cn0KCi50YWJiYXItYnV0dG9uLmZpcnN0IHsKICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7Cn0KCi50YWJiYXItYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQ6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yIHZlcnRpY2FsOwogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnRhYmJhci1idXR0b246ZG93biB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnRhYmJhci1idXR0b246YWN0aXZlIHsKICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWxlZnQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsKfQoKLnRhYmJhci1idXR0b24tc2VsZWN0ZWQuZmlyc3Q6YWN0aXZlIHsKICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7Cn0KCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIHsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXItbGVmdC13aWR0aDogMHB4OwogICAgCiAgICBib3JkZXItdG9wOiAycHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLnRhYmJhci1idXR0b24tc2VsZWN0ZWQuZmlyc3QgewogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDsKfQoKLnRhYmJhci1idXR0b24tc2VsZWN0ZWQ6YWN0aXZlIHsKICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsKfQoKLnRhYmJhci1zY3JvbGwtbGVmdCB7CiAgICBpY29uOiAkYXJyb3ctbGVmdDsKICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICBwYWRkaW5nOiA1cHg7Cn0KCi50YWJiYXItc2Nyb2xsLXJpZ2h0IHsKICAgIGljb246ICRhcnJvdy1yaWdodDsKICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICBwYWRkaW5nOiA1cHg7Cn0KCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5sYWJlbCB7Cn0KCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5pY29uIHsKfQoKLnRhYmJhci1idXR0b24gLnRhYi1jbG9zZS1idXR0b24gewogICAgcmVzb3VyY2U6ICRjbG9zZTsKICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsKICAgIGN1cnNvcjogInBvaW50ZXIiOwogICAgcG9pbnRlci1ldmVudHM6IHRydWU7CiAgICBwYWRkaW5nOiAzcHg7CiAgICBib3JkZXItcmFkaXVzOiAycHg7Cn0KCi50YWJiYXItYnV0dG9uIC50YWItY2xvc2UtYnV0dG9uOmhvdmVyIHsKICAgIHJlc291cmNlOiAkY2xvc2UtaG92ZXI7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7Cn0KCi50YWJiYXIgLnRhYmJhci1idXR0b246ZGlzYWJsZWQgewogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnRhYmJhciAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFRBQkJBUiAoQk9UVE9NKQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoudGFiYmFyOmJvdHRvbSB7CiAgICBwYWRkaW5nLWxlZnQ6IDBweDsKICAgIHBhZGRpbmctcmlnaHQ6IDBweDsKICAgIGhlaWdodDogYXV0bzsKICAgIHdpZHRoOiBhdXRvOwogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMHB4OwogICAgYm9yZGVyLXRvcC13aWR0aDogMXB4OwogICAgYm9yZGVyLXRvcC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBjbGlwOiB0cnVlOwp9CgoudGFiYmFyOmJvdHRvbSAudGFiYmFyLWNvbnRlbnRzIHsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsKICAgIGJvcmRlci10b3Atd2lkdGg6IDFweDsKICAgIGJvcmRlci10b3AtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgc3BhY2luZzogMDsKfQoKLnRhYmJhci1idXR0b246Ym90dG9tIHsKICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgICBib3JkZXItbGVmdC13aWR0aDogMHB4Owp9CgoudGFiYmFyLWJ1dHRvbi5maXJzdCB7CiAgICBib3JkZXItbGVmdC13aWR0aDogMXB4Owp9CgoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpib3R0b20gewogICAgYm9yZGVyLXJhZGl1czogMHB4OwoKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXRvcC13aWR0aDogMXB4OwogICAgYm9yZGVyLXRvcC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsKICAgIAogICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi50YWJiYXI6Ym90dG9tIC50YWJiYXItYnV0dG9uOmFjdGl2ZSB7CiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGFjY2VudC1jb2xvcjsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWxlZnQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgoudGFiYmFyOmJvdHRvbSAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDphY3RpdmUgewogICAgYm9yZGVyLXRvcC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZC5maXJzdCB7CiAgICBib3JkZXItbGVmdC13aWR0aDogMXB4Owp9CgoudGFiYmFyOmJvdHRvbSAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItdG9wLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7Cn0KCgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFRBQkJBUiAtIFJPVU5ERUQgVEFCUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoucm91bmRlZC10YWJzIC50YWJiYXItYnV0dG9uLmZpcnN0IHsKICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDRweDsKfQoucm91bmRlZC10YWJzIC50YWJiYXItYnV0dG9uLmxhc3QgewogICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDRweDsKfQoKLnJvdW5kZWQtdGFicyAudGFiYmFyOmJvdHRvbSAudGFiYmFyLWJ1dHRvbiB7CiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwcHg7CiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMHB4Owp9Cgoucm91bmRlZC10YWJzIC50YWJiYXI6Ym90dG9tIC50YWJiYXItYnV0dG9uLmZpcnN0IHsKICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDRweDsKfQoucm91bmRlZC10YWJzIC50YWJiYXI6Ym90dG9tIC50YWJiYXItYnV0dG9uLmxhc3QgewogICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBUQUJWSUVXCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi50YWJ2aWV3IHsKICAgIGJvcmRlcjogbm9uZTsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwp9CgoudGFidmlldyA+IC50YWJ2aWV3LXRhYnMgewogICAgbWFyZ2luLXRvcDogMXB4Owp9CgoudGFidmlldzpib3R0b20gPiAudGFidmlldy10YWJzIHsKICAgIG1hcmdpbi10b3A6IDBweDsKfQoKLnRhYnZpZXcgPiAudGFidmlldy1jb250ZW50IHsKICAgIGJvcmRlcjogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHBhZGRpbmc6IDhweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsKfQoKLnRhYnZpZXctY29udGVudDpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0KCi50YWJ2aWV3Lm5vLXBhZGRpbmcgPiAudGFidmlldy1jb250ZW50IHsKICAgIHBhZGRpbmc6IDBweDsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBUQUJWSUVXIEFMVCBTVFlMRVMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmNvbGxhcHNpYmxlLWxhYmVscyAudGFiYmFyLWJ1dHRvbiAubGFiZWwgewogICAgaGlkZGVuOiB0cnVlOwp9CgouY29sbGFwc2libGUtbGFiZWxzIC50YWJiYXItYnV0dG9uLXNlbGVjdGVkIC5sYWJlbCB7CiAgICBoaWRkZW46IGZhbHNlOwp9CgouZnVsbC13aWR0aC1idXR0b25zIC50YWJiYXItYnV0dG9uLCAuZnVsbC13aWR0aC1idXR0b25zIC50YWJiYXIgPiAudGFiYmFyLWNvbnRlbnRzIHsKICAgIHdpZHRoOiAxMDAlOwp9"},{ name : "haxeui_classmap", data : "YnkxNjp2ZXJ0aWNhbHNwbGl0dGVyeTM1OmhheGUudWkuY29udGFpbmVycy5WZXJ0aWNhbFNwbGl0dGVyeTE0OnZlcnRpY2Fsc2Nyb2xseTMzOmhheGUudWkuY29tcG9uZW50cy5WZXJ0aWNhbFNjcm9sbHk0OnZib3h5MjM6aGF4ZS51aS5jb250YWluZXJzLlZCb3h5MzQ6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGdnNsaWRlcnkzMzpoYXhlLnVpLmNvbXBvbmVudHMuVmVydGljYWxTbGlkZXJ5NDE6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGdmVydGljYWxzbGlkZXJSN3kzMTp1cm4lM0ElM0FoYXhldWklM0ElM0FvcmclMkZ2Ym94UjV5MzY6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGdGV4dGZpZWxkeTI4OmhheGUudWkuY29tcG9uZW50cy5UZXh0RmllbGR5MzI6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGc3RhY2t5MjQ6aGF4ZS51aS5jb250YWluZXJzLlN0YWNreTMzOnVybiUzQSUzQWhheGV1aSUzQSUzQW9yZyUyRnNwYWNlcnkyNTpoYXhlLnVpLmNvbXBvbmVudHMuU3BhY2VyeTMzOnVybiUzQSUzQWhheGV1aSUzQSUzQW9yZyUyRnNsaWRlcnkyNTpoYXhlLnVpLmNvbXBvbmVudHMuU2xpZGVyeTMyOnVybiUzQSUzQWhheGV1aSUzQSUzQW9yZyUyRmxhYmVseTI0OmhheGUudWkuY29tcG9uZW50cy5MYWJlbHkzMjp1cm4lM0ElM0FoYXhldWklM0ElM0FvcmclMkZpbWFnZXkyNDpoYXhlLnVpLmNvbXBvbmVudHMuSW1hZ2V5NDU6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGaHN2Y29sb3JwaWNrZXJpbXBseTUwOmhheGUudWkuY29tcG9uZW50cy5fQ29sb3JQaWNrZXIuSFNWQ29sb3JQaWNrZXJJbXBseTM0OnVybiUzQSUzQWhheGV1aSUzQSUzQW9yZyUyRmhzbGlkZXJ5MzU6aGF4ZS51aS5jb21wb25lbnRzLkhvcml6b250YWxTbGlkZXJ5NDM6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGaG9yaXpvbnRhbHNsaWRlclIyNXkzMTp1cm4lM0ElM0FoYXhldWklM0ElM0FvcmclMkZoYm94eTIzOmhheGUudWkuY29udGFpbmVycy5IQm94eTMxOnVybiUzQSUzQWhheGV1aSUzQSUzQW9yZyUyRmdyaWR5MjM6aGF4ZS51aS5jb250YWluZXJzLkdyaWR5MzM6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGY2FudmFzeTI1OmhheGUudWkuY29tcG9uZW50cy5DYW52YXN5MzA6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGYm94eTIyOmhheGUudWkuY29udGFpbmVycy5Cb3h5MzU6dXJuJTNBJTNBaGF4ZXVpJTNBJTNBb3JnJTJGYWJzb2x1dGV5Mjc6aGF4ZS51aS5jb250YWluZXJzLkFic29sdXRleTEyOnRyZWV2aWV3bm9kZXkzMTpoYXhlLnVpLmNvbnRhaW5lcnMuVHJlZVZpZXdOb2RleTg6dHJlZXZpZXd5Mjc6aGF4ZS51aS5jb250YWluZXJzLlRyZWVWaWV3eTc6dG9vbHRpcHkyNDpoYXhlLnVpLnRvb2x0aXBzLlRvb2xUaXB5OTp0ZXh0ZmllbGRSMTF5ODp0ZXh0YXJlYXkyNzpoYXhlLnVpLmNvbXBvbmVudHMuVGV4dEFyZWF5Nzp0YWJ2aWV3eTI2OmhheGUudWkuY29udGFpbmVycy5UYWJWaWV3eTEyOnRhYmJhcmJ1dHRvbnkzOTpoYXhlLnVpLmNvbXBvbmVudHMuX1RhYkJhci5UYWJCYXJCdXR0b255Njp0YWJiYXJ5MjU6aGF4ZS51aS5jb21wb25lbnRzLlRhYkJhcnk3OnN0ZXBwZXJ5MjY6aGF4ZS51aS5jb21wb25lbnRzLlN0ZXBwZXJ5NTpzdGFja1IxM3k4OnNwbGl0dGVyeTI3OmhheGUudWkuY29udGFpbmVycy5TcGxpdHRlcnk2OnNwYWNlclIxNXk2OnNsaWRlclIxN3kxMjpzaXplcmdyaXBwZXJ5NDE6aGF4ZS51aS5jb250YWluZXJzLl9TcGxpdHRlci5TaXplckdyaXBwZXJ5MTA6c2Nyb2xsdmlld3kyOTpoYXhlLnVpLmNvbnRhaW5lcnMuU2Nyb2xsVmlld3k2OnNjcm9sbHkyNTpoYXhlLnVpLmNvbXBvbmVudHMuU2Nyb2xseTU6cmFuZ2V5MjQ6aGF4ZS51aS5jb21wb25lbnRzLlJhbmdleTg6cHJvZ3Jlc3N5Mjc6aGF4ZS51aS5jb21wb25lbnRzLlByb2dyZXNzeTk6cHJlbG9hZGVyeTE3OmhheGUudWkuUHJlbG9hZGVyeTEzOm1lbnVzZXBhcmF0b3J5Mzg6aGF4ZS51aS5jb250YWluZXJzLm1lbnVzLk1lbnVTZXBhcmF0b3J5ODptZW51aXRlbXkzMzpoYXhlLnVpLmNvbnRhaW5lcnMubWVudXMuTWVudUl0ZW15NzptZW51YmFyeTMyOmhheGUudWkuY29udGFpbmVycy5tZW51cy5NZW51QmFyeTQ6bWVudXkyOTpoYXhlLnVpLmNvbnRhaW5lcnMubWVudXMuTWVudXk4Omxpc3R2aWV3eTI3OmhheGUudWkuY29udGFpbmVycy5MaXN0Vmlld3k1OmxhYmVsUjE5eTEyOml0ZW1yZW5kZXJlcnkyNTpoYXhlLnVpLmNvcmUuSXRlbVJlbmRlcmVyeTIwOmludGVyYWN0aXZlY29tcG9uZW50eTMzOmhheGUudWkuY29yZS5JbnRlcmFjdGl2ZUNvbXBvbmVudHk1OmltYWdlUjIxeTE4OmhzdmNvbG9ycGlja2VyaW1wbFIyM3kxODpob3Jpem9udGFsc3BsaXR0ZXJ5Mzc6aGF4ZS51aS5jb250YWluZXJzLkhvcml6b250YWxTcGxpdHRlcnkxNjpob3Jpem9udGFsc2xpZGVyUjI1eTE2Omhvcml6b250YWxzY3JvbGx5MzU6aGF4ZS51aS5jb21wb25lbnRzLkhvcml6b250YWxTY3JvbGx5MTU6aG9yaXpvbnRhbHJhbmdleTM0OmhheGUudWkuY29tcG9uZW50cy5Ib3Jpem9udGFsUmFuZ2V5NDpoYm94UjI4eTQ6Z3JpZFIzMHk4OmRyb3Bkb3dueTI3OmhheGUudWkuY29tcG9uZW50cy5Ecm9wRG93bnk5OmRlY29yYXRvcnkyODpoYXhlLnVpLmNvbXBvbmVudHMuRGVjb3JhdG9yeTEzOmNvbXBvbmVudGltcGx5Mjk6aGF4ZS51aS5iYWNrZW5kLkNvbXBvbmVudEltcGx5MTM6Y29tcG9uZW50YmFzZXkyOTpoYXhlLnVpLmJhY2tlbmQuQ29tcG9uZW50QmFzZXk5OmNvbXBvbmVudHkyMjpoYXhlLnVpLmNvcmUuQ29tcG9uZW50eTE1OmNvbG9ycGlja2VyaW1wbHk0NzpoYXhlLnVpLmNvbXBvbmVudHMuX0NvbG9yUGlja2VyLkNvbG9yUGlja2VySW1wbHkxMTpjb2xvcnBpY2tlcnkzMDpoYXhlLnVpLmNvbXBvbmVudHMuQ29sb3JQaWNrZXJ5MTM6Y2hlY2tib3h2YWx1ZXkzMjpoYXhlLnVpLmNvbXBvbmVudHMuQ2hlY2tCb3hWYWx1ZXk4OmNoZWNrYm94eTI3OmhheGUudWkuY29tcG9uZW50cy5DaGVja0JveHk2OmNhbnZhc1IzMnkxMjpjYWxlbmRhcnZpZXd5MzE6aGF4ZS51aS5jb250YWluZXJzLkNhbGVuZGFyVmlld3k4OmNhbGVuZGFyeTI3OmhheGUudWkuY29tcG9uZW50cy5DYWxlbmRhcnk2OmJ1dHRvbnkyNTpoYXhlLnVpLmNvbXBvbmVudHMuQnV0dG9ueTM6Ym94UjM0eTE3OmJhc2ljaXRlbXJlbmRlcmVyeTMwOmhheGUudWkuY29yZS5CYXNpY0l0ZW1SZW5kZXJlcnk4OmFic29sdXRlUjM2aA"},{ name : "haxeui-core/styles/shared/down-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBgYt2zZgkWtZUYBmpBlRgEThEIWQpgL4cClGbG6AQAStwro4kB3hAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/maximize-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAA+SURBVChTY/z//z8DKYAJiPuBGKSLGNwPsgHEIB6QogGkFmYDI0SIIPgP8gNJYLhoaABiWMQQwhNITBoMDAC+tC0XTMGbOQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/notifications.css", data : "Lm5vdGlmaWNhdGlvbiB7CiAgICB3aWR0aDogMzAwcHg7CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHBhZGRpbmc6IDEwcHg7CiAgICBmaWx0ZXI6ICRkaWFsb2ctc2hhZG93Owp9Cgoubm90aWZpY2F0aW9uLmJsdWUtbm90aWZpY2F0aW9uIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRhY2NlbnQtY29sb3ItbGlnaHRlcjsKICAgIGJvcmRlci1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoubm90aWZpY2F0aW9uLnllbGxvdy1ub3RpZmljYXRpb24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHdhcm5pbmctYmFja2dyb3VuZC1jb2xvci1zdGFydDsKICAgIGJvcmRlci1jb2xvcjogJHdhcm5pbmctYm9yZGVyLWNvbG9yOwp9Cgoubm90aWZpY2F0aW9uLnJlZC1ub3RpZmljYXRpb24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7CiAgICBib3JkZXItY29sb3I6ICRlcnJvci1ib3JkZXItY29sb3I7Cn0KCi5ub3RpZmljYXRpb24uZ3JlZW4tbm90aWZpY2F0aW9uIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzdWNjZXNzLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7CiAgICBib3JkZXItY29sb3I6ICRzdWNjZXNzLWJvcmRlci1jb2xvcjsKfQoKLm5vdGlmaWNhdGlvbiAjdGl0bGUgewogICAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5ub3RpZmljYXRpb24tY2xvc2UtYnV0dG9uIHsKICAgIHJlc291cmNlOiAkY2xvc2U7CiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7CiAgICBjdXJzb3I6ICJwb2ludGVyIjsKICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOwogICAgcGFkZGluZzogM3B4OwogICAgYm9yZGVyLXJhZGl1czogMnB4Owp9Cgoubm90aWZpY2F0aW9uLWNsb3NlLWJ1dHRvbjpob3ZlciB7CiAgICByZXNvdXJjZTogJGNsb3NlLWhvdmVyOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoubm90aWZpY2F0aW9uIC5zY3JvbGx2aWV3IHsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7Cn0KCi5ub3RpZmljYXRpb24gLnNjcm9sbHZpZXctY29udGVudHMgewogICAgcGFkZGluZy10b3A6IDA7CiAgICBwYWRkaW5nLWJvdHRvbTogMDsKICAgIHBhZGRpbmctbGVmdDogMDsKfQoKLm5vdGlmaWNhdGlvbiAudmVydGljYWwtc2Nyb2xsIHsKICAgIGJvcmRlcjogbm9uZTsKfQoKLm5vdGlmaWNhdGlvbi5pbmZvICNub3RpZmljYXRpb25JY29uIHsKICAgIHJlc291cmNlOiBoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL2luZm8tbGFyZ2UucG5nOwp9Cgoubm90aWZpY2F0aW9uLmVycm9yICNub3RpZmljYXRpb25JY29uIHsKICAgIHJlc291cmNlOiBoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL2Vycm9yLWxhcmdlLnBuZzsKfQoKLm5vdGlmaWNhdGlvbi53YXJuaW5nICNub3RpZmljYXRpb25JY29uIHsKICAgIHJlc291cmNlOiBoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3dhcm5pbmctbGFyZ2UucG5nOwp9Cgoubm90aWZpY2F0aW9uLnN1Y2Nlc3MgI25vdGlmaWNhdGlvbkljb24gewogICAgcmVzb3VyY2U6IGhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvdGljay1sYXJnZS5wbmc7Cn0K"},{ name : "haxeui-core/styles/shared/minimize-button-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAtSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7TM3bcxhvlGR6qjCCaxKTBwAAA44UNDW2qEosAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/check-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAC7npUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZZRktsgDIbfOUWPYEkIieNgMDO9QY/fH7DdTXZ3Zjvdl87EJEAU+AX6BEk4fv3s4QceyhZDVPOUU9rwxBwzF3R8W0+ZNW1x1uupZ0uP9nB/wTAJWlkfPZ3jLzvdAqsp6OkbIT+FaH/8IsdT35+ETkcyVsTotFMon0LC6ws6Bcra1pay29st7Mdqz/krDD62hqpfMbHVPH+Ohug1hR9hPoRkQ80S1wJkvDlIQSfOmnmaZt9Qk9C5EgTkozhtb1YV3lG5evSJ/QmKpGUPMDwGM93th3bSj4MfZojfeJZ6e36wm9wuHoI8Y9ybh96PtbsSE0Kazk1dW5k9DNwRcpnTEorhrejbLBnFA7K3AnlDYu4olTIxsHSK1KhQp2O2lSqWGPlgQ8tcWabNxThzlS2ATRyFOptkaeLgVoFXYOV7LTT95umuksNxI4xkghgt/Pw95VOh3kfKE21+xwrr4nEosIxBbtQYBSDUrzzSGeCrPD+Dq4CgzjA7Nli2fUnsSmdujTySCVowUNGus0bWTgGECL4Vi0GmR9oSiVKizZiNCHF08CkQchwa3oGAVLlhlRxFEuA4D9+YYzTHsvIy484CCJWEg+QAVMBqXGzIH4uOHCoqGlU1qalr1pIkxaQpJUvj8ismFk0tmZlbtuLi0dWTm3vw7CVzFlyOmlO27DnnUuC0QLlgdsGAUnbeZY+77mm33fe8l4r0qbFqTdWqh5pradyk4Z5oqVnzlls56EAqHfHQIx12+JGP0pFqXXrs2lO37j33clOjsLC+K1+nRhc1nqTGQLupYarZJUHjOtHBDMQ4EojbIICE5sFsc4qRw0A3mG2ZcSqUsUodcBoNYiAYD2LtdLP7Q+6BW4jxn7jxRS4MdN9BLgx0n5B7z+0Daq3MH00Jk9A4hiOom+D4YVBhxwu/SV9vw99OeAm9hF5CL6GX0EvoJfTfCEnHn4eMP+m/Abqro1P5gvhwAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV/TlopUHMwg4pChOlkQFXGUKhbBQmkrtOpgcukXNDEkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ptIjx4Lgf7+497t4BQrPGNCs0Dmi6bWaSCSlfWJEirwhBgIgwYjKzjFR2IQff8XWPAF/v4jzL/9yfo08tWgwISMSzzDBt4nXi6U3b4LxPLLKKrBKfE4+ZdEHiR64rHr9xLrss8EzRzGXmiEViqdzFSheziqkRTxHHVE2nfCHvscp5i7NWq7P2PfkLo0V9Oct1msNIYhEppCFBQR1V1GAjTqtOioUM7Sd8/EOuP00uhVxVMHLMYwMaZNcP/ge/u7VKkxNeUjQBhF8c52MEiOwCrYbjfB87TusECD4DV3rHv9EEZj5Jb3S02BHQvw1cXHc0ZQ+43AEGnwzZlF0pSFMolYD3M/qmAjBwC/Suer2193H6AOSoq6Ub4OAQGC1T9prPu3u6e/v3TLu/HzZ7co91pPc1AAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDplNzljMjQ3Zi00OWY1LTRhZDktODI0ZS02ODI5NDY4ZWVmMDYiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MDIyZmM3MTctMWE3Yi00YWYyLWI0ZDMtZDUwMDRjZjU0YmU5IgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZjVlZTBmMGQtODAxZC00NTVmLWI2ZTYtNzllMTZiZGJhZTBmIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDg5MzAwMzIyNzQxNDkiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpjN2RiNzZkOS1mNDJiLTQ3MmItYWI1YS0xOTVjZGU2MTk1MzUiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDQtMDJUMjI6MDc6MTIiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+zJcIJwAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YEAhQHDA6Y7TQAAAClSURBVCjPjdExToJBEIbhIQj5o4lHoKCgsJZCK09BbbgHtS0lgYLSA1hyCgq10Ct4AELgoWASkITsfs1mZ993MpONqAgGeEX3pgK+j4hVRPSisvvMMRs8lOAX7FOYlOBb/CS8RrckTBPe4vH8YYg/LNHO2hN2Kbxddho5ZYEGX3n/RnMptDA/kz7z3OH52rxtvPufaWnJDj4S/sVdzSc1GKN/jTkAigfW4fXHmp4AAAAASUVORK5CYII"},{ name : "haxeui-core/locale/de/std-strings.properties", data : "c2F2ZT1TcGVpY2hlcm4KeWVzPUphCm5vPU5laW4KY2xvc2U9U2NobGllc3Nlbgpvaz1PSwpjYW5jZWw9QWJicmVjaGVuCmFwcGx5PUFud2VuZGVuCnNlYXJjaD1TdWNoZQoKcmVkPVJvdApncmVlbj1HcsO8bgpibHVlPUJsYXUKaHVlPUZhcmJ0b24Kc2F0dXJhdGlvbj1Tw6R0dGlndW5nCmJyaWdodG5lc3M9SGVsbGlna2VpdAo"},{ name : "haxeui-core/styles/default/main.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBHRU5FUkFMCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5jb21wb25lbnQgewp9CgouYWJzb2x1dGUgewogICAgY2xpcDogdHJ1ZTsKfQoKLmN1c3RvbS1jb21wb25lbnQsIC5hbmltYXRpb24gewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87Cn0KCi5tb2RhbC1iYWNrZ3JvdW5kIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRtb2RhbC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgb3BhY2l0eTogMC43NTsKfQoKLm1vZGFsLWNvbXBvbmVudCB7CiAgICBmaWx0ZXI6IGJsdXIoMSk7Cn0KCi5wb3B1cCB7CiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDIsIDQ1LCAjMDAwMDAwLCAwLjE1LCA2LCAxLCAzMCwgMzUsIGZhbHNlKTsKfQoKQGtleWZyYW1lcyBhbmltYXRpb25GYWRlSW4gewogICAgMCUgewogICAgICAgIG9wYWNpdHk6IDA7CiAgICB9CiAgICAxMDAlIHsKICAgICAgICBvcGFjaXR5OiAxOwogICAgfQp9CgouZmFkZS1pbiB7CiAgICBhbmltYXRpb246IGFuaW1hdGlvbkZhZGVJbiAwLjFzIGxpbmVhciAwcyAxOwp9CgouZmFkZS1vdXQgewogICAgYW5pbWF0aW9uOiBhbmltYXRpb25GYWRlSW4gMC4xcyBsaW5lYXIgMHMgMSByZXZlcnNlOwp9CgouZGVmYXVsdC1iYWNrZ3JvdW5kIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7Cn0KCi5kZWZhdWx0LWJhY2tncm91bmQtc29saWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogR0VORVJBTAoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoudGV4dC10aW55IHsKICAgIGZvbnQtc2l6ZTogMTBweDsKfQoKLnRleHQtc21hbGwgewogICAgZm9udC1zaXplOiAxMXB4Owp9CgoudGV4dC1ub3JtYWwgewogICAgZm9udC1zaXplOiAxM3B4Owp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIENPTlRBSU5FUlMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmJveCwgLnZib3gsIC5oYm94LCAuY29udGludW91c2hib3gsIC5oZ3JpZCwgLnZncmlkLCAuZ3JpZCB7CiAgICBzcGFjaW5nOiA1cHggNXB4OwogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogTEFCRUwKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmxhYmVsIHsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwogICAgY29udGVudC10eXBlOiBhdXRvOwogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKfQogICAgCi5sYWJlbDpkaXNhYmxlZCB7CiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogTElOSwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoubGluayB7CiAgICBjb2xvcjogJGFjY2VudC1jb2xvci1kYXJrZXI7CiAgICBmb250LXVuZGVybGluZTogdHJ1ZTsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOwp9CgoubGluazpob3ZlciB7CiAgICBjb2xvcjogJGFjY2VudC1jb2xvcjsKfQoKLmxpbms6ZG93biB7CiAgICBjb2xvcjogJGFjY2VudC1jb2xvci1kYXJrZXI7Cn0KICAgIAoubGluazpkaXNhYmxlZCB7CiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogSU1BR0UKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmltYWdlIHsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwogICAgb3BhY2l0eTogMTsKfQoKLmltYWdlOmRpc2FibGVkIHsKICAgIGZpbHRlcjogZ3JheXNjYWxlOwogICAgb3BhY2l0eTogLjM7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogRFJBRyAmIERST1AKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmRyYWdnYWJsZSB7CiAgICBjdXJzb3I6IG1vdmU7Cn0KCi5kcmFnZ2luZyB7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogSVRFTSBSRU5ERVJFUlMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmJhc2ljaXRlbXJlbmRlcmVyIHsKICAgIHdpZHRoOiAxMDAlOwp9CgouYmFzaWMtcmVuZGVyZXItY29udGFpbmVyIHsKICAgIHdpZHRoOiAxMDAlOwp9CgouYmFzaWMtcmVuZGVyZXItbGFiZWwgewogICAgd2lkdGg6IDEwMCU7Cn0KCi5iYXNpY2l0ZW1yZW5kZXJlci5hdXRvLXNpemUgewogICAgd2lkdGg6IGF1dG87Cn0KCi5iYXNpY2l0ZW1yZW5kZXJlci5hdXRvLXNpemUgLmJhc2ljLXJlbmRlcmVyLWNvbnRhaW5lciB7CiAgICB3aWR0aDogYXV0bzsKfQoKLmJhc2ljaXRlbXJlbmRlcmVyLmF1dG8tc2l6ZSAuYmFzaWMtcmVuZGVyZXItbGFiZWwgewogICAgd2lkdGg6IGF1dG87Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogU0VDVElPTiBIRUFERVJTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5zZWN0aW9uLWhlYWRlciB7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmctYm90dG9tOiA1cHg7CiAgICBwYWRkaW5nLXRvcDogMTVweDsKfQoKLnNlY3Rpb24taGVhZGVyIC5sYWJlbCB7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7Cn0KCi5zZWN0aW9uLWhlYWRlciAubGluZSB7CiAgICBoZWlnaHQ6IDFweDsKICAgIHdpZHRoOiAxMDAlOwogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7Cn0KCi5zZWN0aW9uLWhlYWRlci5maXJzdCB7CiAgICBwYWRkaW5nLXRvcDogMHB4OwogICAKfQ"},{ name : "haxeui-core/styles/shared/close-button-white.png", data : ""},{ name : "haxeui-core/styles/shared/search.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIw1AUhv+mig8qDnYoIpKhOlkoKuIoVSyChdJWaNXB5KYvaNKQpLg4Cq4FBx+LVQcXZ10dXAVB8AHi6OSk6CIlnpsUWsR44HI//nv+n3vPBYRGhalmVxRQNctIxWNiNrcq9rzChxD6MIqoxEw9kV7MwLO+7qmb6i7Cs7z7/qwBJW8ywCcSzzHdsIg3iGc2LZ3zPnGQlSSF+Jx4wqALEj9yXXb5jXPRYYFnBo1Map44SCwWO1juYFYyVOJp4rCiapQvZF1WOG9xVis11ronf2Egr62kuU5rBHEsIYEkRMiooYwKLERo10gxkaLzmId/2PEnySWTqwxGjgVUoUJy/OB/8Hu2ZmFq0k0KxIDuF9v+GAN6doFm3ba/j227eQL4n4Erre2vNoDZT9LrbS18BAxuAxfXbU3eAy53gNCTLhmSI/lpCYUC8H5G35QDhm6B/jV3bq1znD4AGZrV8g1wcAiMFyl73ePdvZ1z+7enNb8fpuZyvNk619AAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARgJIBu0NNI+AAABNElEQVQ4y82SzUpCURSFv31uFDqRhr1E9QASBYXjoGewgZIJWsYlrxrSrRwkRuWoXqJRBPYG/cx6ihqUCnZ2ExG7eQ1HtUaHfc75WKy94K8lwUGx1kiIalLRhf7oAXGalVz69ldA8aTuAusgnnl37gGI9uIquFa5OdjJ+KGAYq2RQG3VTNnVUjb7OvzI95uxD6dzh9W9yu72NydmQFJNgnjBzwCFwuYbSFmMSQbvzNB5fmB7hDq23RrKZSRgrKLtiAh0QwGKPhLtxcMAvYhdVpXncAfiNFVwfb8Z+5HB4fmsEeMZYy/HrnH/uF4QYQOk3LHtFsA0MytGjIfonMFcl/JpF0TDi3R0utZPe1GVLvCkcCGiS0AqCJFJatsvWkpErsq5LXeiLQBU8pmqqp7pp77wb/QFm09xUl2IdBcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-asc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAANannypZYQAAAAAAAAIAAAAAAADWp58AAADWp58AAAAAAAACAAAA1qefAAAAAAAAAAAA1qefAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAAAnQX2cErsvcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADq3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbcuwoDP1nFbMES0JILAfzqJodzPLngN1OutOZSm567tc1ZSQDlsQ54hH6P3+P8Bce3nQLUc1TTmnDE3PMXKD4djxl1bTFVZ8f2025aw9XB6NJIOX49HSOv7XTdmeJCjR9Z8jr2bHfd+R42vcHQ6cjmRExlHYayqch4aODTgPlmNaWstv7Kez9kO02Ez/eMKtxw8QO8fgdDeg1hR9h7kKyoWaJRwAyXw5SllLQDThQC3QWXbWdkQCQZzht76IKj6xcGn3S/kCKpKM9oOEezHTJp+2kz8EPC+J3nqVenu/a65uLO5AXxqN5GKMfsysxAdJ0Tuo2laVh4A7IZf2WUAyvQrdVMooHZG8F5Q0ud5RKmRi0DIrUqNCgvmSlihAjdzZI5sqy2lyMM1fZAniKs9BgkyxNHGxV0Cto5SsWWn7zclfJ4bgRRjLBGB3082vKp4bGmClPtPmFFeLiuSgQxmRu1hgFQmjc8kgXwLfy+ExeBQzqgtkxwbLth4ld6cytmUeyiBYMVMhjrZG10wAggm9FMMj9SFsiUUq0GbMRAUcHPwWGHIuGd1BAqtwQJUeRBHKcp2/8Y7TGsvLRjD0LRKgkMVCTpYCriI0N+WPRkUNFRaOqJjV1zVqSpJg0pWRpbn7FxKKpJTNzy1ZcPLp6cnMPnr1kzoLNUXPKlj3nXAqcFlgu+LtgQCk777LHXfe02+573ktF+tRYtaZq1UPNtTRu0rBPtNSsecutdOpIpR679tSte8+9DKTakBGHjjRs+MijXKxROGj9UL7OGt1Y48XUHGgXa/jV7GaC5naikzMwxpHAuE0GkNA8OducYuQwqZucbZmxKpQRpU5yGk3GwGDsxDro4u6NuTveQow/4o1vzIVJ3SuYC5O6T5j7yNsT1lpZu56ExdBchhPUTbD8MKB7YS/zUPuyDN/94Y+hVxsaSOqlQpEq0q3ML967+bCn9sKLAnpuCHGUMyCcvJGO9sT/FdlvjWhbUeCMXzI7DamNopJCsT1NNQadlzQoP5XPDOEkakudR1LH3Xd1bJfMqxPH2HvIwkj1FRB5+C5Eb/JMtbld9Glo/pCH4NbxyQ9fk+Fjh3RP59Qd96RPZ6TXeDvon1jVH0MVvg3RLc83eNeD3Ip7XWj+yO6vyfChgwZuGkfe4sx0v8+ylT35bcFdiISXLLSnhn5l6f/vEX13d5wyvCigP4Z+hyFcbHL4F54nyj1078dQAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NjIzZTNmZWMtYzg5Yi00MGVhLTljNjktMzFjYTgwODgwMGMyIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODIzMjkxMjA3NDQiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OWQ6JAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwZHVAUuvsAAAB7SURBVDjLY2AYviCq75gyMeqYcEkwMjIcjeo7Zky2AQwMDOKMjAwHY/qPe5JrAAMDAwP3f4b/G6L7jkWRawADAwMDGwMjw5LYCcfLyTUAL2AhQs0vhv8MiYsLLZeRY8BXRgbG0CVFltvJccHL//8ZvJcWWZ6laUIaBgAAEBYdvIFAlrEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/tick-large.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAACXBIWXMAAAsTAAALEwEAmpwYAAAC60lEQVR4nO2Zz2tTQRDHH/46ePTHyR//hFjsKTcp7MrOOzyUelHRnqUQLb3k1noQW6glLf4HKW8GUvWi4NGW9qIogje1J/vj3Aj1yWxfAw0vyW7evk2EDAykDcn7fGd3ZmcnQTC0oQ0tt0W16KREGBWkpiWpWCB8lQh7ktQf7Qh7AuGLfo/U9K04vFGpVE4E/TZF6opEeCYRtiRBYufqlyA1OxaHl72Dj9Wii5JgWZBq2IMfd0GqIUhVZV1e8AIvSY1LUrt5wTOE7Ig4vFMY+LXlidMC4ZVrcNkqBGGJn+UUXtblWUHqbdHw8sgR3vAz3UXeJzw1RbyLatGZ3AJ8bBvZPi+q+eDj8G6/4GXT1e2e4AHhvEDYHgABuz2VWK7zPkHvvR9vv5UQFq3g+XR0cUiZ+uTHB8nawYtk/vtku1xoyLq8ah59bg88w28m89o7iJg1gucmi/sUH/DltUfJ+sFcE56d/76ftZ0QtrhpNIn+aD8iv5nCs6gOuTDSVcBhS1ws/JP1h5mRL3eAT1dhymQFcCDhSQtY6b4C+uIxgPCkBXzuvgIWrXKn2m2asGVT+MMc2DbJAaP6//zbY2OA3JGn5grsOxHA8KYgzuDJUEC3LcQ12hTIKTyZbiGDJM6q4Rt/55KpjYnC4KVxEhuW0U4iCoEn0zJqcZC1qyxZ/2NRueBJ90NPuwrgoZPNl2athPPIU+pxeN2omRMIP12IcAkvEH4YT/O4dbV9QKsIp5EndjUTFH2hORLhHB5hX6yKS8YC0lWo9vIwTlYXCSuPR38hsLWbtejcIFzqBamdnuemPKvsuwAMo57gmyIQlvoY/ZdBXuN7qEAg/wLU69KH0qnAhfGgVQ9c/UV+1dlwt2XIW/WxbUquIp9lPKsspjqp37kT1nJuusgHTG5w5O9QC1y2A9/GpyO3Hba9k94q+jNqxvqELcLSBnCE5zbcs/PFg2926Q94Df0a4RO/xy0xd5UD8TPr0IYW/P/2D5+LFXPdole1AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/close-button-blue.png", data : ""},{ name : "haxeui-core/styles/shared/right-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAM0lEQVQImWP8////O1lVBgYGBgYGJgYGBqHHtxEcOJ/x////DDDABGe9k1VlgrOgMnDTADWiDmfiE8U7AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/restore-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAEaXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VhtcispDPzPKfYII4EQHIcvVe0N9vjbYiZ+juO8ivP+7FZliAEzmqZRCw1OWP/8beEvXCy1hCRacs35wJVqqtzQKcd5tV3TkXZ9XuNq6f14uN1gDEW08fxa8mX/Nk43gLNp6MkdULmAqL+/UdOFXx6AromiM2J05gVUL6DI5w26ANq5rCPXovdL6Otsr+dPNxRfGqrVL7Pr7uP3pPDeFMwTmVekeKCOkU8C0T8cYsMNQs1RYQgj9GOsqFPUiwkc8sxPt6uCkTnV9NTovVpvPXo+Hh7VSnyZxAcn51v7dDyQPFdlu/5u5lSuHr8fn3pGXTgevO8fs1lsrxmraCnD1fla1NtSdg92HVP41CWAWj4UHwGE7lJRCqJ6IBQmArajDKrEUMIo0aRGRmu3gwYoJl6BoRUzD457sEC7yiO6fskLGSs0nLFA17FlT5FvXGhPW48R9mwFM0+CKRPAyOPi1RJefcDMtwLRUW6+Ai9mdzZouHJewwyKkF1Ole3gt/J4ua4RCop72bdIhWP7CdGFfmWCuIWOMBS05x4knRcAXISpBWSwMxJBNYpCmQ5lViI4skCgBuocE3coQCI8QZJTjBnaFPap8YjSNmVhDAeMI5lBCYk5KrTBLoNYKQniR1NBDDWJkkQki0qRKi3HnLLknDV7UmwaNQUVzapatGorsaQiJRctpdTSKteIpCk1V62l1toa5mxAbni6waC1zj321CX03LWXXnsbCJ+Rhow8dJRRR5s840T+mHnqLLPOtmghlFZasvLSVVZdzRBqFoMlE8umVqxau6l2yfqhvKAaXarxVsoN9aYaRlXfIMjTibhmEIxDIiiuLgECml2zo1BK7Mq5Zkdl7AphkBTXbJIrBgXTIhajN+0Cn4q6cn+kW9D0Tjf+rnLBpXtRuY+6PVNttv02jVsh34Xu1CNi98GmccEf3lUf2/DZjVfbH6D/C1AcapbLMvNjDWtt6t1ZJEcEEiEh6hgkCDFbk6YZJ4vJbawfbWxrxLc0q2XjWtPgg1mR9TdiUXO8/RAQSW6IOOyMFb11VDm856jVEKYoeItYvlFd33dT+NTAzgV/lW34Hd17tjfWJVrp4N5m6kPrIuky2ULqdU2murjjTsm5N814ATUinFhibshuS4Zmg29pmBXnSE7vSD1tGkivyEdm1HwdqziDigkXVSSRjCUl4rl5QuEB9QZwceJZFLVw32nTsNqFXBSmsPaECKiYc4FoQ+6pFbkWKXLQHA3pr6Y4++Tex7tVrnzcGIZHiifDe1r+bt7EduA5MdSgtqrdwYXnK34dLtzT+xO4YB9W+z248HG134MLnznvVbjwey2+Dhe+Iu1X4MLXI+X3cOHVwPsMLnwvjj/ChV/0DIm2pHkliEM9QeDVb5I8P+S6pE8cESR3nDqyHA1nKfziUG4V+SEg5Vhqy9g3/96M32vDnwL8AP0A/QD9AP03gQyHWf/31r+LdBObE5asEgAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6VaKw528GvIUJ0siIo4ShWLYKG0FVp1MLn0C5o0JCkujoJrwcGPxaqDi7OuDq6CIPgB4ujkpOgiJf4vLbSI8eC4H+/uPe7eAUKtxFSzYwJQNctIRCNiOrMq+l7Rg2F0w49BiZl6LLmYguv4uoeHr3dhnuV+7s/Rq2RNBnhE4jmmGxbxBvHMpqVz3icOsoKkEJ8Tjxt0QeJHrssNfuOcd1jgmUEjlZgnDhKL+TaW25gVDJV4mjikqBrlC+kGK5y3OKulCmvek78wkNVWklynOYIolhBDHCJkVFBECRbCtGqkmEjQfsTFP+T44+SSyVUEI8cCylAhOX7wP/jdrZmbmmwkBSJA54ttf4wCvl2gXrXt72Pbrp8A3mfgSmv5yzVg9pP0aksLHQF928DFdUuT94DLHWDgSZcMyZG8NIVcDng/o2/KAP23gH+t0VtzH6cPQIq6Wr4BDg6BsTxlr7u8u6u9t3/PNPv7AVx6cp6IJdMnAAANdmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo0NjIyMTgzNS0wMDgzLTQ2ZDEtYTBmMy0yOTExNzNkNjZlZTkiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6YTJkOTdhM2ItNmYzNS00ZjQ0LTllNzgtYjcwM2UwYmNjNDJiIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MDExNGJhMjEtODdkNi00MTc5LTk5NGQtMzBmMWYxYWM2MGM1IgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2Njk1NDE5ODg1MjQ0ODUiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4zMiIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiCiAgIHhtcDpNZXRhZGF0YURhdGU9IjIwMjI6MTE6MjdUMTA6Mzk6NDcrMDE6MDAiCiAgIHhtcDpNb2RpZnlEYXRlPSIyMDIyOjExOjI3VDEwOjM5OjQ3KzAxOjAwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ODZjZDAzOTMtYjE2Ny00YTJjLTgwYzQtZmNlYjUxOWQyNjc4IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTExLTI3VDEwOjM5OjQ4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PuV9NlcAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAAHdElNRQfmCxsJJzAPzAr2AAAAPklEQVQoz2NgIBf8//+//z9h0M+IpOE/qTb8J0YNE6lOZyLVKaTbQHMNLEjsBiL8M4Hk8GchxmRGRkZ4BAMAMd5EhARLMlcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABUElEQVQ4jaWSu05CQRRF15m5FBZgYWHjKyQan4U91laKpbGgNT7iB/gfvloJsZToD1j4BWqCMSTKD1BAYbwXzrG4YhQuinF3M5m9Zs0D/hlJmpw4bc4HannEzQBg+tQ2Kdf20pUfAdmz+rBq6kSMzQS4GVwErXCnejDS6AFkz+rD1k7dAou/ON/7KMx1IK4zr5o66S6PZxxjafcdYCy1g9TRN4OJ0+a8Vx66tc/XhgAoXL92e5gaC7W9dCUA8GobID0Xenjz1vcg3lkeqDgAETedtGo161nN+kSCatwJANSwpPdcHu2Uo14FweDjEgWt9nPtF5G442IDuYSYOGBUHeV4849MHTdLAluD9a34vJspfBoABK1wB+F+gPadb0X7ncEnoHow0vBRmMMokXwcBSv6VriS+JW/ZvKoOSdi607cLICqVgi4etnOPA5g+Le8A2uUcuHpLgzCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/minimize-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAuSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7T9V0TGsAMHKCxrAAsT2LSYGAAAMFlDQ2rsh18AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/haxeui_tiny.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAwFBMVEUAAAA+drJml8uevd7K2+1Ee7c1aaBcjsWfv99RhsA7cKqfvt/J2e01aaHJ3Ow1Z56kweGsxuM5cKxzoM9PhMCnxOJBd7SBqdSTtNp6otG90ui2zeetx+RFerM1a6Rllsiow+JDe7qhvt9jlsqfvt9dj8SzzOaoxeJCd7A5bqhVicKAqdOev95ik8SsyOOivuCmw99ThcJ4pNCnv99kl8tomc1+p9RRiMSUtts8drV0oNFdkcibu96IrtdOhL9Cerg7AHaNAAAANXRSTlMASfTz8fHx5uTh4d/T00RE9PLy8fHw5+bl4uHh4eHh39bW0NC/v7m5ubm4tVROSkpIR0ZAQIt9oOEAAACUSURBVBjTRc1FEsMwEETRjpkdZmZmS5FD979VRjVVce/e3zS8MGyMz6DdpuV2x0X/QTPn++uu9pRSDtAl0wRJL4DFzjIuDqIXm8snRlJhc7FTYMnmsgZwZHMpUTjlRZA6rET+t9oAiSl0YatqiugtqLBpMSyyLmzloCe4sNUQnpaxOFy29S+FAK2Rb0/0G+4zw/WbP+FUKshItzNPAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/transparent_px.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAIAAACQd1PeAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAADElEQVQImWN4K6MCAAMnAS7qrFRjAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-arrows-blue.png", data : ""},{ name : "haxeui-core/styles/default/dialogs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBESUFMT0dTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5kaWFsb2cgewogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBmaWx0ZXI6ICRkaWFsb2ctc2hhZG93OwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcGFkZGluZzogMnB4Owp9CgouZGlhbG9nLWNvbnRhaW5lciB7CiAgICBzcGFjaW5nOiAwOwp9CgouZGlhbG9nLXRpdGxlIHsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXI6IG5vbmU7Cn0KCi5kaWFsb2cubm8tdGl0bGUgLmRpYWxvZy10aXRsZSB7CiAgICBoaWRkZW46IHRydWU7Cn0KCi5kaWFsb2ctdGl0bGUtbGFiZWwgewogICAgd2lkdGg6IDEwMCU7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgY29sb3I6ICRkaWFsb2ctdGl0bGUtY29sb3I7CiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7Cn0KCi5kaWFsb2ctY29udGVudCB7CiAgICBwYWRkaW5nOiAxMHB4Owp9CgouZGlhbG9nLWNvbnRlbnQtcGFkZGluZyB7CiAgICBwYWRkaW5nOiAxMHB4Owp9CgouZGlhbG9nLm5vLXBhZGRpbmcgLmRpYWxvZy1jb250ZW50IHsKICAgIHBhZGRpbmc6IDBweDsKfQoKLmRpYWxvZy1mb290ZXItY29udGFpbmVyIHsKICAgIHBhZGRpbmc6IDVweDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKfQoKLmRpYWxvZy1mb290ZXIgewogICAgcGFkZGluZzogNXB4OwogICAgaG9yaXpvbnRhbC1hbGlnbjogcmlnaHQ7Cn0KCi5kaWFsb2ctY2xvc2UtYnV0dG9uIHsKICAgIHJlc291cmNlOiAkY2xvc2U7CiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7CiAgICBjdXJzb3I6ICJwb2ludGVyIjsKICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOwogICAgcGFkZGluZzogM3B4OwogICAgYm9yZGVyLXJhZGl1czogMnB4Owp9CgouZGlhbG9nLWNsb3NlLWJ1dHRvbjpob3ZlciB7CiAgICByZXNvdXJjZTogJGNsb3NlLWhvdmVyOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwp9CgouZGlhbG9nLW1pbmltaXplLWJ1dHRvbiB7CiAgICByZXNvdXJjZTogJGNvbGxhcHNlOwogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOwogICAgY3Vyc29yOiAicG9pbnRlciI7CiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsKICAgIHBhZGRpbmc6IDNweDsKICAgIGJvcmRlci1yYWRpdXM6IDJweDsKfQoKLmRpYWxvZy1taW5pbWl6ZS1idXR0b246aG92ZXIgewogICAgcmVzb3VyY2U6ICRjb2xsYXBzZS1ob3ZlcjsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsKfQoKLmRpYWxvZy1tYXhpbWl6ZS1idXR0b24gewogICAgcmVzb3VyY2U6ICRleHBhbmQ7CiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7CiAgICBjdXJzb3I6ICJwb2ludGVyIjsKICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOwogICAgcGFkZGluZzogM3B4OwogICAgYm9yZGVyLXJhZGl1czogMnB4Owp9CgouZGlhbG9nLW1heGltaXplLWJ1dHRvbjpob3ZlciB7CiAgICByZXNvdXJjZTogJGV4cGFuZC1ob3ZlcjsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsKfQoKLmRpYWxvZyAjaWNvbkltYWdlLmluZm8gewogICAgcmVzb3VyY2U6ICRpbmZvLWxhcmdlOwp9CgouZGlhbG9nICNpY29uSW1hZ2UucXVlc3Rpb24gewogICAgcmVzb3VyY2U6ICRxdWVzdGlvbi1sYXJnZTsKfQoKLmRpYWxvZyAjaWNvbkltYWdlLnllc25vIHsKICAgIHJlc291cmNlOiAkcXVlc3Rpb24tbGFyZ2U7Cn0KCi5kaWFsb2cgI2ljb25JbWFnZS53YXJuaW5nIHsKICAgIHJlc291cmNlOiAkd2FybmluZy1sYXJnZTsKfQoKLmRpYWxvZyAjaWNvbkltYWdlLmVycm9yIHsKICAgIHJlc291cmNlOiAkZXJyb3ItbGFyZ2U7Cn0KCi5tZXNzYWdlYm94IHsKICAgIGluaXRpYWwtd2lkdGg6IDMwMHB4Owp9"},{ name : "haxeui-core/styles/default/scrollview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTQ1JPTExWSUVXCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5zY3JvbGx2aWV3IHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgcGFkZGluZzogMHB4OwogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGVydGlhcnktYmFja2dyb3VuZC1jb2xvcjsKfQoKLnNjcm9sbHZpZXcgLnNjcm9sbHZpZXctY29udGVudHMgewogICAgaGVpZ2h0OiBhdXRvOwogICAgc3BhY2luZzogNXB4OwogICAgcGFkZGluZzogNXB4OwogICAgYm9yZGVyOiBub25lOwp9Cgouc2Nyb2xsdmlldy5uby1wYWRkaW5nIC5zY3JvbGx2aWV3LWNvbnRlbnRzIHsKICAgIHBhZGRpbmc6IDBweDsKfQoKLnNjcm9sbHZpZXcubm8tYm9yZGVyIHsKICAgIGJvcmRlcjogbm9uZTsKfQoKLnNjcm9sbHZpZXcubm8tYm9yZGVyIC5zY3JvbGwgewogICAgYm9yZGVyOiBub25lOwp9Cgouc2Nyb2xsdmlldzphY3RpdmUgewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNT0JJTEUgVkFSSUFOVFMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnNjcm9sbHZpZXc6bW9iaWxlIHsKICAgIG1vZGU6IG1vYmlsZTsKfQo"},{ name : "haxeui-core/styles/shared/warning-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACB0lEQVRYhe2WP2gUQRTGf+/udibFCbmL8exUjGiiFqlMZdBG8E9rYaWNggqipQRRRBCEJKWljY1gJ2n1LhCbNHIggorWIijkEHYvuWeT083u7GZ3L2JzX7W89+Z7H2/mm1kYYoj/DCm6UF9QpmHmUJRvwSO5yEYRnkpRAeyxt4D7CLDXroG/UISm0AR0hTrdkY+g9c3QT3rmkJxa+56Xq1REAF37MNQcYJRS8KAIVe4JaMtMofKO+PZtgE7LbNDOw5d/AirzjuYAZZDFvHS5BOgbewE4k1JyWpft+TycmbdAV/Ho2DbCYYD3X6o8fjYBwN0rnziyv9Nn/EzHPypn8bPwZp/AL3uz3xzAVHp/UsbTkFIOUrXXs9JmEqAr1FGZC8fCTb2QmE0R9/T1rt07JsBhuy1NjdeLrshsy20FaMtMAVej8XBThwCAa9o0xwcWkGQ7U1HndwiZbJkqIM12XtoZ+IttbZkoQFfxgCdJ+fDYvXKiAFAWdQmblE68B7Rlb6PMJzPngHBHTrpfS6cAx2sXr1F4264hAjPHfiDpV1ria+n+H3DYLooPX6s8fbkPgNFql8kDnbTyvi1vRBOxM6BNM4nDdlE0xnzGawHjtYDGWKZb12nL2OC0aV8B57IwFsCSzPpbuB0u0Jl/1BzQE9FI/AyU5DIql5y5wbAOPN9hziGGGBy/AQa5lYKywFiuAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-desc-blue.png", data : ""},{ name : "haxeui-core/locale/ru/std-strings.properties", data : "c2F2ZT3QodC+0YXRgNCw0L3QuNGC0YwKeWVzPdCU0LAKbm890J3QtdGCCmNsb3NlPdCX0LDQutGA0YvRgtGMCm9rPU9LCmNhbmNlbD3QntGC0LzQtdC90LAKYXBwbHk90J/RgNC40LzQtdC90LjRgtGMCnNlYXJjaD3Qn9C+0LjRgdC6CgpyZWQ90JrRgNCw0YHQvdGL0LkKZ3JlZW490JfQtdC70LXQvdGL0LkKYmx1ZT3QodC40L3QuNC5Cmh1ZT3QptCy0LXRgtC+0LLQvtC5INGC0L7QvQpzYXR1cmF0aW9uPdCd0LDRgdGL0YnQtdC90L3QvtGB0YLRjApicmlnaHRuZXNzPdCv0YDQutC+0YHRgtGMCg"},{ name : "haxeui-core/styles/shared/minimize-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAnSURBVChTY/z//z8DKYAJShMNRjUQA2ivATmmCUU5I5ggLWkwMAAA9hYKDVhEBNAAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/ru/expression-replacements.properties", data : "emVybz1bMF09MApub25lPVswXT0wCm9uZT1bMF09MQptYW55PVswXT4xCg"},{ name : "haxeui-core/styles/default/sliders.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTTElERVJTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5ob3Jpem9udGFsLXNsaWRlciB7CiAgICBwYWRkaW5nLWxlZnQ6IDVweDsKICAgIHBhZGRpbmctcmlnaHQ6IDVweDsKICAgIHBhZGRpbmctdG9wOiAzcHg7CiAgICBwYWRkaW5nLWJvdHRvbTogM3B4OwogICAgaGVpZ2h0OiBhdXRvOwogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7CiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7Cn0KCi5ob3Jpem9udGFsLXNsaWRlcjphY3RpdmUgLmJ1dHRvbiB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgouaG9yaXpvbnRhbC1zbGlkZXI6YWN0aXZlIC5yYW5nZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgouaG9yaXpvbnRhbC1zbGlkZXIgLnNsaWRlci12YWx1ZSB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogOHB4OwogICAgYm9yZGVyLXJhZGl1czogMXB4OwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLmhvcml6b250YWwtc2xpZGVyLndpdGgtY2VudGVyIC5yYW5nZS12YWx1ZSB7CiAgICBib3JkZXItcmFkaXVzOiAwcHg7Cn0KCi5ob3Jpem9udGFsLXNsaWRlciAubWlub3ItdGljayB7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICB3aWR0aDogMXB4OwogICAgaGVpZ2h0OiA0cHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CgouaG9yaXpvbnRhbC1zbGlkZXIgLm1ham9yLXRpY2sgewogICAgbWFyZ2luLXRvcDogMTJweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgd2lkdGg6IDFweDsKICAgIGhlaWdodDogOHB4OwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLmhvcml6b250YWwtc2xpZGVyIC5idXR0b24gewogICAgd2lkdGg6IDExcHg7CiAgICBoZWlnaHQ6IDIwcHg7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgZmlsdGVyOiBub25lOwp9CiAgICAKLnZlcnRpY2FsLXNsaWRlciB7CiAgICBwYWRkaW5nLXRvcDogNXB4OwogICAgcGFkZGluZy1ib3R0b206IDVweDsKICAgIHBhZGRpbmctbGVmdDogM3B4OwogICAgcGFkZGluZy1yaWdodDogM3B4OwogICAgd2lkdGg6IGF1dG87CiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7Cn0KCi52ZXJ0aWNhbC1zbGlkZXI6YWN0aXZlIC5idXR0b24gewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLnZlcnRpY2FsLXNsaWRlcjphY3RpdmUgLnJhbmdlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi52ZXJ0aWNhbC1zbGlkZXIgLnNsaWRlci12YWx1ZSB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogOHB4OwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoudmVydGljYWwtc2xpZGVyLndpdGgtY2VudGVyIC5yYW5nZS12YWx1ZSB7CiAgICBib3JkZXItcmFkaXVzOiAwcHg7Cn0KCi52ZXJ0aWNhbC1zbGlkZXIgLm1pbm9yLXRpY2sgewogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHdpZHRoOiA0cHg7CiAgICBoZWlnaHQ6IDFweDsKICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsKfQoKLnZlcnRpY2FsLXNsaWRlciAubWFqb3ItdGljayB7CiAgICBtYXJnaW4tbGVmdDogMTJweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgd2lkdGg6IDhweDsKICAgIGhlaWdodDogMXB4OwogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOwp9CgoudmVydGljYWwtc2xpZGVyIC5idXR0b24gewogICAgd2lkdGg6IDIwcHg7CiAgICBoZWlnaHQ6IDExcHg7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7CiAgICBmaWx0ZXI6IG5vbmU7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogVkFSSUFOVCAtIFNJTVBMRQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouc2xpZGVyLnNpbXBsZS1zbGlkZXIgLmJ1dHRvbiB7CiAgICBoZWlnaHQ6IDEycHg7CiAgICB3aWR0aDogMTJweDsKfQoKLnNsaWRlci5zaW1wbGUtc2xpZGVyIC5yYW5nZS12YWx1ZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwp9Cgo"},{ name : "haxeui-core/styles/default/windows.css", data : ""},{ name : "haxeui-core/styles/shared/warning-large.png", data : ""},{ name : "haxeui-core/locale/en/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZCmZvcm1hdHMuZGVjaW1hbC5zZXBlcmF0b3I9Lgo"},{ name : "haxeui-core/styles/default/accordion.css", data : "LmFjY29yZGlvbiB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHNwYWNpbmc6IDA7CiAgICBwYWRkaW5nOiAxcHg7CiAgICBwYWRkaW5nLWJvdHRvbTogMHB4Owp9CgouYWNjb3JkaW9uLWJ1dHRvbiB7CiAgICBib3JkZXItcmFkaXVzOiAwOwogICAgYm9yZGVyOiAwcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICB3aWR0aDogMTAwJTsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICBpY29uOiAkYXJyb3ctcmlnaHQtc3F1YXJlOwogICAgaWNvbi1wb3NpdGlvbjogbGVmdDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBwYWRkaW5nOiA2cHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKfQoKLmFjY29yZGlvbi1idXR0b246aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi5hY2NvcmRpb24tYnV0dG9uOmRvd24gewogICAgaWNvbjogJGFycm93LWRvd24tc3F1YXJlOwp9CgouYWNjb3JkaW9uLXBhZ2UgewogICAgd2lkdGg6IDEwMCU7CiAgICB3aWR0aDogMTAwJTsKICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBvcGFjaXR5OiAxOwogICAgcGFkZGluZzogNXB4Owp9CgouYWNjb3JkaW9uLXBhZ2U6ZXhwYW5kZWQgewogICAgYW5pbWF0aW9uOiBhY2NvcmRpb25BbmltYXRlRXhwYW5kIDAuM3MgZWFzZSAwcyAxOwp9CgouYWNjb3JkaW9uLXBhZ2U6Y29sbGFwc2VkIHsKICAgIGFuaW1hdGlvbjogYWNjb3JkaW9uQW5pbWF0ZUNvbGxwYXNlIDAuM3MgZWFzZSAwcyAxOwp9CgpAa2V5ZnJhbWVzIGFjY29yZGlvbkFuaW1hdGVFeHBhbmQgewogICAgMCUgewogICAgICAgIG9wYWNpdHk6IDA7CiAgICAgICAgaGVpZ2h0OiAwJTsKICAgIH0KICAgIDEwMCUgewogICAgICAgIG9wYWNpdHk6IDE7CiAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgfQp9CgpAa2V5ZnJhbWVzIGFjY29yZGlvbkFuaW1hdGVDb2xscGFzZSB7CiAgICAwJSB7CiAgICAgICAgb3BhY2l0eTogMTsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICB9CiAgICAxMDAlIHsKICAgICAgICBvcGFjaXR5OiAwOwogICAgICAgIGhlaWdodDogMCU7CiAgICB9Cn0KCi5hY2NvcmRpb24tcGFnZSAuc2Nyb2xsdmlldyB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBwYWRkaW5nLXRvcDogMDsKICAgIHBhZGRpbmctcmlnaHQ6IDA7CiAgICBwYWRkaW5nLWxlZnQ6IDA7CiAgICBwYWRkaW5nLWJvdHRvbTogMDsKfQo"},{ name : "haxeui-core/locale/fr/expression-replacements.properties", data : "emVybz1bMF09MApub25lPVswXT0wCm9uZT1bMF09MQptYW55PVswXT4xCg"},{ name : "haxeui-core/styles/default/tableview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBIRUFERVIKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmhlYWRlciB7CiAgICB3aWR0aDogYXV0bzsKICAgIGhlaWdodDogYXV0bzsKICAgIHNwYWNpbmc6IDA7Cn0KCi5oZWFkZXIgLmNvbHVtbiB7CiAgICBib3JkZXItcmFkaXVzOiAwOwogICAgaWNvbi1wb3NpdGlvbjogZmFyLXJpZ2h0OwogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDA7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgcGFkZGluZzogNnB4OwogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLmhlYWRlciAuY29sdW1uLmxhc3QgewogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAwOwp9CgovKgouaGVhZGVyLnNjcm9sbGluZyAuY29sdW1uLmxhc3QgewogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7Cn0KKi8KCi5jb2x1bW4uc29ydGFibGUgewogICAgaWNvbjogJGFycm93LXVwLWRvd247CiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7Cn0KCi5jb2x1bW4uc29ydC1hc2MgewogICAgaWNvbjogJHNvcnQtYXNjOwp9CgouY29sdW1uLnNvcnQtZGVzYyB7CiAgICBpY29uOiAkc29ydC1kZXNjOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFRBQkxFVklFVwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoudGFibGV2aWV3IHsKICAgIHNwYWNpbmc6IDA7Cn0KCi50YWJsZXZpZXcgLnRhYmxldmlldy1jb250ZW50cyB7CiAgICBzcGFjaW5nOiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nOiAwcHg7Cn0KCi50YWJsZXZpZXcgLmV2ZW4gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi50YWJsZXZpZXcgLm9kZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1hbHQ7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyIHsKICAgIHNwYWNpbmc6IDFweDsKfQoKLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXIgPiAuaXRlbXJlbmRlcmVyIHsKICAgIGhlaWdodDogYXV0bzsKICAgIHBhZGRpbmc6IDZweDsKfQoKLnRhYmxldmlldyAuZXZlbjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi50YWJsZXZpZXcgLm9kZDpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyIC5sYWJlbCB7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwp9CgoudGFibGV2aWV3OmRpc2FibGVkIC5sYWJlbCB7CiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7Cn0KCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsKICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7Cn0KCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyOnNlbGVjdGVkIC5sYWJlbCB7CiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOwp9Cg"},{ name : "haxeui-core/styles/default/textinputs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBURVhUIEZJRUxECioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi50ZXh0ZmllbGQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBwYWRkaW5nOiA2cHggOHB4OwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4OwogICAgaGVpZ2h0OiBhdXRvOwogICAgc3BhY2luZzogNXB4OwogICAgaWNvbi1wb3NpdGlvbjogcmlnaHQ7CiAgICBjb250ZW50LXR5cGU6IGF1dG87Cn0KCi50ZXh0ZmllbGQucmVxdWlyZWQtdmFsdWUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHdhcm5pbmctYmFja2dyb3VuZC1jb2xvci1zdGFydDsKICAgIGJvcmRlci1jb2xvcjogJHdhcm5pbmctYm9yZGVyLWNvbG9yOwp9CgoudGV4dGZpZWxkLmludmFsaWQtdmFsdWUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7CiAgICBib3JkZXItY29sb3I6ICRlcnJvci1ib3JkZXItY29sb3I7Cn0KCi50ZXh0ZmllbGQudmFsaWQtdmFsdWUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHN1Y2Nlc3MtYmFja2dyb3VuZC1jb2xvci1zdGFydDsKICAgIGJvcmRlci1jb2xvcjogJHN1Y2Nlc3MtYm9yZGVyLWNvbG9yOwp9CgoudGV4dGZpZWxkOmFjdGl2ZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgoudGV4dGZpZWxkOmVtcHR5IHsKICAgIGNvbG9yOiAkbGlnaHRlci10ZXh0LWNvbG9yOwp9CgoudGV4dGZpZWxkOmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsKfQoKLnRleHRmaWVsZCAuZGVjb3JhdG9yIHsKICAgIHBhZGRpbmc6IDBweCA4cHg7CiAgICBiYWNrZ3JvdW5kOiAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsKICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsKICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDBweDsKICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDBweDsKICAgIGJvcmRlci1sZWZ0OiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgaW5jbHVkZS1pbi1sYXlvdXQ6IGZhbHNlOwp9CgoudGV4dGZpZWxkIC5kZWNvcmF0b3IgLmltYWdlIHsKICAgIHZlcnRpY2FsLWFsaWduOmNlbnRlcjsKICAgIG1hcmdpbi10b3A6IC0xcHg7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogVEVYVCBBUkVBCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi50ZXh0YXJlYSB7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBwYWRkaW5nOiAxcHg7CiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBpbml0aWFsLXdpZHRoOiAxNTBweDsKICAgIGluaXRpYWwtaGVpZ2h0OiAxMDBweDsKICAgIGNvbnRlbnQtdHlwZTogYXV0bzsKfQoKLnRleHRhcmVhLnJlcXVpcmVkLXZhbHVlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICR3YXJuaW5nLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7CiAgICBib3JkZXItY29sb3I6ICR3YXJuaW5nLWJvcmRlci1jb2xvcjsKfQoKLnRleHRhcmVhLmludmFsaWQtdmFsdWUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7CiAgICBib3JkZXItY29sb3I6ICRlcnJvci1ib3JkZXItY29sb3I7Cn0KCi50ZXh0YXJlYS52YWxpZC12YWx1ZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc3VjY2Vzcy1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0OwogICAgYm9yZGVyLWNvbG9yOiAkc3VjY2Vzcy1ib3JkZXItY29sb3I7Cn0KCi50ZXh0YXJlYTphY3RpdmUgewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLnRleHRhcmVhOmVtcHR5IHsKICAgIGNvbG9yOiAkbGlnaHRlci10ZXh0LWNvbG9yOwp9CgoudGV4dGFyZWE6ZGlzYWJsZWQgewogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOwp9"},{ name : "haxeui-core/styles/default/steppers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBVTkFUVEFDSEVEIFNURVBQRVIKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnN0ZXBwZXIgewogICAgc3BhY2luZzogMDsKfQoKLnN0ZXBwZXItYnV0dG9uIHsKICAgIHBhZGRpbmc6IDNweDsKICAgIHBhZGRpbmctdG9wOiA0cHg7CiAgICBwYWRkaW5nLWJvdHRvbTogNHB4OwogICAgYm9yZGVyLXJhZGl1czogMDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgb3BhY2l0eTogMTsKfQoKLnN0ZXBwZXItYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwp9Cgouc3RlcHBlci1idXR0b246ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kb3duOwp9Cgouc3RlcHBlci1idXR0b246ZGlzYWJsZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZGlzYWJsZWQ7Cn0KCi5zdGVwcGVyLWluYyB7CiAgICBpY29uOiAkYXJyb3ctdXA7Cn0KCi5zdGVwcGVyLWRlaW5jIHsKICAgIGljb246ICRhcnJvdy1kb3duOwp9Cgouc3RlcHBlci1pbmM6ZG93biB7CiAgICBpY29uOiAkYXJyb3ctdXA7Cn0KCi5zdGVwcGVyLWRlaW5jOmRvd24gewogICAgaWNvbjogJGFycm93LWRvd247Cn0KCi5zdGVwcGVyLXN0ZXAgLnN0ZXBwZXItaW5jLCAuc3RlcHBlci1zdGVwIC5zdGVwcGVyLWRlaW5jIHsKICAgIGhlaWdodDogNTAlOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIE5VTUJFUiBTVEVQUEVSIC0gU1RBTkRBUkQgTEFZT1VUCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5udW1iZXItc3RlcHBlciB7CiAgICBwYWRkaW5nOiAwcHg7CiAgICBoZWlnaHQ6IGF1dG87CiAgICBpbml0aWFsLXdpZHRoOiA4MHB4OwogICAgYm9yZGVyOiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKICAgIG1hcmdpbi10b3A6IDBweDsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsKICAgIGljb246ICRhcnJvdy1sZWZ0OwogICAgcGFkZGluZy1sZWZ0OiA0cHg7CiAgICBwYWRkaW5nLXJpZ2h0OiA0cHg7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAwOwogICAgb3BhY2l0eTogMTsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRvd24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7CiAgICBpY29uOiAkYXJyb3ctbGVmdDsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRpc2FibGVkIHsKICAgIG9wYWNpdHk6IDAuNTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYyB7CiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7CiAgICBwYWRkaW5nLWxlZnQ6IDRweDsKICAgIHBhZGRpbmctcmlnaHQ6IDRweDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICBvcGFjaXR5OiAxOwp9CgoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYzpkb3duIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYnV0dG9uLWNvbG9yOwogICAgaWNvbjogJGFycm93LXJpZ2h0Owp9CgoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRpc2FibGVkIHsKICAgIG9wYWNpdHk6IDAuNTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsKfQoKLm51bWJlci1zdGVwcGVyLnJlcXVpcmVkLXZhbHVlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICR3YXJuaW5nLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7CiAgICBib3JkZXItY29sb3I6ICR3YXJuaW5nLWJvcmRlci1jb2xvcjsKfQoKLm51bWJlci1zdGVwcGVyLmludmFsaWQtdmFsdWUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGVycm9yLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7CiAgICBib3JkZXItY29sb3I6ICRlcnJvci1ib3JkZXItY29sb3I7Cn0KCi5udW1iZXItc3RlcHBlci52YWxpZC12YWx1ZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc3VjY2Vzcy1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0OwogICAgYm9yZGVyLWNvbG9yOiAkc3VjY2Vzcy1ib3JkZXItY29sb3I7Cn0KCi5udW1iZXItc3RlcHBlcjphY3RpdmUgewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBOVU1CRVIgU1RFUFBFUiAtIENMQVNTSUMgTEFZT1VUCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgewogICAgbGF5b3V0OiBjbGFzc2ljOwp9CgoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsKICAgIGljb246ICRhcnJvdy1kb3duOwp9CgoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWluYyB7CiAgICBpY29uOiAkYXJyb3ctdXA7Cn0KCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZG93biB7CiAgICBpY29uOiAkYXJyb3ctZG93bjsKfQoKLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci1pbmM6ZG93biB7CiAgICBpY29uOiAkYXJyb3ctdXA7Cn0KCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgewogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIG1hcmdpbi10b3A6IDBweDsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBPUFRJT04gU1RFUFBFUgoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoub3B0aW9uLXN0ZXBwZXIgewogICAgcGFkZGluZzogMHB4OwogICAgaGVpZ2h0OiBhdXRvOwogICAgaW5pdGlhbC13aWR0aDogMTAwcHg7CiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7CiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7Cn0KCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci12YWx1ZSB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgbWFyZ2luLXRvcDogMHB4OwogICAgcGFkZGluZzogNnB4Owp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmMgewogICAgaWNvbjogJGFycm93LWxlZnQ7CiAgICBwYWRkaW5nLWxlZnQ6IDRweDsKICAgIHBhZGRpbmctcmlnaHQ6IDRweDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzY3JvbGxiYXItYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICBvcGFjaXR5OiAxOwp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsKICAgIGljb246ICRhcnJvdy1sZWZ0Owp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZGlzYWJsZWQgewogICAgb3BhY2l0eTogMC41OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jIHsKICAgIGljb246ICRhcnJvdy1yaWdodDsKICAgIHBhZGRpbmctbGVmdDogNHB4OwogICAgcGFkZGluZy1yaWdodDogNHB4OwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMDsKICAgIG9wYWNpdHk6IDE7Cn0KCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1pbmM6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRvd24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7CiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7Cn0KCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1pbmM6ZGlzYWJsZWQgewogICAgb3BhY2l0eTogMC41OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoub3B0aW9uLXN0ZXBwZXIucmVxdWlyZWQtdmFsdWUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHdhcm5pbmctYmFja2dyb3VuZC1jb2xvci1zdGFydDsKICAgIGJvcmRlci1jb2xvcjogJHdhcm5pbmctYm9yZGVyLWNvbG9yOwp9Cgoub3B0aW9uLXN0ZXBwZXIuaW52YWxpZC12YWx1ZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZXJyb3ItYmFja2dyb3VuZC1jb2xvci1zdGFydDsKICAgIGJvcmRlci1jb2xvcjogJGVycm9yLWJvcmRlci1jb2xvcjsKfQoKLm9wdGlvbi1zdGVwcGVyLnZhbGlkLXZhbHVlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzdWNjZXNzLWJhY2tncm91bmQtY29sb3Itc3RhcnQ7CiAgICBib3JkZXItY29sb3I6ICRzdWNjZXNzLWJvcmRlci1jb2xvcjsKfQoKLm9wdGlvbi1zdGVwcGVyOmFjdGl2ZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9Cg"},{ name : "haxeui-core/styles/shared/left-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADqXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZZliMpDPznFHMEJAESxyFZ3psb9PEnIJeyXa7umi53fXVig1CSkogQi+s//h3uHzzso3chqqWckscTcshcIJjfn7Jq8mHVR8efwp3eXS8YKkEre9fSMf7Uk7+zRAVSvDFk9Xix3b/I4bBvD4YORzIjYgjtMJQPQ8L7CzoMlH1aPmXT2ylsfW/bORPb/25W48RE9+axHxTotQg/wtyFxKNmCXsAMv/spEBQ1CwJAzEIskhetR6RAJBnOPmbqNwjK5dEH+gfSJG06x0U92Cmq32qp/gcfLcgvvEs9fJ8p69vLu5AXhiPZm6Mvs+uhARI0zGpcypLwsANkMv6LKEo/hGyrpJRzCF7KyhvcLmhVMrEQHxQoEaFBvXVVqoIMXBnRctcWZbORDlzFe/AU5iFBiu4amLgr4JegZavWGj5zctdJYPjRhjJBGO008+vKR8aGmOmPJG3CyvExXNRIIzJ3KwxCoTQOPMoLoDP8vhMXgUMxgWzYYLFb7uJLdKRWzOPZBEtGBjR7muNtB0GABF8RwRDAgZ8IomUyCuzEgFHAz8FhgyLhjdQQDFyQ5QcBKtF2Xj6xjdKayxH3tXYs0BElISlZXMxgauAjQ35o8GQQyVKDDHGFDVazLEkSSHFlJKmufkVFQ0aNamqadZiYsGiJVMzZ9lK5izYHGNOWbPlnEuB0wLLBV8XDChl4022sMUtbbrZlrdSkT411FhT1Wqu5loaN2nYJ1pq2qzlVjp1pFIPPfbUtVvPvQyk2pARRhxp6LCRR7lYI7fT+q58njU6WePF1ByoF2v4VPU0QXM7iZMzMMaBwLhOBpDQPDnzRiGwm9RNznxmrIrIiDJOchpNxsBg6MRx0MXdG3N3vLkQvsQbn8y5Sd0rmHOTug+Ye8/bE9ZaWbueuMXQXIYTVC9YfhjQrbCVeah9unX/94O/hr7L0ECyLxGCVJGuZfZ46+ps6CsCYvcbgRydMCPKV0R1pPrHI0IA5S2S4Jf37HESBPywn0ltU4xDutMtLXWcl7UvtO7JC5xE2xIh5M5HB0fjisiu9hai6l4Ekbl7SPoBCa5JgX5JZu4HmXmIw23jIeLfa93tlE2PKRvuR7h6/dzAHUTDvQii4n6Vx+HM4/fk1iE7uRVouWZHevmvte7DATRw49jzNjCOGnrIpnuIcIq8BiLc2F6x9L83ok/sjnNzdC8K6K+h7zCEi012/wGpjcqgKzcemgAAAYVpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6VFKg4WkeKQoepiQVTEUapYBAulrdCqg8mlH0KThiTFxVFwLTj4sVh1cHHW1cFVEAQ/QBydnBRdpMT/JYUWMR4c9+PdvcfdO0BoVJhqdo0DqmYZ6URczOVXxMArAoggiFEMSMzUk5mFLDzH1z18fL2L8Szvc3+OXqVgMsAnEs8y3bCI14mnNy2d8z5xmJUlhficeMygCxI/cl12+Y1zyWGBZ4aNbHqOOEwsljpY7mBWNlTiKeKoomqUL+RcVjhvcVYrNda6J39hqKAtZ7hOcwgJLCKJFETIqGEDFViI0aqRYiJN+3EPf8Txp8glk2sDjBzzqEKF5PjB/+B3t2ZxcsJNCsWB7hfb/hgGArtAs27b38e23TwB/M/Aldb2VxvAzCfp9bYWPQL6toGL67Ym7wGXO8Dgky4ZkiP5aQrFIvB+Rt+UB/pvgZ5Vt7fWPk4fgCx1tXQDHBwCIyXKXvN4d7Czt3/PtPr7AY5OcrLdt8TMAAAN92lUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6Yzc0ZjNmMmQtNjZhMS00MmFjLWEwYzktODgwYzdmNDkzMjU5IgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NTg4MjQ3Nzg5MDA2ODkiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PpOuRqEAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmBxoIJyaHll/0AAAAgklEQVQ4y2NgGBkgqu+YMi45JiI0GzMyMhwly4CY/uOejIwMBxkYGMRJNiC671jUf4b/GxgYGLjxWYLVgNgJx8sZGBmWMDAwsBHyIhOlAYzVgMUFlp0M/xliGBgYfpHtgqVFVssYGRgDGBgYvpLthSWFltv//2ewZ2BgeEmzhDQMAADp6x1bXTBTSgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/collapsed-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwocG2BobAAAAHlJREFUOMtjYBi+YP36bcrEqGPCLfP36Pr1W4zJN4CBQZyB6f/B9Zs2eZJrAAMDAwM3w3/GDRs2bI4i1wAGBgYGtv+MDEs2bNpSTq4BeAELEWp+Mf5nSAzw91lGjgFfGRj/hwb4+20nxwUvGf4xegcG+p6laUIaBgAAk1kg6zuyVSkAAAAASUVORK5CYII"},{ name : "haxeui-heaps/styles/default/main.css", data : "LnByb3BlcnR5LWdyaWQgLnNjcm9sbHZpZXctY29udGVudHMgew0KICAgIHBhZGRpbmctcmlnaHQ6IC0xcHg7DQp9DQoNCi50ZXh0LXRpbnkgew0KICAgIGZvbnQtc2l6ZTogMTJweDsNCn0NCg0KLnRleHQtc21hbGwgew0KICAgIGZvbnQtc2l6ZTogMTJweDsNCn0NCg0KLnRleHQtbm9ybWFsIHsNCiAgICBmb250LXNpemU6IDEycHg7DQp9DQoNCi5jb2xvci1waWNrZXIgLmNvbnRyb2xzLWNvbnRhaW5lciAubGFiZWwgew0KICAgIHdpZHRoOiA2NXB4Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/maximize-button-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAABLSURBVChTY/z//z8DKYBx/YnH5168/24I5eMFEoKc55mIVQwCYLXTt98i2k0gtUxQNtFgRGpgXHPs0fHXH39YQPl4ASjiSEwaDAwA374gqW1irpsAAAAASUVORK5CYII"},{ name : "app.properties", data : "Ymg"},{ name : "haxeui-core/styles/shared/folder-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADX3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZdRlusmDIbfWUWXgCRAYjkYzDndQZffH7DdydzkNHOdt9aMERZYCH0CZ9z+15/d/YGLvXgXolrKKXlcIYfMBQ3z6yqzJh9mfTz4s/Ggd1cHQyWQsh4tHeNPPfkHS1TQil8MWT06tseOHA779s3QMZEMjxiNdhjKhyHh1UGHgbKW5VM2/bqEbV+ynSuxdbtR9TMmusT356CIXouYR5h3IfGoWcJyQMbNTgoahJok82gZ2gG6gu58eIKAPIuT/+KV+07latEL/TcokpbeQfEYzHTJp3qKz4PvZoi/zCz1mvlBX7Zriocgzxj3Zq73fa2uhISQpmNR51JmCwM3hFzmawlFcUe0dZaMYg7ZW4G8+eo3lEqZGFg6BWpUqNM+ZaUKFwPvrJDMlWXqTJQzV2wRcAqjUGeVLA3UWCrwCrR8+UJz3jynq2SYuBFGMsEYLfz8mfLSUO8j5Ym8XbGCXzw2BdwY5EaNUQBC/cyjOAN8lu/X4CogGGeYDQssflsmtkhHbo08kglaMDBCrr1G2g4DCBHmjnCGBAR8IomUyCuzEiGOBj4FhgybhjcgoBi5wUsOIglwjMfceEdpjuXIS40zCyCiJFGgyVLAKuBgQ/5oMORQiRJDjDFFjRZzLElSSDGlpGkcfkVFg0ZNqmqatZhYsGjJ1MxZtpI5Cw7HmFPWbDnnUjBpgeWCtwsGlLLxJlvY4pY23WzLW6lInxpqrKlqNVdzLY2bNJwTLTVt1nIrO+1IpT3scU+77rbnvXSkWpceeuypa7eee7mokVtYfynvU6OTGk9SY6Be1PCq6mmCxnESBzMQ40AgroMAEpoHM28UAruBbjDzmbErIsPLOOA0GsRAMOzEsdPF7h9yD9xcCLe48UnODXSfIOcGuhfkfuX2hFobX5vqxU1CYxuOoHrB9sOA3QpbGR+1t6X76Qv/G3pT9pLTbLZQD6V7NTp5jhTw52vPaWGsodkr2+4DzryxtDAEZ3vDKfcBZ35vaW/HCIsoaxHW6lu+/Au1n0p335cl3YcSexm658uS7jPMenb3fflQHp1hcfd9uZ1Hj4jcfV9u5NGzdHH3ffmtPHqduu6+Lz/Mo6e+/Jc/kB0/V/BvqPsb0xrN2E54p04AAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDUBSFT1OlIhWRdhBxyFA7WRAVcZQqFsFCaSu06mDy0j9o0pCkuDgKrgUHfxarDi7Oujq4CoLgD4ijk5Oii5R4X1JoEeOFx/s4757De/cBQrPKVLNnAlA1y0gn4mIuvyoGXuFDCEOIQpCYqSczi1l41tc9dVPdxXiWd9+fNaAUTAb4ROI5phsW8QbxzKalc94nDrOypBCfE48bdEHiR67LLr9xLjks8MywkU3PE4eJxVIXy13MyoZKPE0cUVSN8oWcywrnLc5qtc7a9+QvDBa0lQzXaY0igSUkkYIIGXVUUIWFGO0aKSbSdB738I84/hS5ZHJVwMixgBpUSI4f/A9+z9YsTk26ScE40Pti2x9jQGAXaDVs+/vYtlsngP8ZuNI6/loTmP0kvdHRIkfA4DZwcd3R5D3gcgcYftIlQ3IkPy2hWATez+ib8kDoFuhfc+fWPsfpA5ClWS3fAAeHQLRE2ese7+7rntu/Pe35/QBP4XKZ9Ef7VwAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6NmIwMzEyYjItZDE5YS00NTc2LTlkYjAtYjVhNTNmZDRmMjA1IgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmEyMTJiNWZhLWNjNjgtNDBiZS1hZTA5LTA3NmExZjU5NGY4NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjIwMmRiNTQzLTYwMGMtNGUyYi1hNDM4LTcxOTZjMjI4ZWNlZSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQyNjE0MDI5ODk2ODExIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YmQ3YTVjZTUtNjE4Yy00MTE0LTg5ZWYtNTg5ZmMxM2Q2OTJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAxLTE5VDE4OjQwOjI5Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PhbZGncAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARMRKB1QuojKAAAARUlEQVQ4y2NgGPKAkYGBgWHWig1n0ISfM/z/Py8tMmA9IQOYsAv/l2RgZKietXxjKpkuIA6kRQSYMFEaBqMGDAsDBh4AAD+qEAAUuqhbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-large.png", data : ""},{ name : "haxeui-core/styles/shared/down-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBhYkk10sKide+YKmtDcM1eYIBSyEMJcCAcuzYjVDQAFcxCadfC9sQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/window-collapse-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJHA1rFqnfAAAAg0lEQVQoz8XRrQoCYRBG4S/slWzbYrII2zabjKa1Gjd4C9a9gb06wSBYDKKoj2VEEX+2iC9MmMOBYWZS+kuQI+8rF1hhjcE3eYiNe7YYvZMr7EJsowSrnuUx9iEsH/gi2AGTG5ziiAuaF5PnOOOEWUIXTf1htzqcLiFD2eN6JbLfP/UK7emlPChzsBQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/rules.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBSVUxFCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5ydWxlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgouaG9yaXpvbnRhbC1ydWxlIHsKICAgIGhlaWdodDogMXB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsKfQoKLnZlcnRpY2FsLXJ1bGUgewogICAgaGVpZ2h0OiAxMDAlOwogICAgd2lkdGg6IDFweDsKICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsKfQ"},{ name : "haxeui-heaps/styles/dark/main.css", data : ""},{ name : "haxeui-core/styles/default/pickers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBCQVNFIElURU0gUElDS0VSCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5pdGVtLXBpY2tlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZFRUVFOwogICAgcGFkZGluZzogNnB4IDVweDsKICAgIGhlaWdodDogYXV0bzsKICAgIHdpZHRoOiBhdXRvOwoKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwoKICAgIGJhY2tncm91bmQ6ICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3ItZW5kIHZlcnRpY2FsOwp9CgouaXRlbS1waWNrZXI6aG92ZXIgewogICAgYmFja2dyb3VuZDogJGhvdmVyLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGhvdmVyLWJhY2tncm91bmQtY29sb3ItZW5kIHZlcnRpY2FsOwogICAgY29sb3I6ICRob3Zlci10ZXh0LWNvbG9yOwogICAgYm9yZGVyOiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRob3Zlci1ib3JkZXItY29sb3I7Cn0KCi5pdGVtLXBpY2tlci5zZWxlY3RlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZG93bi1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0OwogICAgY29sb3I6ICRob3Zlci10ZXh0LWNvbG9yOwogICAgYm9yZGVyLWNvbG9yOiAkaG92ZXItYm9yZGVyLWNvbG9yOwogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzg4ODg4OCwgMC4xLCAxLCAxLCAxLCAzLCB0cnVlKTsKCiAgICBib3JkZXItY29sb3I6ICRhY2NlbnQtY29sb3I7Cn0KCi5pdGVtLXBpY2tlcjphY3RpdmUgewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLml0ZW0tcGlja2VyLXBhbmVsLWZpbGxlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50LWNvbG9yOwp9CgouaXRlbS1waWNrZXItdHJpZ2dlciB7CiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsKfQoKLml0ZW0tcGlja2VyLXRyaWdnZXItaWNvbiB7CiAgICByZXNvdXJjZTogJGFycm93LXVwLWRvd247CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CgouaXRlbS1waWNrZXItY29udGFpbmVyLnBvc2l0aW9uLWRvd24gewogICAgcGFkZGluZzogMXB4OwogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKICAgIGJvcmRlci10b3AtY29sb3I6ICRkb3duLWJvcmRlci1jb2xvcjsKICAgIG1hcmdpbi10b3A6IC0xcHg7CiAgICBmaWx0ZXI6IGJveC1zaGFkb3coMiwgMiwgIzAwMDAwMCwgMC4xNSwgNik7Cn0KCi5pdGVtLXBpY2tlci1jb250YWluZXIucG9zaXRpb24tdXAgewogICAgcGFkZGluZzogMXB4OwogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRkb3duLWJvcmRlci1jb2xvcjsKICAgIG1hcmdpbi10b3A6IC0xcHg7CiAgICBmaWx0ZXI6IGJveC1zaGFkb3coMiwgLTIsICMwMDAwMDAsIDAuMTUsIDYpOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIE1PTlRIIFBJQ0tFUgoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoubW9udGgtcGlja2VyIHsKICAgIHBhZGRpbmc6IDFweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwoKICAgIGJhY2tncm91bmQ6ICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkbm9ybWFsLWJhY2tncm91bmQtY29sb3ItZW5kIHZlcnRpY2FsOwogICAgYmFja2dyb3VuZDogd2hpdGU7CgogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKfQoKLm1vbnRoLXBpY2tlciAub3B0aW9uLXN0ZXBwZXIgewogICAgYm9yZGVyOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgYmFja2dyb3VuZDogbm9uZTsKfQoKLm1vbnRoLXBpY2tlciAub3B0aW9uLXN0ZXBwZXIgLmxhYmVsIHsKICAgIGJhY2tncm91bmQ6IG5vbmU7CiAgICBwYWRkaW5nOiA1cHggOHB4Owp9CgoubW9udGgtcGlja2VyIC5vcHRpb24tc3RlcHBlciAuYnV0dG9uIHsKICAgIGJhY2tncm91bmQ6IG5vbmU7CiAgICBwYWRkaW5nOiAwcHggNnB4Owp9CgoubW9udGgtcGlja2VyIC5vcHRpb24tc3RlcHBlciAuYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQ6ICRob3Zlci1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRob3Zlci1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsKfQoKLm1vbnRoLXBpY2tlciAub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6aG92ZXIgewogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7Cn0KCi5tb250aC1waWNrZXIgLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWluYzpob3ZlciB7CiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgoubW9udGgtcGlja2VyIC5vcHRpb24tc3RlcHBlciAuYnV0dG9uOmRvd24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRvd24tYmFja2dyb3VuZC1jb2xvci1zdGFydDsKICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7Cn0KCi5tb250aC1waWNrZXIgI2l0ZW1QaWNrZXJUcmlnZ2VyIHsKICAgIHBhZGRpbmc6IDVweCA1cHg7CiAgICBiYWNrZ3JvdW5kOiAkbm9ybWFsLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsKfQoKLm1vbnRoLXBpY2tlciAjaXRlbVBpY2tlclRyaWdnZXI6aG92ZXIgewogICAgYmFja2dyb3VuZDogJGhvdmVyLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGhvdmVyLWJhY2tncm91bmQtY29sb3ItZW5kIHZlcnRpY2FsOwp9CgoubW9udGgtcGlja2VyICNpdGVtUGlja2VyVHJpZ2dlci5zZWxlY3RlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZG93bi1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0OwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKfQoKLm1vbnRoLXBpY2tlcjphY3RpdmUgewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLm1vbnRoLXBpY2tlci5zZWxlY3RlZCB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgoubW9udGgtZGVpbmMgewogICAgcmVzb3VyY2U6ICRhcnJvdy1sZWZ0Owp9CgoubW9udGgtaW5jIHsKICAgIHJlc291cmNlOiAkYXJyb3ctcmlnaHQ7Cn0KCi5tb250aC1idXR0b24gewogICAgaGVpZ2h0OiA0OHB4OwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLWVuZDsKfQoKLm1vbnRoLWJ1dHRvbjpob3ZlciB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLm1vbnRoLWJ1dHRvbi5zZWxlY3RlZCB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgoubW9udGgtYnV0dG9uOmRpc2FibGVkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogTUVOVSBJVEVNIFBJQ0tFUgoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoubWVudWl0ZW1waWNrZXItcGFuZWwgI3ByaW1hcnlQaWNrZXJNZW51IHsKICAgIGJvcmRlcjogbm9uZTsKICAgIHBhZGRpbmc6IG5vbmU7Cn0K"},{ name : "haxeui-core/styles/shared/down-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADc3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZdbktwqDIbfWUWWYEkIieVgLlVnB1l+fmzamb7koWdOHlI1ptrCAktCH2A69J//jfADF2+cQlTzlFPacMUcMxdUfDuvctxpi8d9PWy3yp0+XA0MlUDK+ehp9b/pabuzRAU1/WDI62rY7xtyXPb9wdByJDMiRqUtQ3kZEj4baBko57C2lN0+DmHvp2y3kfj5C/M2bjmxUzw+R0P2msKPMHch2XAX4TMAmT8OUtDAuLNkdCR0mJp8aGhFgoS8ytN1ZUQ0ZqjxZac7KleNXuvDI63Iq4s8JDld8qU+kL6mcqT+g+foq8b3+ryfpsL2kP0j+aP5OMaMUZSYkOq0BnUbylFDvx0upmsPsJdAJ2EOOeQsGcUxqyumQtvqtqNUysTANShSo0KD+iErVYQYuQc2VJgrEE2li3HmKpNfnIUGGxg2cVCsB/YofMVCh9u81XB4c3huhK5MMDanw9slvPvCGHMpEG1+5QpxMc9kI4xJbt7RDURorKTqkeBbebwmVwFBnVmeSyQjsftpYlf6vRPIAVrQUSHPNUjWlgGkCK4VwZCAAKiRKCXajNmIkEgHoILQWSLvIECq3BAkR5EENs7TNV4xOrqyMtQBemxmIKGSxMAGqwywYlTMH4uOOVRUNKpqUlPXrCVJiklTSpbmplhMLAZTS2bmlq24eHT15Obu2UvmLNg0Nads2XPOpcBngeWCtws6lLLzLnvcNexpt933vJeK6VNj1ZqqVa+5lsZNGvaPlpo1b7mVTh1TqceuPXXr3nMvA1NtSBhx6EjDho88ykVtYX0qb1CjRY0PUrOjXdSgNbuZoLmd6GQGYBwigbhNBJjQPJltTjHyJDeZbZmxKpQRpE5mjSYxEIydWAfd2AU+iU5yX+IWLN5x48+SCxPdm+Seub2i1uZnqB7EzlU4k7oJVh/auxf2Mj92TzL8qeFd+W3o29A/bGhgBzmqqEiV9YAPbuEwqzjo8VuSTsuJpVs5dHvo5sPeHstzaOGK7bOhrEjCF9OMiMpRDUds8fSIM6VS1HlCfi0rNqW+xpS74GhzRRz4U9l+lNKD6xqqx4EzwWNkeQrFgeIuJ6k+DTV8fSreG0Kq+uK5XTmbIZvfAqmvArlk+J8C+jb0behvGMJpZP6t/AWjs8C1IYxOjAAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNQFIVPU6UiFUE7iChkqJ0siIo4ShWLYKG0FVp1MHnpHzRpSFJcHAXXgoM/i1UHF2ddHVwFQfAHxNHJSdFFSrwvKbSI8cHlfZz3zuG++wChUWGq2TUBqJplpOIxMZtbFQOvCGKUagARiZl6Ir2Ygef6uoeP73dRnuV978/Vp+RNBvhE4jmmGxbxBvHMpqVz3icOsZKkEJ8TjxvUIPEj12WX3zgXHRZ4ZsjIpOaJQ8RisYPlDmYlQyWeJg4rqkb5QtZlhfMWZ7VSY60++QuDeW0lzXWqEcSxhASSECGjhjIqsBClXSPFRIrOYx7+YcefJJdMrjIYORZQhQrJ8YP/we/ZmoWpSTcpGAO6X2z7YwwI7ALNum1/H9t28wTwPwNXWttfbQCzn6TX21r4COjfBi6u25q8B1zuAENPumRIjuSnEgoF4P2MvikHDN4CvWvu3FrnOH0AMjSr5Rvg4BCIFCl73ePdPZ1z+/dOa34/n9lyuQWiUawAAA80aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjEwZTExZGUyLTA1MjUtNDAzYi05NmFiLWM4NjFkNmYxOWEwYSIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDplMjljM2RmNi0wYzllLTQ2MDMtYmJiYi0zNGRiYmY0NWI1ODIiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyYzQ1M2QzNC02YjkyLTQ0MmMtOWFjYi0xODI1ZjI3NDQ2MWEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY3MjMxNjM2MjY4NDI2OCIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjMyIgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCIKICAgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyMjoxMjoyOVQxMzoxOToyMSswMTowMCIKICAgeG1wOk1vZGlmeURhdGU9IjIwMjI6MTI6MjlUMTM6MTk6MjErMDE6MDAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmRjNDliZjU0LTYyMGYtNGQ4Ny1hYzEzLTQyYWZhNDI5ZGJlOSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0xMi0yOVQxMzoxOToyMiIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz497WXVAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5gwdDBMW92s92wAAAItJREFUOMtjYBgFAw8YkTlRfceUGRkZjjIwMIjjUP/y/38G62VFVndhAkzIssuKrO7+/8/gzcDA8BWL5q///zN4I2vGMABqyFlGBsZQBgaGX0jCvxgZGEOXFVmdRVfPhM2dSwottzP8Z0hkYGD4z8DA8J/hP0PikkLL7SQHUOyE4+WxE46XjyYVGgMAMSgm4G3z+p8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/up-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMAADK0A4MJuH53gAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/left-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMAg9Pg2E5zFwMDABGcxMDAw/v//nwEGmN7JqiI4DAwMcD7UAAgfAMkKDTd2MVgoAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/propertygrids.css", data : "LnByb3BlcnR5LWdyaWQgewp9CgoucHJvcGVydHktZ3JpZCAuc2Nyb2xsdmlldy1jb250ZW50cyB7CiAgICBwYWRkaW5nOiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBzcGFjaW5nOiAwOwp9CgoucHJvcGVydHktZ3JvdXAgewogICAgd2lkdGg6IDEwMCU7CiAgICBzcGFjaW5nOiAwOwp9CgoucHJvcGVydHktZ3JvdXAtaGVhZGVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcG9pbnRlci1ldmVudHM6IHRydWU7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDVweDsKICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBib3JkZXItYm90dG9tLXNpemU6IDFweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLnByb3BlcnR5LWdyb3VwLWhlYWRlci5zY3JvbGxpbmcgewogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAwcHg7CiAgICBib3JkZXItcmlnaHQtc2l6ZTogMHB4Owp9CgoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwp9CgoucHJvcGVydHktZ3JvdXAtaGVhZGVyLWljb24gewogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpleHBhbmRlZCAucHJvcGVydHktZ3JvdXAtaGVhZGVyLWljb24gewogICAgcmVzb3VyY2U6ICRhcnJvdy1kb3duLXNxdWFyZTsKfQoKLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpjb2xsYXBzZWQgLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsKICAgIHJlc291cmNlOiAkYXJyb3ctcmlnaHQtc3F1YXJlOwp9CgoucHJvcGVydHktZ3JvdXAtaGVhZGVyLWxhYmVsIHsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICB3aWR0aDogMTAwJTsKfQoKLnByb3BlcnR5LWdyb3VwLWNvbnRlbnRzIHsKICAgIHdpZHRoOiAxMDAlOwogICAgc3BhY2luZzogMTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgcGFkZGluZy1ib3R0b206IDFweDsKfQoKLnByb3BlcnR5LWdyb3VwLmxhc3QgLnByb3BlcnR5LWdyb3VwLWNvbnRlbnRzLnNjcm9sbGluZyB7CiAgICBwYWRkaW5nLWJvdHRvbTogMHB4Owp9CgoucHJvcGVydHktZ3JvdXAtY29udGVudHMuc2Nyb2xsaW5nIHsKICAgIHBhZGRpbmctcmlnaHQ6IDBweDsKfQoKLnByb3BlcnR5LWdyb3VwLWl0ZW0tbGFiZWwtY29udGFpbmVyIHsKICAgIHdpZHRoOiA1MCU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBwYWRkaW5nLWxlZnQ6IDVweDsKfQoKLnByb3BlcnR5LWdyb3VwLWl0ZW0tZWRpdG9yLWNvbnRhaW5lciB7CiAgICB3aWR0aDogNTAlOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9ICAgICAgICAKCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWxhYmVsIHsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWVkaXRvciB7CiAgICB3aWR0aDogMTAwJTsKfQoKLnByb3BlcnR5LWdyb3VwIC50ZXh0ZmllbGQgewogICAgYm9yZGVyOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMDsKfQoKLnByb3BlcnR5LWdyb3VwIC5jaGVja2JveCB7CiAgICBwYWRkaW5nOiA1cHg7CiAgICBwYWRkaW5nLWxlZnQ6IDRweDsKfQoKLnByb3BlcnR5LWdyb3VwIC5udW1iZXItc3RlcHBlciB7CiAgICBwYWRkaW5nOiAwOwogICAgYm9yZGVyOiBub25lOwp9CgoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLXZhbHVlIHsKICAgIGZpbHRlcjogbm9uZTsKfQoKLnByb3BlcnR5LWdyb3VwIC5udW1iZXItc3RlcHBlciAuc3RlcHBlci1kZWluYyB7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnByb3BlcnR5LWdyb3VwIC5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmMgewogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnByb3BlcnR5LWdyb3VwIC5kcm9wZG93biB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiBub25lOwp9CgoucHJvcGVydHktZ3JvdXAgLmJ1dHRvbiB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiBub25lOwp9"},{ name : "haxeui-core/styles/shared/left-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEOHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkuwmDP1nFVkCkhCC5YCBquwgy88Rdnd6+nFnbiUfMW2kxlivIwmH+defK/yBi4xSSGol15wjrlRT5QamxPNqe6aY9nxe6aL0dT1Eux4wlgRUzr8lX/tv63QXcJIGTh8EleN60L8+qJdmLk+CLkXiFjGYcQmqlyDh8wFdAtrpVsy12KMLfZ70ev8MQ3HXMPXbql6bn/4nQ/SGQo8wTyGJmFnSaYD4zUHaZnwu2EhSwcueWW4xQUDexSk+WBWeUan8HpU79wSK5HM9YOFrMPOdvl0nfR/8sEP8oFmOu+Yv63ndIvY1yH6vNUpYa57etZQR0nw5dY+OM9jYEXLZr2UMw63gbY+KUQKy9wDkIx6xYxxUiQHLokSDGi2amx50wMTEkw2U+WDZa0WMKx8SA3BKPmixAashBWgdgFewyndbaOutW91BBYoHYScThNEJP/8346OgtTzliWI544S0gF3syQEzHDmfsQuA0Lrlke4A38bz5bgKENQd5gIHW+yniK505ZbnkWygBRsV9Kw1snEJQIigW2EMCRCImUQpUzRmI0IcC/BpEFRQNNwBAanygJWcRDLAQcVAN94x2ntZ+VxGzwIQKlkM0KCYgJU3NuSPpYIcaiqaVDWradGqLUtOWXPOlr35NRNLppbNrFi1VqSkoiUXKyWUWlrlKmiOWnO1WmqtrUFpg+SGtxs2tNa5S09de+7WS6+9HUifIx165MOOEo56tMFDBvrEyMNGGXW0SROpNNPUmafNMutsC6m2ZKWlKy9bZdXV7qhR2GVHL+PnqNENNd5I+Ua7o4ZXzW4iyNuJOmZAjBMBcXMEkNDsmMVCKXFw6BwzZByqQhlWqoMzyBEDgmkS66I7dv8g9wW3kNK/wo1vyAWH7r9ALjh0H5B7xe0NasNPmyNK2Ah5GXpQo6D8slJS0pUyzmBnk/op9Q0NqfWR4ZcajEJGfNiIIDqD0mtc8Huh4fWB6uweeFeANvvhRZxgztQStwMJCXkyD1R6XgQpXTlOII1jdfQJV8eyZnvPudAIzbvmgjBxcPHOPNEyN5M/B+XUAmBrtASLyosM/g3ZUq0P6VFGgOWEcwK9JlpTZO/EdwhWUpEW/SAfP9Jyd+1F3akLadjHrBD7najwS090tFxwA5ualOcQRNy/Qm7iG7pv31rCz+LzPf2/Cco5oDB7ynuuXgJkRkub7Dl5DtPRUkUiip7hf5PCoOF54Q319HDmuBtgvHP8UXT4pYifi9aATEdxWYQj3j/wzTNxhLi3Ph/bt9WL94aB5rjrorzpAeFntf3GtjP1y2z4kMLZED42mN+UHR6FVyDWcDQhpzOAdDDT7ki19oKaw3mB//OtpvAjN54pt50buwUiquMD/K+YfEurBofj0rB9ertx4bRAtoS/AceHGj2Vzz6UAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjk2N2IxNTgzLWYyOWUtNDY2ZS04Yjc4LWJjZGFjZDFkNWZkNCIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5MzBjOGE4NS02OTVkLTRmZTYtOGVmZC0xOTFlMzIzNzRmYTAiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo3ODQyMjBkOC0wZTAyLTQ5ZDUtYjVmYS0zNzZiZWViYTNlYTEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDM0NTU2MTU2MTg1NSIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjhmMDUxYzAzLTBlNmItNDgwYy1iYjMzLTljMzc0OTY1YjM3MCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0wOFQxOTozOToyMSIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz6o2UKgAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gIIEicVGwcIIAAAAChJREFUCNdjYEACoV1H/jMicxgYGBgYkTkMDAwMjMgc7CrQzWBAtwUAMwgSdDGUjZQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/checkboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDSEVDS0JPWAoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouY2hlY2tib3ggewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDRweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7Cn0KCi5jaGVja2JveDpob3ZlciB7Cn0KCi5jaGVja2JveDpkaXNhYmxlZCB7CiAgICBjdXJzb3I6IGRlZmF1bHQ7CiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0KCi5jaGVja2JveC12YWx1ZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgd2lkdGg6IDE4cHg7CiAgICBoZWlnaHQ6IDE4cHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgaWNvbjogbm9uZTsKICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5jaGVja2JveC12YWx1ZTpob3ZlciB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgouY2hlY2tib3gtdmFsdWU6YWN0aXZlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi5jaGVja2JveC12YWx1ZTpzZWxlY3RlZCB7CiAgICBpY29uOiAkY2hlY2stc2VsZWN0ZWQ7Cn0KCi5jaGVja2JveC12YWx1ZTpkaXNhYmxlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kaXNhYmxlZDsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKICAgIGN1cnNvcjogZGVmYXVsdDsKfQoKLmNoZWNrYm94LWxhYmVsIHsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5jaGVja2JveC1pY29uIHsKICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBvcGFjaXR5OiAxOwp9CgouY2hlY2tib3gtaWNvbjpkaXNhYmxlZCB7CiAgICBjdXJzb3I6IGRlZmF1bHQ7CiAgICBvcGFjaXR5OiAwLjU7Cn0K"},{ name : "haxeui-core/styles/default/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTQ1JPTEwKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnNjcm9sbCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgcGFkZGluZzogMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgouc2Nyb2xsIC5idXR0b24gewogICAgd2lkdGg6IDdweDsKICAgIGhlaWdodDogN3B4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAwOwogICAgYm9yZGVyOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgb3BhY2l0eTogMC42Owp9Cgouc2Nyb2xsIC5idXR0b246aG92ZXIgewogICAgb3BhY2l0eTogMTsKfQoKLnNjcm9sbDpkaXNhYmxlZCAuYnV0dG9uIHsKICAgIG9wYWNpdHk6IC4zOwp9CgoudmVydGljYWwtc2Nyb2xsIHsKICAgIHdpZHRoOiA4cHg7CiAgICBwYWRkaW5nLWxlZnQ6IDFweDsKICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7Cn0KCi5ob3Jpem9udGFsLXNjcm9sbCB7CiAgICBoZWlnaHQ6IDhweDsKICAgIHBhZGRpbmctdG9wOiAxcHg7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogQk9SREVSTEVTUyBWQVJJQU5UUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouc2Nyb2xsdmlldy5ib3JkZXJsZXNzID4gLnNjcm9sbCAuYnV0dG9uLCAudGV4dGFyZWEuYm9yZGVybGVzcyA+IC5zY3JvbGwgLmJ1dHRvbiB7CiAgICB3aWR0aDogOHB4OwogICAgaGVpZ2h0OiA4cHg7Cn0KCi5zY3JvbGx2aWV3LmJvcmRlcmxlc3MgPiAudmVydGljYWwtc2Nyb2xsLCAudGV4dGFyZWEuYm9yZGVybGVzcyA+IC52ZXJ0aWNhbC1zY3JvbGwgewogICAgcGFkZGluZy1sZWZ0OiAwcHg7CiAgICBib3JkZXItbGVmdDogbm9uZTsKfQoKLnNjcm9sbHZpZXcuYm9yZGVybGVzcyA+IC5ob3Jpem9udGFsLXNjcm9sbCwgLnRleHRhcmVhLmJvcmRlcmxlc3MgPiAuaG9yaXpvbnRhbC1zY3JvbGwgewogICAgcGFkZGluZy10b3A6IDBweDsKICAgIGJvcmRlci10b3A6IG5vbmU7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogQ0xBU1NJQyBWQVJJQU5UUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwsCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFOUU5RTk7CiAgICBib3JkZXI6bm9uZTsKICAgIHBhZGRpbmc6IDA7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAuYnV0dG9uLAouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuYnV0dG9uewogICAgYm9yZGVyLXJhZGl1czogMDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFOUU5RTk7CiAgICBwYWRkaW5nOiAwOwogICAgZmlsdGVyOiBub25lOwogICAgaGlkZGVuOiBmYWxzZTsKICAgIHdpZHRoOiAxN3B4OwogICAgaGVpZ2h0OiAxN3B4OwogICAgb3BhY2l0eTogMTsKfQoKLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC5idXR0b246aG92ZXIsCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b246aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0Q3RDdENzsKfQoKLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC5idXR0b246ZG93biwKLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmJ1dHRvbjpkb3duIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM1MjUyNTI7CiAgICBmaWx0ZXI6IG5vbmU7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAudGh1bWIsCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZDNkM2Owp9CgouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmhvdmVyLAouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0FBQUFBQTsKfQoKLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpkb3duLAouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI1MjUyOwp9CgouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmRpc2FibGVkLAouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZGlzYWJsZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0RERERERDsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsLAoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyB7CiAgICB3aWR0aDogMTdweDsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5kZWluYywKLnZlcnRpY2FsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsKICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3VwLWFycm93LWRhcmsucG5nIjsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5kZWluYzpkb3duLAoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmM6ZG93biB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1icmlnaHQucG5nIjsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmMsCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5pbmMgewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvZG93bi1hcnJvdy1kYXJrLnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuaW5jOmRvd24sCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5pbmM6ZG93biB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9kb3duLWFycm93LWJyaWdodC5wbmciOwp9CgouY2xhc3NpYy1zY3JvbGxzIC5ob3Jpem9udGFsLXNjcm9sbCwKLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyB7CiAgICBoZWlnaHQ6IDE3cHg7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYywKLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmMgewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvbGVmdC1hcnJvdy1kYXJrLnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYzpkb3duLAouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsKICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL2xlZnQtYXJyb3ctYnJpZ2h0LnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5pbmMsCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYyB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1kYXJrLnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5pbmM6ZG93biwKLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jOmRvd24gewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvcmlnaHQtYXJyb3ctYnJpZ2h0LnBuZyI7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogTU9CSUxFIFZBUklBTlRTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5zY3JvbGw6bW9iaWxlIC5pbmMsIC5zY3JvbGw6bW9iaWxlIC5kZWluYyB7CiAgICBoaWRkZW46IHRydWU7Cn0KCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgewogICAgb3BhY2l0eTogLjU7CiAgICBoZWlnaHQ6IDhweDsKICAgIHBhZGRpbmc6IDJweDsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBib3JkZXI6IG5vbmU7Cn0KCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgLnRodW1iIHsKICAgIGhlaWdodDogNHB4OwogICAgYm9yZGVyLXJhZGl1czogNHB4Owp9CgoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSB7CiAgICBvcGFjaXR5OiAuNTsKICAgIHdpZHRoOiA4cHg7CiAgICBwYWRkaW5nOiAycHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgYm9yZGVyOiBub25lOwp9CgoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSAudGh1bWIgewogICAgd2lkdGg6IDRweDsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKfQo"},{ name : "haxeui-core/styles/shared/expanded-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwkgHyJHKAAAAJBJREFUOMtjYBgFAw8YkTlrt2xRYv77/+h/BgYJHOpf///LZBMU5H0LJsCELBvs43OPkeGfOwMDw0csmj8z/GP0RNaMYQADAwODv7//JSYGxkAGBoafSMK/Gf8zhgYG+pxFV8+EzZ3+/j77/zMwJjAwMPxjYGD4/5+BMTUgwGcnyQG0fuOW4vUbtxSPJhUaAwCz8idCJS/GkgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/down-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWP8//8/AwZgeieriib0TlaVCUIhCzEwMDAhc+DSAPKbCiUI9YmvAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/down-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWMMCAhgwABMc89cQROae+YKE4RCFmJgYGBC5sClAQxaDmYcnISCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABsklEQVQ4ja2TS2tTURSFv3POTapoWjAqiFgkotRAin8gcx1IOxQEHTiItFL8B/ojBJuJAx+dWjpxoLOAU7UKiZJBMlBI0YJJqTfXe/d2kJ6Yx0UHukdnr73XOmufB/xjmDRwfr1XDESXMPYCACqfEjWb7dVc/Y8CherunEjmoVGupYgryoZLopXmWr47JVCo7s6pZGoopb+43nZxVPYigUcPdh6Si8cdV845LPCqFfOmI760mASZB8CNoYP59V7RCR98fvKI4dnVw7S7QpQoF/OO61shX/aGIqpOi63KbMMCONHl0XGOHTK8/pxwvxZRfRvjLJzOjZ+dFZYBLIAx9vxotfFNuFfrs7MvVC4FtL4L73dkTEFkwAkARNG0+7xZynDqqOX2i5AwGa8Zg/52gDRT+IQxPNr+SWdfp2rGDDh24MA8B6a6vv5QOnsyCR9MwOZQoL2aq6NsTHZdLjjKZ4JJGNCnrcpsA0begUuilSTIloBFj9192Z+2Be+yM/07PrF+0VzLd10clUGf+HEmyAL6ODsTlj/eOtHzYOpnOlvtLpCwZI1dGAwsdQK2vO3/Gr8AlhyqPdEFcaYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/ranges.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBSQU5HRQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoucmFuZ2UgewogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBwYWRkaW5nOiAxcHg7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Owp9CgoucmFuZ2UtdmFsdWUgewogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMXB4Owp9CgouaG9yaXpvbnRhbC1yYW5nZSB7CiAgICBiYWNrZ3JvdW5kOiAkbm9ybWFsLWJhY2tncm91bmQtY29sb3ItZW5kICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1zdGFydCB2ZXJ0aWNhbDsKICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4OwogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsKfSAgICAKCi5ob3Jpem9udGFsLXJhbmdlIC5yYW5nZS12YWx1ZSB7CiAgICBiYWNrZ3JvdW5kOiRhY2NlbnQtZ3JhZGllbnQtc3RhcnQgJGFjY2VudC1ncmFkaWVudC1lbmQgdmVydGljYWw7CiAgICBoZWlnaHQ6IDEwMCU7Cn0KCi5ob3Jpem9udGFsLXJhbmdlOmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKfQoKLmhvcml6b250YWwtcmFuZ2U6ZGlzYWJsZWQgLnJhbmdlLXZhbHVlIHsKICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsKfQoKLnZlcnRpY2FsLXJhbmdlIHsKICAgIGJhY2tncm91bmQ6ICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1lbmQgJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0IGhvcml6b250YWw7CiAgICBpbml0aWFsLXdpZHRoOiA4cHg7CiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7Cn0KCi52ZXJ0aWNhbC1yYW5nZSAucmFuZ2UtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGFjY2VudC1ncmFkaWVudC1zdGFydCAkYWNjZW50LWdyYWRpZW50LWVuZCBob3Jpem9udGFsOwogICAgd2lkdGg6IDEwMCU7Cn0KCi52ZXJ0aWNhbC1yYW5nZTpkaXNhYmxlZCAucmFuZ2UtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3ItZW5kIGhvcml6b250YWw7Cn0KCi52ZXJ0aWNhbC1yYW5nZTpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0K"},{ name : "haxeui-core/styles/shared/right-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAOElEQVQImWPYsmXLWxkVCGJiYGA4PmMCAwMDAwMDE4SC8Bm3bNnCAANMcJZlRgETnAWVgbAYGBgAg4cO3PCuD3sAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/it/std-strings.properties", data : "c2F2ZT1TYWx2YQp5ZXM9U8OsCm5vPU5vCmNsb3NlPUNoaXVkaQpvaz1PSwpjYW5jZWw9QW5udWxsYQphcHBseT1BcHBsaWNhCnNlYXJjaD1DZXJjaGkKCnJlZD1Sb3NzbwpncmVlbj1WZXJkZQpibHVlPUJsdWUKaHVlPVRvbmFsaXTDoApzYXR1cmF0aW9uPVNhdHVyYXppb25lCmJyaWdodG5lc3M9THVtaW5vc2l0w6AK"},{ name : "haxeui-core/styles/shared/info-large.png", data : ""},{ name : "haxeui-core/styles/shared/window-expand-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJICvK6FXdAAAAg0lEQVQoz8XQrQoCYRCF4S/slWyzmCzCts0mo2mtRoO3YN0b2KsTDILFIIr6GBxRFn+2iC9MObwzDCeln4MMRQevQJbQ4ITqg1yF0yRMcMQF8xfyDOdYmN7DEfZuLJ/kRWQHjNuXSuxCqGNEVr77dYCNB1sMv7XRwwpr9LtWnSNPf+EK5KylPDiubigAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/restore-button-blue.png", data : ""},{ name : "haxeui-core/styles/shared/maximize-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsEAAA7BAbiRa+0AAAA/SURBVChTY2QAgv///4MoogBjXWe/A5AGYWLAASYgQaxiEHBgANrQAOUQBCC1IBtIAiNSA8kRR1LSYGRkZAAA0DsQaJvlZUMAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/es/std-strings.properties", data : "c2F2ZT1HdWFyZGFyCnllcz1TaQpubz1ObwpjbG9zZT1DZXJyYXIKb2s9T0sKY2FuY2VsPUNhbmNlbGFyCmFwcGx5PUFwbGljYXIKc2VhcmNoPUJ1c2NhCgpyZWQ9Um9qYQpncmVlbj1WZXJkZQpibHVlPUF6dWwKaHVlPU1hdGl6CnNhdHVyYXRpb249U2F0dXJhY2nDs24KYnJpZ2h0bmVzcz1MdW1pbm9zaWRhZAo"},{ name : "haxeui-core/styles/shared/close-button-dark.png", data : ""},{ name : "haxeui-core/locale/fr/std-strings.properties", data : "c2F2ZT1TYXV2ZWdhcmRlcgp5ZXM9T3VpCm5vPU5vbgpjbG9zZT1GZXJtZXIKb2s9T0sKY2FuY2VsPUFubnVsZXIKYXBwbHk9QXBwbGlxdWVyCnNlYXJjaD1DaGVyY2hlCgpyZWQ9Um91Z2UKZ3JlZW49VmVydApibHVlPUJsZXUKaHVlPVRlaW50ZQpzYXR1cmF0aW9uPVNhdHVyYXRpb24KYnJpZ2h0bmVzcz1MdW1pbm9zaXTDqQoKc3VuZGF5PURpbWFuY2hlCm1vbmRheT1MdW5kaQp0dWVzZGF5PU1hcmRpCndlZG5lc2RheT1NZXJjcmVkaQp0aHVyc2RheT1KZXVkaQpmcmlkYXk9VmVuZHJlZGkKc2F0dXJkYXk9U2FtZWRpCgpzdW49RGltCm1vbj1MdW4KdHVlcz1NYXIKd2VkPU1lcgp0aHVyPUpldQpmcmk9VmVuCnNhdD1TYW0KCmphbnVhcnk9SmFudmllcgpmZWJ1YXJ5PUbDqXZyaWVyCm1hcmNoPU1hcnMKYXByaWw9QXZyaWwKbWF5PU1haQpqdW5lPUp1aW4KanVseT1KdWlsbGV0CmF1Z3VzdD1Bb3V0CnNlcHRlbWJlcj1TZXB0ZW1icmUKb2N0b2Jlcj1PY3RvYnJlCm5vdmVtYmVyPU5vdmVtYnJlCmRlY2VtYmVyPUTDqWNlbWJyZQoKamFuPUphbgpmZWI9RsOpdgptYXI9TWFyCmFwcj1BdnIKbWF5PU1haQpqdW49SnVpCmp1bD1KdWwKYXVnPUFvdQpzZXA9U2VwCm9jdD1PY3QKbm92PU5vdgpkZWM9RMOpYwo"},{ name : "haxeui-core/styles/default/dropdowns.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBEUk9QRE9XTlMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmRyb3Bkb3duIHsKICAgIGljb246ICRhcnJvdy11cC1kb3duOwogICAgaWNvbi1wb3NpdGlvbjogZmFyLXJpZ2h0OwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIHBhZGRpbmc6IDZweCA4cHg7Cn0KCi5kcm9wZG93biAuaXRlbXJlbmRlcmVyIC5sYWJlbCB7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgouZHJvcGRvd24ucmVxdWlyZWQtdmFsdWUgewogICAgYmFja2dyb3VuZDogJHdhcm5pbmctYmFja2dyb3VuZC1jb2xvci1zdGFydCAkd2FybmluZy1iYWNrZ3JvdW5kLWNvbG9yLWVuZDsKICAgIGJvcmRlci1jb2xvcjogJHdhcm5pbmctYm9yZGVyLWNvbG9yOwp9CgouZHJvcGRvd24ucmVxdWlyZWQtdmFsdWU6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2FybmluZy1iYWNrZ3JvdW5kLWNvbG9yLWVuZDsKfQoKLmRyb3Bkb3duLmludmFsaWQtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGVycm9yLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGVycm9yLWJhY2tncm91bmQtY29sb3ItZW5kOwogICAgYm9yZGVyLWNvbG9yOiAkZXJyb3ItYm9yZGVyLWNvbG9yOwp9CgouZHJvcGRvd24uaW52YWxpZC12YWx1ZTpkb3duIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRlcnJvci1iYWNrZ3JvdW5kLWNvbG9yLWVuZDsKfQoKLmRyb3Bkb3duLnZhbGlkLXZhbHVlIHsKICAgIGJhY2tncm91bmQ6ICRzdWNjZXNzLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJHN1Y2Nlc3MtYmFja2dyb3VuZC1jb2xvci1lbmQ7CiAgICBib3JkZXItY29sb3I6ICRzdWNjZXNzLWJvcmRlci1jb2xvcjsKfQoKLmRyb3Bkb3duLnZhbGlkLXZhbHVlOmRvd24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHN1Y2Nlc3MtYmFja2dyb3VuZC1jb2xvci1lbmQ7Cn0KCi5kcm9wZG93bjpkb3duIHsKICAgIGJvcmRlci1jb2xvcjogJGFjY2VudC1jb2xvcjsKfQoKLmRyb3Bkb3duLXBvcHVwIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwogICAgYm9yZGVyLXRvcC1jb2xvcjogJGRvd24tYm9yZGVyLWNvbG9yOwogICAgcGFkZGluZzogMXB4Owp9CgouZHJvcGRvd24tcG9wdXAucG9wdXAtZnJvbS1ib3R0b20gewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRkb3duLWJvcmRlci1jb2xvcjsKfQoKLmRyb3Bkb3duLXBvcHVwIC5saXN0dmlldyAuaXRlbXJlbmRlcmVyIHsKICAgIHBhZGRpbmc6IDZweCA4cHg7Cn0KCi5kcm9wZG93bi1wb3B1cCA+IC5zY3JvbGx2aWV3LAouZHJvcGRvd24tcG9wdXAgPiAuc2Nyb2xsdmlldzphY3RpdmUsCi5kcm9wZG93bi1wb3B1cCA+IC5kcm9wZG93bi1zZWFyY2gtY29udGFpbmVyID4gLnNjcm9sbHZpZXcsCi5kcm9wZG93bi1wb3B1cCA+IC5kcm9wZG93bi1zZWFyY2gtY29udGFpbmVyID4gLnNjcm9sbHZpZXc6YWN0aXZlICB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiAwcHg7Cn0KCi5kcm9wZG93bi1maWxsZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudC1jb2xvcjsKICAgIGhlaWdodDogMXB4Owp9CgouZHJvcGRvd24tc2VhcmNoLWNvbnRhaW5lciB7CiAgICBzcGFjaW5nOiAwOwp9CgouZHJvcGRvd24tc2VhcmNoLWZpZWxkLWNvbnRhaW5lciB7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDBweDsKfQoKLmRyb3Bkb3duLXNlYXJjaC1maWVsZCB7CiAgICB3aWR0aDogMTAwJTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKICAgIGljb246ICRzZWFyY2g7Cn0KCi5kcm9wZG93bi1zZWFyY2gtZmllbGQtc2VwYXJhdG9yIHsKICAgIGhlaWdodDogMXB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZG93bi1ib3JkZXItY29sb3I7Cn0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNT0JJTEUgVkFSSUFOVFMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmRyb3Bkb3duOm1vYmlsZSB7CiAgICBtb2RlOiBtb2JpbGU7Cn0KCi5kcm9wZG93bi1wb3B1cDptb2JpbGUgewogICAgd2lkdGg6IDc1JTsKfQo"},{ name : "haxeui-core/locale/es/expression-replacements.properties", data : "emVybz1bMF09MApub25lPVswXT0wCm9uZT1bMF09MQptYW55PVswXT4xCg"},{ name : "haxeui-core/styles/shared/window-expand-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJIBEM5IxvAAAA7UlEQVQoz8WQIUtDUQBGz3dnWDCKA9cG+rQbDDaDe4hgtq3pJhaDNqtWcVcZ+gcEwfDceyBjC4OZTd63brBYhInhXYNTw1CTeOLH4QsH/hrtt9tjky9TC7Uw6P4k1mO3+Jh/uDWFQbEh1LFJWvlOtklaEeoUBsWGEWoBGZ7zk8TtjMquhucMQKgrgHqzvyr5CyCP/GG1HOwB2GZ/F/kD4FVifbM8c6mPp+PYLRl0BYx7OHp/ZBt4zvBrW2HQGm5fnF7fz2fGxMDEcHoyaGUjnO59VhqpEaVzynEDPgd+uRrO3v3a2kauZCNX4l94AwHMSZhOXSBeAAAAAElFTkSuQmCC"},{ name : "haxeui-core/locale/it/expression-replacements.properties", data : "emVybz1bMF09MApub25lPVswXT0wCm9uZT1bMF09MQptYW55PVswXT4xCg"},{ name : "haxeui-core/styles/shared/check-blue.png", data : ""},{ name : "haxeui-core/styles/shared/check-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QITChsNaCG5cQAAAS5JREFUKM+NkDFLw1AUhb/3DG0Q6pBOdSgI4tBRsaCTP0EcHeSBEpAQkt2lggiKUGg6WMRVhGziILg4CRUnh+KibiVLl06lmPdcglRsrXe5nMP9uJwj+Md4nrckpVwvFotX1rRj3/fnhBD3QLnX6yGnAVLKU6AMDIGnP4EwDDeMMW4mj6Io6kwEXNedTdP0AhDAi+M4JwATM9i2fQwsAp9a691arTYEsIIgWDXG3Akhbrrd7l4cx2kYhmtaaz9jz5rN5vN3JmPMAuAYY1SpVDpXStla60tAAq/9fv9w9PNMu93uVKvVeSHECrCcz+e3gAqggc1Wq/XxozXAJEmyD1xnXiXbUaPRePxVM0Acx+lgMNgBbjP/LZfLHYwrQ4wKpZRdKBS2Lct6qNfr7+OAL7OwYq6nyWzXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/minimize-button-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAtSURBVChTY/z//z8DKYAJShMNRjUQA2ivAR7TjRNm4o3y+oJ0RhBNYtJgYAAA02UNDbDaPdYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMCQbKIz98wVBhhggrOSTXSwiCJLoIjCJdBFIaYzYQqhiCK7AQAMqA07hk2gSAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/tooltips.css", data : "LnRvb2x0aXAgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRvb2x0aXAtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4wNSwgNiwgMSwgMzAsIDM1LCBmYWxzZSk7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBwYWRkaW5nOiA0cHggNXB4OwogICAgbWFyZ2luLWxlZnQ6IDBweDsKICAgIG1hcmdpbi10b3A6IDMwcHg7Cn0K"},{ name : "haxeui-core/styles/shared/collapsed-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADq3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbcuwoDP1nFbMES0JILAfzqJodzPLngN1OutOZSm567tc1ZSQDlsQ54hH6P3+P8Bce3nQLUc1TTmnDE3PMXKD4djxl1bTFVZ8f2025aw9XB6NJIOX49HSOv7XTdmeJCjR9Z8jr2bHfd+R42vcHQ6cjmRExlHYayqch4aODTgPlmNaWstv7Kez9kO02Ez/eMKtxw8QO8fgdDeg1hR9h7kKyoWaJRwAyXw5SllLQDThQC3QWXbWdkQCQZzht76IKj6xcGn3S/kCKpKM9oOEezHTJp+2kz8EPC+J3nqVenu/a65uLO5AXxqN5GKMfsysxAdJ0Tuo2laVh4A7IZf2WUAyvQrdVMooHZG8F5Q0ud5RKmRi0DIrUqNCgvmSlihAjdzZI5sqy2lyMM1fZAniKs9BgkyxNHGxV0Cto5SsWWn7zclfJ4bgRRjLBGB3082vKp4bGmClPtPmFFeLiuSgQxmRu1hgFQmjc8kgXwLfy+ExeBQzqgtkxwbLth4ld6cytmUeyiBYMVMhjrZG10wAggm9FMMj9SFsiUUq0GbMRAUcHPwWGHIuGd1BAqtwQJUeRBHKcp2/8Y7TGsvLRjD0LRKgkMVCTpYCriI0N+WPRkUNFRaOqJjV1zVqSpJg0pWRpbn7FxKKpJTNzy1ZcPLp6cnMPnr1kzoLNUXPKlj3nXAqcFlgu+LtgQCk777LHXfe02+573ktF+tRYtaZq1UPNtTRu0rBPtNSsecutdOpIpR679tSte8+9DKTakBGHjjRs+MijXKxROGj9UL7OGt1Y48XUHGgXa/jV7GaC5naikzMwxpHAuE0GkNA8OducYuQwqZucbZmxKpQRpU5yGk3GwGDsxDro4u6NuTveQow/4o1vzIVJ3SuYC5O6T5j7yNsT1lpZu56ExdBchhPUTbD8MKB7YS/zUPuyDN/94Y+hVxsaSOqlQpEq0q3ML967+bCn9sKLAnpuCHGUMyCcvJGO9sT/FdlvjWhbUeCMXzI7DamNopJCsT1NNQadlzQoP5XPDOEkakudR1LH3Xd1bJfMqxPH2HvIwkj1FRB5+C5Eb/JMtbld9Glo/pCH4NbxyQ9fk+Fjh3RP59Qd96RPZ6TXeDvon1jVH0MVvg3RLc83eNeD3Ip7XWj+yO6vyfChgwZuGkfe4sx0v8+ylT35bcFdiISXLLSnhn5l6f/vEX13d5wyvCigP4Z+hyFcbHL4F54nyj1078dQAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NjIzZTNmZWMtYzg5Yi00MGVhLTljNjktMzFjYTgwODgwMGMyIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODIzMjkxMjA3NDQiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OWQ6JAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwZHVAUuvsAAAB7SURBVDjLY2AYviCq75gyMeqYcEkwMjIcjeo7Zky2AQwMDOKMjAwHY/qPe5JrAAMDAwP3f4b/G6L7jkWRawADAwMDGwMjw5LYCcfLyTUAL2AhQs0vhv8MiYsLLZeRY8BXRgbG0CVFltvJccHL//8ZvJcWWZ6laUIaBgAAEBYdvIFAlrEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACr0lEQVRYhe2XPUxTURiGn+/ctkKkQAxJERu1QkxcUJnAXVYSjG51UpEGTZx0kcQQBzcNFCW44axhddDERRYRFwfDryk/AhILJMLtvfc4SKG/cCkti77TyXd+njffPefc78C/Lilk0tmB1ZqErepESdB20IatY5vizM12Vf4smYH6aLxBiwpraAPO5xk2Jpph5bGHxjuqJ4piIDS4HsDS3WhuAl6XfhNoBpSiZ6LTv1iwgVMvVluUI6+BWpfgTC3jcGWqy/8h3wCVryP0fO2acuT9AeAANSjehvrXruYbkDMD9dHVS47IO+DIAeCpMnG4nCsTWQZCg+sBTP0FIVAkeFILhkXj+F3/Umow+xNYutsNvMInPGjxcb/Zx1Gvq8NUa3t4mBlMm1kfjTc4or7iYrc/aPFx64IPgIHPJk9GTDcmTBv73PdI9WQykJYBB3XdDRxAazejsuRTYoRTA560bqHN7Up9nxI523tJNG3Aox3klv5er7KUc1ZxpRM+pyZ2o2oFUjJgWioo4j6vtRVCU8AAYPSHzcK667niNY0gsAIpe0CLHHdNB5oCBn2tZfS1lm0bcSutqUu2tw2ILnBbFSKF3mkmDRjMHxrfYi7LgGk5sUPia7Pcns0ysFVMjB2CgdHkCUgzACCa4ZLjJZ2RZkB57CHA1Z1aoEzHsl+l+8lQKLrWi9BVCrrA08mI/15qLOtvqBQ9wEIJ+PMeQz/O4mUGJjr9i47S7cBmEeEbGqf9W0fl8p4GAGZuV34EwkUysYEmPB2pGsnVuWslcbo/3iyoNxReF85rnPZ8cNilKAWYjlSNGBaNQC/7Ox2mCM+8hm7cDQ77eJic7P91RokR3vqfX8y5mDDqaIa1bQ/N3KmecrNuQU+z4Mv4Md9v44RtSBDAsHXMLLdnU2+4/3KrPzu548SSV/k0AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/haxeui.png", data : "iVBORw0KGgoAAAANSUhEUgAAAIgAAACICAMAAAALZFNgAAAC7lBMVEUAAACxubtjcotcaIKYmKs9RWc9Sl9jcYuutME+SGKstMPHyNhhcIrBxdNCT2esssBgbIiGiaLAwM56hZ5jb4zGydqyt8V7hJs6SF9hbYlfaYTGxtatssGmrb09SWB/iJ5/h56/wdFha4g+TWRhbIe0uMdhbYhue5dibonDxNXGx9lfbIU+TGOwtcM/TWXM1+h8hZy5vMumq7vBw9RvfJezuMfGyNaAiJ+Bi6NhbYhvfJfGx9g8S2Cpr71DUGh9h501Xotli7iiqbp8hZ2ytsV2gZg+TGNJdq55g5p/h569v89vfJZsdpLK1OWxtsRtepU8S2M7SmE9TGQ8SmHKyt26vs1+iJ5jb4tRXXU4V3s9VnZhbIfExddhbIdIVW3DxNWjqbtwfJWkqrtwe5ZgbIWkqbmmq7yCi6Ccss3N2OmrscBOW3M9TGO4u8uytsWus8JbZ4FKV298hZtWY3uqxOB7hZujqLlQXXW3vMtSXnU8Wn49S2KsscBseJTHyNnIyNifpbZve5VkibREUmp/iqGtssHHyNlGU2pkd5d/iqCkqrpRX3dib4mswdrEx9ebo7PFxtc+XYNufZmQmK2uv9S4vc+1uclUYXk6SWGxtsSutcNteZRebIW4u8tDd7JYe6k3VXmAjqWKk6iAiaBWY3uOl6pAdrSswdqtwdubsMuIlKtjboeQmKydtM+ZrclRd6dJYYGnr8B8h51UYnlJV3CmuNCPl6u+zeHM1uZjb4dga4Q+aZjG1OeWsM9mjbtTf7ONqMlNerBvkbtNaY9Yc5mUna+nv9qlu9Y4UHCLpMKKpMNomc08drVRiMR+p9OUttszZp2pxOLP3u9nmMxtnM5BerlckMlyoNBSh8Gbut3G2OyRtNqGrNbO3e5wns99ptJQhsCYuNxUicJ9ptOStdujwOBYjcdKgbxnl8tgksg6c7A1aJ+4z+edvN5kk8c2a6NEebM8cKiwyeRLgb03b6qbu944bqhMgryyyuWdu96j3pigAAAAy3RSTlMAAwQHBQUNCQcJDw8NBRULEAoJEBgLGRgfFCMYJBcRMCNrMSxYMSkkQTEjHFBEPfFEIyBWMisUFA5rQz8ZFGU+8vEsHWtYJPFsTkQsIOJWVUg4MSoeHVY3KsGjY19RUE46bFVNR0MyKvHwa2VZV049PDs3Nf5jTUs/HcBhVj02KGFg625rYC0fl3hpQy7vhHdGuHof1IliXkE1emZMN/7TvJdlXlU6/vLw7JVvSPDp1ayVi3Fb0VTx24V29/T09PTy7unBjYn06pPnxN39F5cAAAyOSURBVHjarNl5bIthHAdw64oqdZQ56xpzz2zUXWSOOOY29zGjc2/DzFBMGHHf9xFn3OK+ibhFHBUhrSORGH+0oo2I+M/v97zv26ft8x71vv3+tWTp+sn393vfvutTgiZGPiVUJQaj0+ligqPDiP1NqtCbTCZ9aEwQvSoLvCO+qV40aMHfizhMBoPBbDZXCI8ZAr8CzX9Z4F2IIbaSWEqXjoWQYsIYegMSjMEpC+F+ijMix0ApymUQBb5le0xlJuXKlUMMUoIr1BsMqLDZamOqhqW2zWYzGgEDvVCKAiMWqgBBO0g1kdRohxikUAk6KlUw2kCQArGEJBmSnp4OmrZljXEVzCZCUW6DKIDQvXv3eiFpjElLS2vevEqNithKSUGCY4E2UGFJTU3NwiSExGq1WiyAqW0jtSBFnmEABijQMGXKlLrBaUPSr1+/Ro3TOAp2wr/SUAnqQEVWRkaOHZNIUwDJ2b8bNMnQi60sS2HbIAxQgGHOnK6QVjQdMYsXLx4Rv65RzeYggenE0ELAAQy7PT8/MzPTkenADBCSnZ0Nnv0JVpgSQ5FkoAIEffr0GU7SU8hAyKRJk5uMiOckMBwdeTXvyLADorBwDWQ6SQ8hO3YUzRqQ3bdg/26GIs1ABRiOHJk3r/eKFb0DmQjZu3fZsoHjgIISHE4MvtxkNtqqguPKk8ePj68XcpzkBMn6E+u37dkBlsSc3WRCdFfkGKCYd+rc1KlnSaaG5c6de/cfxjdKqwKVEIiOFJKaZV//6tWXv8XFTvHkbdvTo4inWAiFXEEYVIgx5q04dTLPKZ4vL99+e/HiQW48VIKz4SdT1WLNyL/2iuTLj2IlCl5D9AoiChFGb2BIIzDfN0+e22hB+YowG4DAqsJksuyZt38Dg8EoUAwGPSY2NpTRU4rx5SMghBzYvC93ZM3yFctwEFiRFGtGoiPJiQaK+V0sSpkeoHD3lUpcKiOjcT/KUEBgfm4+unZuzeYAgSWBXYUVsebkFyV5qYI2I0pxcJSUFLj5G9tD8B6axjDkEBgPQkYuqFEqGJJdlOSmAhkMpWSlpqakbK1ta4d3cmC0mdO14yRgHApjuAiCzffXm3fOpxC9GXY1IccxPenNb0bBjEmgrCly5NszgGLZunUr3EORsRgYyyYiQxmBOfB64c75s0cuKF+qDFw25KJJTkhECF0SpWaQUpgJFLCQT5M2czpOIoxzSggaPwdZFYCURcgAgLBLwmIoZSNSztiPHTvWtSvMZGDPvUGM34hQiOf1whkMpGBAj6Q3zJLIYvKuAKXw6tUz+GnScxky8njEZzkEXRGAjJ/dIACJI40ghFkSeQxSNh4+fBg/TibybbgUEXRFxCGzAMIsiQIGKY9WY7YAg0EoxM9DqlNIreSmfRHCLokyJu/KqYsXD91jEMrxEEhLBlIfIMySRIJxPbvLLGZEKwKQLmGQZjzkjUuF5MPndy9UxAeQUcEQUzDEqcbx/LkaiV8C0ppAvKocqiQeAmkhAXGrcaiQ4IrIQCAuFQ5VEp80ZBpCnCocqiR+CUgnHuJV4VAl8ShA3CocKiS4IghZFAQxUAjGpcKhQuITgZhDIE4VDhUSvwAZjJBYMppQiFeFQ4XEQyAHFw0aPBQhOh4ybGWnCWM5iDtCx3sGwUiUVoSFtBUgGFekDi0SHw+ZCZDOdYTRxLUdtnRJAOKMcC6aJP4AZEgvgJQsSf7ljGubvnTJprHX30S6JF/BoU3i4SBPW+xCCFw0CBFuJBs+RbgkX2EuGiR0RboJVy9C6LYKlbg0OahEeUVG44ogRAcQfklwNnwlTmWHVomfK6TLTDIZoRFcEu5O0p8uiez1olni4Qohk4EVoV9dcbPhK3ErOTRLvnOFLBcmUzIGHEGzESpxyTu0S3xCIcGTCVw3tBKnvEO7xB9aCDpEK/HKO7RLPKSQLnwhsRTCPwoIlbhlHdolf8ILoRDyeUMrcck5tEt8oYWgQ6ISp5xDu8QfVAh/7UpU4pVzaJd4uEJa0kLCK1lZMGHHdqjELePQLvklFNKAFsJU0ncWqcQl7dAu8UkXItxek4VKnNIO7RI/FnJZZENoJenW/fA9CVTiZT/noifxQCEzxosWQitJKMjGStyMI3qSP6SQ+bNpIUwlRlqJi3FETeIjhaylhYhVUhUrKYJKnIxDs4SuSLdLWMgqelMVrwS+ce1Pl4RxaJZ45AuhleRgJW7GES3JHyiEft9MIWwluxMdUImLOqIpwRU5PwPOJMhzCJ6gSVZiycrJXHPhk5M6oivxYyG5MoUgRE9OTDLyCzf291JHdCWe8x3IIQ19MGODD0jkVA0qcVNHVCW/bt0cMy43npyfUQi7JXDgiZDCjddcxBF1yYHzN8fsyxXOaCQhenLyirO5UIyO6Etu3TjdkBxtliPP7tKzESCP7oAj+vn2gIfAYa8uMsg/Vu1gtYEQisLwpg/WR+8DyGEWs6ggpKU7N4JI18VFMOkfxzAn5wXyMeMYvfd+7P7PMl+ALF/N9w8lviPg1SwXaxIlviP8PrVY324+X4kS3xHyOz7fRzvr2NCqeiDxHD3b4YY2TtC9Bdy3+ChIfEdPwRZ//KeXBInv6Gk3f3p8JDwGSJD4jp6MY8DhwagKEtdxzTgp9pLV7IFcT89xQPDteI5QcFQ8OjwnQeI5RhoOz0fXCQkSzzGSeZ2YX7CqXij5DPfZcMGaXzmj7nPZbcdIwZVzfglPgsR9LyMNl/B5WUJyJcOBZJQlpoWaKkMCB7LhkcxKV1GGBA6koHQ1K+YlGRI4kIZi3qy8KRkSOJCM8uak4FtlSPjdMhsLviyBY4lgZ7MdoaAEzgeCJQKJ7wiNTYGHbRLJk9DBRcI2CRtHVZaEDmZD4witNCwRZrcdoaCV9qi5mGRK6OAiYXOR7VbJktDBZLZb2YCuMiV0MBsa0GzJRzFcsZ4jFLTkOaSQZEjgmKRhSIFjG5IhgWOSjLENDLJUGRI4pgEEoz1RT+ayG45Q/o32cNgp6YQEjmXaFTId/5JOSOBYJq8gVSckdKyzLUYEo05I6FinLIYmk05K/kq5Y5A2ojAO4FAjdugQaUAiFCWEJJDBUoRUoYgN0hYD2ZohZKgX6HpYQqcOEQcLtyQZDRUsdakgONilKIpQKEEECe0gUlyqKWqxJbVbv+9L7l5evjtfLv0LBjKcv7x3qHDv/x1X3KV+LYRuEfcS7lCndj3kcq8rCXeoI0HYUeOzva4k3KHOBUIcD18f7nUjAYf7/CaI03H0LhhH5ztbf6ruITVxHJ0f0L90izj99nNpfX19YfL8+JdbzL44oM8qC2fuENUKMLCwUCwuzJ0cnLrDXIjKAitxHHb4l/foHBCVypul1/PzuVwuD1WS90g5cIOpNyF2tZbOEF/pRxFj+e1TKLVoWjKYTzconWNqHGI2jq5UiC+EsBiouDsxMQsV0Ug5ExSUzjD77UUf7GAR5EyNkBigmB0amoYYqVQkC5QxQUHM92sxF1L1iZ6x0pOAEedbRCCq8FVZAUauwXg+PJyAhENGgFFUmLpUBjPrcTNQj+sEgYziY4sRjw8MxPw+XzQxGGIUxTbVWD2u8fhs5MoZUcUvel1ZA8aUBozp8HB8IEY9c6/X7/cxihKzX2g8urEgDxAy8/GvMwJiMp7lp7TxidEm4/6t/j4IWXxRW4rzNv2QKpSiVHpovx1iQYiR1MZfASNMjP6+Hg/8Cw4jAMCioHBMvfBSlEqpZkt788FEHEsIfIVIjFA47ovdxrK9B8YUUFQUkRMLUyvAzpg1W1E8/iQQEIGhb8hYbGH4sfTvAYBZPFZROAauXpCKx7g3uCSfd7a2trcf2WetmE+2MdqmIHBKORhM785NOmRzc257F54A++gWscrppXsP362ubmwsQ+YxZpEcm+SLeVLQvcEYEuWGoBgpHX7dgiWdHmNJp4PBTFZ/IcrptCT9TQlQVp9siG59shlNQ0UKGDRzgDGcKAGwZMvlTAY8UuCdcjaiB9BBD4BvmAMMYHNKJSipUkG0ZdCANW0AFAqG3QahJaXrER5dZwMM6C6BNYndKYn5C6OtMWD+QogUjKGgRBOIMYxAewwjFBocFCMdxJALrJZDqbtUMidRiCQgUVLgTAqPYCgpYCGMXRqXxM/Va13PHEsBFsBY8VnxI4IWQ6yGgiIsftDw0CXF2A9pEApaANMaL4aGlsBa9OFmSgwVBS0YLwsi2AezKJ6bPTi0xS44xgXibjQMWVBjEz4aRkjMwTY9UgjABtt0uiyYXhLJobclBrPY5b/HB7Hw8UH/AM3ZIm9FzQVkAAAAAElFTkSuQmCC"},{ name : "haxeui-core/locale/en/expression-replacements.properties", data : "emVybz1bMF09MApub25lPVswXT0wCm9uZT1bMF09MQptYW55PVswXT4xCg"},{ name : "haxeui-core/styles/shared/sortable-asc-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAYAAAD+WDajAAAJ0npUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZlZlty6DYbfuYosQeAEcjkcz8kOsvx8oNTtHsq+9k3ylpJbUlEUCOLH8KPs1r/+ud0/+IQo2cWkJdecLz6xxuobN+W6P+2c5YrnfH/0ucrncXfV54FnKHAN99eSn/lv4/Iu4L407tIHQWU8D/rnBzU+8ssXQc9CwTTy3MxHUH0EBX8/kEdAu7d15Vr04xb6uq/P+7cZim2NU38bTc/kL9+jYr2ZWCd4v4KEi7MP8VYg2J93oZ2bdh6jd6jcp6Cc+TyaYJBXdro+aOW+ojJ+gsr73RdQQr7HHQOfjZnfry/HJb02vjsm/rByGO8rfxpHwPi6nbe/vWdxe697dy1mTJqfTb1t5dwxsWPycF7LHMpf4l7PUTmKw3sHkE/W6xxDqnjsviXKlCZb1rkOGagY/fLK1fvhwxkrQX31I1wOtKIdsr2C2AwFDAfwBkb9uy5y1q1nuSGFhacw0wvC5Ibf/3eOnwra22wrcpXbTrgFenkLCtQw5OzMLACR/eZH6Rj47fj6keOpkVlm5sIG29VvET3J41vmR+EAHZiYuN6xJjofAZiItRPKSACBK0tIkuVS71UEOxbwaQgqBI3vQCAp+YmWPoaQAad4W5t3VM5cn/w9TM4CiBQygVQspMAqktjwH40FH2oppJhSyklTSTW1HHLMKees2ZJf06BRk2ZVLVq1lVBiSSUXLcWVWlr1NZAcU81Va6m1tsaiDcmNtxsTWuu+hx576rlrL732NnCfEUcaeegobtTRpp9hkidmnjrLrLMtWbjSiiutvHSVVVfbuNoOO+6089Zddt3tHTVxJ+zk2/H7qMkbav4gZRP1HTVeVX0TIZZOkmEGYj4KiKshgEN7w+wqEqN3Bp1hdlVPVCSPlsnAmWKIgWBc4tOWd+x+IPcJNxfjf4Sbf0POGXT/DeScQfcT5L7j9gK1adVmXMEdhCwMzahXIPxykpgk7ZipwXYbk1Wp11eNYV1r7+quPoCSyjNIhKug+OxJ5Xn8+mndhX9jjWZxf6/rCpgtnQtkGKxS/OpkX7FvaN1GbTNv8fYdI4ieeZZ+T5FMOU5tNW63rrQAgM1j8lt4jvdNfFb7rav7MaBx5r5Edo8Txwhk2Z537dL6mhvAChph/51iXHiVDnOcayXccEwn4KSbxHtUxmvx/RKO4jWdDV4l6Z4xMuh5euBIsuaqW32fZewuKbghkwmCd+3VC2/Oq2ZUaSOSnEaYe9agma3P1secU6ABHaeYCzwwz45t9rao/ZOMVZkwU2xGEXq4mi/NdzJeYLkRAQ6qkCaa4yA7EkU1gB+euqTsxbvR+dTb7hmNVs5hpdsYeFQDy9baQev1xlWH7wSVxNqDKwtF8jL7qldMnirzfpjFcoSdN4bhJTx26Cb06vaTGOhhDBxetvO7JsCIRaYaIrmxSF6jVr+whu89KrFjsOaWf+7p7mcP0iJu0+2GVOhuUHgA4UsfY/VJJe7m+zGB01R3xdtH2RSFvVtCybI1Y7pj8VJWu40P7fh2HfU4/Sjd7dvnDfaRcsetcXFWjmmDwoZxoEX2DZxH7jNWrn7ssO51ZgJYE+xer/ThumqHemScXMPOJuIqDex7wO2LherWPjOCsHEsO8CkOIfj78dCeKI2PVbaJVnqARe+trC7Jy2dIN/k/7379g4rSio6SYzk1d16X0trJaQzQzf8hRd3W7y2G+r8QlCuFOzzL2IN/DGdot+GGY3A8pG0n3yLC0PexjEW+tEC7hUIBnnfnzPPQSL4hEIV5iyDrDBKUTJ5MWd3JYWC01WYRk0zROX8yUSPgRB2m+j6YSQWefYGP2J7Z3ez7gQYZX2w018JXAQ1tWtfpAPXqlVPiSq+liiewiOkfQpYS2jYFoE4s7cw5KW1stxptNf6KU+6c0OkrovlSAG2FskAJAK+rpb2iumMf5IvwG2NmQoZZZFvIrsUqh9R4AwBEiiBZAZv1lf94bVTUsQIu2GU1u0plrZ8botseB6/fDoxypZqahVLkkeiI9+t8D02Zt+koC6YPpJkdWxAtVTbuw6o945jY97VU6nUgIEfUd7HUKnmBS0QUrvEoQ+4K9zepKMdT5YUrVLkcOMo/eBICteztdIo9Lm0oavNK0Rqe/hTke6HzI8ig0m8/kSg+67k3xPofr7rPxPo/tqMvyfQ/T4uvxbo/hzo1wLd3/eczwLd78OcxqKcQapCo+D5SPszENSh4V4GzJ8O1GuH7HVKHeSYRnVAe1Yht3YI9TupSCH8vN64XxSiP7r+X9D/RlCHq+RRNVD7apYOwx3JeYoETQ6JvlEbWqf6VGqikhjJd5Qg+TYSd8AZqtSajH0dnpsd9A6iGyAR1AWcOOcvI6FdK2Yr3L9cxv0YGose7scy3yT+eg33tgge/m2ZT2Nf1rHtfJTr/sZ2fJnBM5HCAtU6jKlOdym9rAWwFc/R4RWwATh3IOTLi5FcbsWM5UJGcxpiDCy4W4kU/c6TLnLlq9CiUqXryrVZOF/VOFGfp+RH/6IGCizaUdUbkjadETUcTnv2Tzuyi8JPinHPUCAP5ZZUan/ZbLmX3Zcvq1vTHSxb+SMh0pbSgTTy2zg5yvZcrSuEnsFt0ShYtptsFRYKkZmj1DWS3DlIw4u99N0ys4Rmrs+Z6P3psuMKCLWWscJO+uWVLn/Tz4ALeXJa4wV1KLSD1pqECZPZnayXL4iYQHJEB+zMfXsFplTs10+lmYnejN7m6neGBrN+K98azXiHfzDB3zZKVzJ9zB5+IqHHFJoRn4xtjN/bkABm0CD0y5C5wYxm1NFIj1bcqajBTy/bFv14jLQp5id7Kfgdz554G8rSSAwewdd2kzQ2u2oKY8tsS6PwyH19bVi/MWUtUxI6PfE/6sMECGK+tXB16F0dbT0cr/toN+7XrE6hZ+CKHc9CKObbkMdoH03WYSM05Hr5+N7HEmsQ5RaFtiLXd+8a7+Lbzaz3m3msj8kuvxjGJXqTQCf+iG9x/BUpdd8ftNkyTYL3vl2wQ3PBHM8vAELXFpPPFZMJfZQq3oUPrTVADQc1rvxj6BlpJB5P5xzovmGyNa1Y1X7TVPvNBOSusOi0V4fLkwacuVnNtyntzH4bjByQCCTsNJ9fY3yy3otg8iMwk4Wa/VQ00TXuRt+fIL/1tOUkJprT48F01XpTB9oXJTfAtcmLk3HWSEQpXvK8+LzmNm9pSHvgXnFKt//ysd9pH5uYn7M/v946dfrMl+Z2f9AswGkAmCSCE3XgreVJIjjZcqxnToV6d5Mt9n8iqeRxK0CUZf8WVWsc//BwpdbG/DTq7mHam4AzXtqfH6NepdTPV8wzcVf3b5CB/HlYM+6HAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjMzMDJmNzk0LWMwOGQtNGIwOS04OTBkLTBjM2Y3Y2JlNTFlYiIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo2OTM3YmZkMS0yY2MzLTRjMjItODU2ZS0wN2UzODExZTc5MmEiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDphZmFjYjU4OS0yNGRmLTRhODMtODdlZS0xYWQzYzIzOTc5NzYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDQ4MzQ1NDQ2NDU3MiIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmYwMjZkYmJkLTUwNGYtNGFjNS1iNjZiLTU4NjRhMWQ0NDdkOSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0xMFQwOTo1NzozNCIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz5V3JrBAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gIKCDkizEN83QAAAElJREFUGNNjYEACR6+//o/MZ8QmYa0pygiXRNeBrIAGgJGBgYGhbtklFDuZmRgZ6iN0GeGW1i279J+ZCcKtj9DFdEzjissoJgAA6iEWhrUcbZgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/blank.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4QIKDCIwjMBeawAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAHElEQVQ4y2P8//8/AyWAiYFCMGrAqAGjBgwWAwBjmgMd7D3zQQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/right-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEqXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarVdZlsMoDPzXKeYIlkAgjsP63txgjj8FttNZOp30YtoWLWMhVCVBqP/376B/cAmnjbxGCymEDZdPPklGx7b9yuvJm1/P/YqH5Fs9XV4IVA7S7f9aOMafer4Y2EVGT68MWT1elNsXyR/27c7QMZGbHgk67TCUDkNO9hd8GMj7sraQLF4vofRdHt/vYbC5NDzKqdVj8N3/PiJ6TTGPE+mO3YanOL874OYt5PLq5PUafruEvnNx6ePhCQLyWZy2K6/oAZWzx0/0d6C4sOsJittghov8VM/6efBphfhqZlcvM9/ofbkQ5SbI8x6jGY3R99VlHxDScCzqXMrqYWCBKbc+C2gRt6IfV0toRmBvBeRtq1tBq5xYEPfBnhtnHtyXrFzhopcuEVKkils6c1GSVLcR0PKz8ZAIxJozYFgBr4NWLr7wmjet6SobJm6MkcIwxjv88jftqaExJuWZN7vECn7JTAq4MZGbT4wCIDxOHukK8NnuL15M9Rg1w2xYYN7KbqIoH9yaPHILaIeBCrnnGsd2GECIMLfCGXZAYAvslANvUSQyI44GfDIMGZJGCiBgVWnwUrxzAeCYzLnxTeQ1VlR2NWoWgFAXkEg2UwpYeRQ28Cd6A4eyOvWqGjSqadIcXPBBQwgxzOKXo4s+agwxRospZnPmTS1YNCNLlpMkh+KoKaSYLKWUMybNsJzxdcaAnIsUV3zREkosVlLJFfSpvmoNNVajmmpu0lxDnWihxWYttdy5g0rdd+2hx2499TxAteGGHzrCiMNGGvmCGtMO60N7HzU+UZOF1BwYL6jh0xhPEzzLiU7MgJh4BuJxIgBCy8RsM/ZeaEI3MduSICtU4KVOcBpPxICg7yw6+ILdB3I3uJH3v8JNTuRoQvcXyNGE7glyj7h9glqbu03dHC2EZhrOoG4O6ReUvbIOH7AHz67XuUvdSZWt2/Q5bdGzR2ETy/iDscSldzgmLrY5z27Q148RX0l6NeArmVFFN0X04R0BSWyEa27I3RtF/R6lQFHnJ5LsY8QzSa8GvJLeXN6yddrdQ+Fbc2NvyR58lRSm8yE05+c95itOxTfG7fp8aYAbBE1a+lAhdVc2fiHpRrGgVG67v357Cv4hHS9vVEqk1sHe8PKTl5JeEe0lCZC40xnKCdW/CQ5uw88IIo6PmphQZ6Ll8Dyi9I2QfhlBemP9W8wMpqDoYKNGwTlZdJM89POkuM2Jd5nN3cJCAHGbNO3z1Ju8Sl/90GiKitORpBgSRoHXP0oVOnPlMVW+J+lDAUJojg1szTgey7eqUYahLwL4HUnXiuUMgmatBST7Pteb6UM/Sot7CSwJYGKzKH5c2FaKjYy6M5+ywqStxhZwhKztqUv0pc/fcJWe+upWVu3ZcaL8RfGmt4vyC6JdZX+1oRkHWkTD2ojYxLEU/6HFCmfh7h6luoeUbmlGf7KpgX70mm8Ve1ybR5XdzSdxoj/Z1OAdPQbQS1w/ibGzTY75eQNGYJaKTX7NH6pHEHHoCjv56Zebx0XSS+q9eUihXxxGnhp6Xk/eOKTQj/DCz6uGieh/0DPsUZQQ03EAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6YTJjZmUzZWYtMzE5Yi00YTlkLThlZGEtMzJhNDYzZjMwNmZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjgxY2EwNjczLTJlODEtNGM3Mi1hNTM2LTg2MTJkYjc4YWY3NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmI0OGNmYzRiLTMxOGItNDEzNy1iMmZlLTEzYWZjM2E0ZTExZCIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjI4NDI1Mjg0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZWFmMzkzYzAtOGRlNy00NTlmLTg4MzItYWE2MGYyYTc0NWJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjA4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj16UaAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJQjxj+hWAAAAMklEQVQI12NggILQriP/GdAAEzIHXQETumpkBRiSyAqwSq4us2HEKgmTYMDnGAYGBgYAozYP8SPzNcgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-desc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAANannwAAAAAAAAAAAAAAACpZYQIAAAAqWWEAAAAAAAAAAAAqWWEAAAACAAAAAAAAKllhAAAAKllhAAAAAAAAmeIQ3V5WWXgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/treeviews.css", data : "LnRyZWV2aWV3IC5zY3JvbGx2aWV3LWNvbnRlbnRzIHsKICAgIHNwYWNpbmc6IDA7Cn0KCi50cmVldmlld25vZGUgewogICAgc3BhY2luZzogMDsKfQoKLnRyZWV2aWV3bm9kZSAuaXRlbXJlbmRlcmVyIHsKICAgIHdpZHRoOiBhdXRvOwogICAgcGFkZGluZzogNXB4OwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi50cmVldmlldyAuaXRlbXJlbmRlcmVyOm5vZGUtc2VsZWN0ZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpub2RlLXNlbGVjdGVkIC5sYWJlbCB7CiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOwp9CgoudHJlZXZpZXdub2RlIC5iYXNpYy1yZW5kZXJlci1jb250YWluZXIgewogICAgd2lkdGg6IGF1dG87Cn0KICAgIAoudHJlZXZpZXdub2RlIC5iYXNpYy1yZW5kZXJlci1sYWJlbCB7CiAgICB3aWR0aDogYXV0bzsKfQogICAgCi50cmVlbm9kZS1jb250YWluZXIgewogICAgc3BhY2luZzogMDsKfQogICAgCi50cmVlbm9kZS1jaGlsZC1jb250YWluZXIgewogICAgcGFkZGluZy1sZWZ0OiAxNnB4OwogICAgc3BhY2luZzogMDsKfQogICAgCi50cmVlbm9kZS1leHBhbmQtY29sbGFwc2UtaWNvbiB7CiAgICByZXNvdXJjZTogJGJsYW5rOwogICAgY3Vyc29yOiBub25lOwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQogICAgCi50cmVlbm9kZS1leHBhbmQtY29sbGFwc2UtaWNvbi5ub2RlLWV4cGFuZGVkIHsKICAgIHJlc291cmNlOiAkY29sbGFwc2VkOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CiAgICAKLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uLm5vZGUtY29sbGFwc2VkIHsKICAgIHJlc291cmNlOiAkZXhwYW5kZWQ7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi50cmVldmlldy5mdWxsLXdpZHRoIC5pdGVtcmVuZGVyZXIgewogICAgd2lkdGg6IDEwMCU7Cn0KCi50cmVldmlldy5mdWxsLXdpZHRoIC5zY3JvbGx2aWV3LWNvbnRlbnRzIHsKICAgIHdpZHRoOiAxMDAlOwp9CgoudHJlZXZpZXcuZnVsbC13aWR0aCAudHJlZXZpZXdub2RlIHsKICAgIHdpZHRoOiAxMDAlOwp9CgoudHJlZXZpZXcuZnVsbC13aWR0aCAudHJlZW5vZGUtY29udGFpbmVyIHsKICAgIHdpZHRoOiAxMDAlCn0KCi50cmVldmlldy5mdWxsLXdpZHRoIC50cmVlbm9kZS1jaGlsZC1jb250YWluZXIgewogICAgd2lkdGg6IDEwMCU7Cn0KCi50cmVldmlldy5mdWxsLXdpZHRoIC5iYXNpYy1yZW5kZXJlci1jb250YWluZXIgewogICAgd2lkdGg6IDEwMCU7Cn0KCi50cmVldmlldy5mdWxsLXdpZHRoIC50cmVlbm9kZS1jb250YWluZXIgLmxhYmVsIHsKICAgIHdpZHRoOiAxMDAlOwp9IAo"},{ name : "haxeui-core/locale/fr/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZCmZvcm1hdHMuZGVjaW1hbC5zZXBlcmF0b3I9LAo"},{ name : "haxeui-core/locale/it/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZCmZvcm1hdHMuZGVjaW1hbC5zZXBlcmF0b3I9LAo"},{ name : "haxeui-core/styles/shared/check-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCTskh/mOvAAAAS5JREFUKM+NkbtKA2EQhb/ZrLIGL2BnExDEIr2FguADBLMo/IWFCF7AwiewEkRQ7GwUkXRiY4LZGASLtbIQK4tgo7VWgmBMdrM7FokQxBinO2fmzAczwj8qn78cFzuaCmu1U7vbcLlcHqyH0TUqqR7HweoWqDXiPSAFBBLHd38SCgVvBtW1ppJt13UrHQme5yWxOAZE4SGsV3cBOhIaMTvAGNBIEC/PGRMA2OfF4oSFXBFLMQyqK8aYKO95k8RsAIiwn53N3n8vsiwYRRlGdMl2+g5zvu+IcgJYAo9vA/1b7WRRVbkolo4UVltWBTQNxKIy7bqZ2/aAJSIa1D/XBc6alqZbvYOfw0DzD8aY6PVlZBEotfynpNO7+dsxpF3kfN8Zev9Y0AQ385nM82+BL3sbaMn2+wKIAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/sidebars.css", data : "LnNpZGViYXItbW9kYWwtYmFja2dyb3VuZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbW9kYWwtYmFja2dyb3VuZC1jb2xvcjsKICAgIG9wYWNpdHk6IDAuNjA7Cn0KCi5zaWRlYmFyIHsKICAgIG1hcmdpbjogNTBweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcGFkZGluZzogNXB4OwogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4xLCAzMCwgMiwgMSwgMywgZmFsc2UpOwp9CiAgICAKLnNpZGViYXI6bGVmdCB7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnNpZGViYXI6cmlnaHQgewogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnNpZGViYXI6dG9wIHsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnNpZGViYXI6Ym90dG9tIHsKICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qIEFOSU1BVElPTlMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqLwovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCi5zaWRlQmFyTW9kaWZ5Q29udGVudCB7CiAgICBhbmltYXRpb246IHNpZGVCYXJNb2RpZnlDb250ZW50IDAuM3MgZWFzZSAwcyAxOwp9Cgouc2lkZUJhclJlc3RvcmVDb250ZW50IHsKICAgIGFuaW1hdGlvbjogc2lkZUJhclJlc3RvcmVDb250ZW50IDAuM3MgZWFzZSAwcyAxOwp9CgogICAgCkBrZXlmcmFtZXMgc2lkZUJhck1vZGlmeUNvbnRlbnQgewogICAgMCUgewogICAgfQogICAgMTAwJSB7CiAgICB9Cn0KICAgIApAa2V5ZnJhbWVzIHNpZGVCYXJSZXN0b3JlQ29udGVudCB7CiAgICAwJSB7CiAgICB9CiAgICAxMDAlIHsKICAgIH0KfQogICAgCi5zaG93U2lkZUJhckxlZnQgewogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckxlZnQgMC4zcyBlYXNlIDBzIDE7Cn0KLmhpZGVTaWRlQmFyTGVmdCB7CiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyTGVmdCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsKfQogICAgCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJMZWZ0IHsKICAgIDAlIHsKICAgIH0KICAgIDEwMCUgewogICAgfQp9Cgouc2hvd1NpZGVCYXJSaWdodCB7CiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyUmlnaHQgMC4zcyBlYXNlIDBzIDE7Cn0KCi5oaWRlU2lkZUJhclJpZ2h0IHsKICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJSaWdodCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsKfQogICAgCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJSaWdodCB7CiAgICAwJSB7CiAgICB9CiAgICAxMDAlIHsKICAgIH0KfQogICAgCi5zaG93U2lkZUJhclRvcCB7CiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyVG9wIDAuM3MgZWFzZSAwcyAxOwp9Ci5oaWRlU2lkZUJhclRvcCB7CiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyVG9wIDAuM3MgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOwp9CiAgICAKQGtleWZyYW1lcyBzaG93U2lkZUJhclRvcCB7CiAgICAwJSB7CiAgICB9CiAgICAxMDAlIHsKICAgIH0KfQogICAgCi5zaG93U2lkZUJhckJvdHRvbSB7CiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyQm90dG9tIDAuM3MgZWFzZSAwcyAxOwp9Ci5oaWRlU2lkZUJhckJvdHRvbSB7CiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyQm90dG9tIDAuM3MgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOwp9CiAgICAKQGtleWZyYW1lcyBzaG93U2lkZUJhckJvdHRvbSB7CiAgICAwJSB7CiAgICB9CiAgICAxMDAlIHsKICAgIH0KfQo"},{ name : "haxeui-core/styles/shared/error-large.png", data : ""},{ name : "haxeui-core/styles/shared/gripper-horizontal.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAECAIAAAA4WjmaAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWN8K6PCgBswMTAwTEqOnpQcjZXBhEcrAwMDI37DARkxCkFtOZfXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/locale/ru/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLSVtLSVZCmZvcm1hdHMuZGVjaW1hbC5zZXBlcmF0b3I9LAo"},{ name : "haxeui-core/styles/default/menus.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNRU5VQkFSCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5tZW51YmFyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcGFkZGluZzogNnB4OwogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4OwogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBmaWx0ZXI6ICRtZW51LXNoYWRvdzsKfQoKLm1lbnViYXItYnV0dG9uIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyOiBub25lOwogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5tZW51YmFyLWJ1dHRvbjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7CiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOwp9CgovKgoubWVudWJhci1idXR0b246YWN0aXZlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsKICAgIGNvbG9yOiAkaG92ZXItdGV4dC1jb2xvcjsKfQoqLwoKLm1lbnViYXItYnV0dG9uOmRvd24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgY29sb3I6ICRkb3duLXRleHQtY29sb3I7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsKICAgIGJvcmRlci1ib3R0b20tc2l6ZTogMHB4Owp9CgoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW4gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXI6IG5vbmU7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLm1lbnViYXItYnV0dG9uLW5vLWNoaWxkcmVuOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsKICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7Cn0KCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbjpkb3duIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsKICAgIGNvbG9yOiAkZG93bi10ZXh0LWNvbG9yOwogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogTUVOVQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoubWVudSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBwYWRkaW5nOiAxcHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGZpbHRlcjogJG1lbnUtc2hhZG93OwogICAgc3BhY2luZzogMDsKICAgIGluaXRpYWwtd2lkdGg6IDIwMHB4Owp9CgoubWVudS5leHBhbmRlZCB7CiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7CiAgICBib3JkZXItdG9wLXNpemU6IDBweDsKfQoKLm1lbnUtZmlsbGVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgaGVpZ2h0OiAxcHg7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogTUVOVUlURU1TCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5tZW51aXRlbSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDZweDsKICAgIHBhZGRpbmctbGVmdDogMTJweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLm1lbnVpdGVtLWxhYmVsLCAubWVudWl0ZW0tY2hlY2tib3gsIC5tZW51aXRlbS1vcHRpb25ib3gsIC5tZW51aXRlbS1zaG9ydGN1dC1sYWJlbCB7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CgoubWVudWl0ZW0tbGFiZWw6ZGlzYWJsZWQsIC5tZW51aXRlbS1zaG9ydGN1dC1sYWJlbDpkaXNhYmxlZCB7CiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7Cn0KCi5tZW51aXRlbS1zaG9ydGN1dC1sYWJlbCB7CiAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBob3Jpem9udGFsLWFsaWduOiByaWdodDsKfQoKLm1lbnVpdGVtLWljb24gewogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLm1lbnVpdGVtOmhvdmVyLCAubWVudWl0ZW06c2VsZWN0ZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoubWVudWl0ZW0gLmxhYmVsOmhvdmVyLCAubWVudWl0ZW0gLmxhYmVsOnNlbGVjdGVkLAoubWVudWl0ZW0tY2hlY2tib3g6aG92ZXIsIC5tZW51aXRlbS1jaGVja2JveDpzZWxlY3RlZCwKLm1lbnVpdGVtLW9wdGlvbmJveDpob3ZlciwgLm1lbnVpdGVtLW9wdGlvbmJveDpzZWxlY3RlZCB7CiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOwp9CgoubWVudWl0ZW0tZXhwYW5kYWJsZSB7CiAgICByZXNvdXJjZTogJGFycm93LXJpZ2h0OwogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOwp9CgoubWVudXNlcGFyYXRvciB7CiAgICBoZWlnaHQ6IDFweDsKICAgIHdpZHRoOiAxMDAlOwogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsKfQo"},{ name : "haxeui-core/styles/shared/expanded-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADaXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbciQpDPznFHsEJCEkjkNBEbE32ONvQj3G3W47POv52QgXXUjFQ0qUgibs//w9wl94OBKHpOa55BzxpJIKVygej6eummJa9fkRL+WhPdwdMBsFUo5Pz+f4q53igyWq0PSNIW9nx/bYUdJp358MnY5kImIo/TRUTkPCRwedBuqxrJiL29slbPsh+7USP94wq3HFxA7x/J0M0esKP8K8C0lEzZIOADJfDlKXUtGNcKAW6CwZdZJrSQjIqzjFN6jCMyu3Rh+0P5Ei+WgPaHgMZr7ly3bS18EPK8RvPEu7PT+0l3q7eAjyivHoHsbYj9XVlBHSfC7qWsrSMHBDyGVNyyiGV6HbKgXFA7K3gfIeW9xQGhVi0DIoUadKg/YlGzVATLyzQTI3ltXmYly4SQzgKc1Cg02KdHFw1kCvoJVvLLT8luWukcNxJ4xkgjE66Oc/Uz40NMZMeaLod6yAi+emAIzJ3KwxCoTQuPJIV4Cv8vxMXgUM6gqzY4E1boeJTenMrZlHsogWDFTIY6+R9dMAQgTfCjDI/UQxkyhlisZsRIijg58KQ45NwxsoIFXuQMnYGhnkOE/fmGO0xrLy0YwzC0QotpGBmiIVXCUcbMgfS44cqiqaVDWrqWvRmiWnrDlny/PwqyaWTC2bmVux6uLJ1bObe/DitXARHI5acrHipZRa4bTCcsXsigG1brzJljbd8mabb2WrDenTUtOWmzUPrbTauUvHOdFzt+699LrTjlTa06573m33vex1INWGjDR05GHDRxn1Zo3CQeu78nXW6GKNF1NzoN2sYarZZYLmcaKTMzDGicC4TQaQ0Dw5i04pcZjUTc5iYewKZaDUSU6nyRgYTDuxDrq5+8XcA28hpW/xxhdzYVL3J5gLk7oPmHvP2wvW+vy3aVHCYmhuwxnUKNh+GLB7Za/zT+3LMvzuhB9DP4b+x4ZGpWOXjIpbBf5BjvZESfGb17p3MnzUsaTkZSGz7LZNjbfdfNgLSOFzzIBWf0FLcRnDRea9DC87zrUsJPVzJF9E9AIZ3chKjLqCMGW4lAdJQ1qfqo4ZnfxJkL8W7GeJC0Ff6rwZ7PzWf/gmkFuG3wH0GbDwTSC3DP8B0I+hH0N/0pDhLlLCvwJpjAM7CC1lAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo3YzhmNGQ2ZC05Mjk0LTQ2ZWQtYmRhOS1hNDA1MDVlZjNmOTAiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MTFhMGRlODctY2RlYi00YmMxLWIwNGQtZmY4ZmY4NmZmN2RjIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZDNjOTZmYzktYWZlMy00YTJjLWIwNzgtNmUwM2QxZmQ1ZWEzIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODI0MDQ3ODc2NjUiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplMTE5ZmRkMC04ODgwLTQ0NDQtYTg4MC02ODRlNTg4MGEzM2YiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjY6NDQiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+QhhreAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwaLCrn6QIAAACQSURBVDjLY2AYBQMPGJE5cROOK/37///ofwYGCRzqX//7999mebH1LZgAE7LsogLLewwMDO4MDAwfsWj+/P8/gyeyZgwDGBgYGJYUWl1iZGAMZGBg+Ikk/JuBgSF0WZHVWXT1TNjcuaTQcj8DA0MCAwPDPwYGhv8MDAypSwutdpIcQDH9x4pj+o8VjyYVGgMAhMInzjvMAn0AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/up-down-arrows-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAARElEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMwAg3F0UUq1omuL1wYJlRwAShkIUQLoNw4NIA3UcXw9uo6KsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/dark/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDTEFTU0lDIFZBUklBTlRTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCwKLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmYzMDsKICAgIGJvcmRlcjpub25lOwp9CgouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLmJ1dHRvbiwKLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmJ1dHRvbnsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzJmMzA7CiAgICBib3JkZXI6bm9uZTsKfQoKLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYiwKLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLnRodW1iIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMzZDQwNDI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAudGh1bWI6aG92ZXIsCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDU0ODRhOwp9CgouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmRvd24sCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYjpkb3duIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM0NTQ4NGE7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAudGh1bWI6ZGlzYWJsZWQsCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYjpkaXNhYmxlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzNzM4Owp9CgouY2xhc3NpYy1zY3JvbGxzIC52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jLAoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmMgewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvdXAtYXJyb3ctbGlnaHQucG5nIjsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5kZWluYzpkb3duLAoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmM6ZG93biB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1icmlnaHQucG5nIjsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmMsCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5pbmMgewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvZG93bi1hcnJvdy1saWdodC5wbmciOwp9CgouY2xhc3NpYy1zY3JvbGxzIC52ZXJ0aWNhbC1zY3JvbGwgLmluYzpkb3duLAoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jOmRvd24gewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvZG93bi1hcnJvdy1icmlnaHQucG5nIjsKfQoKLmNsYXNzaWMtc2Nyb2xscyAuaG9yaXpvbnRhbC1zY3JvbGwgLmRlaW5jLAouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYyB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LWFycm93LWxpZ2h0LnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYzpkb3duLAouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsKICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL2xlZnQtYXJyb3ctYnJpZ2h0LnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5pbmMsCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYyB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1saWdodC5wbmciOwp9CgouY2xhc3NpYy1zY3JvbGxzIC5ob3Jpem9udGFsLXNjcm9sbCAuaW5jOmRvd24sCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYzpkb3duIHsKICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3JpZ2h0LWFycm93LWJyaWdodC5wbmciOwp9Cg"},{ name : "haxeui-core/styles/default/optionboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBPUFRJT05CT1gKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLm9wdGlvbmJveCB7CiAgICB3aWR0aDogYXV0bzsKICAgIGhlaWdodDogYXV0bzsKICAgIGhvcml6b250YWwtc3BhY2luZzogNHB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKfQoKLm9wdGlvbmJveDpob3ZlciB7Cn0KCi5vcHRpb25ib3g6ZGlzYWJsZWQgewogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOwogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwp9Cgoub3B0aW9uYm94LXZhbHVlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICB3aWR0aDogMThweDsKICAgIGhlaWdodDogMThweDsKICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgICBib3JkZXItcmFkaXVzOiA5cHg7CiAgICBpY29uOiBub25lOwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLm9wdGlvbmJveC12YWx1ZTpob3ZlciB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9Cgoub3B0aW9uYm94LXZhbHVlOmFjdGl2ZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9Cgoub3B0aW9uYm94LXZhbHVlOnNlbGVjdGVkIHsKICAgIGljb246ICRvcHRpb24tc2VsZWN0ZWQ7Cn0KCi5vcHRpb25ib3gtdmFsdWU6ZGlzYWJsZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZGlzYWJsZWQ7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7CiAgICBjdXJzb3I6IGRlZmF1bHQ7Cn0KCi5vcHRpb25ib3gtbGFiZWwgewogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLm9wdGlvbmJveC1pY29uIHsKICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBvcGFjaXR5OiAxOwp9Cgoub3B0aW9uYm94LWljb246ZGlzYWJsZWQgewogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgb3BhY2l0eTogMC41Owp9Cg"},{ name : "haxeui-core/styles/shared/gripper-vertical.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAIAAAAcmWhZAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAH0lEQVQImWN8K6PCAANMDAwMk5KjJyVHQzlwwEg7ZQCDgwyl+MMKdgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/option-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAMx3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZlrdt04jIT/cxWzBL4JLofPc2YHs/z5QOo6sWPH6e74xleyRFEgUCgUGLP+73+3+R9+oo/WxFQk15wtP7HG6hsnYu9PO9/OxvN9f8ZzdO+vm7cbnkuBY7h/Sn7Gv667twnuoXGWfppInolcf3+jxmd++TDR86KgFnlO5jNRfSYK/t5wzwTtLsvmKuXnJfR1j8/z1w2iS+Nrv3xS7uHj37HgvZl4T/B+BRcs3z7Ea0DQX29COyeN287fyy2EkPmO4WUJDvnMT/Ynq8wvUXmduS+ufwhKyPe64cJ7Z+a346fXXfrc+ea4+Kc3h/H25nfX47L743Jev3tPMXuvu7oWMy7Nz6JeSzlnDOxMFc5jmU/hN3FezqfyEQN6ByGfALPzGa46T1i2i2665rZb5zjcwMToly8cvR8+nGsSiq9+BGuIVtSP276EGmYQIjcIb+Cqf7PFnffW87rhhBdPx0jvmMzd8Pu/8/lyor0V8s5ZefMVdnlNCszQyOk3owiI2y8cpePg1+fjj8Y1EMF03CwssNl+p+jJPdhSHIUT6MDAxPHmmivzmQAX8e6EMWA/OptdSC47W7wvzuFHIT6NiYSk8Z0QuJT8xEofyRCCI17fzTPFnbE++XsZziIQiTQqhKaGRqwixAZ+ShQw1FJIMaWUU0mSamo55JhTzrlkJb9WQokllVxKkVJLkyBRkmQpIkaqtOprgBxTzbVUqbW2xksbMzeebgxorfseeuyp51669NrbAD4jjjTyKEPMqKNNP8OEJ2aeZcqssy23gNKKK628ypJVV9tAbYcdd9p5ly277vYWNWduWH/5/HnU3Ctq/kRKB5a3qPFoKa8pnNJJ0pgRMR8dES8aAQDtNWZWXIzeaOg0ZrZ6siJ5rEwanOk0YkQwLufTdm+x+xG5d3EzMf6nuPlX5IyG7m9Ezmjovojcr3H7JGqznaIZzImQpqE61QbSjwFLmpemRe2Pj+afPvAPJ+pNtp3Ut50iZJnr9GnNGncubiQ3GkAAIeAKXgl6w7gdbMMRfTbYe+vShjSitvHFOH83nNUIUO8zjtzHhBQJnq9617YCNN02uK+2XPbcs4a9RVrYy0U946TsEJmt7+6LPgZFqGEp9zWmG2EnbCfuZZvhW5yl88zacergvqs+Bdfwrq/vJqZCE6UyU6u1mzKzz0XOIv7LpIZZ3U4Z7+0EDqked+U1pKVndfcZyl57xeOToeM/GWHeDSkdGo3HWPlh6kdTHkPUYz8MNZ/dvsv/1dDHiPdGPiaar25+btzXfjR/GJ3HvDXXF8s1n6332+W+zffDQvMv8RN2axOt0SCRXaE6o8kFfNey7WSa/c2xt7xtgNLyhIVmg3agwO5Jx2HgvTXhOVQGGehqhKwLXCOznEVprAq5dMIR+wlHOeHIEzIOtfUWfE0myUhT45vIorItg1ZMvHxDW+TanrD1jC+YnjkvCH/Mqhg0ZEtYrk/rZxl+N5QwJJ18nD7G7avS7hAIP1o3xUKayaUWiz3+GKu0nSgbYlJlFvg/LIi42RbGzJua03anaMDGMjKA4ukZ89CTmFTWfzyany/4x7NV7Hk2Dnsi0nZOugBJsbfDWWPP1c61sv1Ztlney3eDGAOd7dYxvPfVIfiRKSwbgPAIQoYUmbnhYwpomDu3Qc2hFtocag4WUWlDH5kU6S2e10G1JyDTUpYO5e0je7fR/qAxVoUuhbA6Chwxw2UKnHV4Yb89r83MnUEhui81M8F2ZmzpATSSssOW5bF/+h17XWtl8Qm4dclYVCi4FqjMQtsAhQ9VbXmT1F6WXeZD/Vi7UOtZt8xbAJa/BcA1xfAsoig5HkQItAWW+kh3aegEDUvDDMwdYIJauZ0kZqZiE3eb/RNWrp4zaz8ezVc3Ph7rgxjq0DruUfWu+ZzW4rsZh7klJUAtZxEr0gtQnUrv8Jzg2cki6xQKuXdzUnmEAkosKPuBlcXmNCQsbRMfoMQkQLcnVAJuGG538nePGmkryL/hLukvBEbudUxBCv5EEEojYIXqrBTrg0aFiaTfh8hX5VwlseHj4+L1w8XqYaFK12ZI18FS7CDyhwvlySzt/I5fgv0DqroW/clAMhBtrzBffh54lNwPPFgJbZipSp1Jy43L19m594MT4BovlnHoIAQKjUy91zxIx9hSRyEQ0NYwvuX3dC9Xkdxq1Wp/X6zCTQplbgBRWkX3oEHsNqdk2bSs0vFq4LrNDDdNPAgHR5nIj0bX6Irq2YQUKgikgkRSNoRpJ+opFePQmrZBXyvRVaKdrofphr4msc+O5k8HIt1xWiXFy4XJiTFAaYrb4k16w0nqL5wAJcVJuDiBVeq+ri6/upqSqWm0zCS0/PY5YI4kcpYc6co9+jy9OFe+1aPmXwvZN0hBzoDK5LOgiyuw48YF1hgoQ/rjTWyllmRlIdMzqSwrRpFI9+NXU/j70ltdpqwc6DqQBqs41lZbgmtltDXAg665qjqlgZHjs7ABj2rXAVpv5aBuzGa0Cjxlo6hLVdeuiESgYoCRPiDN2wjsSKP0ypZ/T2zfHX9MFJDMM9AETSoUlCUPKSahXzuEIELF0VaMhmx89L75G33Ih4kqjQfdGYyYhYQb8ZKIF+Ihg2bEaRI94/MLWfkfp8g/yLUXeIpT8OQDnkGlsr1XH7kVG5KRGpW1Ae7dwj24loaRFDO/zTGvBRh9MSmPjm4UghvrdD15vnC16sGVoVgosNYBVk/t4ApqUVwtrR+CeKOm+i68JSQL86MvoC5FK2lyZl3dkCw66aHZuXu9j4bn9ud35z7Spu4paNqcdUZzks7OFcj5faTqOFLVqr5jRb1fzwwtnciFNR6p2mxC2q0MshYZZQpaEz3z8GL1/zZ25tuB31cYXRw97cOeIPLy5w/2TCUs1D7qCHnMdOIPRPtYJNB7HaStqCrz9HDSfjipvBU7qySihhzd7Y7oo1U+RqCR55FBBRlkfirR/r9g2/wN/6h7zLf+2b/4J77zj7usbb7wEOogIGRlf+6hgrbR0mRV92wZvho7/fTkmYC1fHKSf939B4Z8jv1pJmB9REarDulAAYe+C+IPtKMnEkZOGpMj1hEHFRVmcCgqxIXHoann69CQrkM14ZDZo3b1Gbpo9HwkqNaxRkOUXW3a0/aOMEGJTJVst1pUCfmlscLTNAqEAmQ0E0sv3Q26DurcmLpF2GjDzBUqPpCJUTNR+1lGW91hmbp5d5qF4q4uKgoImkfYq6sv6dQqenzUaVBBQ+tuLyFalVTxtoZz6ELSLBFGmSqtGiUXyVs9hrRAzynwONreQQoWi3QjSbi8skub+VEnGBUuayZ/FCzzH9aEe+kOEwyzdCswUZR1z3BRz6GRqMKD8ipL6WQ0yfMkDR2k/DkIzM8XaFmPgqQy09sD8QL3AsKjLiE9dRRYhz93mNrmra3kuTyQNVVxTyB5UrvDRoyQT6O0VoYLzUXXVCiBHgEbNXX6DSBSay+O5eHmKQ5omwre1mnx8Q19Ne5I2p3j7qY7D8RJ5qudoHM+7YTvTzvBS7QtaaiRqrIGfkfRTEGCIDVovKkXv5maLAOXacEGzur+NI2HAfQBbCFUdKs13u0I2UhhFBUcoK086UD/2JQ3AMvp4y7TFFefM/2/ox/ko63qyXftuN92IuAYXkpYSSmFT9NyExw+PFsNWm6q6wbhnXzOMT+bDRXi3Lxz+oq2pzBlppWuZZc+XHt097T3XXPstPct137qWlkr3v5+fTrowxjq5+yRpmrWKNrEasU15bc19ZuKWwhKHEzmgmHaY289tb80lOTLjGvEmy746h4QDK6Ybmu9e5yvrS7amdMuzfDayyr+haiwrIZ80nGSwBEHwCUQeqg0xyud5gdWzNajmHlV2ESlUfFoUGe1wCuTfCWXCIH6BW8kEryFQO6qwJxzmCxzID5Xxq6cA8tciX4DqyOpY5FBHZZMtB02Iq/m8CPGOFoU2uUMcYjKLZfMsN8tqEbUl/cLPUdy5LNBmV5bsaTd3Wg1ymSnOZzjbrSm6d4P+WQEHX3W/1L+ycHmbE6+N+cxRv9v7Owk/ubume/oLaSfbZfwgUzT3SIMisTlLHnts20xSlYIZJjQCYKRcnC37/rWbYvtyP4dBKnY92uDAja4e0Yw77M/QeYRI5toqBdVSjq5h2wLMQthnMmrqUayJVAu0wDRFQey3BOOWmwpoVvsQyRu1B3k8zc2EKj2W3TL0fuWzqbHviVVnFOVTZf9Tc1IpJtz9OPMs/atoMgHsjWf8xnRyfhXzKFCy4uurFlH1lgVI9pK0sKpkkamvrTRfLQRJDoK4vtsWkG45inO3bo/rT1Edc9q/h9qicCSEqswrwAAAYNpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6WiFQcziDhkqE4tiIo4ShWLYKG0FVp1MLn0C5oYkhQXR8G14ODHYtXBxVlXB1dBEPwAcXRyUnSREv+XFFrEeHDcj3f3HnfvAKFRZZrVNQ5oum2mE3Epl1+RQq8Q0IcwRERlZhnJzEIWvuPrHgG+3sV4lv+5P0e/WrAYEJCIZ5lh2sTrxNObtsF5n1hkZVklPieOmnRB4keuKx6/cS65LPBM0cym54hFYqnUwUoHs7KpEU8RR1RNp3wh57HKeYuzVq2x1j35C8MFfTnDdZojSGARSaQgQUENFVRhI0arToqFNO3HffzDrj9FLoVcFTByzGMDGmTXD/4Hv7u1ipMTXlI4DnS/OM7HKBDaBZp1x/k+dpzmCRB8Bq70tn+jAcx8kl5va5EjYGAbuLhua8oecLkDDD0Zsim7UpCmUCwC72f0TXlg8BboXfV6a+3j9AHIUldLN8DBITBWouw1n3f3dPb275lWfz9tXXKl4mmg1AAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6Y2MxNDczMDEtNGNjYS00NTBjLThhNWUtMzQwZGE2YmZhYzQ4IgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmNlODhmNGYwLWFhYTgtNDdkMy04Y2U5LTBmZDNjMzcxY2Q4NyIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmViMmE0ODA2LTRmOTctNDI5NS05ZjRmLWE2MDY4NWRkNzQxNSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NjA4MjA0MjI1MjgwIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6MWI4YjIzY2EtMDA2NC00NmU1LWE1YmUtMjU0NjEwMmU1NWQ3IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTExVDIwOjM2OjQ0Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PhMPXLMAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmAgsTJCx8WBYyAAAA70lEQVQoz5WRPUtCcRTGf8/5KyKEU/QFmlKJpjY/RjZEFLREU0RDUcKFxlCqTaItIi7Nrm4OvUCLRDg3OTT1MnQ9TQ2C5vVMB87vPJznPDBl6a+J2u2M9ee2BZvgZeBTcO9uF7XVYmtoIYq7MwFvAZVRqu6c1aqlPUluABm8Pg4GkNg9ueuuA1h08zrraGvi7c4BgIWQLIOHFH4XoutewUyJ0n4op69gTvIMDFLwvcO1xXc7ri69AbcTcecUwACyfO+Anv5J6zJ5KV0NBdeIO/kPL+wjNoB54Af0IAbnRyvlWJKPFWzEnXyz+ZgdNfsFXi1DOnxxZRoAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/calendars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDQUxFTkRBUgoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouY2FsZW5kYXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIHBhZGRpbmc6IDVweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMXB4Owp9CgouY2FsZW5kYXIgLmJ1dHRvbiB7CiAgICBwYWRkaW5nOiA4cHg7Cn0KCi5jYWxlbmRhciAuY2FsZW5kYXItb2ZmLWRheSB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgY3Vyc29yOiBkZWZhdWx0Owp9CgouY2FsZW5kYXIgLmNhbGVuZGFyLWRheSB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50LWNvbG9yLWxpZ2h0ZXI7Cn0KCi5jYWxlbmRhciAuY2FsZW5kYXItZGF5OmhvdmVyIHsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsKfQoKLmNhbGVuZGFyIC5jYWxlbmRhci1kYXktc2VsZWN0ZWQgewogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsKfQoKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogQ0FMRU5EQVJWSUVXCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5jYWxlbmRhci12aWV3IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7CiAgICBwYWRkaW5nOiA1cHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJvcmRlci1yYWRpdXM6IDFweDsKfQoKLmRyb3Bkb3duLXBvcHVwID4gLmNhbGVuZGFyLXZpZXcgewogICAgYm9yZGVyOiBub25lOwp9CgouY2FsZW5kYXItdmlldyAuY2FsZW5kYXIgewogICAgYm9yZGVyOiBub25lOwogICAgcGFkZGluZzogMHB4Owp9CgouY2FsZW5kYXItdmlldyAuaGJveCB7CiAgICBzcGFjaW5nOiAwOwp9CgouY2FsZW5kYXItdmlldyAjcHJldi1tb250aCB7CiAgICBpY29uOiAkYXJyb3ctbGVmdDsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwp9CgouY2FsZW5kYXItdmlldyAjbmV4dC1tb250aCB7CiAgICBpY29uOiAkYXJyb3ctcmlnaHQ7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKfQoKLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQtbW9udGggewogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQteWVhciB7CiAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBib3JkZXI6IG5vbmU7CiAgICBwYWRkaW5nLXRvcDogMXB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKfQouY2FsZW5kYXItdmlldyAjY3VycmVudC15ZWFyIC5idXR0b24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlcjogbm9uZTsKfQo"},{ name : "haxeui_rtti", data : ""},{ name : "haxeui-core/styles/default/splitters.css", data : "LnNwbGl0dGVyIHsKICAgIHNwYWNpbmc6IDA7Cn0KCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiA2cHg7CiAgICBjdXJzb3I6IHJvdy1yZXNpemU7CiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsKfQoKLnZlcnRpY2FsLXNwbGl0dGVyLWdyaXBwZXI6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7Cn0KCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyOmRvd24gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsKfQoKLnZlcnRpY2FsLXNwbGl0dGVyLWdyaXBwZXIgLmltYWdlIHsKICAgIHJlc291cmNlOiAkZ3JpcHBlci1ob3Jpem9udGFsOwogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciB7CiAgICB3aWR0aDogNnB4OwogICAgaGVpZ2h0OiAxMDAlOwogICAgY3Vyc29yOiBjb2wtcmVzaXplOwogICAgcG9pbnRlci1ldmVudHM6IHRydWU7Cn0KCi5ob3Jpem9udGFsLXNwbGl0dGVyLWdyaXBwZXI6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7Cn0KCi5ob3Jpem9udGFsLXNwbGl0dGVyLWdyaXBwZXI6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kb3duOwp9CgouaG9yaXpvbnRhbC1zcGxpdHRlci1ncmlwcGVyIC5pbWFnZSB7CiAgICByZXNvdXJjZTogJGdyaXBwZXItdmVydGljYWw7CiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9Cg"},{ name : "haxeui-core/locale/en_US/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVtLyVkLyVZCg"},{ name : "haxeui-core/locale/es/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZCmZvcm1hdHMuZGVjaW1hbC5zZXBlcmF0b3I9LAo"},{ name : "haxeui-heaps/styles/main.css", data : ""},{ name : "haxeui-core/styles/shared/up-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAKklEQVQImWN8K6PCwMDAwMCQbKIz98wVCJsJLgQnoaJwDpzNGBAQwIABAOGNCDDIObJsAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/listview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBMSVNUVklFVwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzIHsKICAgIHNwYWNpbmc6IDA7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDBweDsKfQoKLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXIgewogICAgY3Vyc29yOiBwb2ludGVyOyAgCn0KCi5saXN0dmlldyAubGlzdHZpZXctY29udGVudHMgPiAuaXRlbXJlbmRlcmVyIC5sYWJlbCB7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoubGlzdHZpZXcgLmV2ZW4gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7Cn0KCi5saXN0dmlldyAuZXZlbjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi5saXN0dmlldyAub2RkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWFsdDsKfQoKLmxpc3R2aWV3IC5vZGQ6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwp9CgoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzID4gLml0ZW1yZW5kZXJlciB7CiAgICBoZWlnaHQ6IGF1dG87CiAgICBwYWRkaW5nOiA2cHg7Cn0KCi5saXN0dmlldyAubGlzdHZpZXctY29udGVudHMgPiAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsKICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7Cn0KCi5saXN0dmlldyAubGlzdHZpZXctY29udGVudHMgPiAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIC5sYWJlbCB7CiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOwp9CgoubGlzdHZpZXc6ZGlzYWJsZWQgLmxhYmVsIHsKICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBMSVNUIFZJRVcgLSBMRUZUIE1FTlUgQUxURVJOQVRFCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgoubGlzdHZpZXcubGVmdC1tZW51IHsKICAgIGJvcmRlcjogbm9uZTsKICAgIHBhZGRpbmc6IDBweDsKICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKICAgIG1vZGU6IG1vYmlsZTsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgoubGlzdHZpZXcubGVmdC1tZW51IC52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jLCAubGlzdHZpZXcubGVmdC1tZW51IC52ZXJ0aWNhbC1zY3JvbGwgLmluYyB7CiAgICBoaWRkZW46IHRydWU7Cn0KCi5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgd2lkdGg6IDlweDsKICAgIHBhZGRpbmc6IDJweDsKfQoKLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIC50aHVtYiB7CiAgICBiYWNrZ3JvdW5kLW9wYWNpdHk6IC4zOwogICAgd2lkdGg6IDVweDsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKfQoKLmxpc3R2aWV3LmxlZnQtbWVudSAubGlzdHZpZXctY29udGVudHMgewp9CiAgICAgICAgCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW4gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIAogICAgcGFkZGluZy10b3A6IDhweDsKICAgIHBhZGRpbmctYm90dG9tOiA4cHg7Cn0KCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW46aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItaG92ZXI7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIAogICAgcGFkZGluZy10b3A6IDhweDsKICAgIHBhZGRpbmctYm90dG9tOiA4cHg7Cn0KCi5saXN0dmlldy5sZWZ0LW1lbnUgLm9kZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgCiAgICBwYWRkaW5nLXRvcDogOHB4OwogICAgcGFkZGluZy1ib3R0b206IDhweDsKfQoKLmxpc3R2aWV3LmxlZnQtbWVudSAub2RkOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICAKICAgIHBhZGRpbmctdG9wOiA4cHg7CiAgICBwYWRkaW5nLWJvdHRvbTogOHB4Owp9CgoubGlzdHZpZXcubGVmdC1tZW51IC5saXN0dmlldy1jb250ZW50cyA+IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoKLmxpc3R2aWV3LmxlZnQtbWVudSAubGlzdHZpZXctY29udGVudHMgPiAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIC5sYWJlbCB7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwp9CiAgICAKLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIHsKICAgIG9wYWNpdHk6IC41OwogICAgd2lkdGg6IDhweDsKICAgIHBhZGRpbmc6IDJweDsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBib3JkZXI6IG5vbmU7Cn0K"},{ name : "haxeui-core/styles/default/colorpickers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDT0xPUiBQSUNLRVIKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmNvbG9yLXBpY2tlciB7CiAgICBwYWRkaW5nOiAwOwogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOwogICAgaW5pdGlhbC13aWR0aDogMjcwcHg7CiAgICBpbml0aWFsLWhlaWdodDogMzAwcHg7Cn0KCi5jb2xvci1waWNrZXIgLmNvbnRyb2xzLWNvbnRhaW5lciB7CiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBwYWRkaW5nOiA1cHggMnB4OwogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOwogICAgc3BhY2luZzogMnB4Owp9CgouY29sb3ItcGlja2VyIC5jb250cm9scy1jb250YWluZXIgI3ByZXZDb250cm9scyB7CiAgICByZXNvdXJjZTogaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9sZWZ0LXNxdWFyZS1hcnJvdy1ibHVlLnBuZzsKfQoKLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyICNuZXh0Q29udHJvbHMgewogICAgcmVzb3VyY2U6IGhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvcmlnaHQtc3F1YXJlLWFycm93LWJsdWUucG5nOwp9CgouY29sb3ItcGlja2VyIC5jb250cm9scy1jb250YWluZXIgLnRleHRmaWVsZCwgLmNvbG9yLXBpY2tlciAjaW5wdXRIZXggewogICAgd2lkdGg6IDI1cHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBib3JkZXI6IG5vbmU7CiAgICBmaWx0ZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiAwcHg7CiAgICBib3JkZXItYm90dG9tOiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgcGFkZGluZzogMHB4OwogICAgcGFkZGluZy1ib3R0b206IDFweDsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CgouY29sb3ItcGlja2VyICNpbnB1dEhleCB7CiAgICB3aWR0aDogMTAwJTsKfQoKLmNvbG9yLXBpY2tlciAuY29udHJvbHMtY29udGFpbmVyIC5sYWJlbCB7CiAgICB3aWR0aDogNTVweDsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5jb2xvci1waWNrZXIgLmNvbnRyb2xzLWNvbnRhaW5lciAuc2xpZGVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLyogc2F0dXJhdGlvbiAvIHZhbHVlICovCi5jb2xvci1waWNrZXIgI3NhdHVyYXRpb25WYWx1ZUNvbnRhaW5lciB7CiAgICBib3JkZXI6ICRub3JtYWwtYm9yZGVyLXNpemUgc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBwYWRkaW5nOiAxcHg7CiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7Cn0KCi5jb2xvci1waWNrZXIgI3NhdHVyYXRpb25WYWx1ZUluZGljYXRvciB7CiAgICB3aWR0aDogMTBweDsKICAgIGhlaWdodDogMTBweDsKICAgIGJvcmRlcjogMnB4IHNvbGlkIHdoaXRlOwogICAgYm9yZGVyLW9wYWNpdHk6IC43OwogICAgYm9yZGVyLXJhZGl1czoxMHB4Owp9CgovKiBodWUgKi8KLmNvbG9yLXBpY2tlciAjaHVlQ29udGFpbmVyIHsKICAgIGJvcmRlcjogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHBhZGRpbmc6MXB4IDJweDsKICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsKfQoKLmNvbG9yLXBpY2tlciAjaHVlSW5kaWNhdG9yIHsKICAgIGJvcmRlci1yYWRpdXM6MnB4OwogICAgcG9pbnRlci1ldmVudHM6bm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6d2hpdGU7CiAgICBmaWx0ZXI6ZHJvcC1zaGFkb3coMiwgNDUsICM4ODg4ODgsIDAuMSwgNCwgMSwgMzAsIDM1LCBmYWxzZSk7Cn0KCi8qIHByZXZpZXcgKi8KLmNvbG9yLXBpY2tlciAjY29sb3JQcmV2aWV3Q29udGFpbmVyIHsKICAgIGJvcmRlcjogJG5vcm1hbC1ib3JkZXItc2l6ZSBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHBhZGRpbmc6IDJweDsKICAgIGJvcmRlci1yYWRpdXM6ICRub3JtYWwtYm9yZGVyLXJhZGl1czsKICAgIG9wYWNpdHk6IDE7CiAgICBmaWx0ZXI6IG5vbmU7Cn0KCi5jb2xvci1waWNrZXI6ZGlzYWJsZWQgI2NvbG9yUHJldmlld0NvbnRhaW5lciB7CiAgICBmaWx0ZXI6IGdyYXlzY2FsZTsKICAgIG9wYWNpdHk6IC4zOwp9CgouY29sb3ItcGlja2VyICNzYXR1cmF0aW9uVmFsdWVHcmFwaCB7CiAgICBvcGFjaXR5OiAxOwogICAgZmlsdGVyOiBub25lOwp9CgouY29sb3ItcGlja2VyOmRpc2FibGVkICNzYXR1cmF0aW9uVmFsdWVHcmFwaCB7CiAgICBmaWx0ZXI6IGdyYXlzY2FsZTsKICAgIG9wYWNpdHk6IC4zOwp9CgouY29sb3ItcGlja2VyICNodWVHcmFwaCB7CiAgICBvcGFjaXR5OiAxOwogICAgZmlsdGVyOiBub25lOwp9CgouY29sb3ItcGlja2VyOmRpc2FibGVkICNodWVHcmFwaCB7CiAgICBmaWx0ZXI6IGdyYXlzY2FsZTsKICAgIG9wYWNpdHk6IC4zOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIENPTE9SIFBJQ0tFUiBQT1BVUAoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouY29sb3ItcGlja2VyLXBvcHVwIHsKICAgIHBhZGRpbmctdG9wOiA0cHg7CiAgICBwYWRkaW5nLWJvdHRvbTogNHB4OwogICAgcGFkZGluZy1sZWZ0OiA0cHg7CiAgICBwYWRkaW5nLXJpZ2h0OiA2cHg7Cn0KCi5jb2xvci1waWNrZXItcG9wdXAgI3NlbGVjdGVkQ29sb3JQcmV2aWV3Q29udGFpbmVyIHsKICAgIHBhZGRpbmc6IDJweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgb3BhY2l0eTogMTsKICAgIGZpbHRlcjogbm9uZTsKfQoKLmNvbG9yLXBpY2tlci1wb3B1cDpkaXNhYmxlZCAjc2VsZWN0ZWRDb2xvclByZXZpZXdDb250YWluZXIgewogICAgZmlsdGVyOiBncmF5c2NhbGU7CiAgICBvcGFjaXR5OiAuMzsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDT0xPUiBQSUNLRVIgVkFSSUFOVCAtIE5PIFNMSURFUlMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmNvbG9yLXBpY2tlci5uby1zbGlkZXJzIC5zbGlkZXIgewogICAgaGlkZGVuOiB0cnVlOwp9CgouY29sb3ItcGlja2VyLm5vLXNsaWRlcnMgI2NvbnRyb2xzU3RhY2sgLmxhYmVsIHsKICAgIHdpZHRoOiAxMDAlOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIENPTE9SIFBJQ0tFUiBWQVJJQU5UIC0gTk8gVEVYVCBJTlBVVFMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmNvbG9yLXBpY2tlci5uby10ZXh0LWlucHV0cyAudGV4dGZpZWxkIHsKICAgIGhpZGRlbjogdHJ1ZTsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDT0xPUiBQSUNLRVIgVkFSSUFOVCAtIE5PIENPTlRST0xTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5jb2xvci1waWNrZXIubm8tY29udHJvbHMgLmNvbnRyb2xzLXByZXZpZXctY29udGFpbmVyIHsKICAgIGhpZGRlbjogdHJ1ZTsKfQo"},{ name : "haxeui-core/styles/default/last.css", data : "LmNvbXBvbmVudDphY3RpdmUgewogICAgX19ib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgouY29tcG9uZW50OmFjdGl2YXRhYmxlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCg"},{ name : "haxeui-core/styles/shared/down-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWPcsmULAwZgsswoQBOyzChgglDIQgwMDEzIHLg0AIkLCIq+gFfgAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/left-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMCQbKLDBGcxMDAwwVkMDAzMt5zsGGCAae6ZKwgOAwMDnA81AMIHAN2yC5bbbdIbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/right-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAL0lEQVQImWMMCAiYe+YKAwMDAwMDEwMDQ7KJDoID50M5ED6CM/fMFSY4C6oMbhoAEcwMOy/jUHEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMBwfMYEy4wCBhhggrOOz5iARRRZAkUULoEuCjGdCVMIRRTZDQD4NA07+SZ5fAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/up-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEAXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja5VZZdsUmDP1nFV0CkhCC5TCe0x10+b1g++VNSdMmfzXHFhZC0xWDG3/9Od0feMh8ckEtxRyjxxNyyFzQSf54yv6SD/t7PHZSeuS7/bMeBktA5fhN8ZS/+HRTcJCCnt4pSu0cqI8D+TTA6UnRaUiWR4xOPxXlU5HwMUCngnKE5WNOdh9CHQc95x9pSCs0fOrF1VP46T8YstcVdoR5CInHlyUcDsh62UnZnYJhWoKgRQJaEZErVCTkXZ78nVfuBZWr94RK5vegSDwkHBiPyYw3+pZP+j75bqf4zrK0s8eP/JivjD0meb1z9uTmHEd0JUSkNJ5BXSHuHgQrUi57WkQzvIq+7ZbRkkP1NkDeffMVrVEmBiyTAnUqNGls2qjBxcCDDZS5AZXFS2KcuYl3QGlhFGiySZYuCcg1wCvg8s0X2nbzNtcowXAnSDJBGR3w8++0TxXNuUqeaCUz884V/OJVBHBjIbe+kAIgNK860p3gqz0/C1cBgrrTnBBg8fVQUZXO2lp1JBtogaCCHmuNrJ8KkCLYVjiD2g/kI4lSJG/MRoQ8JuBToChh0XAFBKTKHV5yEIkAJ/GyjTlGW5aVDzb2LAChEsUATZYCrAI2NtSPhYQaKioaVDWqadKsJUoMUWOMFtfmV0wsmFo0s2TZSpIUkqaYLCWXciqZs2Bz1Byz5ZRzLgVGCzQXzC4QKKVylRqq1litpppraSifFpq22Kwl13Irnbt07BM9duup514GDZTSCENHHDbSyKNMlNqUGabOOG2mmWe5oUbugPWlfR81ulDjjdQStBtqmGp2qaC1nejCDIhxICBuCwEUNC/MfKIQ2C3oFmaourWTMbzUBU6nhRgQDINYJ92w+0DuATcXwo9w4ws5t6D7DeTcgu4T5F5xe4NaX6dN8+I2QmsZrqR6wfKLSkFJZ4g4g1c36Dql/oG6UGqPiEsNTqEingSE6piK1VGtDwQaP1Pl/Ldtfk2Xol/xyf3Il9FrM8DaQ8JJ6wsK2+KsnZbR3Lcfm8FJG6EAcJPw+NxTsI0RwzXH3Sbda/FleFgKxcDsJd7ckBeFF3WfDXzQ7G0tMLh/eP8+Uvd5ClgOb6TXMbrclOfkd6Vhdd9R98y4KCp6htH8xBG87jUacqKxjmIrum46yn5gqW2J74X2lGQ6/EMCcWwADniOVRnc1vjA2hxsEIpVFL4IZtPDcaxrN60sL/+tYy/UvQxsX6yjoAtugHyYbn4Pl3U5LQoI0npx8t7+3PpVq11KphAZ25H/NI6vqPtSYLslI6+7U1/XvA93kLcclJH3EPECtXnk87/58UHdTxX8rxXhNtYBgfsbkBUChqlTc0oAAAGDaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1OlohUHM4g4ZKhOLYiKOEoVi2ChtBVadTC59AuaGJIUF0fBteDgx2LVwcVZVwdXQRD8AHF0clJ0kRL/lxRaxHhw3I939x537wChUWWa1TUOaLptphNxKZdfkUKvENCHMEREZWYZycxCFr7j6x4Bvt7FeJb/uT9Hv1qwGBCQiGeZYdrE68TTm7bBeZ9YZGVZJT4njpp0QeJHrisev3EuuSzwTNHMpueIRWKp1MFKB7OyqRFPEUdUTad8IeexynmLs1atsdY9+QvDBX05w3WaI0hgEUmkIEFBDRVUYSNGq06KhTTtx338w64/RS6FXBUwcsxjAxpk1w/+B7+7tYqTE15SOA50vzjOxygQ2gWadcf5Pnac5gkQfAau9LZ/owHMfJJeb2uRI2BgG7i4bmvKHnC5Aww9GbIpu1KQplAsAu9n9E15YPAW6F31emvt4/QByFJXSzfAwSEwVqLsNZ9393T29u+ZVn8/bV1ypeJpoNQAAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjIyYzQ2ODgwLTQzNDktNDFjMS05NWJjLWZkZGNmYTk0OWIxMyIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDowNmYyYWY4Ni1jNjA4LTRlZTItOTUwMy1lM2QwOWY3MWRhNjgiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxMDAxNDQzZC1kM2RkLTQ2YmQtYjYzMi0xMWE5ODk4MTYyOWYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDYxMjI3NzAwMjQxNyIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjQwN2YyZDllLWYyYzUtNDY2My04YzEyLTRkNjcyMGZhZDM0MSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0xMVQyMTo0NDozNyIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz7T4nLNAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gILFCwkvxUCjQAAACNJREFUCNdjYEACoV1H/iPzGbFJrC6zYYRLouuAKWDEJgEDACRXDUjpoGrXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/up-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMAg9Pj2O1lVCJsJLgQnoaJwDpzN+P//fwYMAADCtw5xBtAKnQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/cards.css", data : "LmNhcmQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAsIDQ1LCAjMDAwMDAwLCAwLjEsIDUsIDEsIDEsIDMsIGZhbHNlKTsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIHBhZGRpbmc6IDE1cHg7Cn0KCi5jYXJkLXRpdGxlLWxhYmVsIHsKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7CiAgICBmb250LWJvbGQ6IHRydWU7Cn0KCi5jYXJkLXRpdGxlLWNvbnRhaW5lciB7CiAgICBwYWRkaW5nLWJvdHRvbTogNXB4OwogICAgd2lkdGg6IDEwMCU7Cn0KCi5jYXJkLXRpdGxlLWxpbmUgewogICAgaGVpZ2h0OiAxcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9Cg"},{ name : "haxeui-core/styles/default/progressbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBQUk9HUkVTUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAa2V5ZnJhbWVzIGluZGV0ZXJtaW5hdGUgewogICAgMCUgewogICAgICAgIHN0YXJ0OiAwOwogICAgICAgIGVuZDogMjU7CiAgICB9CiAgICA1MCUgewogICAgICAgIHN0YXJ0OiA3NTsKICAgICAgICBlbmQ6IDEwMDsKICAgIH0KICAgIDEwMCUgewogICAgICAgIHN0YXJ0OiAwOwogICAgICAgIGVuZDogMjU7CiAgICB9Cn0KCi5wcm9ncmVzczppbmRldGVybWluYXRlIHsKICAgIGFuaW1hdGlvbjogaW5kZXRlcm1pbmF0ZSAxcyBlYXNlIDBzIGluZmluaXRlOwp9CgoucHJvZ3Jlc3MtdmFsdWUgewogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMXB4Owp9CgouaG9yaXpvbnRhbC1wcm9ncmVzcyB7CiAgICBiYWNrZ3JvdW5kOiAkbm9ybWFsLWJhY2tncm91bmQtY29sb3ItZW5kICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1zdGFydCB2ZXJ0aWNhbDsKICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4OwogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsKfQoKLmhvcml6b250YWwtcHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsKICAgIGJhY2tncm91bmQ6ICRhY2NlbnQtZ3JhZGllbnQtc3RhcnQgJGFjY2VudC1ncmFkaWVudC1lbmQgdmVydGljYWw7CiAgICBoZWlnaHQ6IDEwMCU7Cn0KCi5ob3Jpem9udGFsLXByb2dyZXNzOmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKfQoKLmhvcml6b250YWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgLnByb2dyZXNzLXZhbHVlIHsKICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsKfQoKLnZlcnRpY2FsLXByb2dyZXNzIHsKICAgIGJhY2tncm91bmQ6ICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1lbmQgJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0IGhvcml6b250YWw7CiAgICBpbml0aWFsLXdpZHRoOiA4cHg7CiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7Cn0KCi52ZXJ0aWNhbC1wcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGFjY2VudC1ncmFkaWVudC1zdGFydCAkYWNjZW50LWdyYWRpZW50LWVuZCBob3Jpem9udGFsOwogICAgd2lkdGg6IDEwMCU7Cn0KCi52ZXJ0aWNhbC1wcm9ncmVzczpkaXNhYmxlZCAucHJvZ3Jlc3MtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3ItZW5kIGhvcml6b250YWw7Cn0KCi52ZXJ0aWNhbC1wcm9ncmVzczpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0K"},{ name : "haxeui-core/styles/shared/up-square-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADc3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZddcuwoDIXfWcUsAUmAxHIwP1Wzg7v8OWDspDs9VZPkTtV9iEkDFrI46AN3x/Vffw/3Fy72nFyIaimn5HGFHDIXdMyfV1k1+bDqfeOvzoPd3QMMk6CV89bS9r/s5B8iUUEvvgtkdQ8cjwM57Pj2FGhPJFMRo9N2oLwDCZ8DtAOUc1k+ZdP3Szj62bZrJXZ+3KzGlRM9m+f7oMhei5hHmLuQeNQifAqQ+WEnBQOMmiXDkeAwLRn1uQo6E/IqT/eVoWhMqeGl0wOVu0ev7e6ZVuDtIk9JTnf70u4ovqayUv9u5mC7x4/2fJyhnH/K/kr+aDbWmrGKEhJSnfai7qwtKKMdmGJObQ7xEugk7CFDO0tGMezqiq3QfPUHSqVMDFyDAjUqNKivtlKFxMDdsaLDXFmW0UQ5c5XJL8xCgxUMmxi41oU9CN9aaE2bfXVrNsPMjeDKhGBzO3y6uM8+MMY8CkTe7lxBF/NMNmRMcrOGG4jQ2EmNK8FXeb4mVwHBOLM8j0hGYo8zxBHp7U0gC7TAMaI9zyBp2wGQIkwdIYYEBECNJFIir8xKhEQaABVIZwl8gADFyA0iOYgksDGeU+MRpeXKkWF2sONlBhJRkijY4JQBVggR+0eDYQ+VKDHEGFPUaDHHkiSFFFNKmuZLsahocBo1qapp1mJiwaIlUzPLVjJnwUsz5pQ1W865FMxZELng6QKHUg4+5AhHdEc69LAjH6Vi+9RQY01Vq9VcS+MmDe+Plpo2a7mVTh1bqYcee+raredeBrbaEDfCiCMNHTbyKDe1jfVD+QQ12tR4kZqOelODVfUKQfN1EiczAGMXCMR1IsCG5snMG4XAk9xk5jPjVESGyDiZNZrEQDB04jjoYuf4JDrJfYub0/DAjb9Kzk10nyT3kdsram1+DdVF7DyFM6lecPow3q2wlfll96F1/zbw2fYn0E+g/y/QKHRu4lE8jowva8BL12Xlo2sdqb5/zP0mQY+BICRtIQQh+ybg52DEH/zi6lUcu15Ox9wFX97ouin5kv6d1p1rt7TXbmHQVvim5HUrM2f5ypmzp6R9pZ0pcW85kSsn8l+XRGekxJDmyqXNhn5JylbiviTlhTR3a/uWtB3od2zJn0A/gf7kQPg1Mv+t/AfTYMCLM/OUnAAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNQFIVPU6UiFUE7iChkqJ0siIo4ShWLYKG0FVp1MHnpHzRpSFJcHAXXgoM/i1UHF2ddHVwFQfAHxNHJSdFFSrwvKbSI8cHlfZz3zuG++wChUWGq2TUBqJplpOIxMZtbFQOvCGKUagARiZl6Ir2Ygef6uoeP73dRnuV978/Vp+RNBvhE4jmmGxbxBvHMpqVz3icOsZKkEJ8TjxvUIPEj12WX3zgXHRZ4ZsjIpOaJQ8RisYPlDmYlQyWeJg4rqkb5QtZlhfMWZ7VSY60++QuDeW0lzXWqEcSxhASSECGjhjIqsBClXSPFRIrOYx7+YcefJJdMrjIYORZQhQrJ8YP/we/ZmoWpSTcpGAO6X2z7YwwI7ALNum1/H9t28wTwPwNXWttfbQCzn6TX21r4COjfBi6u25q8B1zuAENPumRIjuSnEgoF4P2MvikHDN4CvWvu3FrnOH0AMjSr5Rvg4BCIFCl73ePdPZ1z+/dOa34/n9lyuQWiUawAAA80aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjEwZTExZGUyLTA1MjUtNDAzYi05NmFiLWM4NjFkNmYxOWEwYSIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5MGEwOTc1MC1iZDZlLTQxMTYtODExZS01MDdmZGQ5MjczNmYiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoyYzQ1M2QzNC02YjkyLTQ0MmMtOWFjYi0xODI1ZjI3NDQ2MWEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY3MjMxNjM0MjAyMzA4OCIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjMyIgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCIKICAgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyMjoxMjoyOVQxMzoxOTowMCswMTowMCIKICAgeG1wOk1vZGlmeURhdGU9IjIwMjI6MTI6MjlUMTM6MTk6MDArMDE6MDAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZGNkOTA2MjMtOTYzMi00OGY2LWI3NjYtMzk3NTE1NTY5Nzg2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTA3LTI2VDEwOjM5OjM4Ii8+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmE4NDgwNTk0LWViYWQtNGE1OC04MmYwLTEyNDJiMzcyODdmZCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0xMi0yOVQxMzoxOTowMiIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz5nBDHtAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5gwdDBMC7bHppgAAAIRJREFUOMtjYBgFtAWxE46Xx044Xo5PDSMuiei+Y1EMjAxLGBgYGBj+M8QsLbJaRrQBMf3HPf8z/N/AwMDABhX6xcjAGLCk0HI7QQOi+o4ZMzIyHGRgYOBGk/r6/z+D/bIiq7M4DYjqO6bMyMhwlIGBQRyHz17+/89gvazI6u5oChlMAABStSJbN0BoiAAAAABJRU5ErkJggg"},{ name : "haxeui-core/locale/de/formats.properties", data : "Zm9ybWF0cy5kYXRlLnNob3J0PSVkLyVtLyVZCmZvcm1hdHMuZGVjaW1hbC5zZXBlcmF0b3I9LAo"},{ name : "haxeui-core/styles/shared/option-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAMAAAC67D+PAAAAQlBMVEVYWGzW/9EAAACYtdLCqYPP6PTU////9KxYWFhUVlhXVVJ4rthXkMHs1Kxsj6lSYXvElmdYWGeefViUXFhfUVNWUk58LX/QAAAACHRSTlMnCADr69QWFksN2hQAAAA8SURBVAjXY2BiZxDi5OBjYGNiYGTh4OTg4BJkZmTgFeEAA35WBgFOCFOUm0EYyuTiQWYiFCBrQxiGZAUAvXcDb/w8amgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/down-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEK3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VdZkuQoDP3nFHMEJCEQx8EsEX2DOf482U53ZVZld23z0RNjwoCFEEJPCDnMv3+s8BcepppC0mK55hzxpJoqN3QsHk/ba4ppr4+nnC3d08M1wCAJWjk+LZ/8NzpdAo6moacvBFk/B7b7gZpO+fYg6FxIXCNGZ5yC6ilI+BigU0A7thVztfJyC9s82nP+YQbzraHablQ9mR++U4H1hmIdYZ5CElGzpEMB8ZeDtL3T9mHoLRV9kbLXN5vAIG/ZKb7QKrxC5dajJ/QHUCQf9ADCvTHz1b5JJ33b+GE38YuVpV8r39HTuhzlzsj+rjUsrDWP3bWUYdJ8buqyjnfAuEGU7NMySsGr6Je9VBQL8N4OyEfscUPpVIlh90WJBjVaNPe2U4eKiScXtMydZaeZFK7cJQaglbzQ4gLEhhgw7IBXQOVLF9rXrftynQwLDwInE4TRAT9/T3kqaC13eaJol62gF/uhgBqOnNfgAiC0bn6ku4Fv5fGh3VMTuNzMhg22uB0iNqXTt9yPZAdawKhoj7NGZZwCYCKsrVCGBAjETKKUKRbmQgQ7GvBpEGQ4NLwBAlLlAS05iWSAY+xrY06hnZeVDzJiFoBQyThI5kcKWHlgg/+UZPChpqJJVbMWNa3asuSUNedcsge/VqSkoiWXUqzU0kwsmVq2YhasWqtcBcFRa66lWq21NSzaILlhdgNDaxtvsqVNt7yVzba6tQ736alrz710C732NnjIQJwYeZRho442acKVZpo68yzTZp1twdWWrLR05VWWrbrahRqFA9ZX5f2o0Q013pFyxnKhhqml3ESQhxN1zIAYJwLixRGAQ7NjFo1S4uDQOWaxMk6FMrRUB2eQIwYE0yTWRRd2P5G7wy2k9CXc+IZccOi+A7ng0D1B7jVub6A2/LbpUcKOkB9DN2oUHL+slJR0pYw72LtJ/Zb6TRvey/i/oD9LUKpG02+80hRXkcBRU48redIwkPUclPCa9DnKHycoNrb2rja8l/HjgqqUuLQdNbK/Nyk46ghP/5pGiVN8uvY95QgxMOM+31l0bmm1zAHjZfDXVQqvBhDQXbbQ1pAl86MKj+1NpcDfpFKIX1UpUleeMwg0q3488eH9PB8pi4bfJzWWRMmeCQzPV4J/50PsEqSMuPpwRW+22qC95l1RHb2MXP2nZnwuACGkTPupaniq669URc42kpVGzeZp3sDV4mHP+PFWkOcZ9YFcIjTkH7WSmzmV5pbQ+Ehp28KljTTocXs/uSTQNpfy68nqvyUVSfm+Xvut4uEzO+K2xvT8Qtc2QFjNt4aYcLH07CNIbwb2Uj9kvvBZO9+0gmP7/2X1MOJu5x4Nty1wqj56Nn8RNQ4FCUlZUvnleQvfE9b+c4JkIfUD6OEf4i71AujO6WgAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZWY5MjY4YzktNTgwYy00MjQ0LTgyODktYTAwYzk2N2E0YmFjIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjRiZDVmMGQ1LWNkMWUtNDViYi1iNmQ5LWE4YzVlNDkyM2U3MSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmVhMTQ5N2M5LTAxMzktNDk4ZS1hZDYwLTk5NTI1NzhlOWIxYyIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjUxMTA2NTgwIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6OWVhYTkyOTYtOTI0NC00ZTU4LThkYmUtZWNhODMxMTJkZDE2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjMxIi8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PjAYwf0AAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJR9yXG2RAAAALUlEQVQI12NgIBcwhnYd+Y9TkoGBgQGbgtVlNoyMMA6ygtVlNowYxuCzAgMAAKYfDUgzMsMOAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAADpElEQVRYhe2X32scVRTHP/fOZtMFs7tJC4np1mS7RQjC2oJg7ZMKPvShBBR9MopiqYbaP0CwL0VQ30SyGtsnow9SUGMViw8WBGlebBWjlJgf/ZFNQo2Jm0SSzM6914fJbmayO7OTRJ/0+zRz5n7P97tnzpx7F/7rEDsh3T+4tK+sZKeQIqM0xlJmel3omeLp5B//moHcQOmQEbLPQC/wYMCyH4VhWMbU0Pip9MQ/YiB7fqUdx5zFcBJoiui3jGFQSs5NvNJyd8cGut5fekRq8SnQEVF4K+bRPDV1uuW7oAUy6EH2veVnpBZXdiEOsA/JN9nC8tNBC+pWIDewdEwL8S3QvAtxL2w0T9SrRI2B7PmVdmzzE4L2sIwHkpIDLQJbGWZWYHZFY8JNzFkO+fEzLb97g7GaZY45GybelZK8dqyJnr2WL357SfPWSJmf76ogaoeK8Tpwxhv0VSA3UDqkhfyVgG5PxgUfnthDW6J+7646hucvrTH3V2AtbIXqud2fnqwEfE2okc8FiQMcz1lV8TtLmv7L67z41RpjCxqARExwPFdbVA/iUlh93oD/KxD0hrFzrZtlv3jDYXReMb6o+XzMqcYzycAPy5Uwfo2qXXe8kg8jfzHmcLXoio3O62q81fNKFlcbtCIczlwotU2/lFrwGbAdmREinDw6r2DeH+vZa/HsA24apeHrSacO0wfRZFsZYAE8r8AIcW8j5lZ0pyVvPx4nEXMrULhmM7GoG7DAGDor11UDwpiGtfMibsGbj8ZJNbvig9fLXLzR8NdXVM3mZcWAxex2DBzdb9F5j0v/ctzh41/KkbnSYabGgO3o6e0Y6E5tdvul3wKHTz0YO6GKlRvfRMkWlq8Dh6NkOdgq6Uq69JGiZtWJ/AZ/mOpveahy45sawjBsRDQDk4sapSXLttmOOAiGvbe+qSFjagiwo+R5Id/E0Ik9fNKbqNkXQmBrR30UaGD8VHoCwwdRMj3c6VKbY3CkI3z6VSCgcOvV9FSgAQApOQfMNUp2eVKhDCyuGb6/E6kJZ2OWeaOOqVpsHMWu0OBA0hwDR7sTsAHWDPqxm/2pka0P6tbu1svJq0AfsB6Wdd2JJo6hr544NDiUdhdKRwXyM3Z+Lpw16CeDxCHkUApwsz81YjnkgXeJ+HVswBaCd5oskw8Th238Mbmv8OdBKay+jf38SN1kgmvaMGyUGtra7bs24EXmQqktvmrtV5bIAFjKTNsJVazs8f9jO/gbuERJ498j87cAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/en/std-strings.properties", data : "c2F2ZT1TYXZlCnllcz1ZZXMKbm89Tm8KY2xvc2U9Q2xvc2UKb2s9T0sKY2FuY2VsPUNhbmNlbAphcHBseT1BcHBseQpzZWFyY2g9U2VhcmNoCgpyZWQ9UmVkCmdyZWVuPUdyZWVuCmJsdWU9Qmx1ZQpodWU9SHVlCnNhdHVyYXRpb249U2F0dXJhdGlvbgpicmlnaHRuZXNzPUJyaWdodG5lc3MKCnN1bmRheT1TdW5kYXkKbW9uZGF5PU1vbmRheQp0dWVzZGF5PVR1ZXNkYXkKd2VkbmVzZGF5PVdlZG5lc2RheQp0aHVyc2RheT1UaHVyc2RheQpmcmlkYXk9RnJpZGF5CnNhdHVyZGF5PVNhdHVyZGF5CgpzdW49U3VuCm1vbj1Nb24KdHVlcz1UdWVzCndlZD1XZWQKdGh1cj1UaHVyCmZyaT1GcmkKc2F0PVNhdAoKamFudWFyeT1KYW51YXJ5CmZlYnVhcnk9RmVidWFyeQptYXJjaD1NYXJjaAphcHJpbD1BcHJpbAptYXk9TWF5Cmp1bmU9SnVuZQpqdWx5PUp1bHkKYXVndXN0PUF1Z3VzdApzZXB0ZW1iZXI9U2VwdGVtYmVyCm9jdG9iZXI9T2N0b2Jlcgpub3ZlbWJlcj1Ob3ZlbWJlcgpkZWNlbWJlcj1EZWNlbWJlcgoKamFuPUphbgpmZWI9RmViCm1hcj1NYXIKYXByPUFwcgptYXk9TWF5Cmp1bj1KdW4KanVsPUp1bAphdWc9QXVnCnNlcD1TZXAKb2N0PU9jdApub3Y9Tm92CmRlYz1EZWM"},{ name : "haxeui-core/styles/shared/option-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCgw0CA+AtQAAAINJREFUGNN9zDEKwlAQRdE781egfdYQV6FgM0WWYpNNSPYRm2ktsgfb9LYSsE7+WAQE4ccDr7rwBMDdqyB1CEcAgkElt2Y2irtXoelBsOfXJLHUGqSuEAF2SLrq97Yg4KT8F0owbHe5q0pugalQX3nWi5rZKLHUAjfgvU76PKdD05yfH881KnTRsBd3AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/window-collapse-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVorDnbwa8hQnSyIijhKFYtgobQVWnUwufQLmjQkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ttIjx4Lgf7+497t4BQq3EVLNjAlA1y0hEI2I6syr6XtGDYXTDj0GJmXosuZiC6/i6h4evd2Ge5X7uz9GrZE0GeETiOaYbFvEG8cympXPeJw6ygqQQnxOPG3RB4keuyw1+45x3WOCZQSOVmCcOEov5NpbbmBUMlXiaOKSoGuUL6QYrnLc4q6UKa96TvzCQ1VaSXKc5giiWEEMcImRUUEQJFsK0aqSYSNB+xMU/5Pjj5JLJVQQjxwLKUCE5fvA/+N2tmZuabCQFIkDni21/jAK+XaBete3vY9uunwDeZ+BKa/nLNWD2k/RqSwsdAX3bwMV1S5P3gMsdYOBJlwzJkbw0hVwOeD+jb8oA/beAf63RW3Mfpw9AirpavgEODoGxPGWvu7y7q723f880+/sBXHpynoD2GeAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmCxsJGShdZYndAAAA5klEQVQoz8WRoW7CUBiFv/8WMYFZshCyOQTNzBQCElwNFVOTkyNLtgrUkrlpxExDC46XKL1kpgvZkj0Cl3oETzDFPw0hOLIjzzmfOQf+RWnmGmnmGocys28k2eoaTxZ4fKd2eXMUmMyWLfFYAFcgdTCfE1t2DgIj64KtMQVwoRArxMD5Fv0YWRfsAEle3hokA6qIDqOwOYjC5gCVV6BqkHw8X90ByDgv71V0ClRE9OWp57/vDDB3ESoxoKLyaBQNAIPwsF8GeO75CUIfQNGuvBVFpfZ72Y5C/+vY1Il13c3Z+uf0p/4Bt0VKdw++nJwAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/switches.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTV0lUQ0ggKERFRkFVTFQpCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5zd2l0Y2ggewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsKfQoKLnN3aXRjaC1sYWJlbCB7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9Cgouc3dpdGNoLWJ1dHRvbi1zdWIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgcGFkZGluZzogMHB4OwogICAgaW5pdGlhbC13aWR0aDogNDBweDsKICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4Owp9Cgouc3dpdGNoLWJ1dHRvbi1zdWI6ZGlzYWJsZWQgewogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwp9Cgouc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbiB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogNTAlOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgZmlsdGVyOiBub25lOwp9Cgouc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbjpkaXNhYmxlZCB7CiAgICBiYWNrZ3JvdW5kOiAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1zdGFydCAkZGlzYWJsZWQtYmFja2dyb3VuZC1jb2xvci1lbmQgdmVydGljYWw7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0KCi5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7CiAgICBoZWlnaHQ6IDA7CiAgICB3aWR0aDogMDsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBib3JkZXI6IG5vbmU7CiAgICBmaWx0ZXI6IG5vbmU7Cn0KCkBrZXlmcmFtZXMgc3dpdGNoQW5pbWF0ZVNlbGVjdGVkIHsKICAgIDAlIHsKICAgICAgICBwb3M6IDA7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIH0KICAgIDEwMCUgewogICAgICAgIHBvczogMTAwOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsKICAgIH0KfQoKLnN3aXRjaC1idXR0b24tc3ViOnNlbGVjdGVkIHsKICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkIDAuMnMgZWFzZSAwcyAxOwp9Cgouc3dpdGNoLWJ1dHRvbi1zdWI6dW5zZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZCAwLjJzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTV0lUQ0ggKENJUkNMRSkKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIHsKICAgIGJvcmRlcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBwYWRkaW5nOiAwcHg7CiAgICBpbml0aWFsLWhlaWdodDogMjBweDsKICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7Cn0KCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7CiAgICBoZWlnaHQ6IDE0cHg7CiAgICB3aWR0aDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBib3JkZXItcmFkaXVzOiAxMHB4OwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKfQoKLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhOmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsgICAgCn0KCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiAuYnV0dG9uIHsKICAgIHdpZHRoOiAyMHB4OwogICAgaGVpZ2h0OiAyMHB4OwogICAgYm9yZGVyLXJhZGl1czogNTBweDsKfQoKQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRDaXJjbGUgewogICAgMCUgewogICAgICAgIHBvczogMDsKICAgIH0KICAgIDEwMCUgewogICAgICAgIHBvczogMTAwOwogICAgfQp9CgouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6c2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRDaXJjbGUgMC4ycyBlYXNlIDBzIDE7Cn0KIAouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6dW5zZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZENpcmNsZSAwLjJzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsKfQoKCkBrZXlmcmFtZXMgc3dpdGNoQW5pbWF0ZUV4dHJhU2VsZWN0ZWRDaXJjbGUgewogICAgMCUgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7CiAgICB9CiAgICAxMDAlIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7CiAgICB9Cn0KCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYTpzZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkQ2lyY2xlIDAuMnMgZWFzZSAwcyAxOwp9CgouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmE6dW5zZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkQ2lyY2xlIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFNXSVRDSCAoUElMTCkKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiB7CiAgICBib3JkZXItcmFkaXVzOiAyMHB4OwogICAgaW5pdGlhbC13aWR0aDogNDBweDsKICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4OwogICAgcGFkZGluZzogMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKfQoKLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YjpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7IAp9CgoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b24gewogICAgYm9yZGVyLXJhZGl1czogNTBweDsKICAgIHdpZHRoOiAyMHB4OwogICAgaGVpZ2h0OiAyMHB4OwogICAgZmlsdGVyOiBub25lOwp9CgoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhIHsKICAgIGhlaWdodDogMDsKICAgIHdpZHRoOiAwOwogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKfQoKQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIHsKICAgIDAlIHsKICAgICAgICBwb3M6IDA7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIH0KICAgIDEwMCUgewogICAgICAgIHBvczogMTAwOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsKICAgIH0KfQoKLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YjpzZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZFBpbGwgMC4ycyBlYXNlIDBzIDE7Cn0KCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6dW5zZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZFBpbGwgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7Cn0K"},{ name : "haxeui-core/styles/shared/right-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEJXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkiQnDPznFD4CkhASx+FRRPgGPr4Tqrp3ph+zs+v9cBENtIpKRKYEhOOfv2f4Cw8Zx5DUPJecI55UUuGKjsfzqbummHZ9Pulq6bM9RLteMEyCVs6/nq/xNzvdAc6moqcfgLxfL9rnF+Wamf0B6JpIlkeMzriAygUkfL6gC6Cey4q5uH1cQjvO9vr+pMHX0lC1m1WvwQ//k4G9oZhHmA8hiahZ0umArB8HqbuzasdAkoK+iKNWscsTEPKKp/jBq/CoSuHXqtx7D6JIPu0Bhs9k5nv70k76mvywKf4ws/T7zJ/spjfGPpO8fnMOD3Me5+pqyqA0X4u6LWX3MLCBctmfZRTDT9G3XQqKB0Rvh+Qj9thQOhViyDIp0aBKk47ddupwMfHBSAdm7izb5mJcuEsM0CmtQpMNig3oxdIhr8DKd19oz1v2dJ0cEw/CSCaA0Sk//5nyFmjOFfJE0U+eEBbwi1dwwI2l3KoxCoLQvMWRboJv5fFZugoU1E2zY4E1thOiKV2xteJIttASl8Dp2ibIxgUAijC3whkSKBAziVKmaMxGBB4d+lQAOZKGGyQgVR7wkpNIhjjIGMyNb4z2WFY+zdizIIRKFoM0SClolbCxIX4sOWKoqmhS1aymrkVrlpyy5pwtr82vmlgytWxmbsWqiydXz27uwYvXwkWwOWrJxYqXUmrFpBXIFV9XDKi1cZOWmrbcrHkrrXaET09de+7WPfTS6+AhA/vEyMOGjzLqQQdC6UiHHvmww49y1IlQmzLT1JmnTZ9l1rtqFHba0VP5vmp0U423Umug3VXDp2Y3CFrbiS7NoBgnguK2FEBA89IsOqXEYUm3NEPEISuU4aUucQYtxaBgOoh10l27H8p90i2k9J9045tyYUn3J5QLS7o3yj3r9kK1sU6bHiVshVYaLlKjIP20slduh/uMfXUdY+FDrnlIaQ3UYFfcg4ojd5KuIyzcOj9pQfjueHwDHZ6xfw86ADtB+FSajaOMhB1eLM826NEg1gbUIJD1Ym3h+2t5anGQQp4LO7wi7neww2dwHEdWdZ/2morT8coyMvW14LxhcJAu9KDx7Oi+Z60OXy76N1pIl6ohH1qoT9i/Bx0esBGaZdHSQZrlUgW/HBc5rSUomXDjuf/DuHny+/2A/Gn7PwBah39ce8PiBEBpdBvZd10243wg61vKuy6L88ui/EU0hVche2tLHYORJSMf65I73gTuhg5fZ0HBNRLue5+67p5zdNnuoy7bWZkWp+JuFThiOeMHfn9CK2cnPUXZvV3JFrCRpvuM77C+gR02+7gI27oCG1zroy/nkcw0zz2jrJfpjpNfuha+zAgC27W0hG0blH8JFd4s+5ehw1sG37Q2cXKs3PoX/YUPPAIScFcAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZjA2MTJiMDQtMmJkZC00N2E3LTgyOGQtYzkzNWMwOTU5OTZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjVhODNkZjU5LTk2NGUtNDI5Zi05ZmEyLTg5ZDNmYWY4ZTc1ZiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjExMjg5YWQzLTA2ZTEtNGU4Ni1hMTkyLTQ0ZWVhNjRkZDkzNiIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0MzQ1NTM4NjkyMjYyIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YTI2YzU1ZDUtMDYxMi00NDZhLTgzZGEtYjZiNjA5NGI5ZjY5IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTA4VDE5OjM4OjU4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj86b/sAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAggSJjqpzQQ4AAAALklEQVQI12MI7TrynwEJMDEwMDAgCzLBGDBBRqxaYGB1mQ0jEzKHAd1ABgYGBgAWuA/w/oe0hAAAAABJRU5ErkJggg"},{ name : "haxeui-core/locale/de/expression-replacements.properties", data : "emVybz1bMF09MApub25lPVswXT0wCm9uZT1bMF09MQptYW55PVswXT4xCg"},{ name : "haxeui-core/styles/native/main.css", data : "KiB7CiAgICBuYXRpdmU6IHRydWU7Cn0KCi5oc2xpZGVyOm5hdGl2ZSwgLnZzbGlkZXI6bmF0aXZlLCAuaHByb2dyZXNzOm5hdGl2ZSwgLnZwcm9ncmVzczpuYXRpdmUgewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKfQoKLmJ1dHRvbjpuYXRpdmUsIC5kcm9wZG93bjpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKfQoKLnRleHRmaWVsZDpuYXRpdmUsIC50ZXh0YXJlYTpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKfQoKLmRpYWxvZzpuYXRpdmUgewogICAgcGFkZGluZy10b3A6IDBweDsKfQ"},{ name : "haxeui-core/styles/shared/warning-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABCUlEQVQ4jc2RPUoDURSFvzvzfgKKoCmSKmijSLSzF7ERrd1CIOIeBBcgLiCLCGg/jIq1rW5ABUFQUsSR92x8zkxw4tiIp3vvnnvOuRz41/BpY8knjcVpHKlcTlCIvQEUs+N12SD7jhdVSsf2EKGLsMLIHvwqgb9mgczcgTQ/ac84vSxbr0/1EmT2GKQ5GHYYDDuAnyd6O6p1gk/NKtAD0MphtAujvk/M2s8JRE4ADWB0SSAmktOpAv7C7uHZCW+jHToXANj2qd0t+X0th9qEbvh7GSkA5mbeCy7cFmvNE4TaCji7bHF+1Zo4sVxrniC1D8AEuxKPsjluA6g8muyDa9da9/F9TaM/wAcSz0RlELj/AwAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/haxeui_small.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAMAAABg3Am1AAAC91BMVEUAAABgbY0+U25ga4QwSGe/wMy2ucI8SWC1t8OGj6Sana+zuMd3gppicY1ibYm0ucUzZZvH0ODExdZ8hZw/TGQ+TGPFxth/hp+vtMJNXHLExNI/TmVlhq5hbYi6vc2pr75veZI0ZpyrvdTK0+Q7WoC0t8d/iZ/Gx9ezuMaorb3Gx9dmc49OWm+DiaOpw+CVqMJUe6uwtcGprr5gbIdteZRaZn11gJpgbIhiborM1+g/XoM4WH2zusw8S2RhaYFCUGVuepdyfJVLWG9UYHjDxdZhbYg8SmGeprfKytmSmKw6bqZnjryTqseXq8RQd6mmrb58iaF4g5m2uMd4gZiorrx3gZeKkqZmco5smMg0Y5fP3e5ol8rS3+4+drUzZZs0ZJhPe67AzN7J0+RTeKc5X4o3WoNCYog6WoKuv9ZihK7M1ea+ydyht9JBX4U2V35ieZzAxtd7h59ldZPIzt9je6BBVHBYZoDBwtNMWHCco7Rea4KYqsRWcJZxeI6/wtJSXXTEw9O6vc08RVicpLU5SV7Ly904Rl19h55KVm43RFpLf7lFerOZuNqcudpIeK48bqWftdGftdGZsc6OqsuswdlLd62qv9l2lrxjh7NlibRJbpumudBcga6svtWnutJdg7GKoL6svdZylL1uj7ZSeahJbJREZZCGlKyOm7OZorNgboyxtcNwfJmKkqWhprSHjaB5fJBmc4yor7ylp7Vomc08drVRiMSUttt+p9OStdt9p9M9d7bQ3+9nmMypxOGBqdQ6dbRtnc9gk8qsxuN6pdJ1odFwntBtnM1pms1SicVQh8RHfrs8draqxeKhvuCaut5yoNBilctajsZYjMSXuNxOhcBBerg0aJ8zZ52nwuGdvN6Vt9yOstlklcpckMZNhcM5b6o3a6TR4PDL2+7K2u23zuejwOBekchSisZZjcRVicI6c7EyZZvT4fHF2OzC1eu+0umkweGJr9dfkspik8hWi8VMg75Lgr1Bdq85cq+yyuWEq9VFe7VNUsNiAAAAtHRSTlMABQIDBAYDEgUFAhYWChcK/ac7OzYuFxQTDQwJpjsgDw/9p6aXOjQyMisTExIL+KenPDc0MiciGxXQlpVyXUdCPDk1MSIiHhwVD/7Tx6SkcG1dR0dGLCsq+/r5+Pb29vDMxL28vLerqKOhoKCXj454dnV1cXBpaGdiXldVTUlIQkE8OzYzKiYgHhz9/fz48fHW087OzMzKysjCwLu7t6Cgn5eXlJSFhXl4bm1jY11FRUM4IQf95cbSAAAEV0lEQVRIx32WZZwSQRjGF1ZQMMAEG+zE7u7u7u7u7u7u7m4WdlkQFEwEFOG48+70zu5u/eAE7C6s+nzgA7/3P888O/PODAEkTwclk4EfuZKIllQpV2BJJCRJoHKFKr82PZY2vyqaIRWlm2k0GZBK6jJKpOA/Rf4mxReULwdUuHCx4vm0KlkEUYJyzZLORbJC1atXsUuVnICQq5rMGLm7ANLQoTXLFeMQWF65yNmjrVqVgWq198DMKhkBkL/4vkCiz3vRcxHIsPFEe4woLsDyDm3XGsDfHqfXnvzFdKhSTpJIpy0/ImA2M0zg3tOEBI/n4q6aHYud1zbTZahccdaRlhedzqe+pNv+Bw9umoKjGpRKQ8jSF878lDEjJQZ83gSnYXOb0ws6d6o3a9w6g9Nntz37cvOmCejGiur1w8ATBGAxifc+JOw4dqrduJbepKs3wMARPW9evX5aAOSYl/lREg9Axuxb1bJF1zuCauSgL5QNAVkyW++ZY8RcvWOKlVsdAQpanUxM/RWj8VNM/Y3veh54z8SMbwSK9WiurwGBdE0B8DYQMz7S5aj6YKq+xkIIlCg63PpIGIK5bTOGCWHobyH96OxpwcLlWjShu/WDsB7Wij1+x/eutRistFKVb24160+Gnw8cX0zcSIkfNH9ZbikB5zTF+pbh8/ISJn8e6lYrO4gA+iFXw9n93yRG5xV7fH09pE5jaEAoZU2Lju3pwRYgr4i4iVehzyRgAABk0b7ae0aYV+zxPHUgNAAAtChRrOYjOD6XV0wE9VOxAbbI17GfNyqvKLl78JylKAG2SF++jYHPK9Yn0+rJoHkiAGzTaeuF44s9BkyH7SkENlz6H3B/OwKEU1pJ/8fiLrUGT0kQOommr/2r3k9RP/jQ+LM+pmna8vdZXb9LUZRDjT8rt3BPXP8kXrAAYENo4fit4bPQUNfE4/sdFARS8NbgNp8dVCMPcV6sV9zmQ9v7nYv+O3GfCouNx9sbN9BDj4UWEThvRLdScQPhFn1opjlZBDn8LMUp5TVqUXwIPP5IC3QpOm8kRLwaHgL4mHmHMvOz4r8nL0dIDY8ZfJA9wRH4WfF5eaWqa3AnnxcBQg8uL5+6uZo7jB9+xIDQA48v1A8I4OP+sUtYbLdbrnXd0ne5m3I4oggI4AvFKQDsruRg3M627dqN35rs/8YKEDYELhQMmC3h2tvX77odvfq2PVOkU6dztce36HH92Ut3HBsOkQKvLHQp/oLzuPI56I67dYsdMLFDkSUanS5Towq1x2yzGW3Jz158jYOzewUvRdieI2nXtZewlmV7bTrZoWJlTWkJmUaSsSpAjrfoYQMyfn7pZqnDoE3Rxb5/T1mo1q1bT6xbsXLJjBLUvSRGxgzLgzXsILrYCUWzJuh1ULduXfg6gOXhVpQipEuFvFgVKqGnAyGH748MQJkyVS2pQ6PzAoiuZNVMSJHHiRQgCgkWSSqlMc8fKUlKsPDz5w9agXK/G5FNrAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/error-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABGklEQVQ4jYWSPUrEUBRGz3sTbHQ2ohi1yE9hkwmCS7AQsVBEEMWViI0wiI1YuInUGi0EFyCDW5g4MMHkWgxqJr4bb/n4zrn3gwcd85EGwSSJo66M1eHwSDB5beuHcRqcajnjhAfhgRiGjQUC5nwpyy//FTjg73FK5gRteGHvEIDy9lqVWA0GsCs+dnm1tVAuijQ6mxOoZ5dTKEtH7V+JV2wF61I7OyPlFETazz+SSRI/eohXQeUKzba7BbMFyKcBGKfRjkHugF4z0PM3AKheX/6wgpz0s+crC9DP8nvB7NI6pRdv4qXbKgyN3i5J/T6iHr2pMDg+klbHBTsFisQJqwKAYhDsY8wNYAwcL2ZPQy2rTpFGfpGEa12ZLwdajcanz1XAAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/error-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACJElEQVRYhcXXzWsTQRjH8e8zSUprmv4JohTEm4fS9CJKbRUsePAFFPGkgVoE/xqxFnyDHvTmzZONUBAlkYCIF0GrnsRLS2uEJO4+HrRh1ybZecZin9OwJM/vszOzOyzscUnoH5vTUxPq9CaIi+Poztjz1y/+G2BrdvKcqDwGCn8uRahWRqv1h9ZebhfCAXKI3G/OlOet/Uwz0Cc8WSqwUFypLe06wCM8COEFMISbEZmAgHATYiBgULg7OI7bfwCA+Msn4rUPQYh8SDhA/vgMhSvXAOgs36PdGyAKi82ZMv0QPR9Dn2nXdjsxbvX7WRLR8xHdAfBe81YidDBgICIFsGy45F1rKxPQF9EFmHd7YglSYyPCAXyfLh8RlUfe4ZBeAr8ZSCJub85OHe0CJEcFGLJ0SS1BxwQAcE6Z7wIU/WntkNp4thn4XRJ3uoBYZRH4YQME7YHt6kicu9UFjK3U3qvqaaDp20HX14kaNaJGDd3YMIU75WKx+qoBf72Kt05MHhORp0DR0tEavq9ae7J9YcdZ4IuQUonC1QVkeIT2gyX021dzOPR4E5aq9VVVnSNjOQoXLlM4c578yTmGKjeCwnsCfBHx57XE+GNQOGQdxxnL4cYPIcMjRO/eBIVnAnwQAyoz3AsQiPAK9wYYEd7hJoAnwhRuBmQgzOEQ8GVUqtZXQc6SPjvaKnrJGg7/8HG6eWrisIvcdXCCuLujz16+De21p/ULbmcp8bwvNP8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/close-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TS0UrDnaQ4pChOlnwC3GUKhbBQmkrtOpgcumH0KQhSXFxFFwLDn4sVh1cnHV1cBUEwQ8QNzcnRRcp8X9JoUWMB8f9eHfvcfcOEBoVpppdY4CqWUY6ERdz+RUx+IpeBBBEBOMSM/VkZiELz/F1Dx9f72I8y/vcn6NPKZgM8InEs0w3LOJ14ulNS+e8TxxmZUkhPiceNeiCxI9cl11+41xyWOCZYSObniMOE4ulDpY7mJUNlXiKOKqoGuULOZcVzluc1UqNte7JXxgqaMsZrtMcQgKLSCIFETJq2EAFFmK0aqSYSNN+3MMfcfwpcsnk2gAjxzyqUCE5fvA/+N2tWZyccJNCcSDwYtsfw0BwF2jWbfv72LabJ4D/GbjS2v5qA5j5JL3e1qJHQP82cHHd1uQ94HIHGHzSJUNyJD9NoVgE3s/om/LAwC3Qs+r21trH6QOQpa6WboCDQ2CkRNlrHu/u7uzt3zOt/n4AgVdyrUq8E1wAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQflCwUHHhl/NmAoAAABNElEQVQ4y92QsU4CQRCG/9nbdb2jsFHvBUh4A2NrjDEhhkeAWNNySnkl5HgHPR8BExpotbbS8AqExoS7y3Jkx+IguRAusdWpdnbnn3+/H/jzReXmcTA40UI3U9qMR0GQlN96UVTzWLaMNZNhv/+9uxflIS10E4yGa1WnF0W1sti1qgNGQwvdLGtkuUlpM/Yg28Tsu1bdPwyHsRXCeizbAJ8zaOmk6rUSoexGhWBRDBXnTOTxPhodCmbL2wbDBwAGLZ1MPYdhd7U/K36bduquDpo51QjwCwRKCHzmQNYvbq8/36fTvHLB7utb8dLJVJxq86Eg6gT4kp3G5c3V19tstj6I4LFsgQvnTORPYdhdjYIgSWnzwqAFgU+P6eiuMgNjzQSE+X7aoyBIMpHHIMyNNRP8r/oB7XSENXBA5j4AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/frames.css", data : "LmZyYW1lIHsKICAgIHBhZGRpbmctbGVmdDogMTBweDsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwp9CgouZnJhbWUtYm9yZGVyIHsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLmZyYW1lLWJvcmRlcjpkaXNhYmxlZCB7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0KCi5mcmFtZS1jb250ZW50cyB7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgcGFkZGluZy10b3A6IDE1cHg7Cn0KCi5mcmFtZS10aXRsZSB7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwp9CgouZnJhbWUtdGl0bGU6ZGlzYWJsZWQgewogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOwp9CgouZnJhbWUtbGVmdC1saW5lLCAuZnJhbWUtcmlnaHQtbGluZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGhlaWdodDogMXB4Owp9CgouZnJhbWUtbGVmdC1saW5lOmRpc2FibGVkLCAuZnJhbWUtcmlnaHQtbGluZTpkaXNhYmxlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwogICAgaGVpZ2h0OiAxcHg7Cn0KCi5mcmFtZSAuZnJhbWUtaGVhZGVyIHsKICAgIGhvcml6b250YWwtYWxpZ246IHJpZ2h0OwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKICAgIG1hcmdpbi1yaWdodDogMTBweDsKICAgIG1hcmdpbi1sZWZ0OiAwcHg7CiAgICBzcGFjaW5nOiA1cHg7Cn0KCi5mcmFtZS5sZWZ0LWhlYWRlciAuZnJhbWUtaGVhZGVyIHsKICAgIGhvcml6b250YWwtYWxpZ246IGxlZnQ7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICBzcGFjaW5nOiA1cHg7CiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7Cn0KCi5mcmFtZS5jb2xsYXBzaWJsZSAuZnJhbWUtaGVhZGVyIHsKICAgIGhvcml6b250YWwtYWxpZ246IGxlZnQ7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgX21hcmdpbi1yaWdodDogMTBweDsKICAgIG1hcmdpbi1sZWZ0OiAxMHB4OwogICAgcGFkZGluZy1yaWdodDogMHB4Owp9CgouZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLXRpdGxlLCAuZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLWljb24gewogICAgcG9pbnRlci1ldmVudHM6IHRydWU7Cn0KCi5mcmFtZS5jb2xsYXBzaWJsZSAuZnJhbWUtY29udGVudHMuZXhwYW5kZWQsIC5mcmFtZS5jb2xsYXBzaWJsZSAuZnJhbWUtYm9yZGVyLmV4cGFuZGVkIHsKICAgIGhpZGRlbjogZmFsc2U7Cn0KCi5mcmFtZS5jb2xsYXBzaWJsZSAuZnJhbWUtY29udGVudHMuY29sbGFwc2VkLCAuZnJhbWUuY29sbGFwc2libGUgLmZyYW1lLWJvcmRlci5jb2xsYXBzZWQgewogICAgaGlkZGVuOiB0cnVlOwp9CgouZnJhbWUtY29sbGFwc2UtZXhwYW5kLWljb24uZXhwYW5kZWQgewogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL2V4cGFuZGVkLWJsdWUucG5nIjsKICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOwp9CgouZnJhbWUtY29sbGFwc2UtZXhwYW5kLWljb24uY29sbGFwc2VkIHsKICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9jb2xsYXBzZWQtYmx1ZS5wbmciOwogICAgcG9pbnRlci1ldmVudHM6IHRydWU7Cn0"}];
haxe_MainLoop.add(hxd_System.updateCursor,-1);
var hx__registerFont;
hx__registerFont = function(name,data) {
	var s = window.document.createElement("style");
	s.type = "text/css";
	s.innerHTML = "@font-face{ font-family: " + name + "; src: url('data:font/ttf;base64," + data + "') format('truetype'); }";
	window.document.getElementsByTagName("head")[0].appendChild(s);
	var div = window.document.createElement("div");
	div.style.fontFamily = name;
	div.style.opacity = 0;
	div.style.width = "1px";
	div.style.height = "1px";
	div.style.position = "fixed";
	div.style.bottom = "0px";
	div.style.right = "0px";
	div.innerHTML = ".";
	div.className = "hx__loadFont";
	window.document.body.appendChild(div);
};
js_Boot.__toStr = ({ }).toString;
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
h2d_Object.tmpPoint = new h2d_col_Point();
h2d_filter_Filter.defaultUseScreenResolution = false;
h3d_Buffer.GUID = 0;
h3d_Engine.SOFTWARE_DRIVER = false;
h3d_Engine.ANTIALIASING = 0;
h3d_impl_GlDriver.ALLOW_WEBGL2 = true;
h3d_impl_GlDriver.BLACK = new h3d_Vector(0,0,0,0);
h3d_impl_GlDriver.outOfMemoryCheck = false;
h3d_impl_GlDriver.TFILTERS = [[[9728,9728],[9729,9729]],[[9728,9984],[9729,9985]],[[9728,9986],[9729,9987]]];
h3d_impl_GlDriver.TWRAP = [33071,10497];
h3d_impl_GlDriver.FACES = [0,1028,1029,1032];
h3d_impl_GlDriver.BLEND = [1,0,770,768,772,774,771,769,773,775,32769,32771,32770,32772,776];
h3d_impl_GlDriver.COMPARE = [519,512,514,517,516,518,513,515];
h3d_impl_GlDriver.STENCIL_OP = [7680,0,7681,7682,34055,7683,34056,5386];
h3d_impl_GlDriver.OP = [32774,32778,32779,32775,32776];
h3d_impl_GlDriver.CUBE_FACES = [34069,34070,34071,34072,34073,34074];
h3d_impl_GlDriver.CBUFFERS = (function($this) {
	var $r;
	var _g = [];
	{
		var _g1 = 0;
		while(_g1 < 32) {
			var i = _g1++;
			var _g2 = [];
			var _g3 = 0;
			var _g4 = i;
			while(_g3 < _g4) {
				var k = _g3++;
				_g2.push(36064 + k);
			}
			_g.push(_g2);
		}
	}
	$r = _g;
	return $r;
}(this));
h3d_mat_Defaults.defaultKillAlphaThreshold = 0.5;
h3d_mat_Defaults.loadingTextureColor = -65281;
h3d_mat_MaterialSetup.current = new h3d_mat_MaterialSetup("Default");
h3d_mat_Texture.UID = 0;
h3d_mat_Texture.PREVENT_AUTO_DISPOSE = 2147483647;
h3d_mat_Texture.nativeFormat = hxd_PixelFormat.RGBA;
h3d_mat_Texture.TRILINEAR_FILTERING_ENABLED = true;
h3d_mat_Texture.DEFAULT_WRAP = h3d_mat_Wrap.Clamp;
h3d_pass_Blur.__meta__ = { obj : { ignore : ["shader"]}};
h3d_shader_ScreenShader.SRC = "HXSLF2gzZC5zaGFkZXIuU2NyZWVuU2hhZGVyBwEFaW5wdXQNAQICCHBvc2l0aW9uBQoBAQADAnV2BQoBAQABAAAEBWZsaXBZAwIAAAUGb3V0cHV0DQICBghwb3NpdGlvbgUMBAUABwVjb2xvcgUMBAUABAAACApwaXhlbENvbG9yBQwEAAAJDGNhbGN1bGF0ZWRVVgUKBAAACghfX2luaXRfXw4GAAALBnZlcnRleA4GAAACAgoAAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAALAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAA";
h3d_pass__$Border_BorderShader.SRC = "HXSLHWgzZC5wYXNzLl9Cb3JkZXIuQm9yZGVyU2hhZGVyCQEFaW5wdXQNAQICCHBvc2l0aW9uBQoBAQADAnV2BQoBAQABAAAEBWZsaXBZAwIAAAUGb3V0cHV0DQICBghwb3NpdGlvbgUMBAUABwVjb2xvcgUMBAUABAAACApwaXhlbENvbG9yBQwEAAAJDGNhbGN1bGF0ZWRVVgUKBAAACgVjb2xvcgUMAgAACwhfX2luaXRfXw4GAAAMBnZlcnRleA4GAAANCGZyYWdtZW50DgYAAAMCCwAABQIGBAIHBQwCCAUMBQwGBAIJBQoCAwUKBQoAAAwAAAUBBgQCBgUMCQMqDgQKAgIFCgAAAwYBCgICBQoEAAMCBAMDAQMAAAAAAAAAAAMBAwAAAAAAAPA/AwUMBQwAAQ0AAAUBBgQCCAUMAgoFDAUMAA";
h3d_pass__$Copy_ArrayCopyShader.SRC = "HXSLHmgzZC5wYXNzLl9Db3B5LkFycmF5Q29weVNoYWRlcgoBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoHdGV4dHVyZQsCAAALBWxheWVyAQIAAAwIX19pbml0X18OBgAADQZ2ZXJ0ZXgOBgAADghmcmFnbWVudA4GAAADAgwAAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAANAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAAEOAAAFAQYEAggFDAkDIQ4CAgoLCQMpDgICCQUKCQMmDgECCwEDBQsFDAUMAA";
h3d_pass__$Copy_CopyShader.SRC = "HXSLGWgzZC5wYXNzLl9Db3B5LkNvcHlTaGFkZXIJAQVpbnB1dA0BAgIIcG9zaXRpb24FCgEBAAMCdXYFCgEBAAEAAAQFZmxpcFkDAgAABQZvdXRwdXQNAgIGCHBvc2l0aW9uBQwEBQAHBWNvbG9yBQwEBQAEAAAICnBpeGVsQ29sb3IFDAQAAAkMY2FsY3VsYXRlZFVWBQoEAAAKB3RleHR1cmUKAgAACwhfX2luaXRfXw4GAAAMBnZlcnRleA4GAAANCGZyYWdtZW50DgYAAAMCCwAABQIGBAIHBQwCCAUMBQwGBAIJBQoCAwUKBQoAAAwAAAUBBgQCBgUMCQMqDgQKAgIFCgAAAwYBCgICBQoEAAMCBAMDAQMAAAAAAAAAAAMBAwAAAAAAAPA/AwUMBQwAAQ0AAAUBBgQCCAUMCQMhDgICCgoCCQUKBQwFDAA";
h3d_pass__$CubeCopy_CubeCopyShader.SRC = "HXSLIWgzZC5wYXNzLl9DdWJlQ29weS5DdWJlQ29weVNoYWRlcgoBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoHdGV4dHVyZQwCAAALA21hdAYCAAAMCF9faW5pdF9fDgYAAA0GdmVydGV4DgYAAA4IZnJhZ21lbnQOBgAAAwIMAAAFAgYEAgcFDAIIBQwFDAYEAgkFCgIDBQoFCgAADQAABQEGBAIGBQwJAyoOBAoCAgUKAAADBgEKAgIFCgQAAwIEAwMBAwAAAAAAAAAAAwEDAAAAAAAA8D8DBQwFDAABDgAABQIIDwJ1dgUKBAAABgMGAQIJBQoBAwAAAAAAAABAAwUKAQMAAAAAAADwPwMFCgAGBAIIBQwJAyEOAgIKDAkDHw4BBgEJAykOAgIPBQoBAwAAAAAAAPA/AwULAgsGBQsFCwUMBQwA";
h3d_pass__$HardwarePick_FixedColor.SRC = "HXSLIWgzZC5wYXNzLl9IYXJkd2FyZVBpY2suRml4ZWRDb2xvcgUBB2NvbG9ySUQFDAIAAAIIdmlld3BvcnQFDAIAAAMGb3V0cHV0DQECBAhwb3NpdGlvbgUMBAMABQdjb2xvcklEBQwEAwAEAAAGBnZlcnRleA4GAAAHCGZyYWdtZW50DgYAAAIABgAABQEGBAIEBQwGAQQGAAIEBQwGAQkDKg4DCgICBQwRAAUKAQMAAAAAAAAAAAMBAwAAAAAAAAAAAwUMCgIEBQwMAAMFDAUMBQwJAyoOAwoCAgUMOQAFCgEDAAAAAAAA8D8DAQMAAAAAAADwPwMFDAUMBQwAAQcAAAUBBgQCBQUMAgEFDAUMAA";
h3d_pass_ShaderManager.STRICT = true;
h3d_shader_AmbientLight.SRC = "HXSLF2gzZC5zaGFkZXIuQW1iaWVudExpZ2h0CgEGZ2xvYmFsDQECAgxhbWJpZW50TGlnaHQFCwABAAMQcGVyUGl4ZWxMaWdodGluZwIAAQEAAAAAAAAAAAQKcGl4ZWxDb2xvcgUMBAAABQ9saWdodFBpeGVsQ29sb3IFCwQAAAYKbGlnaHRDb2xvcgULBAAABwhhZGRpdGl2ZQICAAEAAAAAAAgIX19pbml0X18OBgAACRBfX2luaXRfX2ZyYWdtZW50DgYAAAoJY2FsY0xpZ2h0DgYAAAsGdmVydGV4DgYAAAwIZnJhZ21lbnQOBgAABQIIAAAFAQYEAgYFCwsCBwICAgULCQMpDgEBAwAAAAAAAAAAAwULBQsFCwACCQAABQEGBAIFBQsLAgcCAgIFCwkDKQ4BAQMAAAAAAAAAAAMFCwULBQsAAwoBDQpsaWdodENvbG9yBQsEAAAFCwUBDQsCBwICDQULBAYAAgIFCwYBCQMWDgIEBgMBAwAAAAAAAPA/AwICBQsFCwULAQMAAAAAAAAAAAMFCwINBQsFCwULBQsFCwAAAAsAAAUBCwcCAgMCAgaBCgIEBQySAAULCQIKDgECBgULBQsFCwAAAAEMAAAFAQsCAwIGgQoCBAUMkgAFCwkCCg4BAgUFCwULBQsAAAA";
h3d_shader_Base2d.SRC = "HXSLEWgzZC5zaGFkZXIuQmFzZTJkGwEFaW5wdXQNAQMCCHBvc2l0aW9uBQoBAQADAnV2BQoBAQAEBWNvbG9yBQwBAQABAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgEdGltZQMAAAAJBnpWYWx1ZQMCAAAKB3RleHR1cmUKAgAACw5zcHJpdGVQb3NpdGlvbgUMBAAADBBhYnNvbHV0ZVBvc2l0aW9uBQwEAAANCnBpeGVsQ29sb3IFDAQAAA4MdGV4dHVyZUNvbG9yBQwEAAAPDGNhbGN1bGF0ZWRVVgUKAwAAEAppc1JlbGF0aXZlAgIAAQAAAAAAEQVjb2xvcgUMAgAAEg9hYnNvbHV0ZU1hdHJpeEEFCwIAABMPYWJzb2x1dGVNYXRyaXhCBQsCAAAUDWZpbHRlck1hdHJpeEEFCwIAABUNZmlsdGVyTWF0cml4QgULAgAAFghoYXNVVlBvcwICAAEAAAAAABcFdXZQb3MFDAIAABgJa2lsbEFscGhhAgIAAQAAAAAAGQpwaXhlbEFsaWduAgIAAQAAAAAAGhBoYWxmUGl4ZWxJbnZlcnNlBQoCAAAbCXZpZXdwb3J0QQULAgAAHAl2aWV3cG9ydEIFCwIAAB0Ob3V0cHV0UG9zaXRpb24FDAQAAB4IX19pbml0X18OBgAAHwZ2ZXJ0ZXgOBgAAIAhmcmFnbWVudA4GAAADAh4AAAUGBgQCCwUMCQMqDgMCAgUKAgkDAQMAAAAAAADwPwMFDAUMCwIQAgUDBgQKAgwFDAAAAwkDHQ4CCQMpDgIKAgsFDBEABQoBAwAAAAAAAPA/AwULAhIFCwMDBgQKAgwFDAQAAwkDHQ4CCQMpDgIKAgsFDBEABQoBAwAAAAAAAPA/AwULAhMFCwMDBgQKAgwFDDkABQoKAgsFDDkABQoFCgAGBAIMBQwCCwUMBQwABgQCDwUKCwIWAgYABgECAwUKCgIXBQw5AAUKBQoKAhcFDBEABQoFCgIDBQoFCgUKBgQCDQUMCwIQAgYBAhEFDAIEBQwFDAIEBQwFDAUMBgQCDgUMCQMhDgICCgoCDwUKBQwFDAaBAg0FDAIOBQwFDAAAHwAABQUIIQN0bXAFCwQAAAkDKQ4CCgIMBQwRAAUKAQMAAAAAAADwPwMFCwAGBAIhBQsJAykOAwkDHQ4CAiEFCwIUBQsDCQMdDgICIQULAhUFCwMBAwAAAAAAAPA/AwULBQsGBAIdBQwJAyoOAwkDHQ4CAiEFCwIbBQsDCQMdDgICIQULAhwFCwMKAgwFDDkABQoFDAUMCwIZAgaDCgIdBQwRAAUKAhoFCgUKAAAGBAIGBQwCHQUMBQwAASAAAAUCCwYOAhgCBgkKAg0FDAwAAwED/Knx0k1iUD8DAgIMAAAABgQCBwUMAg0FDAUMAA";
h3d_shader_BaseMesh.SRC = "HXSLE2gzZC5zaGFkZXIuQmFzZU1lc2gXAQZjYW1lcmENAQoCBHZpZXcHAAEAAwRwcm9qBwABAAQIcG9zaXRpb24FCwABAAUIcHJvakZsaXADAAEABghwcm9qRGlhZwULAAEABwh2aWV3UHJvagcAAQAID2ludmVyc2VWaWV3UHJvagcAAQAJBXpOZWFyAwABAAoEekZhcgMAAQALA2RpcgULAwEAAAAADAZnbG9iYWwNAgQNBHRpbWUDAAwADglwaXhlbFNpemUFCgAMAA8JbW9kZWxWaWV3BwAMAQMQEG1vZGVsVmlld0ludmVyc2UHAAwBAwAAABEFaW5wdXQNAwISCHBvc2l0aW9uBQsBEQATBm5vcm1hbAULAREAAQAAFAZvdXRwdXQNBAUVCHBvc2l0aW9uBQwEFAAWBWNvbG9yBQwEFAAXBWRlcHRoAwQUABgGbm9ybWFsBQsEFAAZCXdvcmxkRGlzdAMEFAAEAAAaEHJlbGF0aXZlUG9zaXRpb24FCwQAABsTdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAAHBhwaXhlbFRyYW5zZm9ybWVkUG9zaXRpb24FCwQAAB0RdHJhbnNmb3JtZWROb3JtYWwFCwQAAB4RcHJvamVjdGVkUG9zaXRpb24FDAQAAB8KcGl4ZWxDb2xvcgUMBAAAIAVkZXB0aAMEAAAhCHNjcmVlblVWBQoEAAAiCXNwZWNQb3dlcgMEAAAjCXNwZWNDb2xvcgULBAAAJAl3b3JsZERpc3QDBAAAJQVjb2xvcgUMAgAAJg1zcGVjdWxhclBvd2VyAwIAAQcAAAAAAAAAAAAAAAAAAFlAJw5zcGVjdWxhckFtb3VudAMCAAEHAAAAAAAAAAAAAAAAAAAkQCgNc3BlY3VsYXJDb2xvcgULAgAAKQhfX2luaXRfXw4GAAAqEF9faW5pdF9fZnJhZ21lbnQOBgAAKwZ2ZXJ0ZXgOBgAALAhmcmFnbWVudA4GAAAEAikAAAULBgQCGgULAhIFCwULBgQCGwULBgECGgULCQM0DgECDwcIBQsFCwYEAh4FDAYBCQMqDgICGwULAQMAAAAAAADwPwMFDAIHBwUMBQwGBAIdBQsJAx8OAQQGAQITBQsJAzIOAQIPBwYFCwULBQsFCwYEAgsFCwkDHw4BBAYDAgQFCwIbBQsFCwULBQsFCwYEAh8FDAIlBQwFDAYEAiIDAiYDAwYEAiMFCwYBAigFCwInAwULBQsGBAIhBQoJAzoOAQYCCgIeBQwRAAUKCgIeBQwMAAMFCgUKBQoGBAIgAwYCCgIeBQwIAAMKAh4FDAwAAwMDBgQCJAMGAgkDGw4BBgMCGwULAgQFCwULAwIKAwMDAAIqAAAFBQYEAh0FCwkDHw4BAh0FCwULBQsGBAIhBQoJAzoOAQYCCgIeBQwRAAUKCgIeBQwMAAMFCgUKBQoGBAIgAwYCCgIeBQwIAAMKAh4FDAwAAwMDBgQCIgMCJgMDBgQCIwULBgECKAULAicDBQsFCwAAKwAABQIGBAIVBQwGAQIeBQwJAyoOBAEDAAAAAAAA8D8DAgUDAQMAAAAAAADwPwMBAwAAAAAAAPA/AwUMBQwFDAYEAhwFCwIbBQsFCwABLAAABQQGBAIWBQwCHwUMBQwGBAIXAwIgAwMGBAIYBQsCHQULBQsGBAIZAwIkAwMA";
h3d_shader_Blur.SRC = "HXSLD2gzZC5zaGFkZXIuQmx1choBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoVY2FtZXJhSW52ZXJzZVZpZXdQcm9qBwIAAAsHdGV4dHVyZQoCAAAMDGRlcHRoVGV4dHVyZQoCAAANB1F1YWxpdHkBAgABAAAAAAAOB2lzRGVwdGgCAgABAAAAAAAPBnZhbHVlcw8DDQIAABAHb2Zmc2V0cw8DDQIAABEFcGl4ZWwFCgIAABINaGFzRml4ZWRDb2xvcgICAAEAAAAAABMQc21vb3RoRml4ZWRDb2xvcgICAAEAAAAAABQKZml4ZWRDb2xvcgUMAgAAFRBpc0RlcHRoRGVwZW5kYW50AgIAAQAAAAAAFgloYXNOb3JtYWwCAgABAAAAAAAXDW5vcm1hbFRleHR1cmUKAgAAGAZpc0N1YmUCAgABAAAAAAAZC2N1YmVUZXh0dXJlDAIAABoHY3ViZURpcgYCAAAbCF9faW5pdF9fDgYAABwGdmVydGV4DgYAAB0IZnJhZ21lbnQOBgAAHgtnZXRQb3NpdGlvbg4GAAAEAhsAAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAAcAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAAEdAAAFAgsCFQIFBggfBHBjdXIFCwQAAAkCHg4BAgMFCgULAAggBGNjdXIFDAQAAAkDIQ4CAgsKAgMFCgUMAAghBWNvbG9yBQwEAAAJAyoOBAEDAAAAAAAAAAADAQMAAAAAAAAAAAMBAwAAAAAAAAAAAwEDAAAAAAAAAAADBQwACCIEbmN1cgULBAAACQM5DgEJAyEOAgIXCgIDBQoFDAULABUGdW5yb2xsAA4jAWkBBAAABhUGAAcDAg0BAQECAQAAAAEBAg0BDwEAAAUICCQCdXYFCgQAAAYAAgMFCgYBAhEFChECEA8DDQsGCQIjAQECAAAAAAECBwMCIwEBAiMBAQMFCgUKAAglAWMFDAQAAAkDIQ4CAgsKAiQFCgUMAAgmAXAFCwQAAAkCHg4BAiQFCgULAAgnAWQDBAAACQMdDgIEBgMCJgULAh8FCwULBQsGAwImBQsCHwULBQsDAAgoAW4FCwQAAAkDOQ4BCQMhDgICFwoCJAUKBQwFCwAGBAIlBQwJAxgOAwIgBQwCJQUMCQMdDgICIgULAigFCwMFDAUMBgQCJQUMCQMYDgMCJQUMAiAFDAkDFQ4CBAYBCQMWDgIEBgMCJwMBA/yp8dJNYlA/AwMDAQMAAAAAAAAAAAMDAQMAAAAAAGr4QAMDAwEDAAAAAAAA8D8DAwUMBQwGgAIhBQwGAQIlBQwRAg8PAw0LBgkCIwEBAgAAAAABAgcDAiMBAQIjAQEDBQwFDAAAAAYEAggFDAIhBQwFDAALAg4CBQMIKQN2YWwDBAAAAQMAAAAAAAAAAAMAFQZ1bnJvbGwADioBaQEEAAAGFQYABwMCDQEBAQIBAAAAAQECDQEPAQAABQELAhgCBoACKQMGAQkDNw4BCQMhDgICGQwGAQkDKQ4CBgMGAQQGAAIDBQoGAQYBAhEFChECEA8DDQsGCQIqAQECAAAAAAECBwMCKgEBAioBAQMFCgkDJg4BAioBAwUKBQoFCgEDAAAAAAAAAEADBQoBAwAAAAAAAPA/AwUKAQMAAAAAAADwPwMFCwIaBgULBQwDEQIPDwMNCwYJAioBAQIAAAAAAQIHAwIqAQECKgEBAwMDBoACKQMGAQkDNw4BCQMhDgICCwoGAAIDBQoGAQYBAhEFChECEA8DDQsGCQIqAQECAAAAAAECBwMCKgEBAioBAQMFCgkDJg4BAioBAwUKBQoFDAMRAg8PAw0LBgkCKgEBAgAAAAABAgcDAioBAQIqAQEDAwMAAAAABgQCCAUMCQM2DgEJAxUOAgIpAwEDyxpQyv//7z8DAwUMBQwABQMIKwVjb2xvcgUMBAAACQMqDgQBAwAAAAAAAAAAAwEDAAAAAAAAAAADAQMAAAAAAAAAAAMBAwAAAAAAAAAAAwUMABUGdW5yb2xsAA4sAWkBBAAABhUGAAcDAg0BAQECAQAAAAEBAg0BDwEAAAUBCwIYAgaAAisFDAYBCQMhDgICGQwGAQkDKQ4CBgMGAQQGAAIDBQoGAQYBAhEFChECEA8DDQsGCQIsAQECAAAAAAECBwMCLAEBAiwBAQMFCgkDJg4BAiwBAwUKBQoFCgEDAAAAAAAAAEADBQoBAwAAAAAAAPA/AwUKAQMAAAAAAADwPwMFCwIaBgULBQwRAg8PAw0LBgkCLAEBAgAAAAABAgcDAiwBAQIsAQEDBQwFDAaAAisFDAYBCQMhDgICCwoGAAIDBQoGAQYBAhEFChECEA8DDQsGCQIsAQECAAAAAAECBwMCLAEBAiwBAQMFCgkDJg4BAiwBAwUKBQoFDBECDw8DDQsGCQIsAQECAAAAAAECBwMCLAEBAiwBAQMFDAUMAAAAAAYEAggFDAIrBQwFDAAAAAsCEgIFAgsCEwIGgQoCCAUMDAADCgIUBQwMAAMDBgQKAggFDAwAAwYBCgIUBQwMAAMJAyYOAQYHCgIIBQwMAAMBAwAAAAAAAAAAAwIDAwMABgQKAggFDJIABQsGAQoCFAUMkgAFCwoCCAUMDAADBQsFCwAAAAADHgEtAnV2BQoEAAAFCwUECC4FZGVwdGgDBAAACQM3DgEJAyEOAgIMCgItBQoFDAMACC8EdGVtcAUMBAAABgEJAyoOAwkDOw4BAi0FCgUKAi4DAQMAAAAAAADwPwMFDAIKBwUMAAgwCG9yaWdpbldTBQsEAAAGAgoCLwUMkgAFCwoCLwUMDAADBQsADQIwBQsAAA";
h3d_shader_ColorAdd.SRC = "HXSLE2gzZC5zaGFkZXIuQ29sb3JBZGQDAQpwaXhlbENvbG9yBQwEAAACBWNvbG9yBQsCAAADCGZyYWdtZW50DgYAAAEBAwAABQEGgAoCAQUMkgAFCwICBQsFCwA";
h3d_shader_ColorKey.SRC = "HXSLE2gzZC5zaGFkZXIuQ29sb3JLZXkDAQhjb2xvcktleQUMAgAAAgx0ZXh0dXJlQ29sb3IFDAQAAAMIZnJhZ21lbnQOBgAAAQEDAAAFAggEBWNkaWZmBQwEAAAGAwICBQwCAQUMBQwACwYJCQMdDgICBAUMAgQFDAMBA/Fo44i1+OQ+AwIMAAAAAA";
h3d_shader_ColorMatrix.SRC = "HXSLFmgzZC5zaGFkZXIuQ29sb3JNYXRyaXgEAQpwaXhlbENvbG9yBQwEAAACBm1hdHJpeAcCAAADB2VuYWJsZWQCAgABAAAAAAAECGZyYWdtZW50DgYAAAEBBAAABQELAgMCBgQCAQUMCQMqDgIKBAYBCQMqDgIKAgEFDJIABQsBAwAAAAAAAPA/AwUMAgIHBQwFDJIABQsKBAYBAgEFDAICBwUMBQwMAAMFDAUMAAAA";
h3d_shader_DirShadow.SRC = "HXSLFGgzZC5zaGFkZXIuRGlyU2hhZG93EAEGZW5hYmxlAgIAAQAAAAAAAgdVU0VfRVNNAgIAAQAAAAAAAwtzaGFkb3dQb3dlcgMCAAAEB1VTRV9QQ0YCAgABAAAAAAAFC1BDRl9TQU1QTEVTAQIAAQAAAAAABghwY2ZTY2FsZQMCAAAHCXNoYWRvd1JlcwUKAgAACAlzaGFkb3dNYXARAQIAAAkKc2hhZG93UHJvaggCAAAKCnNoYWRvd0JpYXMDAgAACxN0cmFuc2Zvcm1lZFBvc2l0aW9uBQsEAAAMBnNoYWRvdwMEAAANCWRpclNoYWRvdwMEAAAOC3BvaXNzb25EaXNrDwUMBQIAAA8EcmFuZA4GAAAQCGZyYWdtZW50DgYAAAIDDwERAXYDBAAAAwUCCBICZHADBAAACQMdDgIJAyoOAQIRAwUMCQMqDgQBA18pyxDH+ilAAwED9P3UeOmOU0ADAQOiRbbz/ZRGQAMBA1CNl24Sq1dAAwUMAwANCQMTDgEGAQkDAg4BAhIDAwEDUPwYc9Fd5UADAwMAAAEQAAAFAgsCAQIFAQsCBAIFCwYEAgwDAQMAAAAAAADwPwMDCBMJdGV4ZWxTaXplBQoEAAAGAgEDAAAAAAAA8D8DAgcFCgUKAAgUCXNoYWRvd1BvcwULBAAABgECCwULAgkIBQsACBUIc2hhZG93VXYFCgQAAAkDOg4BCgIUBQsRAAUKBQoACBYEek1heAMEAAAJAzUOAQoCFAULCAADAwAIFwNyb3QDBAAABgEGAQkCDw4BBgAGAAoCCwULAAADCgILBQsEAAMDCgILBQsIAAMDAwEDH4XrUbgeCUADAwEDAAAAAAAAAEADAwAIGARjb3NSAwQAAAkDAw4BAhcDAwAIGQRzaW5SAwQAAAkDAg4BAhcDAwAIGg5zYW1wbGVTdHJlbmd0aAMEAAAGAgEDAAAAAAAA8D8DCQMmDgECBQEDAwAIGwhvZmZTY2FsZQUKBAAABgECEwUKAgYDBQoADhwBaQEEAAAGFQECAAAAAAECBQEPAQAABQQIHQZvZmZzZXQFCgQAAAYBChECDg8FDAUCHAEFDBEABQoCGwUKBQoABgQCHQUKCQMoDgIGAwYBAhgDCgIdBQoAAAMDBgECGQMKAh0FCgQAAwMDBgAGAQIYAwoCHQUKBAADAwYBAhkDCgIdBQoAAAMDAwUKBQoIHgVkZXB0aAMEAAAJA0AOAwIIEQEGAAIVBQoCHQUKBQoBAwAAAAAAAAAAAwMABoMCDAMLBAYHBgMCFgMCCgMDAh4DAgICGgMBAwAAAAAAAAAAAwMDAAAACwICAgUFCB8Jc2hhZG93UG9zBQsEAAAGAQILBQsCCQgFCwAIIAVkZXB0aAMEAAAJAz8OAgIIEQEJAzoOAQoCHwULEQAFCgUKAwAIIQR6TWF4AwQAAAkDNQ4BCgIfBQsIAAMDAAgiBWRlbHRhAwQAAAYDCQMVDgIEBgACIAMCCgMDAwIhAwMCIQMDAAYEAgwDCQM1DgEJAwkOAQYBAgMDAiIDAwMDAwAFBAgjCXNoYWRvd1BvcwULBAAABgECCwULAgkIBQsACCQIc2hhZG93VXYFCgQAAAkDOg4BCgIjBQsRAAUKBQoACCUFZGVwdGgDBAAACQM/DgICCBEBCgIkBQoRAAUKAwAGBAIMAwsGBwYDCQM1DgEKAiMFCwgAAwMCCgMDAiUDAgEDAAAAAAAAAAADAQMAAAAAAADwPwMDAwAAAAAAAAYEAg0DAgwDAwA";
h3d_shader_GenTexture.SRC = "HXSLFWgzZC5zaGFkZXIuR2VuVGV4dHVyZQoBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoEbW9kZQECAAEAAAAAAAsFY29sb3IFDAIAAAwIX19pbml0X18OBgAADQZ2ZXJ0ZXgOBgAADghmcmFnbWVudA4GAAADAgwAAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAANAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAAEOAAAFARMEAgoBAQEBAQIAAAAAAQUBBgQCCAUMCwYHCQMbDgEKAgYFDBEABQoDAQMAAAAAAADwPwMCCQMqDgEBAwAAAAAAAAAAAwUMAgsFDAUMBQwAAAAA";
h3d_shader_LineShader.SRC = "HXSLFWgzZC5zaGFkZXIuTGluZVNoYWRlcgwBBmNhbWVyYQ0BAwIEdmlldwcAAQADBHByb2oHAAEABAh2aWV3UHJvagcAAQAAAAAFBmdsb2JhbA0CAgYJcGl4ZWxTaXplBQoABQAHCW1vZGVsVmlldwcABQEDAAAACAVpbnB1dA0DAwkIcG9zaXRpb24FCwEIAAoGbm9ybWFsBQsBCAALAnV2BQoBCAABAAAMBm91dHB1dA0EAQ0IcG9zaXRpb24FDAQMAAQAAA4RdHJhbnNmb3JtZWROb3JtYWwFCwQAAA8TdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAAEBFwcm9qZWN0ZWRQb3NpdGlvbgUMBAAAEQtsZW5ndGhTY2FsZQMCAAASBXdpZHRoAwIAABMEcGRpcgUMBAAAFAhfX2luaXRfXw4GAAAVBnZlcnRleA4GAAACAhQAAAUBBQUIFgNkaXIFCwQAAAYBAgoFCwkDMg4BAgcHBgULAAYEAhMFDAYBCQMqDgIGAQIWBQsJAzIOAQICBwYFCwEDAAAAAAAA8D8DBQwCAwcFDAUMBoEKAhMFDBEABQoGAgEDAAAAAAAA8D8DCQMNDgEGAAYBCgITBQwAAAMKAhMFDAAAAwMGAQoCEwUMBAADCgITBQwEAAMDAwMDBQoGgAIPBQsGAQYBAhYFCwoCCwUKAAADBQsCEQMFCwULBgQCDgULCQMfDgECFgULBQsFCwAAABUAAAUBBoAKAhAFDBEABQoGAQYBBgEGAQQGAQoCEwUMBQAFCgkDKA4CAQMAAAAAAADwPwMBAwAAAAAAAPC/AwUKBQoFCgQGAwoCCwUKBAADAQMAAAAAAADgPwMDAwUKCgIQBQwIAAMFCgIGBQoFCgISAwUKBQoA";
h3d_shader_MinMaxShader.SRC = "HXSLF2gzZC5zaGFkZXIuTWluTWF4U2hhZGVyCwEFaW5wdXQNAQICCHBvc2l0aW9uBQoBAQADAnV2BQoBAQABAAAEBWZsaXBZAwIAAAUGb3V0cHV0DQICBghwb3NpdGlvbgUMBAUABwVjb2xvcgUMBAUABAAACApwaXhlbENvbG9yBQwEAAAJDGNhbGN1bGF0ZWRVVgUKBAAACgR0ZXhBCgIAAAsEdGV4QgoCAAAMBWlzTWF4AgIAAQAAAAAADQhfX2luaXRfXw4GAAAOBnZlcnRleA4GAAAPCGZyYWdtZW50DgYAAAMCDQAABQIGBAIHBQwCCAUMBQwGBAIJBQoCAwUKBQoAAA4AAAUBBgQCBgUMCQMqDgQKAgIFCgAAAwYBCgICBQoEAAMCBAMDAQMAAAAAAAAAAAMBAwAAAAAAAPA/AwUMBQwAAQ8AAAUDCBABYQUMBAAACQMhDgICCgoCCQUKBQwACBEBYgUMBAAACQMhDgICCwoCCQUKBQwABgQCCAUMCwIMAgkDFg4CAhAFDAIRBQwFDAkDFQ4CAhAFDAIRBQwFDAUMBQwA";
h3d_shader_CubeMinMaxShader.SRC = "HXSLG2gzZC5zaGFkZXIuQ3ViZU1pbk1heFNoYWRlcgwBBWlucHV0DQECAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEAAQAABAVmbGlwWQMCAAAFBm91dHB1dA0CAgYIcG9zaXRpb24FDAQFAAcFY29sb3IFDAQFAAQAAAgKcGl4ZWxDb2xvcgUMBAAACQxjYWxjdWxhdGVkVVYFCgQAAAoEdGV4QQwCAAALBHRleEIMAgAADAVpc01heAICAAEAAAAAAA0DbWF0BgIAAA4IX19pbml0X18OBgAADwZ2ZXJ0ZXgOBgAAEAhmcmFnbWVudA4GAAADAg4AAAUCBgQCBwUMAggFDAUMBgQCCQUKAgMFCgUKAAAPAAAFAQYEAgYFDAkDKg4ECgICBQoAAAMGAQoCAgUKBAADAgQDAwEDAAAAAAAAAAADAQMAAAAAAADwPwMFDAUMAAEQAAAFBQgRAnV2BQoEAAAGAwYBAgkFCgEDAAAAAAAAAEADBQoBAwAAAAAAAPA/AwUKAAgSA2RpcgULBAAABgEJAykOAgIRBQoBAwAAAAAAAPA/AwULAg0GBQsACBMBYQUMBAAACQMhDgICCgwCEgULBQwACBQBYgUMBAAACQMhDgICCwwCEgULBQwABgQCCAUMCwIMAgkDFg4CAhMFDAIUBQwFDAkDFQ4CAhMFDAIUBQwFDAUMBQwA";
h3d_shader_NormalMap.SRC = "HXSLFGgzZC5zaGFkZXIuTm9ybWFsTWFwCgEGY2FtZXJhDQECAghwb3NpdGlvbgULAAEAAwNkaXIFCwMBAAAAAAQGZ2xvYmFsDQIBBQltb2RlbFZpZXcHAAQBAwAAAAYFaW5wdXQNAwIHBm5vcm1hbAULAQYACAd0YW5nZW50BQsBBgABAAAJB3RleHR1cmUKAgAACgxjYWxjdWxhdGVkVVYFCgQAAAsTdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAADBF0cmFuc2Zvcm1lZE5vcm1hbAULBAAADRJ0cmFuc2Zvcm1lZFRhbmdlbnQFDAMAAA4OX19pbml0X192ZXJ0ZXgOBgAADwhmcmFnbWVudA4GAAACAg4AAAUBBgQCDQUMCQMqDgIGAQIIBQsJAzIOAQIFBwYFCwsGBwkDHQ4CAggFCwIIBQsDAQMAAAAAAADgPwMCAQMAAAAAAADwPwMBAwAAAAAAAPC/AwMFDAUMAAEPAAAFBQgQAW4FCwQAAAIMBQsACBECbmYFCwQAAAkDOQ4BCQMhDgICCQoCCgUKBQwFCwAIEgR0YW5YBQsEAAAJAx8OAQoCDQUMkgAFCwULAAgTBHRhblkFCwQAAAYBCQMeDgICEAULAhIFCwULBwMKAg0FDAwAAwMFCwAGBAIMBQsJAx8OAQQGAAYABgEKAhEFCwAAAwISBQsFCwYBCgIRBQsEAAMCEwULBQsFCwYBCgIRBQsIAAMCEAULBQsFCwULBQsFCwA";
h3d_shader_Shadow.SRC = "HXSLEWgzZC5zaGFkZXIuU2hhZG93BgEGc2hhZG93DQEFAgNtYXARAQABAAMEcHJvaggAAQAEBWNvbG9yBQsAAQAFBXBvd2VyAwABAAYEYmlhcwMAAQAAAAAHCnBpeGVsQ29sb3IFDAQAAAgTdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAACRhwaXhlbFRyYW5zZm9ybWVkUG9zaXRpb24FCwQAAAoJc2hhZG93UG9zBQsEAAEBCwhmcmFnbWVudA4GAAABAQsAAAUGCAwJc2hhZG93UG9zBQsEAAAGAQIJBQsCAwgFCwAIDQVkZXB0aAMEAAAJAz8OAgICEQEJAzoOAQoCDAULEQAFCgUKAwAIDgR6TWF4AwQAAAkDNQ4BCgIMBQsIAAMDAAgPBWRlbHRhAwQAAAYDCQMVDgIEBgACDQMCBgMDAwIOAwMCDgMDAAgQBXNoYWRlAwQAAAkDNQ4BCQMJDgEGAQIFAwIPAwMDAwAGgQoCBwUMkgAFCwYABgEEBgMBAwAAAAAAAPA/AwIQAwMDCgIEBQuSAAULBQsCEAMFCwULAA";
h3d_shader_SignedDistanceField.SRC = "HXSLHmgzZC5zaGFkZXIuU2lnbmVkRGlzdGFuY2VGaWVsZA8BBWlucHV0DQEDAghwb3NpdGlvbgUKAQEAAwJ1dgUKAQEABAVjb2xvcgUMAQEAAQAABQZvdXRwdXQNAgIGCHBvc2l0aW9uBQwEBQAHBWNvbG9yBQwEBQAEAAAIBHRpbWUDAAAACQ5zcHJpdGVQb3NpdGlvbgUMBAAAChBhYnNvbHV0ZVBvc2l0aW9uBQwEAAALCnBpeGVsQ29sb3IFDAQAAAwMdGV4dHVyZUNvbG9yBQwEAAANDGNhbGN1bGF0ZWRVVgUKAwAADg5vdXRwdXRQb3NpdGlvbgUMBAAADwdjaGFubmVsAQIAAQAAAAAAEA1hdXRvU21vb3RoaW5nAgIAAQAAAAAAEQthbHBoYUN1dG9mZgMCAAASCXNtb290aGluZwMCAAATBm1lZGlhbg4GAAAUCGZyYWdtZW50DgYAAAIDEwMVAXIDBAAAFgFnAwQAABcBYgMEAAADBQENCQMWDgIJAxUOAgIVAwIWAwMJAxUOAgkDFg4CAhUDAhYDAwIXAwMDAAABFAAABQUIGA10ZXh0dXJlU2FtcGxlBQwEAAACDAUMAAgZCGRpc3RhbmNlAwQAAAAABgQCGQMLBgUCDwEBAgAAAAABAgoCGAUMAAADCwYFAg8BAQIBAAAAAQIKAhgFDAQAAwsGBQIPAQECAgAAAAECCgIYBQwIAAMLBgUCDwEBAgMAAAABAgoCGAUMDAADCQITDgMKAhgFDAAAAwoCGAUMBAADCgIYBQwIAAMDAwMDAwMIGglzbW9vdGhWYWwDBAAACwIQAgkDDw4BBgEJAz4OAQIZAwMBAwAAAAAAAOA/AwMDAhIDAwAGBAIMBQwJAyoOBAEDAAAAAAAA8D8DAQMAAAAAAADwPwMBAwAAAAAAAPA/AwkDGg4DBgMCEQMCGgMDBgACEQMCGgMDAhkDAwUMBQwA";
h3d_shader_SkinBase.SRC = "HXSLE2gzZC5zaGFkZXIuU2tpbkJhc2UGARByZWxhdGl2ZVBvc2l0aW9uBQsEAAACE3RyYW5zZm9ybWVkUG9zaXRpb24FCwQAAAMRdHJhbnNmb3JtZWROb3JtYWwFCwQAAAQITWF4Qm9uZXMBAgABAAAAAAAFEWZvdXJCb25lc0J5VmVydGV4AgIAAQAAAAAABg1ib25lc01hdHJpeGVzDwgEAgABCAA";
h3d_shader_Skin.SRC = "HXSLD2gzZC5zaGFkZXIuU2tpbgkBEHJlbGF0aXZlUG9zaXRpb24FCwQAAAITdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAAAxF0cmFuc2Zvcm1lZE5vcm1hbAULBAAABAhNYXhCb25lcwECAAEAAAAAAAURZm91ckJvbmVzQnlWZXJ0ZXgCAgABAAAAAAAGDWJvbmVzTWF0cml4ZXMPCAQCAAEIBwVpbnB1dA0BBAgIcG9zaXRpb24FCwEHAAkGbm9ybWFsBQsBBwAKB3dlaWdodHMFCwEHAAsHaW5kZXhlcwkEAAAAAQcAAQAADBJ0cmFuc2Zvcm1lZFRhbmdlbnQFDAQAAA0GdmVydGV4DgYAAAEADQAABQQGBAICBQsGAAYABgEEBgECAQULEQIGDwgECQMlDgEKAgsJBAAAAAAAAwEIBQsFCwoCCgULAAADBQsGAQQGAQIBBQsRAgYPCAQJAyUOAQoCCwkEAAAABAADAQgFCwULCgIKBQsEAAMFCwULBgEEBgECAQULEQIGDwgECQMlDgEKAgsJBAAAAAgAAwEIBQsFCwoCCgULCAADBQsFCwULBgQCAwULBgAGAAYBBAYBAgkFCwkDMg4BEQIGDwgECQMlDgEKAgsJBAAAAAAAAwEIBgULBQsKAgoFCwAAAwULBgEEBgECCQULCQMyDgERAgYPCAQJAyUOAQoCCwkEAAAABAADAQgGBQsFCwoCCgULBAADBQsFCwYBBAYBAgkFCwkDMg4BEQIGDwgECQMlDgEKAgsJBAAAAAgAAwEIBgULBQsKAgoFCwgAAwULBQsFCwsCBQIFAwgOAnc0AwQAAAYDAQMAAAAAAADwPwMEBgAGAAoCCgULAAADCgIKBQsEAAMDCgIKBQsIAAMDAwMABoACAgULBgEEBgECAQULEQIGDwgECQMlDgEKAgsJBAAAAAwAAwEIBQsFCwIOAwULBQsGgAIDBQsGAQQGAQIJBQsJAzIOARECBg8IBAkDJQ4BCgILCQQAAAAIAAMBCAYFCwULAg4DBQsFCwAAAAYEAgMFCwkDHw4BAgMFCwULBQsA";
h3d_shader_SkinTangent.SRC = "HXSLFmgzZC5zaGFkZXIuU2tpblRhbmdlbnQJARByZWxhdGl2ZVBvc2l0aW9uBQsEAAACE3RyYW5zZm9ybWVkUG9zaXRpb24FCwQAAAMRdHJhbnNmb3JtZWROb3JtYWwFCwQAAAQITWF4Qm9uZXMBAgABAAAAAAAFEWZvdXJCb25lc0J5VmVydGV4AgIAAQAAAAAABg1ib25lc01hdHJpeGVzDwgEAgABCAcFaW5wdXQNAQUICHBvc2l0aW9uBQsBBwAJBm5vcm1hbAULAQcACgd0YW5nZW50BQsBBwALB3dlaWdodHMFCwEHAAwHaW5kZXhlcwkEAAAAAQcAAQAADRJ0cmFuc2Zvcm1lZFRhbmdlbnQFDAQAAA4GdmVydGV4DgYAAAEADgAABQYGBAICBQsGAAYABgEEBgECAQULEQIGDwgECQMlDgEKAgwJBAAAAAAAAwEIBQsFCwoCCwULAAADBQsGAQQGAQIBBQsRAgYPCAQJAyUOAQoCDAkEAAAABAADAQgFCwULCgILBQsEAAMFCwULBgEEBgECAQULEQIGDwgECQMlDgEKAgwJBAAAAAgAAwEIBQsFCwoCCwULCAADBQsFCwULBgQCAwULBgAGAAYBBAYBAgkFCwkDMg4BEQIGDwgECQMlDgEKAgwJBAAAAAAAAwEIBgULBQsKAgsFCwAAAwULBgEEBgECCQULCQMyDgERAgYPCAQJAyUOAQoCDAkEAAAABAADAQgGBQsFCwoCCwULBAADBQsFCwYBBAYBAgkFCwkDMg4BEQIGDwgECQMlDgEKAgwJBAAAAAgAAwEIBgULBQsKAgsFCwgAAwULBQsFCwYECgINBQySAAULBgAGAAYBBAYBCgIKBQuSAAULCQMyDgERAgYPCAQJAyUOAQoCDAkEAAAAAAADAQgGBQsFCwoCCwULAAADBQsGAQQGAQoCCgULkgAFCwkDMg4BEQIGDwgECQMlDgEKAgwJBAAAAAQAAwEIBgULBQsKAgsFCwQAAwULBQsGAQQGAQoCCgULkgAFCwkDMg4BEQIGDwgECQMlDgEKAgwJBAAAAAgAAwEIBgULBQsKAgsFCwgAAwULBQsFCwsCBQIFBAgPAnc0AwQAAAYDAQMAAAAAAADwPwMEBgAGAAoCCwULAAADCgILBQsEAAMDCgILBQsIAAMDAwMABoACAgULBgEEBgECAQULEQIGDwgECQMlDgEKAgwJBAAAAAwAAwEIBQsFCwIPAwULBQsGgAIDBQsGAQQGAQIJBQsJAzIOARECBg8IBAkDJQ4BCgIMCQQAAAAIAAMBCAYFCwULAg8DBQsFCwaACgINBQySAAULBgEEBgEKAgoFC5IABQsJAzIOARECBg8IBAkDJQ4BCgIMCQQAAAAMAAMBCAYFCwULAg8DBQsFCwAAAAYEAgMFCwkDHw4BAgMFCwULBQsGBAoCDQUMkgAFCwkDHw4BCgINBQySAAULBQsFCwA";
h3d_shader_SpecularTexture.SRC = "HXSLGmgzZC5zaGFkZXIuU3BlY3VsYXJUZXh0dXJlBAEHdGV4dHVyZQoCAAACDGNhbGN1bGF0ZWRVVgUKBAAAAwlzcGVjQ29sb3IFCwQAAAQIZnJhZ21lbnQOBgAAAQEEAAAFAQaBAgMFCwoJAyEOAgIBCgICBQoFDJIABQsFCwA";
h3d_shader_Texture.SRC = "HXSLEmgzZC5zaGFkZXIuVGV4dHVyZQsBBWlucHV0DQEBAgJ1dgUKAQEAAQAAAwhhZGRpdGl2ZQICAAEAAAAAAAQJa2lsbEFscGhhAgIAAQAAAAAABQ1zcGVjdWxhckFscGhhAgIAAQAAAAAABhJraWxsQWxwaGFUaHJlc2hvbGQDAgABBwAAAAAAAAAAAAAAAAAA8D8HB3RleHR1cmUKAgAACAxjYWxjdWxhdGVkVVYFCgQAAAkKcGl4ZWxDb2xvcgUMBAAACglzcGVjQ29sb3IFCwQAAAsGdmVydGV4DgYAAAwIZnJhZ21lbnQOBgAAAgALAAAFAQYEAggFCgICBQoFCgABDAAABQQIDQFjBQwEAAAJAyEOAgIHCgIIBQoFDAALBg4CBAIGCQYDCgINBQwMAAMCBgMDAQMAAAAAAAAAAAMCAgwAAAALAgMCBoACCQUMAg0FDAUMBoECCQUMAg0FDAUMAAsCBQIGgQIKBQsKAg0FDP4ABQsFCwAAAA";
h3d_shader_UVDelta.SRC = "HXSLEmgzZC5zaGFkZXIuVVZEZWx0YQQBB3V2RGVsdGEFCgIAAAIHdXZTY2FsZQUKAgAAAwxjYWxjdWxhdGVkVVYFCgQAAAQGdmVydGV4DgYAAAEABAAABQEGBAIDBQoGAAYBAgMFCgICBQoFCgIBBQoFCgUKAA";
h3d_shader_VertexColorAlpha.SRC = "HXSLG2gzZC5zaGFkZXIuVmVydGV4Q29sb3JBbHBoYQQBBWlucHV0DQEBAgVjb2xvcgUMAQEAAQAAAwpwaXhlbENvbG9yBQwEAAAECGFkZGl0aXZlAgIAAQAAAAAABQhmcmFnbWVudA4GAAABAQUAAAUBCwIEAgaAAgMFDAICBQwFDAaBAgMFDAICBQwFDAAA";
h3d_shader_VolumeDecal.SRC = "HXSLFmgzZC5zaGFkZXIuVm9sdW1lRGVjYWwYAQZjYW1lcmENAQoCBHZpZXcHAAEAAwRwcm9qBwABAAQIcG9zaXRpb24FCwABAAUIcHJvakZsaXADAAEABghwcm9qRGlhZwULAAEABwh2aWV3UHJvagcAAQAID2ludmVyc2VWaWV3UHJvagcAAQAJBXpOZWFyAwABAAoEekZhcgMAAQALA2RpcgULAwEAAAAADAZnbG9iYWwNAgQNBHRpbWUDAAwADglwaXhlbFNpemUFCgAMAA8JbW9kZWxWaWV3BwAMAQMQEG1vZGVsVmlld0ludmVyc2UHAAwBAwAAABEFaW5wdXQNAwISCHBvc2l0aW9uBQsBEQATBm5vcm1hbAULAREAAQAAFAZvdXRwdXQNBAUVCHBvc2l0aW9uBQwEFAAWBWNvbG9yBQwEFAAXBWRlcHRoAwQUABgGbm9ybWFsBQsEFAAZCXdvcmxkRGlzdAMEFAAEAAAaEHJlbGF0aXZlUG9zaXRpb24FCwQAABsTdHJhbnNmb3JtZWRQb3NpdGlvbgULBAAAHBhwaXhlbFRyYW5zZm9ybWVkUG9zaXRpb24FCwQAAB0RdHJhbnNmb3JtZWROb3JtYWwFCwQAAB4RcHJvamVjdGVkUG9zaXRpb24FDAQAAB8KcGl4ZWxDb2xvcgUMBAAAIAVkZXB0aAMEAAAhCHNjcmVlblVWBQoEAAAiCXNwZWNQb3dlcgMEAAAjCXNwZWNDb2xvcgULBAAAJAl3b3JsZERpc3QDBAAAJQhkZXB0aE1hcBEBAAAAJgVzY2FsZQUKAgAAJwZub3JtYWwFCwIAACgHdGFuZ2VudAULAgAAKQppc0NlbnRlcmVkAgIAAQAAAAAAKgxjYWxjdWxhdGVkVVYFCgQAACsSdHJhbnNmb3JtZWRUYW5nZW50BQwEAAAsDl9faW5pdF9fdmVydGV4DgYAAC0IZnJhZ21lbnQOBgAAAgIsAAAFAgYEAh0FCwkDHw4BBAYBAicFCwkDMg4BAg8HBgULBQsFCwULBgQCKwUMCQMqDgIJAx8OAQQGAQIoBQsJAzIOAQIPBwYFCwULBQsBAwAAAAAAAPA/AwUMBQwAAS0AAAUJCC4GbWF0cml4BwQAAAYBAggHAhAHBwAILwlzY3JlZW5Qb3MFCgQAAAYCCgIeBQwRAAUKCgIeBQwMAAMFCgAIMANydXYFDAQAAAkDKg4DAi8FCgkDPw4CAiURAQkDOg4BAi8FCgUKAwEDAAAAAAAA8D8DBQwACDEEd3BvcwUMBAAABgECMAUMAi4HBQwACDIEcHBvcwUMBAAABgECMAUMAggHBQwABgQCHAULBgIKAjIFDJIABQsKAjIFDAwAAwULBQsGBAIqBQoGAQImBQoEBgIKAjEFDBEABQoKAjEFDAwAAwUKBQoFCgUKCwIpAgaAAioFCgEDAAAAAAAA4D8DBQoAAAsGCQkDFQ4CCQMVDgIKAioFCgAAAwoCKgUKBAADAwkDFQ4CBgMBAwAAAAAAAPA/AwoCKgUKAAADAwYDAQMAAAAAAADwPwMKAioFCgQAAwMDAwEDAAAAAAAAAAADAgwAAAAA";
haxe_EntryPoint.pending = [];
haxe_EntryPoint.threadCount = 0;
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
haxe_ui_backend_BackendImpl.id = "heaps";
haxe_ui_backend_ComponentBase.__meta__ = { fields : { percentWidth : { clonable : null, bindable : null}, percentHeight : { clonable : null, bindable : null}, width : { bindable : null}, height : { bindable : null}}};
haxe_ui_backend_ComponentBase.INTERACTIVE_EVENTS = ["mousemove","mouseover","mouseout","mousedown","mouseup","mousewheel","click","doubleclick","keydown","keyup"];
haxe_ui_core_Component.__meta__ = { fields : { styleNames : { clonable : null}, styleString : { clonable : null}}};
haxe_ui_util_GenericConfig.cache = new haxe_ds_StringMap();
haxe_ui_Toolkit.styleSheet = new haxe_ui_styles_CompositeStyleSheet();
haxe_ui_Toolkit.nativeConfig = new haxe_ui_util_GenericConfig();
haxe_ui_Toolkit._theme = "default";
haxe_ui_Toolkit._built = false;
haxe_ui_Toolkit._backendBuilt = false;
haxe_ui_Toolkit._initialized = false;
haxe_ui_Toolkit.pixelsPerRem = 16;
haxe_ui_Toolkit.roundScale = true;
haxe_ui_Toolkit.autoScale = true;
haxe_ui_Toolkit._scaleX = 0;
haxe_ui_Toolkit._scaleY = 0;
haxe_ui_backend_TextDisplayImpl.defaultFontSize = 12;
haxe_ui_backend_TimerImpl.__timers = [];
haxe_ui_backend_heaps_EventMapper.HAXEUI_TO_HEAPS = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "onMove";
	_g.h["mouseover"] = "onOver";
	_g.h["mouseout"] = "onOut";
	_g.h["mousedown"] = "onPush";
	_g.h["mouseup"] = "onRelease";
	_g.h["mousewheel"] = "onWheel";
	_g.h["click"] = "onClick";
	_g.h["keydown"] = "onKeyDown";
	_g.h["keyup"] = "onKeyUp";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_heaps_KeyboardHelper._hasOnEvent = false;
haxe_ui_backend_heaps_KeyboardHelper._callbacks = new haxe_ds_StringMap();
haxe_ui_backend_heaps_KeyboardHelper._shiftDown = false;
haxe_ui_backend_heaps_KeyboardHelper._ctrlDown = false;
haxe_ui_backend_heaps_KeyboardHelper._altDown = false;
haxe_ui_backend_heaps_MouseHelper.currentMouseX = 0;
haxe_ui_backend_heaps_MouseHelper.currentMouseY = 0;
haxe_ui_backend_heaps_MouseHelper._hasOnEvent = false;
haxe_ui_backend_heaps_MouseHelper._callbacks = new haxe_ds_StringMap();
haxe_ui_backend_heaps_SDFFonts._sdfFonts = new haxe_ds_StringMap();
haxe_ui_backend_heaps_ScreenUtils._dpi = 0;
haxe_ui_backend_heaps_TileCache._cache = new haxe_ds_StringMap();
haxe_ui_components_DropDownBuilder.HANDLER_MAP = new haxe_ds_StringMap();
haxe_ui_components__$TabBar_Builder.SCROLL_INCREMENT = 20;
haxe_ui_containers_CalendarView.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
haxe_ui_core_ItemRenderer.__meta__ = { fields : { allowHover : { clonable : null}}};
haxe_ui_events_ThemeEvent.THEME_CHANGED = "themechanged";
haxe_ui_layouts_LayoutFactory._map = new haxe_ds_StringMap();
haxe_ui_locale_LocaleManager._registeredComponents = new haxe_ds_ObjectMap();
haxe_ui_styles_CssFilters._cssFilters = new haxe_ds_StringMap();
haxe_ui_styles_CssFunctions._cssFunctions = new haxe_ds_StringMap();
haxe_ui_styles_Parser.cssKeyframesRegex = new EReg("@keyframes\\s*(\\w+?)\\s*\\{([\\s\\S]*?\\}\\s*?)\\}","gi");
haxe_ui_styles_Parser.cssKeyframeSelectorRegex = new EReg("([\\w%]+)\\s*\\{\\s*([\\s\\S]*?)\\s*\\}","gi");
haxe_ui_styles_Parser.combinedCSSMediaRegex = new EReg("((\\s*?(?:/\\*[\\s\\S]*?\\*/)?\\s*?@media[\\s\\S]*?)\\{([\\s\\S]*?)\\}\\s*?\\})|(([\\s\\S]*?)\\{([\\s\\S]*?)\\})","gi");
haxe_ui_styles_Parser.cssCommentsRegex = new EReg("(/\\*[\\s\\S]*?\\*/)","gi");
haxe_ui_styles_Parser.cssImportStatementRegex = new EReg("@import .*?;","gi");
haxe_ui_styles_Parser.newlineRegex = new EReg("\n+","g");
haxe_ui_styles_ValueTools.timeEReg = new EReg("^(-?\\d+(?:\\.\\d+)?)(s|ms)$","gi");
haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION = "ease";
haxe_ui_styles_animation_util_Actuator.frameCallbacks = [];
haxe_ui_styles_animation_util_Actuator.dispatchingFrameCallbacks = false;
haxe_ui_tooltips_ToolTipManager.defaultDelay = 500;
haxe_ui_tooltips_ToolTipManager.fade = true;
haxe_ui_util_Color.colors = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mediumvioletred"] = 13047173;
	_g.h["deeppink"] = 16716947;
	_g.h["palevioletred"] = 14381203;
	_g.h["hotpink"] = 16738740;
	_g.h["lightpink"] = 16758465;
	_g.h["pink"] = 16761035;
	_g.h["darkred"] = 9109504;
	_g.h["red"] = 16711680;
	_g.h["firebrick"] = 11674146;
	_g.h["crimson"] = 14423100;
	_g.h["indianred"] = 13458524;
	_g.h["lightcoral"] = 15761536;
	_g.h["salmon"] = 16416882;
	_g.h["darksalmon"] = 15308410;
	_g.h["lightsalmon"] = 16752762;
	_g.h["orangered"] = 16729344;
	_g.h["tomato"] = 16737095;
	_g.h["darkorange"] = 16747520;
	_g.h["coral"] = 16744272;
	_g.h["orange"] = 16753920;
	_g.h["darkkhaki"] = 12433259;
	_g.h["gold"] = 16766720;
	_g.h["khaki"] = 15787660;
	_g.h["peachpuff"] = 16767673;
	_g.h["yellow"] = 16776960;
	_g.h["palegoldenrod"] = 15657130;
	_g.h["moccasin"] = 16770229;
	_g.h["papayawhip"] = 16773077;
	_g.h["lightgoldenrodyellow"] = 16448210;
	_g.h["lemonchiffon"] = 16775885;
	_g.h["lightyellow"] = 16777184;
	_g.h["maroon"] = 8388608;
	_g.h["brown"] = 10824234;
	_g.h["saddlebrown"] = 9127187;
	_g.h["sienna"] = 10506797;
	_g.h["chocolate"] = 13789470;
	_g.h["darkgoldenrod"] = 12092939;
	_g.h["peru"] = 13468991;
	_g.h["rosybrown"] = 12357519;
	_g.h["goldenrod"] = 14329120;
	_g.h["sandybrown"] = 16032864;
	_g.h["tan"] = 13808780;
	_g.h["burlywood"] = 14596231;
	_g.h["wheat"] = 16113331;
	_g.h["navajowhite"] = 16768685;
	_g.h["bisque"] = 16770244;
	_g.h["blanchedalmond"] = 16772045;
	_g.h["cornsilk"] = 16775388;
	_g.h["darkgreen"] = 25600;
	_g.h["green"] = 32768;
	_g.h["darkolivegreen"] = 5597999;
	_g.h["forestgreen"] = 2263842;
	_g.h["seagreen"] = 3050327;
	_g.h["olive"] = 8421376;
	_g.h["olivedrab"] = 7048739;
	_g.h["mediumseagreen"] = 3978097;
	_g.h["limegreen"] = 3329330;
	_g.h["lime"] = 65280;
	_g.h["springgreen"] = 65407;
	_g.h["mediumspringgreen"] = 64154;
	_g.h["darkseagreen"] = 9419919;
	_g.h["mediumaquamarine"] = 6737322;
	_g.h["yellowgreen"] = 10145074;
	_g.h["lawngreen"] = 8190976;
	_g.h["chartreuse"] = 8388352;
	_g.h["lightgreen"] = 9498256;
	_g.h["greenyellow"] = 11403055;
	_g.h["palegreen"] = 10025880;
	_g.h["teal"] = 32896;
	_g.h["darkcyan"] = 35723;
	_g.h["lightseagreen"] = 2142890;
	_g.h["cadetblue"] = 6266528;
	_g.h["darkturquoise"] = 52945;
	_g.h["mediumturquoise"] = 4772300;
	_g.h["turquoise"] = 4251856;
	_g.h["aqua"] = 65535;
	_g.h["cyan"] = 65535;
	_g.h["aquamarine"] = 8388564;
	_g.h["paleturquoise"] = 11529966;
	_g.h["lightcyan"] = 14745599;
	_g.h["navy"] = 128;
	_g.h["darkblue"] = 139;
	_g.h["mediumblue"] = 205;
	_g.h["blue"] = 255;
	_g.h["midnightblue"] = 1644912;
	_g.h["royalblue"] = 4286945;
	_g.h["steelblue"] = 4620980;
	_g.h["dodgerblue"] = 2003199;
	_g.h["deepskyblue"] = 49151;
	_g.h["cornflowerblue"] = 6591981;
	_g.h["skyblue"] = 8900331;
	_g.h["lightskyblue"] = 8900346;
	_g.h["lightsteelblue"] = 11584734;
	_g.h["lightblue"] = 11393254;
	_g.h["powderblue"] = 11591910;
	_g.h["indigo"] = 4915330;
	_g.h["purple"] = 8388736;
	_g.h["darkmagenta"] = 9109643;
	_g.h["darkviolet"] = 9699539;
	_g.h["darkslateblue"] = 4734347;
	_g.h["blueviolet"] = 9055202;
	_g.h["darkorchid"] = 10040012;
	_g.h["fuchsia"] = 16711935;
	_g.h["magenta"] = 16711935;
	_g.h["slateblue"] = 6970061;
	_g.h["mediumslateblue"] = 8087790;
	_g.h["mediumorchid"] = 12211667;
	_g.h["mediumpurple"] = 9662683;
	_g.h["orchid"] = 14315734;
	_g.h["violet"] = 15631086;
	_g.h["plum"] = 14524637;
	_g.h["thistle"] = 14204888;
	_g.h["lavender"] = 15132410;
	_g.h["mistyrose"] = 16770273;
	_g.h["antiquewhite"] = 16444375;
	_g.h["linen"] = 16445670;
	_g.h["beige"] = 16119260;
	_g.h["whitesmoke"] = 16119285;
	_g.h["lavenderblush"] = 16773365;
	_g.h["oldlace"] = 16643558;
	_g.h["aliceblue"] = 15792383;
	_g.h["seashell"] = 16774638;
	_g.h["ghostwhite"] = 16316671;
	_g.h["honeydew"] = 15794160;
	_g.h["floralwhite"] = 16775920;
	_g.h["azure"] = 15794175;
	_g.h["mintcream"] = 16121850;
	_g.h["snow"] = 16775930;
	_g.h["ivory"] = 16777200;
	_g.h["white"] = 16777215;
	_g.h["black"] = 0;
	_g.h["darkslategray"] = 3100495;
	_g.h["dimgray"] = 6908265;
	_g.h["slategray"] = 7372944;
	_g.h["gray"] = 8421504;
	_g.h["grey"] = 8421504;
	_g.h["lightslategray"] = 7833753;
	_g.h["darkgray"] = 11119017;
	_g.h["silver"] = 12632256;
	_g.h["lightgray"] = 13882323;
	_g.h["gainsboro"] = 14474460;
	$r = _g;
	return $r;
}(this));
haxe_ui_util_StyleUtil.style2ComponentEReg = new EReg("-(\\w)","g");
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	h.h["lt"] = "<";
	h.h["gt"] = ">";
	h.h["amp"] = "&";
	h.h["quot"] = "\"";
	h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
hxd_Precision.SIZES = [4,2,1,1];
hxd_BufferFormat._UID = 0;
hxd_BufferFormat.ALL_FORMATS = new haxe_ds_StringMap();
hxd_MultiFormat._UID = 0;
hxd_Charset.complementChars = (function($this) {
	var $r;
	var str = "ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻。，";
	var _g = new haxe_ds_IntMap();
	{
		var _g1 = 0;
		var _g2 = str.length;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.h[HxOverrides.cca(str,i)] = true;
		}
	}
	$r = _g;
	return $r;
}(this));
hxd_Key.initDone = false;
hxd_Key.keyPressed = [];
hxd_Key.ALLOW_KEY_REPEAT = false;
hxd_Save.SALT = "s*al!t";
hxd_Timer.wantedFPS = 60.;
hxd_Timer.maxDeltaTime = 0.5;
hxd_Timer.smoothFactor = 0.95;
hxd_Timer.lastTimeStamp = HxOverrides.now() / 1000;
hxd_Timer.elapsedTime = 0.;
hxd_Timer.frameCount = 0;
hxd_Timer.dt = 1 / hxd_Timer.wantedFPS;
hxd_Timer.currentDT = 1 / hxd_Timer.wantedFPS;
hxd_System.setCursor = hxd_System.setNativeCursor;
hxd_System.loopInit = false;
hxd_System.fpsLimit = -1;
hxd_res_Resource.LIVE_UPDATE = false;
hxd_res_Image.DEFAULT_FILTER = h3d_mat_Filter.Linear;
hxd_res_Image.MIPMAP_MAX_SIZE = 0;
hxd_res_Image.ENABLE_AUTO_WATCH = true;
hxd_res_Image.BLACK_1x1 = hxd_Pixels.alloc(1,1,hxd_PixelFormat.RGBA);
hxd_res_Image.LOG_TEXTURE_LOAD = false;
hxsl_Tools.UID = 0;
hxsl_Tools.SWIZ = hxsl_Component.__empty_constructs__.slice();
hxsl_Tools.MAX_CHANNELS_BITS = 3;
hxsl_BatchShader.SRC = "HXSLEGh4c2wuQmF0Y2hTaGFkZXIDAQ9CYXRjaF9IYXNPZmZzZXQCAgABAAAAAAACC0JhdGNoX0NvdW50AQIAAQAAAAEAAwxCYXRjaF9CdWZmZXIQBQwCAgAAAA";
hxsl_GlslOut.KWD_LIST = ["input","output","discard","sample","dvec2","dvec3","dvec4","hvec2","hvec3","hvec4","fvec2","fvec3","fvec4","int","float","bool","long","short","double","half","fixed","unsigned","superp","lowp","mediump","highp","precision","invariant","discard","struct","asm","union","template","this","packed","goto","sizeof","namespace","noline","volatile","external","flat","input","output","out","attribute","const","uniform","varying","inout","void"];
hxsl_GlslOut.KWDS = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var _g1 = 0;
		var _g2 = hxsl_GlslOut.KWD_LIST;
		while(_g1 < _g2.length) {
			var k = _g2[_g1];
			++_g1;
			_g.h[k] = true;
		}
	}
	$r = _g;
	return $r;
}(this));
hxsl_GlslOut.GLOBALS = (function($this) {
	var $r;
	var gl = [];
	{
		var _g = 0;
		var _g1 = hxsl_TGlobal.__empty_constructs__.slice();
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			var n = "" + Std.string(g);
			n = n.charAt(0).toLowerCase() + HxOverrides.substr(n,1,null);
			gl[g._hx_index] = n;
		}
	}
	gl[hxsl_TGlobal.ToInt._hx_index] = "int";
	gl[hxsl_TGlobal.ToFloat._hx_index] = "float";
	gl[hxsl_TGlobal.ToBool._hx_index] = "bool";
	gl[hxsl_TGlobal.LReflect._hx_index] = "reflect";
	gl[hxsl_TGlobal.Mat3x4._hx_index] = "_mat3x4";
	gl[hxsl_TGlobal.VertexID._hx_index] = "gl_VertexID";
	gl[hxsl_TGlobal.InstanceID._hx_index] = "gl_InstanceID";
	gl[hxsl_TGlobal.IVec2._hx_index] = "ivec2";
	gl[hxsl_TGlobal.IVec3._hx_index] = "ivec3";
	gl[hxsl_TGlobal.IVec4._hx_index] = "ivec4";
	gl[hxsl_TGlobal.BVec2._hx_index] = "bvec2";
	gl[hxsl_TGlobal.BVec3._hx_index] = "bvec3";
	gl[hxsl_TGlobal.BVec4._hx_index] = "bvec4";
	gl[hxsl_TGlobal.FragCoord._hx_index] = "gl_FragCoord";
	gl[hxsl_TGlobal.FrontFacing._hx_index] = "gl_FrontFacing";
	{
		var _g = 0;
		while(_g < gl.length) {
			var g = gl[_g];
			++_g;
			hxsl_GlslOut.KWDS.h[g] = true;
		}
	}
	$r = gl;
	return $r;
}(this));
hxsl_GlslOut.MAT34 = "struct _mat3x4 { vec4 a; vec4 b; vec4 c; };";
hxsl__$Linker_ShaderInfos.UID = 0;
hxsl_Printer.SWIZ = ["x","y","z","w"];
hxsl_RuntimeShader.UID = 0;
hxsl_Serializer.TVECS = new haxe_ds_IntMap();
hxsl_Serializer.BOPS = (function($this) {
	var $r;
	var ops = haxe_macro_Binop.__empty_constructs__.slice();
	ops.splice(haxe_macro_Binop.OpAssignOp(null)._hx_index,0,null);
	$r = ops;
	return $r;
}(this));
hxsl_Serializer.UNOPS = haxe_macro_Unop.__empty_constructs__.slice();
hxsl_Serializer.TGLOBALS = hxsl_TGlobal.__empty_constructs__.slice();
hxsl_Serializer.TSWIZ = new haxe_ds_IntMap();
hxsl_Serializer.REGS = [hxsl_Component.X,hxsl_Component.Y,hxsl_Component.Z,hxsl_Component.W];
hxsl_Serializer.VKINDS = hxsl_VarKind.__empty_constructs__.slice();
hxsl_Serializer.PRECS = hxsl_Prec.__empty_constructs__.slice();
hxsl_Serializer.FKIND = hxsl_FunctionKind.__empty_constructs__.slice();
hxsl_Serializer.SIGN = 9139229;
hxsl_ShaderList.MAX_LIST_SIZE = 0;
hxsl_ShaderList.ALLOW_DUPLICATES = true;
hxsl_ShaderInstance.UID = 0;
hxsl_SharedShader.UNROLL_LOOPS = false;
{
	Main.main();
	haxe_EntryPoint.run();
}
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
